
wifiTest.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000067d0  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000730  080068e0  080068e0  000168e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08007010  08007010  00017010  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08007014  08007014  00017014  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         000001e4  20000000  08007018  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000538  200001e4  080071fc  000201e4  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  2000071c  080071fc  0002071c  2**0
                  ALLOC
  8 .ARM.attributes 00000029  00000000  00000000  000201e4  2**0
                  CONTENTS, READONLY
  9 .debug_info   0000dc7e  00000000  00000000  0002020d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00001f5c  00000000  00000000  0002de8b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003a0b  00000000  00000000  0002fde7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000748  00000000  00000000  000337f2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000658  00000000  00000000  00033f3a  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   00003903  00000000  00000000  00034592  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00002b38  00000000  00000000  00037e95  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007f  00000000  00000000  0003a9cd  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00002558  00000000  00000000  0003aa4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .stab         0000006c  00000000  00000000  0003cfa4  2**2
                  CONTENTS, READONLY, DEBUGGING
 19 .stabstr      000000e1  00000000  00000000  0003d010  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001e4 	.word	0x200001e4
 800012c:	00000000 	.word	0x00000000
 8000130:	080068c8 	.word	0x080068c8

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001e8 	.word	0x200001e8
 800014c:	080068c8 	.word	0x080068c8

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800029e:	f1a4 0401 	sub.w	r4, r4, #1
 80002a2:	d1e9      	bne.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <Reset_Handler>:
 8000b68:	2100      	movs	r1, #0
 8000b6a:	e003      	b.n	8000b74 <LoopCopyDataInit>

08000b6c <CopyDataInit>:
 8000b6c:	4b09      	ldr	r3, [pc, #36]	; (8000b94 <LoopFillZerobss+0xc>)
 8000b6e:	585b      	ldr	r3, [r3, r1]
 8000b70:	5043      	str	r3, [r0, r1]
 8000b72:	3104      	adds	r1, #4

08000b74 <LoopCopyDataInit>:
 8000b74:	4808      	ldr	r0, [pc, #32]	; (8000b98 <LoopFillZerobss+0x10>)
 8000b76:	4b09      	ldr	r3, [pc, #36]	; (8000b9c <LoopFillZerobss+0x14>)
 8000b78:	1842      	adds	r2, r0, r1
 8000b7a:	429a      	cmp	r2, r3
 8000b7c:	d3f6      	bcc.n	8000b6c <CopyDataInit>
 8000b7e:	4a08      	ldr	r2, [pc, #32]	; (8000ba0 <LoopFillZerobss+0x18>)
 8000b80:	e002      	b.n	8000b88 <LoopFillZerobss>

08000b82 <FillZerobss>:
 8000b82:	2300      	movs	r3, #0
 8000b84:	f842 3b04 	str.w	r3, [r2], #4

08000b88 <LoopFillZerobss>:
 8000b88:	4b06      	ldr	r3, [pc, #24]	; (8000ba4 <LoopFillZerobss+0x1c>)
 8000b8a:	429a      	cmp	r2, r3
 8000b8c:	d3f9      	bcc.n	8000b82 <FillZerobss>
 8000b8e:	f000 fd63 	bl	8001658 <main>
 8000b92:	4770      	bx	lr
 8000b94:	08007018 	.word	0x08007018
 8000b98:	20000000 	.word	0x20000000
 8000b9c:	200001e4 	.word	0x200001e4
 8000ba0:	200001e4 	.word	0x200001e4
 8000ba4:	2000071c 	.word	0x2000071c

08000ba8 <EXTI1_IRQHandler>:
 8000ba8:	e7fe      	b.n	8000ba8 <EXTI1_IRQHandler>
	...

08000bac <SetSysClockTo72>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
static void SetSysClockTo72(void)
{
 8000bac:	b082      	sub	sp, #8
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8000bae:	2300      	movs	r3, #0
 8000bb0:	9301      	str	r3, [sp, #4]
 8000bb2:	9300      	str	r3, [sp, #0]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
  /* Enable HSE */    
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 8000bb4:	4a2e      	ldr	r2, [pc, #184]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000bb6:	6813      	ldr	r3, [r2, #0]
 8000bb8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000bbc:	6013      	str	r3, [r2, #0]
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8000bbe:	4b2c      	ldr	r3, [pc, #176]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000bc0:	681b      	ldr	r3, [r3, #0]
 8000bc2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000bc6:	9300      	str	r3, [sp, #0]
    StartUpCounter++;  
 8000bc8:	9b01      	ldr	r3, [sp, #4]
 8000bca:	3301      	adds	r3, #1
 8000bcc:	9301      	str	r3, [sp, #4]
  } while((HSEStatus == 0) && (StartUpCounter != HSEStartUp_TimeOut));
 8000bce:	9b00      	ldr	r3, [sp, #0]
 8000bd0:	b91b      	cbnz	r3, 8000bda <SetSysClockTo72+0x2e>
 8000bd2:	9b01      	ldr	r3, [sp, #4]
 8000bd4:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8000bd8:	d1f1      	bne.n	8000bbe <SetSysClockTo72+0x12>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 8000bda:	4b25      	ldr	r3, [pc, #148]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000bdc:	681b      	ldr	r3, [r3, #0]
 8000bde:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8000be2:	d041      	beq.n	8000c68 <SetSysClockTo72+0xbc>
  {
    HSEStatus = (uint32_t)0x01;
 8000be4:	2301      	movs	r3, #1
 8000be6:	9300      	str	r3, [sp, #0]
  else
  {
    HSEStatus = (uint32_t)0x00;
  }  

  if (HSEStatus == (uint32_t)0x01)
 8000be8:	9b00      	ldr	r3, [sp, #0]
 8000bea:	2b01      	cmp	r3, #1
 8000bec:	d13f      	bne.n	8000c6e <SetSysClockTo72+0xc2>
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;
 8000bee:	4b21      	ldr	r3, [pc, #132]	; (8000c74 <SetSysClockTo72+0xc8>)
 8000bf0:	681a      	ldr	r2, [r3, #0]
 8000bf2:	f042 0210 	orr.w	r2, r2, #16
 8000bf6:	601a      	str	r2, [r3, #0]

    /* Flash 2 wait state */
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 8000bf8:	681a      	ldr	r2, [r3, #0]
 8000bfa:	f022 0203 	bic.w	r2, r2, #3
 8000bfe:	601a      	str	r2, [r3, #0]
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 8000c00:	681a      	ldr	r2, [r3, #0]
 8000c02:	f042 0202 	orr.w	r2, r2, #2
 8000c06:	601a      	str	r2, [r3, #0]

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8000c08:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8000c0c:	685a      	ldr	r2, [r3, #4]
 8000c0e:	605a      	str	r2, [r3, #4]
      
    /* PCLK2 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 8000c10:	685a      	ldr	r2, [r3, #4]
 8000c12:	605a      	str	r2, [r3, #4]
    
    /* PCLK1 = HCLK/2 */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 8000c14:	685a      	ldr	r2, [r3, #4]
 8000c16:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000c1a:	605a      	str	r2, [r3, #4]

    /* ADCCLK = PCLK2/6 */
    RCC->CFGR |= (uint32_t)RCC_CFGR_ADCPRE_DIV6;
 8000c1c:	685a      	ldr	r2, [r3, #4]
 8000c1e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8000c22:	605a      	str	r2, [r3, #4]
    RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
                            RCC_CFGR_PLLMULL9); 
#else    
    /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 8000c24:	685a      	ldr	r2, [r3, #4]
 8000c26:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8000c2a:	605a      	str	r2, [r3, #4]
                                        RCC_CFGR_PLLMULL));
#ifdef EXT_CLOCK_SOURCE_12M
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 8000c2c:	685a      	ldr	r2, [r3, #4]
 8000c2e:	f442 1288 	orr.w	r2, r2, #1114112	; 0x110000
 8000c32:	605a      	str	r2, [r3, #4]
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
#endif
#endif /* STM32F10X_CL */

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 8000c34:	681a      	ldr	r2, [r3, #0]
 8000c36:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8000c3a:	601a      	str	r2, [r3, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8000c3c:	4b0c      	ldr	r3, [pc, #48]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000c3e:	681b      	ldr	r3, [r3, #0]
 8000c40:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8000c44:	d0fa      	beq.n	8000c3c <SetSysClockTo72+0x90>
    {
    }
    
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8000c46:	4b0a      	ldr	r3, [pc, #40]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000c48:	685a      	ldr	r2, [r3, #4]
 8000c4a:	f022 0203 	bic.w	r2, r2, #3
 8000c4e:	605a      	str	r2, [r3, #4]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 8000c50:	685a      	ldr	r2, [r3, #4]
 8000c52:	f042 0202 	orr.w	r2, r2, #2
 8000c56:	605a      	str	r2, [r3, #4]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 8000c58:	4b05      	ldr	r3, [pc, #20]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000c5a:	685b      	ldr	r3, [r3, #4]
 8000c5c:	f003 030c 	and.w	r3, r3, #12
 8000c60:	2b08      	cmp	r3, #8
 8000c62:	d1f9      	bne.n	8000c58 <SetSysClockTo72+0xac>
    /* Go to infinite loop */
    while (1)
    {
    }
  }
}
 8000c64:	b002      	add	sp, #8
 8000c66:	4770      	bx	lr
    HSEStatus = (uint32_t)0x00;
 8000c68:	2300      	movs	r3, #0
 8000c6a:	9300      	str	r3, [sp, #0]
 8000c6c:	e7bc      	b.n	8000be8 <SetSysClockTo72+0x3c>
 8000c6e:	e7fe      	b.n	8000c6e <SetSysClockTo72+0xc2>
 8000c70:	40021000 	.word	0x40021000
 8000c74:	40022000 	.word	0x40022000

08000c78 <SetSysClock>:
{
 8000c78:	b508      	push	{r3, lr}
  SetSysClockTo72();
 8000c7a:	f7ff ff97 	bl	8000bac <SetSysClockTo72>
}
 8000c7e:	bd08      	pop	{r3, pc}

08000c80 <SystemInit>:
{
 8000c80:	b508      	push	{r3, lr}
  RCC->CR |= (uint32_t)0x00000001;
 8000c82:	4b0e      	ldr	r3, [pc, #56]	; (8000cbc <SystemInit+0x3c>)
 8000c84:	681a      	ldr	r2, [r3, #0]
 8000c86:	f042 0201 	orr.w	r2, r2, #1
 8000c8a:	601a      	str	r2, [r3, #0]
  RCC->CFGR &= (uint32_t)0xF8FF0000;
 8000c8c:	6859      	ldr	r1, [r3, #4]
 8000c8e:	4a0c      	ldr	r2, [pc, #48]	; (8000cc0 <SystemInit+0x40>)
 8000c90:	400a      	ands	r2, r1
 8000c92:	605a      	str	r2, [r3, #4]
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8000c94:	681a      	ldr	r2, [r3, #0]
 8000c96:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8000c9a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000c9e:	601a      	str	r2, [r3, #0]
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000ca0:	681a      	ldr	r2, [r3, #0]
 8000ca2:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000ca6:	601a      	str	r2, [r3, #0]
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
 8000ca8:	685a      	ldr	r2, [r3, #4]
 8000caa:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 8000cae:	605a      	str	r2, [r3, #4]
  RCC->CIR = 0x009F0000;
 8000cb0:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8000cb4:	609a      	str	r2, [r3, #8]
  SetSysClock();
 8000cb6:	f7ff ffdf 	bl	8000c78 <SetSysClock>
}
 8000cba:	bd08      	pop	{r3, pc}
 8000cbc:	40021000 	.word	0x40021000
 8000cc0:	f8ff0000 	.word	0xf8ff0000

08000cc4 <NVIC_PriorityGroupConfig>:
  *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
  *                                0 bits for subpriority
  * @retval None
  */
void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
{
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 8000cc8:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8000ccc:	d00f      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000cce:	f5b0 6fc0 	cmp.w	r0, #1536	; 0x600
 8000cd2:	d00c      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000cd4:	f5b0 6fa0 	cmp.w	r0, #1280	; 0x500
 8000cd8:	d009      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000cda:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8000cde:	d006      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000ce0:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
 8000ce4:	d003      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000ce6:	2162      	movs	r1, #98	; 0x62
 8000ce8:	4804      	ldr	r0, [pc, #16]	; (8000cfc <NVIC_PriorityGroupConfig+0x38>)
 8000cea:	f000 fcdf 	bl	80016ac <assert_failed>
  
  /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
  SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
 8000cee:	f044 64bf 	orr.w	r4, r4, #100139008	; 0x5f80000
 8000cf2:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000cf6:	4b02      	ldr	r3, [pc, #8]	; (8000d00 <NVIC_PriorityGroupConfig+0x3c>)
 8000cf8:	60dc      	str	r4, [r3, #12]
}
 8000cfa:	bd10      	pop	{r4, pc}
 8000cfc:	080068e0 	.word	0x080068e0
 8000d00:	e000ed00 	.word	0xe000ed00

08000d04 <NVIC_Init>:
  * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
  *   the configuration information for the specified NVIC peripheral.
  * @retval None
  */
void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
{
 8000d04:	b510      	push	{r4, lr}
 8000d06:	4604      	mov	r4, r0
  uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
  
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 8000d08:	78c3      	ldrb	r3, [r0, #3]
 8000d0a:	2b01      	cmp	r3, #1
 8000d0c:	d812      	bhi.n	8000d34 <NVIC_Init+0x30>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 8000d0e:	7863      	ldrb	r3, [r4, #1]
 8000d10:	2b0f      	cmp	r3, #15
 8000d12:	d814      	bhi.n	8000d3e <NVIC_Init+0x3a>
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 8000d14:	78a3      	ldrb	r3, [r4, #2]
 8000d16:	2b0f      	cmp	r3, #15
 8000d18:	d816      	bhi.n	8000d48 <NVIC_Init+0x44>
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
 8000d1a:	78e3      	ldrb	r3, [r4, #3]
 8000d1c:	b9cb      	cbnz	r3, 8000d52 <NVIC_Init+0x4e>
  }
  else
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 8000d1e:	7823      	ldrb	r3, [r4, #0]
 8000d20:	f003 011f 	and.w	r1, r3, #31
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8000d24:	095b      	lsrs	r3, r3, #5
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 8000d26:	2201      	movs	r2, #1
 8000d28:	408a      	lsls	r2, r1
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8000d2a:	3320      	adds	r3, #32
 8000d2c:	4918      	ldr	r1, [pc, #96]	; (8000d90 <NVIC_Init+0x8c>)
 8000d2e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000d32:	bd10      	pop	{r4, pc}
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 8000d34:	2174      	movs	r1, #116	; 0x74
 8000d36:	4817      	ldr	r0, [pc, #92]	; (8000d94 <NVIC_Init+0x90>)
 8000d38:	f000 fcb8 	bl	80016ac <assert_failed>
 8000d3c:	e7e7      	b.n	8000d0e <NVIC_Init+0xa>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 8000d3e:	2175      	movs	r1, #117	; 0x75
 8000d40:	4814      	ldr	r0, [pc, #80]	; (8000d94 <NVIC_Init+0x90>)
 8000d42:	f000 fcb3 	bl	80016ac <assert_failed>
 8000d46:	e7e5      	b.n	8000d14 <NVIC_Init+0x10>
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 8000d48:	2176      	movs	r1, #118	; 0x76
 8000d4a:	4812      	ldr	r0, [pc, #72]	; (8000d94 <NVIC_Init+0x90>)
 8000d4c:	f000 fcae 	bl	80016ac <assert_failed>
 8000d50:	e7e3      	b.n	8000d1a <NVIC_Init+0x16>
    tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
 8000d52:	4b11      	ldr	r3, [pc, #68]	; (8000d98 <NVIC_Init+0x94>)
 8000d54:	68da      	ldr	r2, [r3, #12]
 8000d56:	43d2      	mvns	r2, r2
 8000d58:	f3c2 2202 	ubfx	r2, r2, #8, #3
    tmppre = (0x4 - tmppriority);
 8000d5c:	f1c2 0004 	rsb	r0, r2, #4
    tmpsub = tmpsub >> tmppriority;
 8000d60:	230f      	movs	r3, #15
 8000d62:	fa23 f202 	lsr.w	r2, r3, r2
    tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 8000d66:	7861      	ldrb	r1, [r4, #1]
 8000d68:	4081      	lsls	r1, r0
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
 8000d6a:	78a3      	ldrb	r3, [r4, #2]
 8000d6c:	4013      	ands	r3, r2
 8000d6e:	430b      	orrs	r3, r1
    tmppriority = tmppriority << 0x04;
 8000d70:	011b      	lsls	r3, r3, #4
    NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 8000d72:	7822      	ldrb	r2, [r4, #0]
 8000d74:	b2db      	uxtb	r3, r3
 8000d76:	4906      	ldr	r1, [pc, #24]	; (8000d90 <NVIC_Init+0x8c>)
 8000d78:	440a      	add	r2, r1
 8000d7a:	f882 3300 	strb.w	r3, [r2, #768]	; 0x300
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 8000d7e:	7823      	ldrb	r3, [r4, #0]
 8000d80:	f003 001f 	and.w	r0, r3, #31
    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8000d84:	095b      	lsrs	r3, r3, #5
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 8000d86:	2201      	movs	r2, #1
 8000d88:	4082      	lsls	r2, r0
    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8000d8a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000d8e:	e7d0      	b.n	8000d32 <NVIC_Init+0x2e>
 8000d90:	e000e100 	.word	0xe000e100
 8000d94:	080068e0 	.word	0x080068e0
 8000d98:	e000ed00 	.word	0xe000ed00

08000d9c <EXTI_ClearITPendingBit>:
  * @param  EXTI_Line: specifies the EXTI lines to clear.
  *   This parameter can be any combination of EXTI_Linex where x can be (0..19).
  * @retval None
  */
void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
{
 8000d9c:	b510      	push	{r4, lr}
 8000d9e:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_EXTI_LINE(EXTI_Line));
 8000da0:	0d03      	lsrs	r3, r0, #20
 8000da2:	051b      	lsls	r3, r3, #20
 8000da4:	b903      	cbnz	r3, 8000da8 <EXTI_ClearITPendingBit+0xc>
 8000da6:	b918      	cbnz	r0, 8000db0 <EXTI_ClearITPendingBit+0x14>
 8000da8:	21fb      	movs	r1, #251	; 0xfb
 8000daa:	4803      	ldr	r0, [pc, #12]	; (8000db8 <EXTI_ClearITPendingBit+0x1c>)
 8000dac:	f000 fc7e 	bl	80016ac <assert_failed>
  
  EXTI->PR = EXTI_Line;
 8000db0:	4b02      	ldr	r3, [pc, #8]	; (8000dbc <EXTI_ClearITPendingBit+0x20>)
 8000db2:	615c      	str	r4, [r3, #20]
}
 8000db4:	bd10      	pop	{r4, pc}
 8000db6:	bf00      	nop
 8000db8:	08006910 	.word	0x08006910
 8000dbc:	40010400 	.word	0x40010400

08000dc0 <GPIO_Init>:
  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
  *   contains the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
 8000dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dc2:	4605      	mov	r5, r0
 8000dc4:	460c      	mov	r4, r1
  uint32_t currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
  uint32_t tmpreg = 0x00, pinmask = 0x00;
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 8000dc6:	4b49      	ldr	r3, [pc, #292]	; (8000eec <GPIO_Init+0x12c>)
 8000dc8:	4298      	cmp	r0, r3
 8000dca:	d01b      	beq.n	8000e04 <GPIO_Init+0x44>
 8000dcc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000dd0:	4298      	cmp	r0, r3
 8000dd2:	d017      	beq.n	8000e04 <GPIO_Init+0x44>
 8000dd4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000dd8:	4298      	cmp	r0, r3
 8000dda:	d013      	beq.n	8000e04 <GPIO_Init+0x44>
 8000ddc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000de0:	4298      	cmp	r0, r3
 8000de2:	d00f      	beq.n	8000e04 <GPIO_Init+0x44>
 8000de4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000de8:	4298      	cmp	r0, r3
 8000dea:	d00b      	beq.n	8000e04 <GPIO_Init+0x44>
 8000dec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000df0:	4298      	cmp	r0, r3
 8000df2:	d007      	beq.n	8000e04 <GPIO_Init+0x44>
 8000df4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000df8:	4298      	cmp	r0, r3
 8000dfa:	d003      	beq.n	8000e04 <GPIO_Init+0x44>
 8000dfc:	21b1      	movs	r1, #177	; 0xb1
 8000dfe:	483c      	ldr	r0, [pc, #240]	; (8000ef0 <GPIO_Init+0x130>)
 8000e00:	f000 fc54 	bl	80016ac <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 8000e04:	78e3      	ldrb	r3, [r4, #3]
 8000e06:	b16b      	cbz	r3, 8000e24 <GPIO_Init+0x64>
 8000e08:	2b04      	cmp	r3, #4
 8000e0a:	d00b      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e0c:	2b28      	cmp	r3, #40	; 0x28
 8000e0e:	d009      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e10:	2b48      	cmp	r3, #72	; 0x48
 8000e12:	d007      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e14:	2b14      	cmp	r3, #20
 8000e16:	d005      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e18:	2b10      	cmp	r3, #16
 8000e1a:	d003      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e1c:	2b1c      	cmp	r3, #28
 8000e1e:	d001      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e20:	2b18      	cmp	r3, #24
 8000e22:	d114      	bne.n	8000e4e <GPIO_Init+0x8e>
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
 8000e24:	8823      	ldrh	r3, [r4, #0]
 8000e26:	b1bb      	cbz	r3, 8000e58 <GPIO_Init+0x98>
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
 8000e28:	78e3      	ldrb	r3, [r4, #3]
 8000e2a:	f003 060f 	and.w	r6, r3, #15
 8000e2e:	4630      	mov	r0, r6
  if ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
 8000e30:	f013 0f10 	tst.w	r3, #16
 8000e34:	d006      	beq.n	8000e44 <GPIO_Init+0x84>
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 8000e36:	78a3      	ldrb	r3, [r4, #2]
 8000e38:	3b01      	subs	r3, #1
 8000e3a:	b2db      	uxtb	r3, r3
 8000e3c:	2b02      	cmp	r3, #2
 8000e3e:	d810      	bhi.n	8000e62 <GPIO_Init+0xa2>
    /* Output mode */
    currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
 8000e40:	78a0      	ldrb	r0, [r4, #2]
 8000e42:	4330      	orrs	r0, r6
  }
/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
 8000e44:	7823      	ldrb	r3, [r4, #0]
 8000e46:	b35b      	cbz	r3, 8000ea0 <GPIO_Init+0xe0>
  {
    tmpreg = GPIOx->CRL;
 8000e48:	682e      	ldr	r6, [r5, #0]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000e4a:	2300      	movs	r3, #0
 8000e4c:	e010      	b.n	8000e70 <GPIO_Init+0xb0>
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 8000e4e:	21b2      	movs	r1, #178	; 0xb2
 8000e50:	4827      	ldr	r0, [pc, #156]	; (8000ef0 <GPIO_Init+0x130>)
 8000e52:	f000 fc2b 	bl	80016ac <assert_failed>
 8000e56:	e7e5      	b.n	8000e24 <GPIO_Init+0x64>
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
 8000e58:	21b3      	movs	r1, #179	; 0xb3
 8000e5a:	4825      	ldr	r0, [pc, #148]	; (8000ef0 <GPIO_Init+0x130>)
 8000e5c:	f000 fc26 	bl	80016ac <assert_failed>
 8000e60:	e7e2      	b.n	8000e28 <GPIO_Init+0x68>
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 8000e62:	21ba      	movs	r1, #186	; 0xba
 8000e64:	4822      	ldr	r0, [pc, #136]	; (8000ef0 <GPIO_Init+0x130>)
 8000e66:	f000 fc21 	bl	80016ac <assert_failed>
 8000e6a:	e7e9      	b.n	8000e40 <GPIO_Init+0x80>
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
        {
          GPIOx->BRR = (((uint32_t)0x01) << pinpos);
 8000e6c:	616a      	str	r2, [r5, #20]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000e6e:	3301      	adds	r3, #1
 8000e70:	2b07      	cmp	r3, #7
 8000e72:	d814      	bhi.n	8000e9e <GPIO_Init+0xde>
      pos = ((uint32_t)0x01) << pinpos;
 8000e74:	2201      	movs	r2, #1
 8000e76:	409a      	lsls	r2, r3
      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 8000e78:	8821      	ldrh	r1, [r4, #0]
      if (currentpin == pos)
 8000e7a:	ea32 0101 	bics.w	r1, r2, r1
 8000e7e:	d1f6      	bne.n	8000e6e <GPIO_Init+0xae>
        pos = pinpos << 2;
 8000e80:	0099      	lsls	r1, r3, #2
        pinmask = ((uint32_t)0x0F) << pos;
 8000e82:	270f      	movs	r7, #15
 8000e84:	408f      	lsls	r7, r1
        tmpreg &= ~pinmask;
 8000e86:	ea26 0607 	bic.w	r6, r6, r7
        tmpreg |= (currentmode << pos);
 8000e8a:	fa00 f101 	lsl.w	r1, r0, r1
 8000e8e:	430e      	orrs	r6, r1
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8000e90:	78e1      	ldrb	r1, [r4, #3]
 8000e92:	2928      	cmp	r1, #40	; 0x28
 8000e94:	d0ea      	beq.n	8000e6c <GPIO_Init+0xac>
        }
        else
        {
          /* Set the corresponding ODR bit */
          if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 8000e96:	2948      	cmp	r1, #72	; 0x48
 8000e98:	d1e9      	bne.n	8000e6e <GPIO_Init+0xae>
          {
            GPIOx->BSRR = (((uint32_t)0x01) << pinpos);
 8000e9a:	612a      	str	r2, [r5, #16]
 8000e9c:	e7e7      	b.n	8000e6e <GPIO_Init+0xae>
          }
        }
      }
    }
    GPIOx->CRL = tmpreg;
 8000e9e:	602e      	str	r6, [r5, #0]
  }
/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
 8000ea0:	8823      	ldrh	r3, [r4, #0]
 8000ea2:	2bff      	cmp	r3, #255	; 0xff
 8000ea4:	d920      	bls.n	8000ee8 <GPIO_Init+0x128>
  {
    tmpreg = GPIOx->CRH;
 8000ea6:	686e      	ldr	r6, [r5, #4]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	e003      	b.n	8000eb4 <GPIO_Init+0xf4>
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
        {
          GPIOx->BRR = (((uint32_t)0x01) << (pinpos + 0x08));
 8000eac:	616a      	str	r2, [r5, #20]
 8000eae:	e016      	b.n	8000ede <GPIO_Init+0x11e>
        }
        /* Set the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
        {
          GPIOx->BSRR = (((uint32_t)0x01) << (pinpos + 0x08));
 8000eb0:	612a      	str	r2, [r5, #16]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000eb2:	3301      	adds	r3, #1
 8000eb4:	2b07      	cmp	r3, #7
 8000eb6:	d816      	bhi.n	8000ee6 <GPIO_Init+0x126>
      pos = (((uint32_t)0x01) << (pinpos + 0x08));
 8000eb8:	f103 0108 	add.w	r1, r3, #8
 8000ebc:	2201      	movs	r2, #1
 8000ebe:	408a      	lsls	r2, r1
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 8000ec0:	8821      	ldrh	r1, [r4, #0]
      if (currentpin == pos)
 8000ec2:	ea32 0101 	bics.w	r1, r2, r1
 8000ec6:	d1f4      	bne.n	8000eb2 <GPIO_Init+0xf2>
        pos = pinpos << 2;
 8000ec8:	0099      	lsls	r1, r3, #2
        pinmask = ((uint32_t)0x0F) << pos;
 8000eca:	270f      	movs	r7, #15
 8000ecc:	408f      	lsls	r7, r1
        tmpreg &= ~pinmask;
 8000ece:	ea26 0607 	bic.w	r6, r6, r7
        tmpreg |= (currentmode << pos);
 8000ed2:	fa00 f101 	lsl.w	r1, r0, r1
 8000ed6:	430e      	orrs	r6, r1
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8000ed8:	78e1      	ldrb	r1, [r4, #3]
 8000eda:	2928      	cmp	r1, #40	; 0x28
 8000edc:	d0e6      	beq.n	8000eac <GPIO_Init+0xec>
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 8000ede:	78e1      	ldrb	r1, [r4, #3]
 8000ee0:	2948      	cmp	r1, #72	; 0x48
 8000ee2:	d1e6      	bne.n	8000eb2 <GPIO_Init+0xf2>
 8000ee4:	e7e4      	b.n	8000eb0 <GPIO_Init+0xf0>
        }
      }
    }
    GPIOx->CRH = tmpreg;
 8000ee6:	606e      	str	r6, [r5, #4]
  }
}
 8000ee8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000eea:	bf00      	nop
 8000eec:	40010800 	.word	0x40010800
 8000ef0:	08006948 	.word	0x08006948

08000ef4 <RCC_GetClocksFreq>:
  * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
  *   the clocks frequencies.
  * @retval None
  */
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
 8000ef4:	b410      	push	{r4}
#ifdef  STM32F10X_CL
  uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
#endif /* STM32F10X_CL */
    
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & CFGR_SWS_Mask;
 8000ef6:	4b29      	ldr	r3, [pc, #164]	; (8000f9c <RCC_GetClocksFreq+0xa8>)
 8000ef8:	685b      	ldr	r3, [r3, #4]
 8000efa:	f003 030c 	and.w	r3, r3, #12
  
  switch (tmp)
 8000efe:	2b04      	cmp	r3, #4
 8000f00:	d02b      	beq.n	8000f5a <RCC_GetClocksFreq+0x66>
 8000f02:	2b08      	cmp	r3, #8
 8000f04:	d02c      	beq.n	8000f60 <RCC_GetClocksFreq+0x6c>
 8000f06:	b113      	cbz	r3, 8000f0e <RCC_GetClocksFreq+0x1a>
      }
#endif /* STM32F10X_CL */ 
      break;

    default:
      RCC_Clocks->SYSCLK_Frequency = HSI_Value;
 8000f08:	4b25      	ldr	r3, [pc, #148]	; (8000fa0 <RCC_GetClocksFreq+0xac>)
 8000f0a:	6003      	str	r3, [r0, #0]
      break;
 8000f0c:	e001      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
      RCC_Clocks->SYSCLK_Frequency = HSI_Value;
 8000f0e:	4b24      	ldr	r3, [pc, #144]	; (8000fa0 <RCC_GetClocksFreq+0xac>)
 8000f10:	6003      	str	r3, [r0, #0]
  }

  /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
  /* Get HCLK prescaler */
  tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 8000f12:	4922      	ldr	r1, [pc, #136]	; (8000f9c <RCC_GetClocksFreq+0xa8>)
 8000f14:	684b      	ldr	r3, [r1, #4]
  tmp = tmp >> 4;
 8000f16:	f3c3 1303 	ubfx	r3, r3, #4, #4
  presc = APBAHBPrescTable[tmp];
 8000f1a:	4c22      	ldr	r4, [pc, #136]	; (8000fa4 <RCC_GetClocksFreq+0xb0>)
 8000f1c:	5ce3      	ldrb	r3, [r4, r3]
 8000f1e:	b2da      	uxtb	r2, r3
  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 8000f20:	6803      	ldr	r3, [r0, #0]
 8000f22:	40d3      	lsrs	r3, r2
 8000f24:	6043      	str	r3, [r0, #4]
  /* Get PCLK1 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 8000f26:	684a      	ldr	r2, [r1, #4]
  tmp = tmp >> 8;
 8000f28:	f3c2 2202 	ubfx	r2, r2, #8, #3
  presc = APBAHBPrescTable[tmp];
 8000f2c:	5ca2      	ldrb	r2, [r4, r2]
 8000f2e:	b2d2      	uxtb	r2, r2
  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 8000f30:	fa23 f202 	lsr.w	r2, r3, r2
 8000f34:	6082      	str	r2, [r0, #8]
  /* Get PCLK2 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 8000f36:	684a      	ldr	r2, [r1, #4]
  tmp = tmp >> 11;
 8000f38:	f3c2 22c2 	ubfx	r2, r2, #11, #3
  presc = APBAHBPrescTable[tmp];
 8000f3c:	5ca2      	ldrb	r2, [r4, r2]
 8000f3e:	b2d2      	uxtb	r2, r2
  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 8000f40:	40d3      	lsrs	r3, r2
 8000f42:	60c3      	str	r3, [r0, #12]
  /* Get ADCCLK prescaler */
  tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 8000f44:	684a      	ldr	r2, [r1, #4]
  tmp = tmp >> 14;
 8000f46:	f3c2 3281 	ubfx	r2, r2, #14, #2
  presc = ADCPrescTable[tmp];
 8000f4a:	4917      	ldr	r1, [pc, #92]	; (8000fa8 <RCC_GetClocksFreq+0xb4>)
 8000f4c:	5c8a      	ldrb	r2, [r1, r2]
 8000f4e:	b2d2      	uxtb	r2, r2
  /* ADCCLK clock frequency */
  RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 8000f50:	fbb3 f3f2 	udiv	r3, r3, r2
 8000f54:	6103      	str	r3, [r0, #16]
}
 8000f56:	bc10      	pop	{r4}
 8000f58:	4770      	bx	lr
      RCC_Clocks->SYSCLK_Frequency = HSE_Value;
 8000f5a:	4b14      	ldr	r3, [pc, #80]	; (8000fac <RCC_GetClocksFreq+0xb8>)
 8000f5c:	6003      	str	r3, [r0, #0]
      break;
 8000f5e:	e7d8      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
      pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 8000f60:	4a0e      	ldr	r2, [pc, #56]	; (8000f9c <RCC_GetClocksFreq+0xa8>)
 8000f62:	6853      	ldr	r3, [r2, #4]
      pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 8000f64:	6852      	ldr	r2, [r2, #4]
      pllmull = ( pllmull >> 18) + 2;
 8000f66:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8000f6a:	3302      	adds	r3, #2
      if (pllsource == 0x00)
 8000f6c:	f412 3f80 	tst.w	r2, #65536	; 0x10000
 8000f70:	d009      	beq.n	8000f86 <RCC_GetClocksFreq+0x92>
        if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 8000f72:	4a0a      	ldr	r2, [pc, #40]	; (8000f9c <RCC_GetClocksFreq+0xa8>)
 8000f74:	6852      	ldr	r2, [r2, #4]
 8000f76:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 8000f7a:	d009      	beq.n	8000f90 <RCC_GetClocksFreq+0x9c>
          RCC_Clocks->SYSCLK_Frequency = (HSE_Value >> 1) * pllmull;
 8000f7c:	4a0c      	ldr	r2, [pc, #48]	; (8000fb0 <RCC_GetClocksFreq+0xbc>)
 8000f7e:	fb02 f303 	mul.w	r3, r2, r3
 8000f82:	6003      	str	r3, [r0, #0]
 8000f84:	e7c5      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
        RCC_Clocks->SYSCLK_Frequency = (HSI_Value >> 1) * pllmull;
 8000f86:	4a0b      	ldr	r2, [pc, #44]	; (8000fb4 <RCC_GetClocksFreq+0xc0>)
 8000f88:	fb02 f303 	mul.w	r3, r2, r3
 8000f8c:	6003      	str	r3, [r0, #0]
 8000f8e:	e7c0      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
          RCC_Clocks->SYSCLK_Frequency = HSE_Value * pllmull;
 8000f90:	4a06      	ldr	r2, [pc, #24]	; (8000fac <RCC_GetClocksFreq+0xb8>)
 8000f92:	fb02 f303 	mul.w	r3, r2, r3
 8000f96:	6003      	str	r3, [r0, #0]
 8000f98:	e7bb      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
 8000f9a:	bf00      	nop
 8000f9c:	40021000 	.word	0x40021000
 8000fa0:	007a1200 	.word	0x007a1200
 8000fa4:	20000004 	.word	0x20000004
 8000fa8:	20000000 	.word	0x20000000
 8000fac:	00b71b00 	.word	0x00b71b00
 8000fb0:	005b8d80 	.word	0x005b8d80
 8000fb4:	003d0900 	.word	0x003d0900

08000fb8 <RCC_APB2PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
 8000fb8:	b538      	push	{r3, r4, r5, lr}
 8000fba:	4604      	mov	r4, r0
 8000fbc:	460d      	mov	r5, r1
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 8000fbe:	f420 437f 	bic.w	r3, r0, #65280	; 0xff00
 8000fc2:	f023 03fd 	bic.w	r3, r3, #253	; 0xfd
 8000fc6:	b903      	cbnz	r3, 8000fca <RCC_APB2PeriphClockCmd+0x12>
 8000fc8:	b920      	cbnz	r0, 8000fd4 <RCC_APB2PeriphClockCmd+0x1c>
 8000fca:	f240 4137 	movw	r1, #1079	; 0x437
 8000fce:	480b      	ldr	r0, [pc, #44]	; (8000ffc <RCC_APB2PeriphClockCmd+0x44>)
 8000fd0:	f000 fb6c 	bl	80016ac <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 8000fd4:	2d01      	cmp	r5, #1
 8000fd6:	d806      	bhi.n	8000fe6 <RCC_APB2PeriphClockCmd+0x2e>
  if (NewState != DISABLE)
 8000fd8:	b95d      	cbnz	r5, 8000ff2 <RCC_APB2PeriphClockCmd+0x3a>
  {
    RCC->APB2ENR |= RCC_APB2Periph;
  }
  else
  {
    RCC->APB2ENR &= ~RCC_APB2Periph;
 8000fda:	4a09      	ldr	r2, [pc, #36]	; (8001000 <RCC_APB2PeriphClockCmd+0x48>)
 8000fdc:	6993      	ldr	r3, [r2, #24]
 8000fde:	ea23 0404 	bic.w	r4, r3, r4
 8000fe2:	6194      	str	r4, [r2, #24]
  }
}
 8000fe4:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 8000fe6:	f44f 6187 	mov.w	r1, #1080	; 0x438
 8000fea:	4804      	ldr	r0, [pc, #16]	; (8000ffc <RCC_APB2PeriphClockCmd+0x44>)
 8000fec:	f000 fb5e 	bl	80016ac <assert_failed>
 8000ff0:	e7f2      	b.n	8000fd8 <RCC_APB2PeriphClockCmd+0x20>
    RCC->APB2ENR |= RCC_APB2Periph;
 8000ff2:	4a03      	ldr	r2, [pc, #12]	; (8001000 <RCC_APB2PeriphClockCmd+0x48>)
 8000ff4:	6993      	ldr	r3, [r2, #24]
 8000ff6:	431c      	orrs	r4, r3
 8000ff8:	6194      	str	r4, [r2, #24]
 8000ffa:	e7f3      	b.n	8000fe4 <RCC_APB2PeriphClockCmd+0x2c>
 8000ffc:	08006980 	.word	0x08006980
 8001000:	40021000 	.word	0x40021000

08001004 <RCC_APB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
 8001004:	b538      	push	{r3, r4, r5, lr}
 8001006:	4604      	mov	r4, r0
 8001008:	460d      	mov	r5, r1
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 800100a:	4b0e      	ldr	r3, [pc, #56]	; (8001044 <RCC_APB1PeriphClockCmd+0x40>)
 800100c:	4003      	ands	r3, r0
 800100e:	b903      	cbnz	r3, 8001012 <RCC_APB1PeriphClockCmd+0xe>
 8001010:	b920      	cbnz	r0, 800101c <RCC_APB1PeriphClockCmd+0x18>
 8001012:	f240 4155 	movw	r1, #1109	; 0x455
 8001016:	480c      	ldr	r0, [pc, #48]	; (8001048 <RCC_APB1PeriphClockCmd+0x44>)
 8001018:	f000 fb48 	bl	80016ac <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 800101c:	2d01      	cmp	r5, #1
 800101e:	d806      	bhi.n	800102e <RCC_APB1PeriphClockCmd+0x2a>
  if (NewState != DISABLE)
 8001020:	b95d      	cbnz	r5, 800103a <RCC_APB1PeriphClockCmd+0x36>
  {
    RCC->APB1ENR |= RCC_APB1Periph;
  }
  else
  {
    RCC->APB1ENR &= ~RCC_APB1Periph;
 8001022:	4a0a      	ldr	r2, [pc, #40]	; (800104c <RCC_APB1PeriphClockCmd+0x48>)
 8001024:	69d3      	ldr	r3, [r2, #28]
 8001026:	ea23 0404 	bic.w	r4, r3, r4
 800102a:	61d4      	str	r4, [r2, #28]
  }
}
 800102c:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 800102e:	f240 4156 	movw	r1, #1110	; 0x456
 8001032:	4805      	ldr	r0, [pc, #20]	; (8001048 <RCC_APB1PeriphClockCmd+0x44>)
 8001034:	f000 fb3a 	bl	80016ac <assert_failed>
 8001038:	e7f2      	b.n	8001020 <RCC_APB1PeriphClockCmd+0x1c>
    RCC->APB1ENR |= RCC_APB1Periph;
 800103a:	4a04      	ldr	r2, [pc, #16]	; (800104c <RCC_APB1PeriphClockCmd+0x48>)
 800103c:	69d3      	ldr	r3, [r2, #28]
 800103e:	431c      	orrs	r4, r3
 8001040:	61d4      	str	r4, [r2, #28]
 8001042:	e7f3      	b.n	800102c <RCC_APB1PeriphClockCmd+0x28>
 8001044:	c10137c0 	.word	0xc10137c0
 8001048:	08006980 	.word	0x08006980
 800104c:	40021000 	.word	0x40021000

08001050 <USART_Init>:
  * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
  *   that contains the configuration information for the specified USART peripheral.
  * @retval None
  */
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
 8001050:	b530      	push	{r4, r5, lr}
 8001052:	b087      	sub	sp, #28
 8001054:	4604      	mov	r4, r0
 8001056:	460d      	mov	r5, r1
  uint32_t integerdivider = 0x00;
  uint32_t fractionaldivider = 0x00;
  uint32_t usartxbase = 0;
  RCC_ClocksTypeDef RCC_ClocksStatus;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 8001058:	4b58      	ldr	r3, [pc, #352]	; (80011bc <USART_Init+0x16c>)
 800105a:	4298      	cmp	r0, r3
 800105c:	d013      	beq.n	8001086 <USART_Init+0x36>
 800105e:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001062:	4298      	cmp	r0, r3
 8001064:	d00f      	beq.n	8001086 <USART_Init+0x36>
 8001066:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800106a:	4298      	cmp	r0, r3
 800106c:	d00b      	beq.n	8001086 <USART_Init+0x36>
 800106e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001072:	4298      	cmp	r0, r3
 8001074:	d007      	beq.n	8001086 <USART_Init+0x36>
 8001076:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800107a:	4298      	cmp	r0, r3
 800107c:	d003      	beq.n	8001086 <USART_Init+0x36>
 800107e:	21ad      	movs	r1, #173	; 0xad
 8001080:	484f      	ldr	r0, [pc, #316]	; (80011c0 <USART_Init+0x170>)
 8001082:	f000 fb13 	bl	80016ac <assert_failed>
  assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
 8001086:	682b      	ldr	r3, [r5, #0]
 8001088:	3b01      	subs	r3, #1
 800108a:	4a4e      	ldr	r2, [pc, #312]	; (80011c4 <USART_Init+0x174>)
 800108c:	4293      	cmp	r3, r2
 800108e:	d87a      	bhi.n	8001186 <USART_Init+0x136>
  assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 8001090:	88ab      	ldrh	r3, [r5, #4]
 8001092:	b113      	cbz	r3, 800109a <USART_Init+0x4a>
 8001094:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001098:	d17a      	bne.n	8001190 <USART_Init+0x140>
  assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 800109a:	88eb      	ldrh	r3, [r5, #6]
 800109c:	b143      	cbz	r3, 80010b0 <USART_Init+0x60>
 800109e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80010a2:	d005      	beq.n	80010b0 <USART_Init+0x60>
 80010a4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80010a8:	d002      	beq.n	80010b0 <USART_Init+0x60>
 80010aa:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80010ae:	d174      	bne.n	800119a <USART_Init+0x14a>
  assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 80010b0:	892b      	ldrh	r3, [r5, #8]
 80010b2:	b12b      	cbz	r3, 80010c0 <USART_Init+0x70>
 80010b4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80010b8:	d002      	beq.n	80010c0 <USART_Init+0x70>
 80010ba:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80010be:	d171      	bne.n	80011a4 <USART_Init+0x154>
  assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
 80010c0:	896a      	ldrh	r2, [r5, #10]
 80010c2:	f022 030c 	bic.w	r3, r2, #12
 80010c6:	b29b      	uxth	r3, r3
 80010c8:	b903      	cbnz	r3, 80010cc <USART_Init+0x7c>
 80010ca:	b91a      	cbnz	r2, 80010d4 <USART_Init+0x84>
 80010cc:	21b2      	movs	r1, #178	; 0xb2
 80010ce:	483c      	ldr	r0, [pc, #240]	; (80011c0 <USART_Init+0x170>)
 80010d0:	f000 faec 	bl	80016ac <assert_failed>
  assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 80010d4:	89ab      	ldrh	r3, [r5, #12]
 80010d6:	b143      	cbz	r3, 80010ea <USART_Init+0x9a>
 80010d8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80010dc:	d005      	beq.n	80010ea <USART_Init+0x9a>
 80010de:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80010e2:	d002      	beq.n	80010ea <USART_Init+0x9a>
 80010e4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80010e8:	d161      	bne.n	80011ae <USART_Init+0x15e>
  /* The hardware flow control is available only for USART1, USART2 and USART3 */
  if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
 80010ea:	89ab      	ldrh	r3, [r5, #12]
 80010ec:	b173      	cbz	r3, 800110c <USART_Init+0xbc>
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
 80010ee:	4b33      	ldr	r3, [pc, #204]	; (80011bc <USART_Init+0x16c>)
 80010f0:	429c      	cmp	r4, r3
 80010f2:	d00b      	beq.n	800110c <USART_Init+0xbc>
 80010f4:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80010f8:	429c      	cmp	r4, r3
 80010fa:	d007      	beq.n	800110c <USART_Init+0xbc>
 80010fc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001100:	429c      	cmp	r4, r3
 8001102:	d003      	beq.n	800110c <USART_Init+0xbc>
 8001104:	21b7      	movs	r1, #183	; 0xb7
 8001106:	482e      	ldr	r0, [pc, #184]	; (80011c0 <USART_Init+0x170>)
 8001108:	f000 fad0 	bl	80016ac <assert_failed>
  }

  usartxbase = (uint32_t)USARTx;

/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
 800110c:	8a23      	ldrh	r3, [r4, #16]
 800110e:	b29b      	uxth	r3, r3
  /* Clear STOP[13:12] bits */
  tmpreg &= CR2_STOP_CLEAR_Mask;
  /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
  /* Set STOP[13:12] bits according to USART_StopBits value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 8001110:	88ea      	ldrh	r2, [r5, #6]
 8001112:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001116:	4313      	orrs	r3, r2
  
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
 8001118:	8223      	strh	r3, [r4, #16]

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
 800111a:	89a3      	ldrh	r3, [r4, #12]
 800111c:	b29b      	uxth	r3, r3
  tmpreg &= CR1_CLEAR_Mask;
  /* Configure the USART Word Length, Parity and mode ----------------------- */
  /* Set the M bits according to USART_WordLength value */
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 800111e:	88a9      	ldrh	r1, [r5, #4]
 8001120:	8928      	ldrh	r0, [r5, #8]
            USART_InitStruct->USART_Mode;
 8001122:	896a      	ldrh	r2, [r5, #10]
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 8001124:	4301      	orrs	r1, r0
 8001126:	430a      	orrs	r2, r1
 8001128:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800112c:	f023 030c 	bic.w	r3, r3, #12
 8001130:	4313      	orrs	r3, r2
  /* Write to USART CR1 */
  USARTx->CR1 = (uint16_t)tmpreg;
 8001132:	81a3      	strh	r3, [r4, #12]

/*---------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = USARTx->CR3;
 8001134:	8aa3      	ldrh	r3, [r4, #20]
 8001136:	b29b      	uxth	r3, r3
  /* Clear CTSE and RTSE bits */
  tmpreg &= CR3_CLEAR_Mask;
  /* Configure the USART HFC -------------------------------------------------*/
  /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 8001138:	89aa      	ldrh	r2, [r5, #12]
 800113a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800113e:	4313      	orrs	r3, r2
  /* Write to USART CR3 */
  USARTx->CR3 = (uint16_t)tmpreg;
 8001140:	82a3      	strh	r3, [r4, #20]

/*---------------------------- USART BRR Configuration -----------------------*/
  /* Configure the USART Baud Rate -------------------------------------------*/
  RCC_GetClocksFreq(&RCC_ClocksStatus);
 8001142:	a801      	add	r0, sp, #4
 8001144:	f7ff fed6 	bl	8000ef4 <RCC_GetClocksFreq>
  if (usartxbase == USART1_BASE)
 8001148:	4b1c      	ldr	r3, [pc, #112]	; (80011bc <USART_Init+0x16c>)
 800114a:	429c      	cmp	r4, r3
 800114c:	d034      	beq.n	80011b8 <USART_Init+0x168>
  {
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
  }
  else
  {
    apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 800114e:	9b03      	ldr	r3, [sp, #12]
  }
  /* Determine the integer part */
  integerdivider = ((0x19 * apbclock) / (0x04 * (USART_InitStruct->USART_BaudRate)));
 8001150:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001154:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001158:	682a      	ldr	r2, [r5, #0]
 800115a:	0092      	lsls	r2, r2, #2
 800115c:	fbb3 f2f2 	udiv	r2, r3, r2
  tmpreg = (integerdivider / 0x64) << 0x04;
 8001160:	4819      	ldr	r0, [pc, #100]	; (80011c8 <USART_Init+0x178>)
 8001162:	fba0 1302 	umull	r1, r3, r0, r2
 8001166:	0959      	lsrs	r1, r3, #5
  /* Determine the fractional part */
  fractionaldivider = integerdivider - (0x64 * (tmpreg >> 0x04));
 8001168:	2364      	movs	r3, #100	; 0x64
 800116a:	fb01 2313 	mls	r3, r1, r3, r2
  tmpreg |= ((((fractionaldivider * 0x10) + 0x32) / 0x64)) & ((uint8_t)0x0F);
 800116e:	011b      	lsls	r3, r3, #4
 8001170:	3332      	adds	r3, #50	; 0x32
 8001172:	fba0 2303 	umull	r2, r3, r0, r3
 8001176:	f3c3 1343 	ubfx	r3, r3, #5, #4
 800117a:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  /* Write to USART BRR */
  USARTx->BRR = (uint16_t)tmpreg;
 800117e:	b29b      	uxth	r3, r3
 8001180:	8123      	strh	r3, [r4, #8]
}
 8001182:	b007      	add	sp, #28
 8001184:	bd30      	pop	{r4, r5, pc}
  assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
 8001186:	21ae      	movs	r1, #174	; 0xae
 8001188:	480d      	ldr	r0, [pc, #52]	; (80011c0 <USART_Init+0x170>)
 800118a:	f000 fa8f 	bl	80016ac <assert_failed>
 800118e:	e77f      	b.n	8001090 <USART_Init+0x40>
  assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 8001190:	21af      	movs	r1, #175	; 0xaf
 8001192:	480b      	ldr	r0, [pc, #44]	; (80011c0 <USART_Init+0x170>)
 8001194:	f000 fa8a 	bl	80016ac <assert_failed>
 8001198:	e77f      	b.n	800109a <USART_Init+0x4a>
  assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 800119a:	21b0      	movs	r1, #176	; 0xb0
 800119c:	4808      	ldr	r0, [pc, #32]	; (80011c0 <USART_Init+0x170>)
 800119e:	f000 fa85 	bl	80016ac <assert_failed>
 80011a2:	e785      	b.n	80010b0 <USART_Init+0x60>
  assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 80011a4:	21b1      	movs	r1, #177	; 0xb1
 80011a6:	4806      	ldr	r0, [pc, #24]	; (80011c0 <USART_Init+0x170>)
 80011a8:	f000 fa80 	bl	80016ac <assert_failed>
 80011ac:	e788      	b.n	80010c0 <USART_Init+0x70>
  assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 80011ae:	21b3      	movs	r1, #179	; 0xb3
 80011b0:	4803      	ldr	r0, [pc, #12]	; (80011c0 <USART_Init+0x170>)
 80011b2:	f000 fa7b 	bl	80016ac <assert_failed>
 80011b6:	e798      	b.n	80010ea <USART_Init+0x9a>
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 80011b8:	9b04      	ldr	r3, [sp, #16]
 80011ba:	e7c9      	b.n	8001150 <USART_Init+0x100>
 80011bc:	40013800 	.word	0x40013800
 80011c0:	080069b8 	.word	0x080069b8
 80011c4:	0044aa1f 	.word	0x0044aa1f
 80011c8:	51eb851f 	.word	0x51eb851f

080011cc <USART_Cmd>:
  * @param  NewState: new state of the USARTx peripheral.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
 80011cc:	b538      	push	{r3, r4, r5, lr}
 80011ce:	4604      	mov	r4, r0
 80011d0:	460d      	mov	r5, r1
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 80011d2:	4b16      	ldr	r3, [pc, #88]	; (800122c <USART_Cmd+0x60>)
 80011d4:	4298      	cmp	r0, r3
 80011d6:	d014      	beq.n	8001202 <USART_Cmd+0x36>
 80011d8:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80011dc:	4298      	cmp	r0, r3
 80011de:	d010      	beq.n	8001202 <USART_Cmd+0x36>
 80011e0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011e4:	4298      	cmp	r0, r3
 80011e6:	d00c      	beq.n	8001202 <USART_Cmd+0x36>
 80011e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011ec:	4298      	cmp	r0, r3
 80011ee:	d008      	beq.n	8001202 <USART_Cmd+0x36>
 80011f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011f4:	4298      	cmp	r0, r3
 80011f6:	d004      	beq.n	8001202 <USART_Cmd+0x36>
 80011f8:	f44f 71a1 	mov.w	r1, #322	; 0x142
 80011fc:	480c      	ldr	r0, [pc, #48]	; (8001230 <USART_Cmd+0x64>)
 80011fe:	f000 fa55 	bl	80016ac <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 8001202:	2d01      	cmp	r5, #1
 8001204:	d807      	bhi.n	8001216 <USART_Cmd+0x4a>
  
  if (NewState != DISABLE)
 8001206:	b965      	cbnz	r5, 8001222 <USART_Cmd+0x56>
    USARTx->CR1 |= CR1_UE_Set;
  }
  else
  {
    /* Disable the selected USART by clearing the UE bit in the CR1 register */
    USARTx->CR1 &= CR1_UE_Reset;
 8001208:	89a3      	ldrh	r3, [r4, #12]
 800120a:	b29b      	uxth	r3, r3
 800120c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001210:	b29b      	uxth	r3, r3
 8001212:	81a3      	strh	r3, [r4, #12]
  }
}
 8001214:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 8001216:	f240 1143 	movw	r1, #323	; 0x143
 800121a:	4805      	ldr	r0, [pc, #20]	; (8001230 <USART_Cmd+0x64>)
 800121c:	f000 fa46 	bl	80016ac <assert_failed>
 8001220:	e7f1      	b.n	8001206 <USART_Cmd+0x3a>
    USARTx->CR1 |= CR1_UE_Set;
 8001222:	89a3      	ldrh	r3, [r4, #12]
 8001224:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001228:	81a3      	strh	r3, [r4, #12]
 800122a:	e7f3      	b.n	8001214 <USART_Cmd+0x48>
 800122c:	40013800 	.word	0x40013800
 8001230:	080069b8 	.word	0x080069b8

08001234 <USART_ITConfig>:
  * @param  NewState: new state of the specified USARTx interrupts.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
{
 8001234:	b570      	push	{r4, r5, r6, lr}
 8001236:	4605      	mov	r5, r0
 8001238:	460c      	mov	r4, r1
 800123a:	4616      	mov	r6, r2
  uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
  uint32_t usartxbase = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 800123c:	4b38      	ldr	r3, [pc, #224]	; (8001320 <USART_ITConfig+0xec>)
 800123e:	4298      	cmp	r0, r3
 8001240:	d014      	beq.n	800126c <USART_ITConfig+0x38>
 8001242:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001246:	4298      	cmp	r0, r3
 8001248:	d010      	beq.n	800126c <USART_ITConfig+0x38>
 800124a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800124e:	4298      	cmp	r0, r3
 8001250:	d00c      	beq.n	800126c <USART_ITConfig+0x38>
 8001252:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001256:	4298      	cmp	r0, r3
 8001258:	d008      	beq.n	800126c <USART_ITConfig+0x38>
 800125a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800125e:	4298      	cmp	r0, r3
 8001260:	d004      	beq.n	800126c <USART_ITConfig+0x38>
 8001262:	f240 1169 	movw	r1, #361	; 0x169
 8001266:	482f      	ldr	r0, [pc, #188]	; (8001324 <USART_ITConfig+0xf0>)
 8001268:	f000 fa20 	bl	80016ac <assert_failed>
  assert_param(IS_USART_CONFIG_IT(USART_IT));
 800126c:	2c28      	cmp	r4, #40	; 0x28
 800126e:	d019      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001270:	f240 7327 	movw	r3, #1831	; 0x727
 8001274:	429c      	cmp	r4, r3
 8001276:	d015      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001278:	f240 6326 	movw	r3, #1574	; 0x626
 800127c:	429c      	cmp	r4, r3
 800127e:	d011      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001280:	f240 5325 	movw	r3, #1317	; 0x525
 8001284:	429c      	cmp	r4, r3
 8001286:	d00d      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001288:	f240 4324 	movw	r3, #1060	; 0x424
 800128c:	429c      	cmp	r4, r3
 800128e:	d009      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001290:	f640 0346 	movw	r3, #2118	; 0x846
 8001294:	429c      	cmp	r4, r3
 8001296:	d005      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001298:	f640 136a 	movw	r3, #2410	; 0x96a
 800129c:	429c      	cmp	r4, r3
 800129e:	d001      	beq.n	80012a4 <USART_ITConfig+0x70>
 80012a0:	2c60      	cmp	r4, #96	; 0x60
 80012a2:	d117      	bne.n	80012d4 <USART_ITConfig+0xa0>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 80012a4:	2e01      	cmp	r6, #1
 80012a6:	d81b      	bhi.n	80012e0 <USART_ITConfig+0xac>
  /* The CTS interrupt is not available for UART4 and UART5 */
  if (USART_IT == USART_IT_CTS)
 80012a8:	f640 136a 	movw	r3, #2410	; 0x96a
 80012ac:	429c      	cmp	r4, r3
 80012ae:	d01d      	beq.n	80012ec <USART_ITConfig+0xb8>
  }   
  
  usartxbase = (uint32_t)USARTx;

  /* Get the USART register index */
  usartreg = (((uint8_t)USART_IT) >> 0x05);
 80012b0:	f3c4 1242 	ubfx	r2, r4, #5, #3

  /* Get the interrupt position */
  itpos = USART_IT & IT_Mask;
 80012b4:	f004 041f 	and.w	r4, r4, #31
  itmask = (((uint32_t)0x01) << itpos);
 80012b8:	2301      	movs	r3, #1
 80012ba:	fa03 f404 	lsl.w	r4, r3, r4
    
  if (usartreg == 0x01) /* The IT is in CR1 register */
 80012be:	429a      	cmp	r2, r3
 80012c0:	d025      	beq.n	800130e <USART_ITConfig+0xda>
  {
    usartxbase += 0x0C;
  }
  else if (usartreg == 0x02) /* The IT is in CR2 register */
 80012c2:	2a02      	cmp	r2, #2
 80012c4:	d025      	beq.n	8001312 <USART_ITConfig+0xde>
  {
    usartxbase += 0x10;
  }
  else /* The IT is in CR3 register */
  {
    usartxbase += 0x14; 
 80012c6:	3514      	adds	r5, #20
  }
  if (NewState != DISABLE)
 80012c8:	bb2e      	cbnz	r6, 8001316 <USART_ITConfig+0xe2>
  {
    *(__IO uint32_t*)usartxbase  |= itmask;
  }
  else
  {
    *(__IO uint32_t*)usartxbase &= ~itmask;
 80012ca:	682b      	ldr	r3, [r5, #0]
 80012cc:	ea23 0404 	bic.w	r4, r3, r4
 80012d0:	602c      	str	r4, [r5, #0]
  }
}
 80012d2:	bd70      	pop	{r4, r5, r6, pc}
  assert_param(IS_USART_CONFIG_IT(USART_IT));
 80012d4:	f44f 71b5 	mov.w	r1, #362	; 0x16a
 80012d8:	4812      	ldr	r0, [pc, #72]	; (8001324 <USART_ITConfig+0xf0>)
 80012da:	f000 f9e7 	bl	80016ac <assert_failed>
 80012de:	e7e1      	b.n	80012a4 <USART_ITConfig+0x70>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 80012e0:	f240 116b 	movw	r1, #363	; 0x16b
 80012e4:	480f      	ldr	r0, [pc, #60]	; (8001324 <USART_ITConfig+0xf0>)
 80012e6:	f000 f9e1 	bl	80016ac <assert_failed>
 80012ea:	e7dd      	b.n	80012a8 <USART_ITConfig+0x74>
    assert_param(IS_USART_123_PERIPH(USARTx));
 80012ec:	4b0c      	ldr	r3, [pc, #48]	; (8001320 <USART_ITConfig+0xec>)
 80012ee:	429d      	cmp	r5, r3
 80012f0:	d0de      	beq.n	80012b0 <USART_ITConfig+0x7c>
 80012f2:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80012f6:	429d      	cmp	r5, r3
 80012f8:	d0da      	beq.n	80012b0 <USART_ITConfig+0x7c>
 80012fa:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80012fe:	429d      	cmp	r5, r3
 8001300:	d0d6      	beq.n	80012b0 <USART_ITConfig+0x7c>
 8001302:	f240 116f 	movw	r1, #367	; 0x16f
 8001306:	4807      	ldr	r0, [pc, #28]	; (8001324 <USART_ITConfig+0xf0>)
 8001308:	f000 f9d0 	bl	80016ac <assert_failed>
 800130c:	e7d0      	b.n	80012b0 <USART_ITConfig+0x7c>
    usartxbase += 0x0C;
 800130e:	350c      	adds	r5, #12
 8001310:	e7da      	b.n	80012c8 <USART_ITConfig+0x94>
    usartxbase += 0x10;
 8001312:	3510      	adds	r5, #16
 8001314:	e7d8      	b.n	80012c8 <USART_ITConfig+0x94>
    *(__IO uint32_t*)usartxbase  |= itmask;
 8001316:	682b      	ldr	r3, [r5, #0]
 8001318:	431c      	orrs	r4, r3
 800131a:	602c      	str	r4, [r5, #0]
 800131c:	e7d9      	b.n	80012d2 <USART_ITConfig+0x9e>
 800131e:	bf00      	nop
 8001320:	40013800 	.word	0x40013800
 8001324:	080069b8 	.word	0x080069b8

08001328 <USART_SendData>:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @param  Data: the data to transmit.
  * @retval None
  */
void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
{
 8001328:	b538      	push	{r3, r4, r5, lr}
 800132a:	4605      	mov	r5, r0
 800132c:	460c      	mov	r4, r1
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 800132e:	4b12      	ldr	r3, [pc, #72]	; (8001378 <USART_SendData+0x50>)
 8001330:	4298      	cmp	r0, r3
 8001332:	d014      	beq.n	800135e <USART_SendData+0x36>
 8001334:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001338:	4298      	cmp	r0, r3
 800133a:	d010      	beq.n	800135e <USART_SendData+0x36>
 800133c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001340:	4298      	cmp	r0, r3
 8001342:	d00c      	beq.n	800135e <USART_SendData+0x36>
 8001344:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001348:	4298      	cmp	r0, r3
 800134a:	d008      	beq.n	800135e <USART_SendData+0x36>
 800134c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001350:	4298      	cmp	r0, r3
 8001352:	d004      	beq.n	800135e <USART_SendData+0x36>
 8001354:	f240 2132 	movw	r1, #562	; 0x232
 8001358:	4808      	ldr	r0, [pc, #32]	; (800137c <USART_SendData+0x54>)
 800135a:	f000 f9a7 	bl	80016ac <assert_failed>
  assert_param(IS_USART_DATA(Data)); 
 800135e:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 8001362:	d203      	bcs.n	800136c <USART_SendData+0x44>
    
  /* Transmit Data */
  USARTx->DR = (Data & (uint16_t)0x01FF);
 8001364:	f3c4 0408 	ubfx	r4, r4, #0, #9
 8001368:	80ac      	strh	r4, [r5, #4]
}
 800136a:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_USART_DATA(Data)); 
 800136c:	f240 2133 	movw	r1, #563	; 0x233
 8001370:	4802      	ldr	r0, [pc, #8]	; (800137c <USART_SendData+0x54>)
 8001372:	f000 f99b 	bl	80016ac <assert_failed>
 8001376:	e7f5      	b.n	8001364 <USART_SendData+0x3c>
 8001378:	40013800 	.word	0x40013800
 800137c:	080069b8 	.word	0x080069b8

08001380 <USART_ReceiveData>:
  *   This parameter can be one of the following values:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @retval The received data.
  */
uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
{
 8001380:	b510      	push	{r4, lr}
 8001382:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 8001384:	4b0d      	ldr	r3, [pc, #52]	; (80013bc <USART_ReceiveData+0x3c>)
 8001386:	4298      	cmp	r0, r3
 8001388:	d014      	beq.n	80013b4 <USART_ReceiveData+0x34>
 800138a:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 800138e:	4298      	cmp	r0, r3
 8001390:	d010      	beq.n	80013b4 <USART_ReceiveData+0x34>
 8001392:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001396:	4298      	cmp	r0, r3
 8001398:	d00c      	beq.n	80013b4 <USART_ReceiveData+0x34>
 800139a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800139e:	4298      	cmp	r0, r3
 80013a0:	d008      	beq.n	80013b4 <USART_ReceiveData+0x34>
 80013a2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013a6:	4298      	cmp	r0, r3
 80013a8:	d004      	beq.n	80013b4 <USART_ReceiveData+0x34>
 80013aa:	f240 2143 	movw	r1, #579	; 0x243
 80013ae:	4804      	ldr	r0, [pc, #16]	; (80013c0 <USART_ReceiveData+0x40>)
 80013b0:	f000 f97c 	bl	80016ac <assert_failed>
  
  /* Receive Data */
  return (uint16_t)(USARTx->DR & (uint16_t)0x01FF);
 80013b4:	88a0      	ldrh	r0, [r4, #4]
}
 80013b6:	f3c0 0008 	ubfx	r0, r0, #0, #9
 80013ba:	bd10      	pop	{r4, pc}
 80013bc:	40013800 	.word	0x40013800
 80013c0:	080069b8 	.word	0x080069b8

080013c4 <USART_GetFlagStatus>:
  *     @arg USART_FLAG_FE:   Framing Error flag
  *     @arg USART_FLAG_PE:   Parity Error flag
  * @retval The new state of USART_FLAG (SET or RESET).
  */
FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4605      	mov	r5, r0
 80013c8:	460c      	mov	r4, r1
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 80013ca:	4b27      	ldr	r3, [pc, #156]	; (8001468 <USART_GetFlagStatus+0xa4>)
 80013cc:	4298      	cmp	r0, r3
 80013ce:	d014      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013d0:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80013d4:	4298      	cmp	r0, r3
 80013d6:	d010      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013d8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013dc:	4298      	cmp	r0, r3
 80013de:	d00c      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013e0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013e4:	4298      	cmp	r0, r3
 80013e6:	d008      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013ec:	4298      	cmp	r0, r3
 80013ee:	d004      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013f0:	f240 3113 	movw	r1, #787	; 0x313
 80013f4:	481d      	ldr	r0, [pc, #116]	; (800146c <USART_GetFlagStatus+0xa8>)
 80013f6:	f000 f959 	bl	80016ac <assert_failed>
  assert_param(IS_USART_FLAG(USART_FLAG));
 80013fa:	2c01      	cmp	r4, #1
 80013fc:	d013      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 80013fe:	2c80      	cmp	r4, #128	; 0x80
 8001400:	d011      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 8001402:	2c40      	cmp	r4, #64	; 0x40
 8001404:	d00f      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 8001406:	2c20      	cmp	r4, #32
 8001408:	d00d      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 800140a:	2c10      	cmp	r4, #16
 800140c:	d00b      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 800140e:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
 8001412:	d008      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 8001414:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 8001418:	d005      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 800141a:	2c08      	cmp	r4, #8
 800141c:	d003      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 800141e:	2c04      	cmp	r4, #4
 8001420:	d001      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 8001422:	2c02      	cmp	r4, #2
 8001424:	d107      	bne.n	8001436 <USART_GetFlagStatus+0x72>
  /* The CTS flag is not available for UART4 and UART5 */
  if (USART_FLAG == USART_FLAG_CTS)
 8001426:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 800142a:	d00a      	beq.n	8001442 <USART_GetFlagStatus+0x7e>
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }  
  
  if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
 800142c:	882b      	ldrh	r3, [r5, #0]
 800142e:	421c      	tst	r4, r3
 8001430:	d118      	bne.n	8001464 <USART_GetFlagStatus+0xa0>
  {
    bitstatus = SET;
  }
  else
  {
    bitstatus = RESET;
 8001432:	2000      	movs	r0, #0
  }
  return bitstatus;
}
 8001434:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_USART_FLAG(USART_FLAG));
 8001436:	f44f 7145 	mov.w	r1, #788	; 0x314
 800143a:	480c      	ldr	r0, [pc, #48]	; (800146c <USART_GetFlagStatus+0xa8>)
 800143c:	f000 f936 	bl	80016ac <assert_failed>
 8001440:	e7f1      	b.n	8001426 <USART_GetFlagStatus+0x62>
    assert_param(IS_USART_123_PERIPH(USARTx));
 8001442:	4b09      	ldr	r3, [pc, #36]	; (8001468 <USART_GetFlagStatus+0xa4>)
 8001444:	429d      	cmp	r5, r3
 8001446:	d0f1      	beq.n	800142c <USART_GetFlagStatus+0x68>
 8001448:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 800144c:	429d      	cmp	r5, r3
 800144e:	d0ed      	beq.n	800142c <USART_GetFlagStatus+0x68>
 8001450:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001454:	429d      	cmp	r5, r3
 8001456:	d0e9      	beq.n	800142c <USART_GetFlagStatus+0x68>
 8001458:	f44f 7146 	mov.w	r1, #792	; 0x318
 800145c:	4803      	ldr	r0, [pc, #12]	; (800146c <USART_GetFlagStatus+0xa8>)
 800145e:	f000 f925 	bl	80016ac <assert_failed>
 8001462:	e7e3      	b.n	800142c <USART_GetFlagStatus+0x68>
    bitstatus = SET;
 8001464:	2001      	movs	r0, #1
 8001466:	e7e5      	b.n	8001434 <USART_GetFlagStatus+0x70>
 8001468:	40013800 	.word	0x40013800
 800146c:	080069b8 	.word	0x080069b8

08001470 <USART_GetITStatus>:
  *     @arg USART_IT_FE:   Framing Error interrupt
  *     @arg USART_IT_PE:   Parity Error interrupt
  * @retval The new state of USART_IT (SET or RESET).
  */
ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
{
 8001470:	b538      	push	{r3, r4, r5, lr}
 8001472:	4605      	mov	r5, r0
 8001474:	460c      	mov	r4, r1
  uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
  ITStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 8001476:	4b3b      	ldr	r3, [pc, #236]	; (8001564 <USART_GetITStatus+0xf4>)
 8001478:	4298      	cmp	r0, r3
 800147a:	d014      	beq.n	80014a6 <USART_GetITStatus+0x36>
 800147c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001480:	4298      	cmp	r0, r3
 8001482:	d010      	beq.n	80014a6 <USART_GetITStatus+0x36>
 8001484:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001488:	4298      	cmp	r0, r3
 800148a:	d00c      	beq.n	80014a6 <USART_GetITStatus+0x36>
 800148c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001490:	4298      	cmp	r0, r3
 8001492:	d008      	beq.n	80014a6 <USART_GetITStatus+0x36>
 8001494:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001498:	4298      	cmp	r0, r3
 800149a:	d004      	beq.n	80014a6 <USART_GetITStatus+0x36>
 800149c:	f240 3166 	movw	r1, #870	; 0x366
 80014a0:	4831      	ldr	r0, [pc, #196]	; (8001568 <USART_GetITStatus+0xf8>)
 80014a2:	f000 f903 	bl	80016ac <assert_failed>
  assert_param(IS_USART_GET_IT(USART_IT));
 80014a6:	2c28      	cmp	r4, #40	; 0x28
 80014a8:	d020      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014aa:	f240 7327 	movw	r3, #1831	; 0x727
 80014ae:	429c      	cmp	r4, r3
 80014b0:	d01c      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014b2:	f240 6326 	movw	r3, #1574	; 0x626
 80014b6:	429c      	cmp	r4, r3
 80014b8:	d018      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014ba:	f240 5325 	movw	r3, #1317	; 0x525
 80014be:	429c      	cmp	r4, r3
 80014c0:	d014      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014c2:	f240 4324 	movw	r3, #1060	; 0x424
 80014c6:	429c      	cmp	r4, r3
 80014c8:	d010      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014ca:	f640 0346 	movw	r3, #2118	; 0x846
 80014ce:	429c      	cmp	r4, r3
 80014d0:	d00c      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014d2:	f640 136a 	movw	r3, #2410	; 0x96a
 80014d6:	429c      	cmp	r4, r3
 80014d8:	d008      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014da:	f5b4 7f58 	cmp.w	r4, #864	; 0x360
 80014de:	d005      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014e0:	f5b4 7f18 	cmp.w	r4, #608	; 0x260
 80014e4:	d002      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014e6:	f5b4 7fb0 	cmp.w	r4, #352	; 0x160
 80014ea:	d119      	bne.n	8001520 <USART_GetITStatus+0xb0>
  /* The CTS interrupt is not available for UART4 and UART5 */ 
  if (USART_IT == USART_IT_CTS)
 80014ec:	f640 136a 	movw	r3, #2410	; 0x96a
 80014f0:	429c      	cmp	r4, r3
 80014f2:	d01b      	beq.n	800152c <USART_GetITStatus+0xbc>
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }   
  
  /* Get the USART register index */
  usartreg = (((uint8_t)USART_IT) >> 0x05);
 80014f4:	f3c4 1242 	ubfx	r2, r4, #5, #3
  /* Get the interrupt position */
  itmask = USART_IT & IT_Mask;
 80014f8:	f004 011f 	and.w	r1, r4, #31
  itmask = (uint32_t)0x01 << itmask;
 80014fc:	2301      	movs	r3, #1
 80014fe:	408b      	lsls	r3, r1
  
  if (usartreg == 0x01) /* The IT  is in CR1 register */
 8001500:	2a01      	cmp	r2, #1
 8001502:	d024      	beq.n	800154e <USART_GetITStatus+0xde>
  {
    itmask &= USARTx->CR1;
  }
  else if (usartreg == 0x02) /* The IT  is in CR2 register */
 8001504:	2a02      	cmp	r2, #2
 8001506:	d025      	beq.n	8001554 <USART_GetITStatus+0xe4>
  {
    itmask &= USARTx->CR2;
  }
  else /* The IT  is in CR3 register */
  {
    itmask &= USARTx->CR3;
 8001508:	8aaa      	ldrh	r2, [r5, #20]
 800150a:	4013      	ands	r3, r2
  }
  
  bitpos = USART_IT >> 0x08;
 800150c:	0a24      	lsrs	r4, r4, #8
  bitpos = (uint32_t)0x01 << bitpos;
 800150e:	2201      	movs	r2, #1
 8001510:	fa02 f404 	lsl.w	r4, r2, r4
  bitpos &= USARTx->SR;
 8001514:	882a      	ldrh	r2, [r5, #0]
 8001516:	4014      	ands	r4, r2
  if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
 8001518:	b1fb      	cbz	r3, 800155a <USART_GetITStatus+0xea>
 800151a:	bb04      	cbnz	r4, 800155e <USART_GetITStatus+0xee>
  {
    bitstatus = SET;
  }
  else
  {
    bitstatus = RESET;
 800151c:	2000      	movs	r0, #0
 800151e:	e01d      	b.n	800155c <USART_GetITStatus+0xec>
  assert_param(IS_USART_GET_IT(USART_IT));
 8001520:	f240 3167 	movw	r1, #871	; 0x367
 8001524:	4810      	ldr	r0, [pc, #64]	; (8001568 <USART_GetITStatus+0xf8>)
 8001526:	f000 f8c1 	bl	80016ac <assert_failed>
 800152a:	e7df      	b.n	80014ec <USART_GetITStatus+0x7c>
    assert_param(IS_USART_123_PERIPH(USARTx));
 800152c:	4b0d      	ldr	r3, [pc, #52]	; (8001564 <USART_GetITStatus+0xf4>)
 800152e:	429d      	cmp	r5, r3
 8001530:	d0e0      	beq.n	80014f4 <USART_GetITStatus+0x84>
 8001532:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001536:	429d      	cmp	r5, r3
 8001538:	d0dc      	beq.n	80014f4 <USART_GetITStatus+0x84>
 800153a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800153e:	429d      	cmp	r5, r3
 8001540:	d0d8      	beq.n	80014f4 <USART_GetITStatus+0x84>
 8001542:	f240 316b 	movw	r1, #875	; 0x36b
 8001546:	4808      	ldr	r0, [pc, #32]	; (8001568 <USART_GetITStatus+0xf8>)
 8001548:	f000 f8b0 	bl	80016ac <assert_failed>
 800154c:	e7d2      	b.n	80014f4 <USART_GetITStatus+0x84>
    itmask &= USARTx->CR1;
 800154e:	89aa      	ldrh	r2, [r5, #12]
 8001550:	4013      	ands	r3, r2
 8001552:	e7db      	b.n	800150c <USART_GetITStatus+0x9c>
    itmask &= USARTx->CR2;
 8001554:	8a2a      	ldrh	r2, [r5, #16]
 8001556:	4013      	ands	r3, r2
 8001558:	e7d8      	b.n	800150c <USART_GetITStatus+0x9c>
    bitstatus = RESET;
 800155a:	2000      	movs	r0, #0
  }
  
  return bitstatus;  
}
 800155c:	bd38      	pop	{r3, r4, r5, pc}
    bitstatus = SET;
 800155e:	2001      	movs	r0, #1
 8001560:	e7fc      	b.n	800155c <USART_GetITStatus+0xec>
 8001562:	bf00      	nop
 8001564:	40013800 	.word	0x40013800
 8001568:	080069b8 	.word	0x080069b8

0800156c <USART_ClearITPendingBit>:
  *   - TXE pending bit is cleared only by a write to the USART_DR register 
  *     (USART_SendData()).
  * @retval None
  */
void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
{
 800156c:	b538      	push	{r3, r4, r5, lr}
 800156e:	4605      	mov	r5, r0
 8001570:	460c      	mov	r4, r1
  uint16_t bitpos = 0x00, itmask = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 8001572:	4b25      	ldr	r3, [pc, #148]	; (8001608 <USART_ClearITPendingBit+0x9c>)
 8001574:	4298      	cmp	r0, r3
 8001576:	d014      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001578:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 800157c:	4298      	cmp	r0, r3
 800157e:	d010      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001580:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001584:	4298      	cmp	r0, r3
 8001586:	d00c      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001588:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800158c:	4298      	cmp	r0, r3
 800158e:	d008      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001590:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001594:	4298      	cmp	r0, r3
 8001596:	d004      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001598:	f240 31af 	movw	r1, #943	; 0x3af
 800159c:	481b      	ldr	r0, [pc, #108]	; (800160c <USART_ClearITPendingBit+0xa0>)
 800159e:	f000 f885 	bl	80016ac <assert_failed>
  assert_param(IS_USART_CLEAR_IT(USART_IT));
 80015a2:	f240 6326 	movw	r3, #1574	; 0x626
 80015a6:	429c      	cmp	r4, r3
 80015a8:	d00b      	beq.n	80015c2 <USART_ClearITPendingBit+0x56>
 80015aa:	f240 5325 	movw	r3, #1317	; 0x525
 80015ae:	429c      	cmp	r4, r3
 80015b0:	d007      	beq.n	80015c2 <USART_ClearITPendingBit+0x56>
 80015b2:	f640 0346 	movw	r3, #2118	; 0x846
 80015b6:	429c      	cmp	r4, r3
 80015b8:	d003      	beq.n	80015c2 <USART_ClearITPendingBit+0x56>
 80015ba:	f640 136a 	movw	r3, #2410	; 0x96a
 80015be:	429c      	cmp	r4, r3
 80015c0:	d10b      	bne.n	80015da <USART_ClearITPendingBit+0x6e>
  /* The CTS interrupt is not available for UART4 and UART5 */
  if (USART_IT == USART_IT_CTS)
 80015c2:	f640 136a 	movw	r3, #2410	; 0x96a
 80015c6:	429c      	cmp	r4, r3
 80015c8:	d00d      	beq.n	80015e6 <USART_ClearITPendingBit+0x7a>
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }   
  
  bitpos = USART_IT >> 0x08;
 80015ca:	0a24      	lsrs	r4, r4, #8
  itmask = ((uint16_t)0x01 << (uint16_t)bitpos);
 80015cc:	2301      	movs	r3, #1
 80015ce:	40a3      	lsls	r3, r4
 80015d0:	b29b      	uxth	r3, r3
  USARTx->SR = (uint16_t)~itmask;
 80015d2:	43db      	mvns	r3, r3
 80015d4:	b29b      	uxth	r3, r3
 80015d6:	802b      	strh	r3, [r5, #0]
}
 80015d8:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_USART_CLEAR_IT(USART_IT));
 80015da:	f44f 716c 	mov.w	r1, #944	; 0x3b0
 80015de:	480b      	ldr	r0, [pc, #44]	; (800160c <USART_ClearITPendingBit+0xa0>)
 80015e0:	f000 f864 	bl	80016ac <assert_failed>
 80015e4:	e7ed      	b.n	80015c2 <USART_ClearITPendingBit+0x56>
    assert_param(IS_USART_123_PERIPH(USARTx));
 80015e6:	4b08      	ldr	r3, [pc, #32]	; (8001608 <USART_ClearITPendingBit+0x9c>)
 80015e8:	429d      	cmp	r5, r3
 80015ea:	d0ee      	beq.n	80015ca <USART_ClearITPendingBit+0x5e>
 80015ec:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80015f0:	429d      	cmp	r5, r3
 80015f2:	d0ea      	beq.n	80015ca <USART_ClearITPendingBit+0x5e>
 80015f4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80015f8:	429d      	cmp	r5, r3
 80015fa:	d0e6      	beq.n	80015ca <USART_ClearITPendingBit+0x5e>
 80015fc:	f44f 716d 	mov.w	r1, #948	; 0x3b4
 8001600:	4802      	ldr	r0, [pc, #8]	; (800160c <USART_ClearITPendingBit+0xa0>)
 8001602:	f000 f853 	bl	80016ac <assert_failed>
 8001606:	e7e0      	b.n	80015ca <USART_ClearITPendingBit+0x5e>
 8001608:	40013800 	.word	0x40013800
 800160c:	080069b8 	.word	0x080069b8

08001610 <System_Information>:

bool g_TestProcessState = FALSE;
RCC_ClocksTypeDef rcc_clocks;

void System_Information()
{
 8001610:	b510      	push	{r4, lr}
    printf("SYSCLK_Frequency = %d\n",rcc_clocks.SYSCLK_Frequency );
 8001612:	4c0b      	ldr	r4, [pc, #44]	; (8001640 <System_Information+0x30>)
 8001614:	6821      	ldr	r1, [r4, #0]
 8001616:	480b      	ldr	r0, [pc, #44]	; (8001644 <System_Information+0x34>)
 8001618:	f001 fcfe 	bl	8003018 <iprintf>
    printf("HCLK_Frequency = %d\n",rcc_clocks.HCLK_Frequency );
 800161c:	6861      	ldr	r1, [r4, #4]
 800161e:	480a      	ldr	r0, [pc, #40]	; (8001648 <System_Information+0x38>)
 8001620:	f001 fcfa 	bl	8003018 <iprintf>
    printf("PCLK1_Frequency = %d\n",rcc_clocks.PCLK1_Frequency );
 8001624:	68a1      	ldr	r1, [r4, #8]
 8001626:	4809      	ldr	r0, [pc, #36]	; (800164c <System_Information+0x3c>)
 8001628:	f001 fcf6 	bl	8003018 <iprintf>
    printf("PCLK2_Frequency = %d\n",rcc_clocks.PCLK2_Frequency );
 800162c:	68e1      	ldr	r1, [r4, #12]
 800162e:	4808      	ldr	r0, [pc, #32]	; (8001650 <System_Information+0x40>)
 8001630:	f001 fcf2 	bl	8003018 <iprintf>
    printf("ADCCLK_Frequency = %d\n",rcc_clocks.ADCCLK_Frequency );
 8001634:	6921      	ldr	r1, [r4, #16]
 8001636:	4807      	ldr	r0, [pc, #28]	; (8001654 <System_Information+0x44>)
 8001638:	f001 fcee 	bl	8003018 <iprintf>
}
 800163c:	bd10      	pop	{r4, pc}
 800163e:	bf00      	nop
 8001640:	20000218 	.word	0x20000218
 8001644:	080069f0 	.word	0x080069f0
 8001648:	08006a08 	.word	0x08006a08
 800164c:	08006a20 	.word	0x08006a20
 8001650:	08006a38 	.word	0x08006a38
 8001654:	08006a50 	.word	0x08006a50

08001658 <main>:

int main(int argc, char **argv)
{
 8001658:	b508      	push	{r3, lr}
    RCC_Configuration();
 800165a:	f000 f88d 	bl	8001778 <RCC_Configuration>
    RCC_GetClocksFreq(&rcc_clocks);
 800165e:	4c0f      	ldr	r4, [pc, #60]	; (800169c <main+0x44>)
 8001660:	4620      	mov	r0, r4
 8001662:	f7ff fc47 	bl	8000ef4 <RCC_GetClocksFreq>
    USART1_Init();
 8001666:	f000 f867 	bl	8001738 <USART1_Init>
    debug();
 800166a:	f000 f8b3 	bl	80017d4 <debug>
    ESP_Init();
 800166e:	f000 fdd2 	bl	8002216 <ESP_Init>
    if(SysTick_Config(rcc_clocks.SYSCLK_Frequency / 1000))
 8001672:	6823      	ldr	r3, [r4, #0]
 8001674:	4a0a      	ldr	r2, [pc, #40]	; (80016a0 <main+0x48>)
 8001676:	fba2 2303 	umull	r2, r3, r2, r3
 */
static __INLINE uint32_t SysTick_Config(uint32_t ticks)
{ 
  if (ticks > SYSTICK_MAXCOUNT)  return (1);                                             /* Reload value impossible */

  SysTick->LOAD  =  (ticks & SYSTICK_MAXCOUNT) - 1;                                      /* set reload register */
 800167a:	099b      	lsrs	r3, r3, #6
 800167c:	3b01      	subs	r3, #1
 800167e:	4a09      	ldr	r2, [pc, #36]	; (80016a4 <main+0x4c>)
 8001680:	6053      	str	r3, [r2, #4]
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
 8001682:	4b09      	ldr	r3, [pc, #36]	; (80016a8 <main+0x50>)
 8001684:	21f0      	movs	r1, #240	; 0xf0
 8001686:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);                            /* set Priority for Cortex-M0 System Interrupts */
  SysTick->VAL   =  (0x00);                                                              /* Load the SysTick Counter Value */
 800168a:	2300      	movs	r3, #0
 800168c:	6093      	str	r3, [r2, #8]
  SysTick->CTRL = (1 << SYSTICK_CLKSOURCE) | (1<<SYSTICK_ENABLE) | (1<<SYSTICK_TICKINT); /* Enable SysTick IRQ and SysTick Timer */
 800168e:	2307      	movs	r3, #7
 8001690:	6013      	str	r3, [r2, #0]
    {
        while(1);
    }
    System_Information();
 8001692:	f7ff ffbd 	bl	8001610 <System_Information>

    while(1)
    {
        menu();
 8001696:	f000 fac7 	bl	8001c28 <menu>
 800169a:	e7fc      	b.n	8001696 <main+0x3e>
 800169c:	20000218 	.word	0x20000218
 80016a0:	10624dd3 	.word	0x10624dd3
 80016a4:	e000e010 	.word	0xe000e010
 80016a8:	e000ed00 	.word	0xe000ed00

080016ac <assert_failed>:
*                  - line: assert_param error line source number
* Output         : None
* Return         : None
*******************************************************************************/
void assert_failed(uint8_t* file, uint32_t line)
{ 
 80016ac:	b508      	push	{r3, lr}
  /* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    printf("Wrong parameters value: file %s on line %d\r\n", file, line);
 80016ae:	460a      	mov	r2, r1
 80016b0:	4601      	mov	r1, r0
 80016b2:	4802      	ldr	r0, [pc, #8]	; (80016bc <assert_failed+0x10>)
 80016b4:	f001 fcb0 	bl	8003018 <iprintf>
 80016b8:	e7fe      	b.n	80016b8 <assert_failed+0xc>
 80016ba:	bf00      	nop
 80016bc:	08006a68 	.word	0x08006a68

080016c0 <Delay>:
  * @brief  Inserts a delay time.
  * @param  nTime: specifies the delay time length, in milliseconds.
  * @retval None
  */
CONFIG_DEF void Delay(__IO uint32_t nTime)
{ 
 80016c0:	b082      	sub	sp, #8
 80016c2:	9001      	str	r0, [sp, #4]
  TimingDelay = nTime;
 80016c4:	9a01      	ldr	r2, [sp, #4]
 80016c6:	4b04      	ldr	r3, [pc, #16]	; (80016d8 <Delay+0x18>)
 80016c8:	601a      	str	r2, [r3, #0]

  while(TimingDelay != 0);
 80016ca:	4b03      	ldr	r3, [pc, #12]	; (80016d8 <Delay+0x18>)
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	2b00      	cmp	r3, #0
 80016d0:	d1fb      	bne.n	80016ca <Delay+0xa>
}
 80016d2:	b002      	add	sp, #8
 80016d4:	4770      	bx	lr
 80016d6:	bf00      	nop
 80016d8:	20000200 	.word	0x20000200

080016dc <TimingDelay_Decrement>:
  * @param  None
  * @retval None
  */
CONFIG_DEF void TimingDelay_Decrement(void)
{
  if (TimingDelay != 0x00)
 80016dc:	4b03      	ldr	r3, [pc, #12]	; (80016ec <TimingDelay_Decrement+0x10>)
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	b11b      	cbz	r3, 80016ea <TimingDelay_Decrement+0xe>
  { 
    TimingDelay--;
 80016e2:	4a02      	ldr	r2, [pc, #8]	; (80016ec <TimingDelay_Decrement+0x10>)
 80016e4:	6813      	ldr	r3, [r2, #0]
 80016e6:	3b01      	subs	r3, #1
 80016e8:	6013      	str	r3, [r2, #0]
  }
}
 80016ea:	4770      	bx	lr
 80016ec:	20000200 	.word	0x20000200

080016f0 <USART1_GPIOConfiguration>:
{
    Delay(100);
}

CONFIG_DEF void USART1_GPIOConfiguration(void)
{
 80016f0:	b530      	push	{r4, r5, lr}
 80016f2:	b083      	sub	sp, #12
    /* Configure USARTx_Tx as alternate function push-pull */
    GPIO_InitTypeDef GPIO_InitStructure;
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Tx_Pin;
 80016f4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80016f8:	f8ad 3004 	strh.w	r3, [sp, #4]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80016fc:	2503      	movs	r5, #3
 80016fe:	f88d 5006 	strb.w	r5, [sp, #6]
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 8001702:	2318      	movs	r3, #24
 8001704:	f88d 3007 	strb.w	r3, [sp, #7]
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);
 8001708:	4c0a      	ldr	r4, [pc, #40]	; (8001734 <USART1_GPIOConfiguration+0x44>)
 800170a:	a901      	add	r1, sp, #4
 800170c:	4620      	mov	r0, r4
 800170e:	f7ff fb57 	bl	8000dc0 <GPIO_Init>

    /* Configure USARTx_Rx as input floating */
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Rx_Pin;
 8001712:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001716:	f8ad 3004 	strh.w	r3, [sp, #4]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800171a:	f88d 5006 	strb.w	r5, [sp, #6]
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 800171e:	2304      	movs	r3, #4
 8001720:	f88d 3007 	strb.w	r3, [sp, #7]
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);
 8001724:	eb0d 0103 	add.w	r1, sp, r3
 8001728:	4620      	mov	r0, r4
 800172a:	f7ff fb49 	bl	8000dc0 <GPIO_Init>

}
 800172e:	b003      	add	sp, #12
 8001730:	bd30      	pop	{r4, r5, pc}
 8001732:	bf00      	nop
 8001734:	40010800 	.word	0x40010800

08001738 <USART1_Init>:

CONFIG_DEF void USART1_Init(void)
{
 8001738:	b510      	push	{r4, lr}
 800173a:	b084      	sub	sp, #16
    USART1_GPIOConfiguration();
 800173c:	f7ff ffd8 	bl	80016f0 <USART1_GPIOConfiguration>
     - One Stop Bit
     - No parity
     - Hardware flow control disabled (RTS and CTS signals)
     - Receive and transmit enabled
     */
    USART_InitStructure.USART_BaudRate = 115200;
 8001740:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8001744:	9300      	str	r3, [sp, #0]
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 8001746:	2300      	movs	r3, #0
 8001748:	f8ad 3004 	strh.w	r3, [sp, #4]
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
 800174c:	f8ad 3006 	strh.w	r3, [sp, #6]
    USART_InitStructure.USART_Parity = USART_Parity_No;
 8001750:	f8ad 3008 	strh.w	r3, [sp, #8]
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8001754:	f8ad 300c 	strh.w	r3, [sp, #12]
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 8001758:	230c      	movs	r3, #12
 800175a:	f8ad 300a 	strh.w	r3, [sp, #10]

    USART_Init(USART1, &USART_InitStructure);
 800175e:	4c05      	ldr	r4, [pc, #20]	; (8001774 <USART1_Init+0x3c>)
 8001760:	4669      	mov	r1, sp
 8001762:	4620      	mov	r0, r4
 8001764:	f7ff fc74 	bl	8001050 <USART_Init>
    USART_Cmd(USART1, ENABLE);
 8001768:	2101      	movs	r1, #1
 800176a:	4620      	mov	r0, r4
 800176c:	f7ff fd2e 	bl	80011cc <USART_Cmd>
}
 8001770:	b004      	add	sp, #16
 8001772:	bd10      	pop	{r4, pc}
 8001774:	40013800 	.word	0x40013800

08001778 <RCC_Configuration>:

CONFIG_DEF void RCC_Configuration(void)
{
 8001778:	b508      	push	{r3, lr}
    
    SystemInit();
 800177a:	f7ff fa81 	bl	8000c80 <SystemInit>

    /* Enable GPIOA clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
 800177e:	2101      	movs	r1, #1
 8001780:	2004      	movs	r0, #4
 8001782:	f7ff fc19 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable GPIOB clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 8001786:	2101      	movs	r1, #1
 8001788:	2008      	movs	r0, #8
 800178a:	f7ff fc15 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable GPIOC clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
 800178e:	2101      	movs	r1, #1
 8001790:	2010      	movs	r0, #16
 8001792:	f7ff fc11 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable GPIOD clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
 8001796:	2101      	movs	r1, #1
 8001798:	2020      	movs	r0, #32
 800179a:	f7ff fc0d 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable USART1 clocks */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
 800179e:	2101      	movs	r1, #1
 80017a0:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80017a4:	f7ff fc08 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable AFIO clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
 80017a8:	2101      	movs	r1, #1
 80017aa:	4608      	mov	r0, r1
 80017ac:	f7ff fc04 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

}
 80017b0:	bd08      	pop	{r3, pc}

080017b2 <USART_GetCharacter>:
    if( data == '\r' )  return (int)('\n');
    else                return(data);
}

CONFIG_DEF uint8_t USART_GetCharacter(USART_TypeDef *  usart_p)
{
 80017b2:	b510      	push	{r4, lr}
 80017b4:	4604      	mov	r4, r0
    uint8_t data;

    /* Loop until the end of transmission */
    while(USART_GetFlagStatus(usart_p, USART_FLAG_RXNE) == RESET);
 80017b6:	2120      	movs	r1, #32
 80017b8:	4620      	mov	r0, r4
 80017ba:	f7ff fe03 	bl	80013c4 <USART_GetFlagStatus>
 80017be:	2800      	cmp	r0, #0
 80017c0:	d0f9      	beq.n	80017b6 <USART_GetCharacter+0x4>

    /* Write a character to the USART */
    data = USART_ReceiveData(usart_p);
 80017c2:	4620      	mov	r0, r4
 80017c4:	f7ff fddc 	bl	8001380 <USART_ReceiveData>
 80017c8:	b2c0      	uxtb	r0, r0

    if( data == '\r' )  return (int)('\r\n');
 80017ca:	280d      	cmp	r0, #13
 80017cc:	d000      	beq.n	80017d0 <USART_GetCharacter+0x1e>
    else                return(data);
}
 80017ce:	bd10      	pop	{r4, pc}
    if( data == '\r' )  return (int)('\r\n');
 80017d0:	200a      	movs	r0, #10
 80017d2:	e7fc      	b.n	80017ce <USART_GetCharacter+0x1c>

080017d4 <debug>:
  * @retval None
  */
void debug(void)
{
/************************************* ADC ************************************/
  ADC1_DBG = (ADC_TypeDef *)  ADC1_BASE;
 80017d4:	4b77      	ldr	r3, [pc, #476]	; (80019b4 <debug+0x1e0>)
 80017d6:	4a78      	ldr	r2, [pc, #480]	; (80019b8 <debug+0x1e4>)
 80017d8:	601a      	str	r2, [r3, #0]

  ADC2_DBG = (ADC_TypeDef *)  ADC2_BASE;
 80017da:	4b78      	ldr	r3, [pc, #480]	; (80019bc <debug+0x1e8>)
 80017dc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80017e0:	601a      	str	r2, [r3, #0]

  ADC3_DBG = (ADC_TypeDef *)  ADC3_BASE;
 80017e2:	4b77      	ldr	r3, [pc, #476]	; (80019c0 <debug+0x1ec>)
 80017e4:	f502 52a0 	add.w	r2, r2, #5120	; 0x1400
 80017e8:	601a      	str	r2, [r3, #0]

/************************************* BKP ************************************/
  BKP_DBG = (BKP_TypeDef *)  BKP_BASE;
 80017ea:	4b76      	ldr	r3, [pc, #472]	; (80019c4 <debug+0x1f0>)
 80017ec:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 80017f0:	601a      	str	r2, [r3, #0]

/************************************* CAN ************************************/			
  CAN1_DBG = (CAN_TypeDef *)  CAN1_BASE;			
 80017f2:	4b75      	ldr	r3, [pc, #468]	; (80019c8 <debug+0x1f4>)
 80017f4:	f5a2 6200 	sub.w	r2, r2, #2048	; 0x800
 80017f8:	601a      	str	r2, [r3, #0]

/************************************* CRC ************************************/
  CRC_DBG = (CRC_TypeDef *)  CRC_BASE;
 80017fa:	4b74      	ldr	r3, [pc, #464]	; (80019cc <debug+0x1f8>)
 80017fc:	f502 32e6 	add.w	r2, r2, #117760	; 0x1cc00
 8001800:	601a      	str	r2, [r3, #0]

/************************************* DAC ************************************/
  DAC_DBG = (DAC_TypeDef *)  DAC_BASE;
 8001802:	4b73      	ldr	r3, [pc, #460]	; (80019d0 <debug+0x1fc>)
 8001804:	f5a2 32de 	sub.w	r2, r2, #113664	; 0x1bc00
 8001808:	601a      	str	r2, [r3, #0]

/************************************* DBGMCU**********************************/
  DBGMCU_DBG = (DBGMCU_TypeDef *)  DBGMCU_BASE;
 800180a:	4b72      	ldr	r3, [pc, #456]	; (80019d4 <debug+0x200>)
 800180c:	4a72      	ldr	r2, [pc, #456]	; (80019d8 <debug+0x204>)
 800180e:	601a      	str	r2, [r3, #0]


/************************************* DMA ************************************/
  DMA1_DBG = (DMA_TypeDef *)  DMA1_BASE;
 8001810:	4b72      	ldr	r3, [pc, #456]	; (80019dc <debug+0x208>)
 8001812:	4a73      	ldr	r2, [pc, #460]	; (80019e0 <debug+0x20c>)
 8001814:	601a      	str	r2, [r3, #0]
  DMA2_DBG = (DMA_TypeDef *)  DMA2_BASE;
 8001816:	4b73      	ldr	r3, [pc, #460]	; (80019e4 <debug+0x210>)
 8001818:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800181c:	601a      	str	r2, [r3, #0]

  DMA1_Channel1_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel1_BASE;
 800181e:	4b72      	ldr	r3, [pc, #456]	; (80019e8 <debug+0x214>)
 8001820:	f5a2 727e 	sub.w	r2, r2, #1016	; 0x3f8
 8001824:	601a      	str	r2, [r3, #0]

  DMA1_Channel2_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel2_BASE;
 8001826:	4b71      	ldr	r3, [pc, #452]	; (80019ec <debug+0x218>)
 8001828:	3214      	adds	r2, #20
 800182a:	601a      	str	r2, [r3, #0]

  DMA1_Channel3_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel3_BASE;
 800182c:	4b70      	ldr	r3, [pc, #448]	; (80019f0 <debug+0x21c>)
 800182e:	3214      	adds	r2, #20
 8001830:	601a      	str	r2, [r3, #0]

  DMA1_Channel4_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel4_BASE;
 8001832:	4b70      	ldr	r3, [pc, #448]	; (80019f4 <debug+0x220>)
 8001834:	3214      	adds	r2, #20
 8001836:	601a      	str	r2, [r3, #0]

  DMA1_Channel5_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel5_BASE;
 8001838:	4b6f      	ldr	r3, [pc, #444]	; (80019f8 <debug+0x224>)
 800183a:	3214      	adds	r2, #20
 800183c:	601a      	str	r2, [r3, #0]

  DMA1_Channel6_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel6_BASE;
 800183e:	4b6f      	ldr	r3, [pc, #444]	; (80019fc <debug+0x228>)
 8001840:	3214      	adds	r2, #20
 8001842:	601a      	str	r2, [r3, #0]

  DMA1_Channel7_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel7_BASE;
 8001844:	4b6e      	ldr	r3, [pc, #440]	; (8001a00 <debug+0x22c>)
 8001846:	3214      	adds	r2, #20
 8001848:	601a      	str	r2, [r3, #0]

  DMA2_Channel1_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel1_BASE;
 800184a:	4b6e      	ldr	r3, [pc, #440]	; (8001a04 <debug+0x230>)
 800184c:	f502 7262 	add.w	r2, r2, #904	; 0x388
 8001850:	601a      	str	r2, [r3, #0]

  DMA2_Channel2_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel2_BASE;
 8001852:	4b6d      	ldr	r3, [pc, #436]	; (8001a08 <debug+0x234>)
 8001854:	3214      	adds	r2, #20
 8001856:	601a      	str	r2, [r3, #0]

  DMA2_Channel3_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel3_BASE;
 8001858:	4b6c      	ldr	r3, [pc, #432]	; (8001a0c <debug+0x238>)
 800185a:	3214      	adds	r2, #20
 800185c:	601a      	str	r2, [r3, #0]

  DMA2_Channel4_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel4_BASE;
 800185e:	4b6c      	ldr	r3, [pc, #432]	; (8001a10 <debug+0x23c>)
 8001860:	3214      	adds	r2, #20
 8001862:	601a      	str	r2, [r3, #0]

  DMA2_Channel5_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel5_BASE;
 8001864:	4b6b      	ldr	r3, [pc, #428]	; (8001a14 <debug+0x240>)
 8001866:	3214      	adds	r2, #20
 8001868:	601a      	str	r2, [r3, #0]

/************************************* EXTI ***********************************/
  EXTI_DBG = (EXTI_TypeDef *)  EXTI_BASE;
 800186a:	4b6b      	ldr	r3, [pc, #428]	; (8001a18 <debug+0x244>)
 800186c:	f5a2 3280 	sub.w	r2, r2, #65536	; 0x10000
 8001870:	3a58      	subs	r2, #88	; 0x58
 8001872:	601a      	str	r2, [r3, #0]

/************************************* FLASH and Option Bytes *****************/
  FLASH_DBG = (FLASH_TypeDef *)  FLASH_R_BASE;
 8001874:	4b69      	ldr	r3, [pc, #420]	; (8001a1c <debug+0x248>)
 8001876:	f502 328e 	add.w	r2, r2, #72704	; 0x11c00
 800187a:	601a      	str	r2, [r3, #0]
  OB_DBG = (OB_TypeDef *)        OB_BASE;
 800187c:	4b68      	ldr	r3, [pc, #416]	; (8001a20 <debug+0x24c>)
 800187e:	4a69      	ldr	r2, [pc, #420]	; (8001a24 <debug+0x250>)
 8001880:	601a      	str	r2, [r3, #0]

/************************************* FSMC ***********************************/
  FSMC_Bank1_DBG = (FSMC_Bank1_TypeDef *)    FSMC_Bank1_R_BASE;
 8001882:	4b69      	ldr	r3, [pc, #420]	; (8001a28 <debug+0x254>)
 8001884:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 8001888:	601a      	str	r2, [r3, #0]
  FSMC_Bank1E_DBG = (FSMC_Bank1E_TypeDef *)  FSMC_Bank1E_R_BASE;  
 800188a:	4b68      	ldr	r3, [pc, #416]	; (8001a2c <debug+0x258>)
 800188c:	f502 7282 	add.w	r2, r2, #260	; 0x104
 8001890:	601a      	str	r2, [r3, #0]
  FSMC_Bank2_DBG = (FSMC_Bank2_TypeDef *)    FSMC_Bank2_R_BASE; 
 8001892:	4b67      	ldr	r3, [pc, #412]	; (8001a30 <debug+0x25c>)
 8001894:	3aa4      	subs	r2, #164	; 0xa4
 8001896:	601a      	str	r2, [r3, #0]
  FSMC_Bank3_DBG = (FSMC_Bank3_TypeDef *)    FSMC_Bank3_R_BASE;
 8001898:	4b66      	ldr	r3, [pc, #408]	; (8001a34 <debug+0x260>)
 800189a:	3220      	adds	r2, #32
 800189c:	601a      	str	r2, [r3, #0]
  FSMC_Bank4_DBG = (FSMC_Bank4_TypeDef *)    FSMC_Bank4_R_BASE;
 800189e:	4b66      	ldr	r3, [pc, #408]	; (8001a38 <debug+0x264>)
 80018a0:	3220      	adds	r2, #32
 80018a2:	601a      	str	r2, [r3, #0]

/************************************* GPIO ***********************************/
  GPIOA_DBG = (GPIO_TypeDef *)  GPIOA_BASE;
 80018a4:	4b65      	ldr	r3, [pc, #404]	; (8001a3c <debug+0x268>)
 80018a6:	4a66      	ldr	r2, [pc, #408]	; (8001a40 <debug+0x26c>)
 80018a8:	601a      	str	r2, [r3, #0]

  GPIOB_DBG = (GPIO_TypeDef *)  GPIOB_BASE;
 80018aa:	4b66      	ldr	r3, [pc, #408]	; (8001a44 <debug+0x270>)
 80018ac:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018b0:	601a      	str	r2, [r3, #0]

  GPIOC_DBG = (GPIO_TypeDef *)  GPIOC_BASE;
 80018b2:	4b65      	ldr	r3, [pc, #404]	; (8001a48 <debug+0x274>)
 80018b4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018b8:	601a      	str	r2, [r3, #0]

  GPIOD_DBG = (GPIO_TypeDef *)  GPIOD_BASE;
 80018ba:	4b64      	ldr	r3, [pc, #400]	; (8001a4c <debug+0x278>)
 80018bc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018c0:	601a      	str	r2, [r3, #0]

  GPIOE_DBG = (GPIO_TypeDef *)  GPIOE_BASE;
 80018c2:	4b63      	ldr	r3, [pc, #396]	; (8001a50 <debug+0x27c>)
 80018c4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018c8:	601a      	str	r2, [r3, #0]

  GPIOF_DBG = (GPIO_TypeDef *)  GPIOF_BASE;
 80018ca:	4b62      	ldr	r3, [pc, #392]	; (8001a54 <debug+0x280>)
 80018cc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018d0:	601a      	str	r2, [r3, #0]

  GPIOG_DBG = (GPIO_TypeDef *)  GPIOG_BASE;
 80018d2:	4b61      	ldr	r3, [pc, #388]	; (8001a58 <debug+0x284>)
 80018d4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018d8:	601a      	str	r2, [r3, #0]
  
  AFIO_DBG = (AFIO_TypeDef *)  AFIO_BASE;
 80018da:	4b60      	ldr	r3, [pc, #384]	; (8001a5c <debug+0x288>)
 80018dc:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
 80018e0:	601a      	str	r2, [r3, #0]

/************************************* I2C ************************************/
  I2C1_DBG = (I2C_TypeDef *)  I2C1_BASE;
 80018e2:	4b5f      	ldr	r3, [pc, #380]	; (8001a60 <debug+0x28c>)
 80018e4:	f5a2 422c 	sub.w	r2, r2, #44032	; 0xac00
 80018e8:	601a      	str	r2, [r3, #0]

  I2C2_DBG = (I2C_TypeDef *)  I2C2_BASE;
 80018ea:	4b5e      	ldr	r3, [pc, #376]	; (8001a64 <debug+0x290>)
 80018ec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018f0:	601a      	str	r2, [r3, #0]

/************************************* IWDG ***********************************/
  IWDG_DBG = (IWDG_TypeDef *) IWDG_BASE;
 80018f2:	4b5d      	ldr	r3, [pc, #372]	; (8001a68 <debug+0x294>)
 80018f4:	f5a2 5220 	sub.w	r2, r2, #10240	; 0x2800
 80018f8:	601a      	str	r2, [r3, #0]

/************************************* NVIC ***********************************/
  NVIC_DBG = (NVIC_Type *)  NVIC_BASE;
 80018fa:	4b5c      	ldr	r3, [pc, #368]	; (8001a6c <debug+0x298>)
 80018fc:	4a5c      	ldr	r2, [pc, #368]	; (8001a70 <debug+0x29c>)
 80018fe:	601a      	str	r2, [r3, #0]
  SCB_DBG = (SCB_Type *)  SCB_BASE;
 8001900:	4b5c      	ldr	r3, [pc, #368]	; (8001a74 <debug+0x2a0>)
 8001902:	f502 6240 	add.w	r2, r2, #3072	; 0xc00
 8001906:	601a      	str	r2, [r3, #0]

/************************************* PWR ************************************/
  PWR_DBG = (PWR_TypeDef *)  PWR_BASE;
 8001908:	4b5b      	ldr	r3, [pc, #364]	; (8001a78 <debug+0x2a4>)
 800190a:	4a5c      	ldr	r2, [pc, #368]	; (8001a7c <debug+0x2a8>)
 800190c:	601a      	str	r2, [r3, #0]

/************************************* RCC ************************************/
  RCC_DBG = (RCC_TypeDef *)  RCC_BASE;
 800190e:	4b5c      	ldr	r3, [pc, #368]	; (8001a80 <debug+0x2ac>)
 8001910:	f502 32d0 	add.w	r2, r2, #106496	; 0x1a000
 8001914:	601a      	str	r2, [r3, #0]

/************************************* RTC ************************************/
  RTC_DBG = (RTC_TypeDef *)  RTC_BASE;
 8001916:	4b5b      	ldr	r3, [pc, #364]	; (8001a84 <debug+0x2b0>)
 8001918:	f5a2 32f4 	sub.w	r2, r2, #124928	; 0x1e800
 800191c:	601a      	str	r2, [r3, #0]

/************************************* SDIO ***********************************/
  SDIO_DBG = (SDIO_TypeDef *)  SDIO_BASE;
 800191e:	4b5a      	ldr	r3, [pc, #360]	; (8001a88 <debug+0x2b4>)
 8001920:	f502 32ac 	add.w	r2, r2, #88064	; 0x15800
 8001924:	601a      	str	r2, [r3, #0]

/************************************* SPI ************************************/
  SPI1_DBG = (SPI_TypeDef *)  SPI1_BASE;
 8001926:	4b59      	ldr	r3, [pc, #356]	; (8001a8c <debug+0x2b8>)
 8001928:	f5a2 42a0 	sub.w	r2, r2, #20480	; 0x5000
 800192c:	601a      	str	r2, [r3, #0]

  SPI2_DBG = (SPI_TypeDef *)  SPI2_BASE;
 800192e:	4b58      	ldr	r3, [pc, #352]	; (8001a90 <debug+0x2bc>)
 8001930:	f5a2 4278 	sub.w	r2, r2, #63488	; 0xf800
 8001934:	601a      	str	r2, [r3, #0]

  SPI3_DBG = (SPI_TypeDef *)  SPI3_BASE;
 8001936:	4b57      	ldr	r3, [pc, #348]	; (8001a94 <debug+0x2c0>)
 8001938:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800193c:	601a      	str	r2, [r3, #0]

/************************************* SysTick ********************************/
  SysTick_DBG = (SysTick_Type *)  SysTick_BASE;
 800193e:	4b56      	ldr	r3, [pc, #344]	; (8001a98 <debug+0x2c4>)
 8001940:	4a56      	ldr	r2, [pc, #344]	; (8001a9c <debug+0x2c8>)
 8001942:	601a      	str	r2, [r3, #0]

/************************************* TIM ************************************/
  TIM1_DBG = (TIM_TypeDef *)  TIM1_BASE;
 8001944:	4b56      	ldr	r3, [pc, #344]	; (8001aa0 <debug+0x2cc>)
 8001946:	4a57      	ldr	r2, [pc, #348]	; (8001aa4 <debug+0x2d0>)
 8001948:	601a      	str	r2, [r3, #0]

  TIM2_DBG = (TIM_TypeDef *)  TIM2_BASE;
 800194a:	4b57      	ldr	r3, [pc, #348]	; (8001aa8 <debug+0x2d4>)
 800194c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001950:	601a      	str	r2, [r3, #0]

  TIM3_DBG = (TIM_TypeDef *)  TIM3_BASE;
 8001952:	4b56      	ldr	r3, [pc, #344]	; (8001aac <debug+0x2d8>)
 8001954:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001958:	601a      	str	r2, [r3, #0]

  TIM4_DBG = (TIM_TypeDef *)  TIM4_BASE;
 800195a:	4b55      	ldr	r3, [pc, #340]	; (8001ab0 <debug+0x2dc>)
 800195c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001960:	601a      	str	r2, [r3, #0]

  TIM5_DBG = (TIM_TypeDef *)  TIM5_BASE;
 8001962:	4b54      	ldr	r3, [pc, #336]	; (8001ab4 <debug+0x2e0>)
 8001964:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001968:	601a      	str	r2, [r3, #0]

  TIM6_DBG = (TIM_TypeDef *)  TIM6_BASE;
 800196a:	4b53      	ldr	r3, [pc, #332]	; (8001ab8 <debug+0x2e4>)
 800196c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001970:	601a      	str	r2, [r3, #0]

  TIM7_DBG = (TIM_TypeDef *)  TIM7_BASE;
 8001972:	4b52      	ldr	r3, [pc, #328]	; (8001abc <debug+0x2e8>)
 8001974:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001978:	601a      	str	r2, [r3, #0]

  TIM8_DBG = (TIM_TypeDef *)  TIM8_BASE;
 800197a:	4b51      	ldr	r3, [pc, #324]	; (8001ac0 <debug+0x2ec>)
 800197c:	f502 3290 	add.w	r2, r2, #73728	; 0x12000
 8001980:	601a      	str	r2, [r3, #0]

/************************************* USART **********************************/
  USART1_DBG = (USART_TypeDef *) USART1_BASE;
 8001982:	4b50      	ldr	r3, [pc, #320]	; (8001ac4 <debug+0x2f0>)
 8001984:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001988:	601a      	str	r2, [r3, #0]

  USART2_DBG = (USART_TypeDef *) USART2_BASE;
 800198a:	4b4f      	ldr	r3, [pc, #316]	; (8001ac8 <debug+0x2f4>)
 800198c:	f5a2 4274 	sub.w	r2, r2, #62464	; 0xf400
 8001990:	601a      	str	r2, [r3, #0]

  USART3_DBG = (USART_TypeDef *) USART3_BASE;
 8001992:	4b4e      	ldr	r3, [pc, #312]	; (8001acc <debug+0x2f8>)
 8001994:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001998:	601a      	str	r2, [r3, #0]

  UART4_DBG = (USART_TypeDef *) UART4_BASE;
 800199a:	4b4d      	ldr	r3, [pc, #308]	; (8001ad0 <debug+0x2fc>)
 800199c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80019a0:	601a      	str	r2, [r3, #0]

  UART5_DBG = (USART_TypeDef *) UART5_BASE;
 80019a2:	4b4c      	ldr	r3, [pc, #304]	; (8001ad4 <debug+0x300>)
 80019a4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80019a8:	601a      	str	r2, [r3, #0]

/************************************* WWDG ***********************************/
  WWDG_DBG = (WWDG_TypeDef *)  WWDG_BASE;
 80019aa:	4b4b      	ldr	r3, [pc, #300]	; (8001ad8 <debug+0x304>)
 80019ac:	f5a2 5210 	sub.w	r2, r2, #9216	; 0x2400
 80019b0:	601a      	str	r2, [r3, #0]
}
 80019b2:	4770      	bx	lr
 80019b4:	200002dc 	.word	0x200002dc
 80019b8:	40012400 	.word	0x40012400
 80019bc:	20000288 	.word	0x20000288
 80019c0:	20000270 	.word	0x20000270
 80019c4:	2000032c 	.word	0x2000032c
 80019c8:	200002c8 	.word	0x200002c8
 80019cc:	2000029c 	.word	0x2000029c
 80019d0:	200002fc 	.word	0x200002fc
 80019d4:	200002cc 	.word	0x200002cc
 80019d8:	e0042000 	.word	0xe0042000
 80019dc:	2000030c 	.word	0x2000030c
 80019e0:	40020000 	.word	0x40020000
 80019e4:	20000268 	.word	0x20000268
 80019e8:	200002b0 	.word	0x200002b0
 80019ec:	20000328 	.word	0x20000328
 80019f0:	20000284 	.word	0x20000284
 80019f4:	200002ac 	.word	0x200002ac
 80019f8:	200002e8 	.word	0x200002e8
 80019fc:	20000264 	.word	0x20000264
 8001a00:	20000280 	.word	0x20000280
 8001a04:	20000258 	.word	0x20000258
 8001a08:	200002a4 	.word	0x200002a4
 8001a0c:	200002f0 	.word	0x200002f0
 8001a10:	20000324 	.word	0x20000324
 8001a14:	20000314 	.word	0x20000314
 8001a18:	2000022c 	.word	0x2000022c
 8001a1c:	2000025c 	.word	0x2000025c
 8001a20:	200002e0 	.word	0x200002e0
 8001a24:	1ffff800 	.word	0x1ffff800
 8001a28:	20000254 	.word	0x20000254
 8001a2c:	200002a0 	.word	0x200002a0
 8001a30:	200002f8 	.word	0x200002f8
 8001a34:	2000031c 	.word	0x2000031c
 8001a38:	2000023c 	.word	0x2000023c
 8001a3c:	200002d4 	.word	0x200002d4
 8001a40:	40010800 	.word	0x40010800
 8001a44:	20000234 	.word	0x20000234
 8001a48:	200002b8 	.word	0x200002b8
 8001a4c:	200002b4 	.word	0x200002b4
 8001a50:	200002e4 	.word	0x200002e4
 8001a54:	2000026c 	.word	0x2000026c
 8001a58:	2000028c 	.word	0x2000028c
 8001a5c:	200002d0 	.word	0x200002d0
 8001a60:	20000248 	.word	0x20000248
 8001a64:	20000260 	.word	0x20000260
 8001a68:	20000310 	.word	0x20000310
 8001a6c:	200002f4 	.word	0x200002f4
 8001a70:	e000e100 	.word	0xe000e100
 8001a74:	20000230 	.word	0x20000230
 8001a78:	20000298 	.word	0x20000298
 8001a7c:	40007000 	.word	0x40007000
 8001a80:	20000318 	.word	0x20000318
 8001a84:	200002a8 	.word	0x200002a8
 8001a88:	20000294 	.word	0x20000294
 8001a8c:	200002ec 	.word	0x200002ec
 8001a90:	20000240 	.word	0x20000240
 8001a94:	200002c0 	.word	0x200002c0
 8001a98:	20000320 	.word	0x20000320
 8001a9c:	e000e010 	.word	0xe000e010
 8001aa0:	200002c4 	.word	0x200002c4
 8001aa4:	40012c00 	.word	0x40012c00
 8001aa8:	20000304 	.word	0x20000304
 8001aac:	2000024c 	.word	0x2000024c
 8001ab0:	2000027c 	.word	0x2000027c
 8001ab4:	200002d8 	.word	0x200002d8
 8001ab8:	200002bc 	.word	0x200002bc
 8001abc:	20000300 	.word	0x20000300
 8001ac0:	20000278 	.word	0x20000278
 8001ac4:	20000308 	.word	0x20000308
 8001ac8:	20000238 	.word	0x20000238
 8001acc:	20000274 	.word	0x20000274
 8001ad0:	20000250 	.word	0x20000250
 8001ad4:	20000290 	.word	0x20000290
 8001ad8:	20000244 	.word	0x20000244

08001adc <NMI_Handler>:
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
}
 8001adc:	4770      	bx	lr

08001ade <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 8001ade:	e7fe      	b.n	8001ade <HardFault_Handler>

08001ae0 <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8001ae0:	e7fe      	b.n	8001ae0 <MemManage_Handler>

08001ae2 <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 8001ae2:	e7fe      	b.n	8001ae2 <BusFault_Handler>

08001ae4 <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8001ae4:	e7fe      	b.n	8001ae4 <UsageFault_Handler>

08001ae6 <SVC_Handler>:


#else
void SVC_Handler(void)
{
}
 8001ae6:	4770      	bx	lr

08001ae8 <DebugMon_Handler>:
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
}
 8001ae8:	4770      	bx	lr

08001aea <PendSV_Handler>:
#ifdef FREE_RTOS

#else
void PendSV_Handler(void)
{
}
 8001aea:	4770      	bx	lr

08001aec <SysTick_Handler>:
  */
#ifdef FREE_RTOS
    
#else
void SysTick_Handler(void)
{   
 8001aec:	b508      	push	{r3, lr}
    TimingDelay_Decrement();
 8001aee:	f7ff fdf5 	bl	80016dc <TimingDelay_Decrement>
}
 8001af2:	bd08      	pop	{r3, pc}

08001af4 <WWDG_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void WWDG_IRQHandler(void)
{
}
 8001af4:	4770      	bx	lr

08001af6 <PVD_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void PVD_IRQHandler(void)
{
}
 8001af6:	4770      	bx	lr

08001af8 <TAMPER_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TAMPER_IRQHandler(void)
{
}
 8001af8:	4770      	bx	lr

08001afa <RTC_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void RTC_IRQHandler(void)
{
}
 8001afa:	4770      	bx	lr

08001afc <FLASH_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void FLASH_IRQHandler(void)
{
}
 8001afc:	4770      	bx	lr

08001afe <RCC_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_IRQHandler(void)
{
}
 8001afe:	4770      	bx	lr

08001b00 <EXTI0_IRQHandler>:
static bool toggle_data_key1 = FALSE;

void EXTI0_IRQHandler(void)
{

}
 8001b00:	4770      	bx	lr

08001b02 <EXTI2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI2_IRQHandler(void)
{
}
 8001b02:	4770      	bx	lr

08001b04 <EXTI3_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI3_IRQHandler(void)
{
}
 8001b04:	4770      	bx	lr

08001b06 <EXTI4_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI4_IRQHandler(void)
{
}
 8001b06:	4770      	bx	lr

08001b08 <DMA1_Channel1_IRQHandler>:
* Return         : None
*******************************************************************************/
void DMA1_Channel1_IRQHandler(void)
{

}
 8001b08:	4770      	bx	lr

08001b0a <DMA1_Channel2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel2_IRQHandler(void)
{
}
 8001b0a:	4770      	bx	lr

08001b0c <DMA1_Channel3_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel3_IRQHandler(void)
{
}
 8001b0c:	4770      	bx	lr

08001b0e <DMA1_Channel4_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel4_IRQHandler(void)
{
}
 8001b0e:	4770      	bx	lr

08001b10 <DMA1_Channel5_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel5_IRQHandler(void)
{
}
 8001b10:	4770      	bx	lr

08001b12 <DMA1_Channel6_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel6_IRQHandler(void)
{
}
 8001b12:	4770      	bx	lr

08001b14 <DMA1_Channel7_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel7_IRQHandler(void)
{
}
 8001b14:	4770      	bx	lr

08001b16 <ADC1_2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void ADC1_2_IRQHandler(void)
{
}
 8001b16:	4770      	bx	lr

08001b18 <USB_HP_CAN1_TX_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void USB_HP_CAN1_TX_IRQHandler(void)
{
}
 8001b18:	4770      	bx	lr

08001b1a <USB_LP_CAN1_RX0_IRQHandler>:
* Return         : None
*******************************************************************************/
void USB_LP_CAN1_RX0_IRQHandler(void)
{

}
 8001b1a:	4770      	bx	lr

08001b1c <CAN1_RX1_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void CAN1_RX1_IRQHandler(void)
{
}
 8001b1c:	4770      	bx	lr

08001b1e <CAN1_SCE_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void CAN1_SCE_IRQHandler(void)
{
}
 8001b1e:	4770      	bx	lr

08001b20 <EXTI9_5_IRQHandler>:
    {
        basicRfRxFrmDoneIsr();
        EXTI_ClearITPendingBit(GPIO_EXTI_Line_RF_GPIO0);
    }
#endif
}
 8001b20:	4770      	bx	lr

08001b22 <TIM1_BRK_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_BRK_IRQHandler(void)
{
}
 8001b22:	4770      	bx	lr

08001b24 <TIM1_UP_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_UP_IRQHandler(void)
{
}
 8001b24:	4770      	bx	lr

08001b26 <TIM1_TRG_COM_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_TRG_COM_IRQHandler(void)
{
}
 8001b26:	4770      	bx	lr

08001b28 <TIM1_CC_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_CC_IRQHandler(void)
{
}
 8001b28:	4770      	bx	lr

08001b2a <TIM2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM2_IRQHandler(void)
{
}
 8001b2a:	4770      	bx	lr

08001b2c <TIM3_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM3_IRQHandler(void)
{
}
 8001b2c:	4770      	bx	lr

08001b2e <TIM4_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM4_IRQHandler(void)
{
}
 8001b2e:	4770      	bx	lr

08001b30 <I2C1_EV_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void I2C1_EV_IRQHandler(void)
{
}
 8001b30:	4770      	bx	lr

08001b32 <I2C1_ER_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void I2C1_ER_IRQHandler(void)
{
}
 8001b32:	4770      	bx	lr

08001b34 <I2C2_EV_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void I2C2_EV_IRQHandler(void)
{
}
 8001b34:	4770      	bx	lr

08001b36 <I2C2_ER_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void I2C2_ER_IRQHandler(void)
{
}
 8001b36:	4770      	bx	lr

08001b38 <SPI1_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void SPI1_IRQHandler(void)
{
}
 8001b38:	4770      	bx	lr

08001b3a <SPI2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void SPI2_IRQHandler(void)
{
}
 8001b3a:	4770      	bx	lr

08001b3c <USART1_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void USART1_IRQHandler(void)
{
}
 8001b3c:	4770      	bx	lr

08001b3e <USART2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void USART2_IRQHandler(void)
{
}
 8001b3e:	4770      	bx	lr

08001b40 <USART3_IRQHandler>:
* Description    : This function handles USART3 global interrupt request.
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USART3_IRQHandler(void){
 8001b40:	b510      	push	{r4, lr}
    if(USART_GetITStatus(USART3, USART_IT_RXNE) != RESET)
 8001b42:	f240 5125 	movw	r1, #1317	; 0x525
 8001b46:	480c      	ldr	r0, [pc, #48]	; (8001b78 <USART3_IRQHandler+0x38>)
 8001b48:	f7ff fc92 	bl	8001470 <USART_GetITStatus>
 8001b4c:	b900      	cbnz	r0, 8001b50 <USART3_IRQHandler+0x10>
        //esp buffer insert data buffer
        //
        while(USART_GetFlagStatus(USART3, USART_FLAG_TXE) == RESET);
        //U_EnQueue(USART_ReceiveData(USART3));
    }
  }
 8001b4e:	bd10      	pop	{r4, pc}
        USART_ClearITPendingBit(USART3, USART_IT_RXNE);
 8001b50:	4c09      	ldr	r4, [pc, #36]	; (8001b78 <USART3_IRQHandler+0x38>)
 8001b52:	f240 5125 	movw	r1, #1317	; 0x525
 8001b56:	4620      	mov	r0, r4
 8001b58:	f7ff fd08 	bl	800156c <USART_ClearITPendingBit>
        ESP_EnQueue(USART_ReceiveData(USART3));
 8001b5c:	4620      	mov	r0, r4
 8001b5e:	f7ff fc0f 	bl	8001380 <USART_ReceiveData>
 8001b62:	b2c0      	uxtb	r0, r0
 8001b64:	f000 fbfa 	bl	800235c <ESP_EnQueue>
        while(USART_GetFlagStatus(USART3, USART_FLAG_TXE) == RESET);
 8001b68:	2180      	movs	r1, #128	; 0x80
 8001b6a:	4803      	ldr	r0, [pc, #12]	; (8001b78 <USART3_IRQHandler+0x38>)
 8001b6c:	f7ff fc2a 	bl	80013c4 <USART_GetFlagStatus>
 8001b70:	2800      	cmp	r0, #0
 8001b72:	d0f9      	beq.n	8001b68 <USART3_IRQHandler+0x28>
 8001b74:	e7eb      	b.n	8001b4e <USART3_IRQHandler+0xe>
 8001b76:	bf00      	nop
 8001b78:	40004800 	.word	0x40004800

08001b7c <EXTI15_10_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI15_10_IRQHandler(void)
{
}
 8001b7c:	4770      	bx	lr

08001b7e <RTCAlarm_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void RTCAlarm_IRQHandler(void)
{
}
 8001b7e:	4770      	bx	lr

08001b80 <USBWakeUp_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USBWakeUp_IRQHandler(void)
{
 8001b80:	b508      	push	{r3, lr}
#if 1
    EXTI_ClearITPendingBit(EXTI_Line18);
 8001b82:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8001b86:	f7ff f909 	bl	8000d9c <EXTI_ClearITPendingBit>
#endif
}
 8001b8a:	bd08      	pop	{r3, pc}

08001b8c <_write>:

#define  U1_BUFFER_SIZE  100

//retargetting _write
__attribute__ ((used)) int _write(int fd, char *ptr, int len)
{
 8001b8c:	b570      	push	{r4, r5, r6, lr}
 8001b8e:	460e      	mov	r6, r1
 8001b90:	4615      	mov	r5, r2
    /* Write "len" of char from "ptr" to file id "fd"
   * Return number of char written.
   * Need implementing with UART here. */
    size_t i;
    for(i = 0; i < len; i++)
 8001b92:	2400      	movs	r4, #0
 8001b94:	e00a      	b.n	8001bac <_write+0x20>
    {
        USART_SendData(USART1, ptr[i]);
 8001b96:	5d31      	ldrb	r1, [r6, r4]
 8001b98:	4806      	ldr	r0, [pc, #24]	; (8001bb4 <_write+0x28>)
 8001b9a:	f7ff fbc5 	bl	8001328 <USART_SendData>
        while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
 8001b9e:	2180      	movs	r1, #128	; 0x80
 8001ba0:	4804      	ldr	r0, [pc, #16]	; (8001bb4 <_write+0x28>)
 8001ba2:	f7ff fc0f 	bl	80013c4 <USART_GetFlagStatus>
 8001ba6:	2800      	cmp	r0, #0
 8001ba8:	d0f9      	beq.n	8001b9e <_write+0x12>
    for(i = 0; i < len; i++)
 8001baa:	3401      	adds	r4, #1
 8001bac:	42a5      	cmp	r5, r4
 8001bae:	d8f2      	bhi.n	8001b96 <_write+0xa>
    }
    return len;
}
 8001bb0:	4628      	mov	r0, r5
 8001bb2:	bd70      	pop	{r4, r5, r6, pc}
 8001bb4:	40013800 	.word	0x40013800

08001bb8 <_close>:
*/

__attribute__ ((used)) int _close(int file)
{
    return -1;
}
 8001bb8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001bbc:	4770      	bx	lr
	...

08001bc0 <main_menu>:
    return 0;
    
}

MENU_DEF int main_menu()
{
 8001bc0:	b510      	push	{r4, lr}
    int key;
    
    printf("\r\n\r\n");
 8001bc2:	4811      	ldr	r0, [pc, #68]	; (8001c08 <main_menu+0x48>)
 8001bc4:	f001 fa9c 	bl	8003100 <puts>
    printf("-------------------------------------------------\r\n");
 8001bc8:	4c10      	ldr	r4, [pc, #64]	; (8001c0c <main_menu+0x4c>)
 8001bca:	4620      	mov	r0, r4
 8001bcc:	f001 fa98 	bl	8003100 <puts>
    printf("                  menu select \r\n");
 8001bd0:	480f      	ldr	r0, [pc, #60]	; (8001c10 <main_menu+0x50>)
 8001bd2:	f001 fa95 	bl	8003100 <puts>
    printf("-------------------------------------------------\r\n");
 8001bd6:	4620      	mov	r0, r4
 8001bd8:	f001 fa92 	bl	8003100 <puts>
    printf(" 1. at command test menu\r\n");
 8001bdc:	480d      	ldr	r0, [pc, #52]	; (8001c14 <main_menu+0x54>)
 8001bde:	f001 fa8f 	bl	8003100 <puts>
    printf(" 2. \r\n");
 8001be2:	480d      	ldr	r0, [pc, #52]	; (8001c18 <main_menu+0x58>)
 8001be4:	f001 fa8c 	bl	8003100 <puts>
    printf(" 3. \r\n");
 8001be8:	480c      	ldr	r0, [pc, #48]	; (8001c1c <main_menu+0x5c>)
 8001bea:	f001 fa89 	bl	8003100 <puts>
    printf("-------------------------------------------------\r\n");
 8001bee:	4620      	mov	r0, r4
 8001bf0:	f001 fa86 	bl	8003100 <puts>
    printf(" q. Menu Quit\r\n");
 8001bf4:	480a      	ldr	r0, [pc, #40]	; (8001c20 <main_menu+0x60>)
 8001bf6:	f001 fa83 	bl	8003100 <puts>
    printf("-------------------------------------------------\r\n");
 8001bfa:	4620      	mov	r0, r4
 8001bfc:	f001 fa80 	bl	8003100 <puts>
    
    key = USART_GetCharacter(USART1);
 8001c00:	4808      	ldr	r0, [pc, #32]	; (8001c24 <main_menu+0x64>)
 8001c02:	f7ff fdd6 	bl	80017b2 <USART_GetCharacter>

    return key;
 8001c06:	bd10      	pop	{r4, pc}
 8001c08:	08006a98 	.word	0x08006a98
 8001c0c:	08006a9c 	.word	0x08006a9c
 8001c10:	08006ad0 	.word	0x08006ad0
 8001c14:	08006af0 	.word	0x08006af0
 8001c18:	08006b0c 	.word	0x08006b0c
 8001c1c:	08006b14 	.word	0x08006b14
 8001c20:	08006b1c 	.word	0x08006b1c
 8001c24:	40013800 	.word	0x40013800

08001c28 <menu>:
{
 8001c28:	b508      	push	{r3, lr}
    while((key = main_menu()) != 0)
 8001c2a:	f7ff ffc9 	bl	8001bc0 <main_menu>
 8001c2e:	4603      	mov	r3, r0
 8001c30:	2800      	cmp	r0, #0
 8001c32:	f000 80e1 	beq.w	8001df8 <menu+0x1d0>
        switch(key)
 8001c36:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8001c3a:	2841      	cmp	r0, #65	; 0x41
 8001c3c:	d8f5      	bhi.n	8001c2a <menu+0x2>
 8001c3e:	a301      	add	r3, pc, #4	; (adr r3, 8001c44 <menu+0x1c>)
 8001c40:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
 8001c44:	08001d99 	.word	0x08001d99
 8001c48:	08001d4d 	.word	0x08001d4d
 8001c4c:	08001d59 	.word	0x08001d59
 8001c50:	08001d61 	.word	0x08001d61
 8001c54:	08001d69 	.word	0x08001d69
 8001c58:	08001d71 	.word	0x08001d71
 8001c5c:	08001d79 	.word	0x08001d79
 8001c60:	08001d81 	.word	0x08001d81
 8001c64:	08001d89 	.word	0x08001d89
 8001c68:	08001d91 	.word	0x08001d91
 8001c6c:	08001c2b 	.word	0x08001c2b
 8001c70:	08001c2b 	.word	0x08001c2b
 8001c74:	08001c2b 	.word	0x08001c2b
 8001c78:	08001c2b 	.word	0x08001c2b
 8001c7c:	08001c2b 	.word	0x08001c2b
 8001c80:	08001c2b 	.word	0x08001c2b
 8001c84:	08001c2b 	.word	0x08001c2b
 8001c88:	08001c2b 	.word	0x08001c2b
 8001c8c:	08001c2b 	.word	0x08001c2b
 8001c90:	08001c2b 	.word	0x08001c2b
 8001c94:	08001c2b 	.word	0x08001c2b
 8001c98:	08001c2b 	.word	0x08001c2b
 8001c9c:	08001c2b 	.word	0x08001c2b
 8001ca0:	08001c2b 	.word	0x08001c2b
 8001ca4:	08001c2b 	.word	0x08001c2b
 8001ca8:	08001c2b 	.word	0x08001c2b
 8001cac:	08001c2b 	.word	0x08001c2b
 8001cb0:	08001c2b 	.word	0x08001c2b
 8001cb4:	08001c2b 	.word	0x08001c2b
 8001cb8:	08001c2b 	.word	0x08001c2b
 8001cbc:	08001c2b 	.word	0x08001c2b
 8001cc0:	08001c2b 	.word	0x08001c2b
 8001cc4:	08001c2b 	.word	0x08001c2b
 8001cc8:	08001c2b 	.word	0x08001c2b
 8001ccc:	08001c2b 	.word	0x08001c2b
 8001cd0:	08001c2b 	.word	0x08001c2b
 8001cd4:	08001c2b 	.word	0x08001c2b
 8001cd8:	08001c2b 	.word	0x08001c2b
 8001cdc:	08001c2b 	.word	0x08001c2b
 8001ce0:	08001c2b 	.word	0x08001c2b
 8001ce4:	08001c2b 	.word	0x08001c2b
 8001ce8:	08001c2b 	.word	0x08001c2b
 8001cec:	08001c2b 	.word	0x08001c2b
 8001cf0:	08001c2b 	.word	0x08001c2b
 8001cf4:	08001c2b 	.word	0x08001c2b
 8001cf8:	08001c2b 	.word	0x08001c2b
 8001cfc:	08001c2b 	.word	0x08001c2b
 8001d00:	08001c2b 	.word	0x08001c2b
 8001d04:	08001c2b 	.word	0x08001c2b
 8001d08:	08001da1 	.word	0x08001da1
 8001d0c:	08001da9 	.word	0x08001da9
 8001d10:	08001db1 	.word	0x08001db1
 8001d14:	08001db9 	.word	0x08001db9
 8001d18:	08001dc1 	.word	0x08001dc1
 8001d1c:	08001dc9 	.word	0x08001dc9
 8001d20:	08001dd1 	.word	0x08001dd1
 8001d24:	08001dd9 	.word	0x08001dd9
 8001d28:	08001de1 	.word	0x08001de1
 8001d2c:	08001de9 	.word	0x08001de9
 8001d30:	08001df1 	.word	0x08001df1
 8001d34:	08001c2b 	.word	0x08001c2b
 8001d38:	08001c2b 	.word	0x08001c2b
 8001d3c:	08001c2b 	.word	0x08001c2b
 8001d40:	08001c2b 	.word	0x08001c2b
 8001d44:	08001c2b 	.word	0x08001c2b
 8001d48:	08001df9 	.word	0x08001df9
                printf("\r\nNo.1\n");
 8001d4c:	482b      	ldr	r0, [pc, #172]	; (8001dfc <menu+0x1d4>)
 8001d4e:	f001 f9d7 	bl	8003100 <puts>
                at_menu();
 8001d52:	f000 f8b1 	bl	8001eb8 <at_menu>
            break;
 8001d56:	e768      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.2\n");
 8001d58:	4829      	ldr	r0, [pc, #164]	; (8001e00 <menu+0x1d8>)
 8001d5a:	f001 f9d1 	bl	8003100 <puts>
            break;
 8001d5e:	e764      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.3\n");
 8001d60:	4828      	ldr	r0, [pc, #160]	; (8001e04 <menu+0x1dc>)
 8001d62:	f001 f9cd 	bl	8003100 <puts>
            break;
 8001d66:	e760      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.4\n");
 8001d68:	4827      	ldr	r0, [pc, #156]	; (8001e08 <menu+0x1e0>)
 8001d6a:	f001 f9c9 	bl	8003100 <puts>
            break;
 8001d6e:	e75c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.5\n");
 8001d70:	4826      	ldr	r0, [pc, #152]	; (8001e0c <menu+0x1e4>)
 8001d72:	f001 f9c5 	bl	8003100 <puts>
            break;
 8001d76:	e758      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.6\n");
 8001d78:	4825      	ldr	r0, [pc, #148]	; (8001e10 <menu+0x1e8>)
 8001d7a:	f001 f9c1 	bl	8003100 <puts>
            break;
 8001d7e:	e754      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.7\n");
 8001d80:	4824      	ldr	r0, [pc, #144]	; (8001e14 <menu+0x1ec>)
 8001d82:	f001 f9bd 	bl	8003100 <puts>
            break;
 8001d86:	e750      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.8\n");
 8001d88:	4823      	ldr	r0, [pc, #140]	; (8001e18 <menu+0x1f0>)
 8001d8a:	f001 f9b9 	bl	8003100 <puts>
            break;
 8001d8e:	e74c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.9\n");
 8001d90:	4822      	ldr	r0, [pc, #136]	; (8001e1c <menu+0x1f4>)
 8001d92:	f001 f9b5 	bl	8003100 <puts>
            break;
 8001d96:	e748      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.0\n");
 8001d98:	4821      	ldr	r0, [pc, #132]	; (8001e20 <menu+0x1f8>)
 8001d9a:	f001 f9b1 	bl	8003100 <puts>
            break;
 8001d9e:	e744      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.a\n");
 8001da0:	4820      	ldr	r0, [pc, #128]	; (8001e24 <menu+0x1fc>)
 8001da2:	f001 f9ad 	bl	8003100 <puts>
            break;
 8001da6:	e740      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.b\n");
 8001da8:	481f      	ldr	r0, [pc, #124]	; (8001e28 <menu+0x200>)
 8001daa:	f001 f9a9 	bl	8003100 <puts>
            break;
 8001dae:	e73c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.c\n");
 8001db0:	481e      	ldr	r0, [pc, #120]	; (8001e2c <menu+0x204>)
 8001db2:	f001 f9a5 	bl	8003100 <puts>
            break;
 8001db6:	e738      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.d\n");
 8001db8:	481d      	ldr	r0, [pc, #116]	; (8001e30 <menu+0x208>)
 8001dba:	f001 f9a1 	bl	8003100 <puts>
            break;
 8001dbe:	e734      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.e\n");
 8001dc0:	481c      	ldr	r0, [pc, #112]	; (8001e34 <menu+0x20c>)
 8001dc2:	f001 f99d 	bl	8003100 <puts>
            break;
 8001dc6:	e730      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.f\n");
 8001dc8:	481b      	ldr	r0, [pc, #108]	; (8001e38 <menu+0x210>)
 8001dca:	f001 f999 	bl	8003100 <puts>
            break;
 8001dce:	e72c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.g\n");
 8001dd0:	481a      	ldr	r0, [pc, #104]	; (8001e3c <menu+0x214>)
 8001dd2:	f001 f995 	bl	8003100 <puts>
            break;
 8001dd6:	e728      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.h\n");
 8001dd8:	4819      	ldr	r0, [pc, #100]	; (8001e40 <menu+0x218>)
 8001dda:	f001 f991 	bl	8003100 <puts>
            break;
 8001dde:	e724      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.i\n");
 8001de0:	4818      	ldr	r0, [pc, #96]	; (8001e44 <menu+0x21c>)
 8001de2:	f001 f98d 	bl	8003100 <puts>
            break;
 8001de6:	e720      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.j\n");
 8001de8:	4817      	ldr	r0, [pc, #92]	; (8001e48 <menu+0x220>)
 8001dea:	f001 f989 	bl	8003100 <puts>
            break;
 8001dee:	e71c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.k\n");
 8001df0:	4816      	ldr	r0, [pc, #88]	; (8001e4c <menu+0x224>)
 8001df2:	f001 f985 	bl	8003100 <puts>
            break;
 8001df6:	e718      	b.n	8001c2a <menu+0x2>
}
 8001df8:	2000      	movs	r0, #0
 8001dfa:	bd08      	pop	{r3, pc}
 8001dfc:	08006b2c 	.word	0x08006b2c
 8001e00:	08006b34 	.word	0x08006b34
 8001e04:	08006b3c 	.word	0x08006b3c
 8001e08:	08006b44 	.word	0x08006b44
 8001e0c:	08006b4c 	.word	0x08006b4c
 8001e10:	08006b54 	.word	0x08006b54
 8001e14:	08006b5c 	.word	0x08006b5c
 8001e18:	08006b64 	.word	0x08006b64
 8001e1c:	08006b6c 	.word	0x08006b6c
 8001e20:	08006b74 	.word	0x08006b74
 8001e24:	08006b7c 	.word	0x08006b7c
 8001e28:	08006b84 	.word	0x08006b84
 8001e2c:	08006b8c 	.word	0x08006b8c
 8001e30:	08006b94 	.word	0x08006b94
 8001e34:	08006b9c 	.word	0x08006b9c
 8001e38:	08006ba4 	.word	0x08006ba4
 8001e3c:	08006bac 	.word	0x08006bac
 8001e40:	08006bb4 	.word	0x08006bb4
 8001e44:	08006bbc 	.word	0x08006bbc
 8001e48:	08006bc4 	.word	0x08006bc4
 8001e4c:	08006bcc 	.word	0x08006bcc

08001e50 <at_main_menu>:
    return 0;
    
}

AT_MENU_DEF int at_main_menu()
{
 8001e50:	b510      	push	{r4, lr}
    int key;
    
    printf("\r\n\r\n");
 8001e52:	4811      	ldr	r0, [pc, #68]	; (8001e98 <at_main_menu+0x48>)
 8001e54:	f001 f954 	bl	8003100 <puts>
    printf("-------------------------------------------------\r\n");
 8001e58:	4c10      	ldr	r4, [pc, #64]	; (8001e9c <at_main_menu+0x4c>)
 8001e5a:	4620      	mov	r0, r4
 8001e5c:	f001 f950 	bl	8003100 <puts>
    printf("                  at menu select \r\n");
 8001e60:	480f      	ldr	r0, [pc, #60]	; (8001ea0 <at_main_menu+0x50>)
 8001e62:	f001 f94d 	bl	8003100 <puts>
    printf("-------------------------------------------------\r\n");
 8001e66:	4620      	mov	r0, r4
 8001e68:	f001 f94a 	bl	8003100 <puts>
    printf(" 1. AT TEST\r\n");
 8001e6c:	480d      	ldr	r0, [pc, #52]	; (8001ea4 <at_main_menu+0x54>)
 8001e6e:	f001 f947 	bl	8003100 <puts>
    printf(" 2. AT MODE\r\n");
 8001e72:	480d      	ldr	r0, [pc, #52]	; (8001ea8 <at_main_menu+0x58>)
 8001e74:	f001 f944 	bl	8003100 <puts>
    printf(" 3. AT LIST\r\n");
 8001e78:	480c      	ldr	r0, [pc, #48]	; (8001eac <at_main_menu+0x5c>)
 8001e7a:	f001 f941 	bl	8003100 <puts>
    printf("-------------------------------------------------\r\n");
 8001e7e:	4620      	mov	r0, r4
 8001e80:	f001 f93e 	bl	8003100 <puts>
    printf(" q. Menu Quit\r\n");
 8001e84:	480a      	ldr	r0, [pc, #40]	; (8001eb0 <at_main_menu+0x60>)
 8001e86:	f001 f93b 	bl	8003100 <puts>
    printf("-------------------------------------------------\r\n");
 8001e8a:	4620      	mov	r0, r4
 8001e8c:	f001 f938 	bl	8003100 <puts>
    
    key = USART_GetCharacter(USART1);
 8001e90:	4808      	ldr	r0, [pc, #32]	; (8001eb4 <at_main_menu+0x64>)
 8001e92:	f7ff fc8e 	bl	80017b2 <USART_GetCharacter>

    return key;
 8001e96:	bd10      	pop	{r4, pc}
 8001e98:	08006a98 	.word	0x08006a98
 8001e9c:	08006a9c 	.word	0x08006a9c
 8001ea0:	08006bd4 	.word	0x08006bd4
 8001ea4:	08006bf8 	.word	0x08006bf8
 8001ea8:	08006c08 	.word	0x08006c08
 8001eac:	08006c18 	.word	0x08006c18
 8001eb0:	08006b1c 	.word	0x08006b1c
 8001eb4:	40013800 	.word	0x40013800

08001eb8 <at_menu>:
{
 8001eb8:	b510      	push	{r4, lr}
    while((key = at_main_menu()) != 0)
 8001eba:	f7ff ffc9 	bl	8001e50 <at_main_menu>
 8001ebe:	4603      	mov	r3, r0
 8001ec0:	2800      	cmp	r0, #0
 8001ec2:	f000 810d 	beq.w	80020e0 <at_menu+0x228>
        switch(key)
 8001ec6:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8001eca:	2841      	cmp	r0, #65	; 0x41
 8001ecc:	d8f5      	bhi.n	8001eba <at_menu+0x2>
 8001ece:	a301      	add	r3, pc, #4	; (adr r3, 8001ed4 <at_menu+0x1c>)
 8001ed0:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
 8001ed4:	08002081 	.word	0x08002081
 8001ed8:	08001fdd 	.word	0x08001fdd
 8001edc:	08001ffd 	.word	0x08001ffd
 8001ee0:	0800201f 	.word	0x0800201f
 8001ee4:	08002051 	.word	0x08002051
 8001ee8:	08002059 	.word	0x08002059
 8001eec:	08002061 	.word	0x08002061
 8001ef0:	08002069 	.word	0x08002069
 8001ef4:	08002071 	.word	0x08002071
 8001ef8:	08002079 	.word	0x08002079
 8001efc:	08001ebb 	.word	0x08001ebb
 8001f00:	08001ebb 	.word	0x08001ebb
 8001f04:	08001ebb 	.word	0x08001ebb
 8001f08:	08001ebb 	.word	0x08001ebb
 8001f0c:	08001ebb 	.word	0x08001ebb
 8001f10:	08001ebb 	.word	0x08001ebb
 8001f14:	08001ebb 	.word	0x08001ebb
 8001f18:	08001ebb 	.word	0x08001ebb
 8001f1c:	08001ebb 	.word	0x08001ebb
 8001f20:	08001ebb 	.word	0x08001ebb
 8001f24:	08001ebb 	.word	0x08001ebb
 8001f28:	08001ebb 	.word	0x08001ebb
 8001f2c:	08001ebb 	.word	0x08001ebb
 8001f30:	08001ebb 	.word	0x08001ebb
 8001f34:	08001ebb 	.word	0x08001ebb
 8001f38:	08001ebb 	.word	0x08001ebb
 8001f3c:	08001ebb 	.word	0x08001ebb
 8001f40:	08001ebb 	.word	0x08001ebb
 8001f44:	08001ebb 	.word	0x08001ebb
 8001f48:	08001ebb 	.word	0x08001ebb
 8001f4c:	08001ebb 	.word	0x08001ebb
 8001f50:	08001ebb 	.word	0x08001ebb
 8001f54:	08001ebb 	.word	0x08001ebb
 8001f58:	08001ebb 	.word	0x08001ebb
 8001f5c:	08001ebb 	.word	0x08001ebb
 8001f60:	08001ebb 	.word	0x08001ebb
 8001f64:	08001ebb 	.word	0x08001ebb
 8001f68:	08001ebb 	.word	0x08001ebb
 8001f6c:	08001ebb 	.word	0x08001ebb
 8001f70:	08001ebb 	.word	0x08001ebb
 8001f74:	08001ebb 	.word	0x08001ebb
 8001f78:	08001ebb 	.word	0x08001ebb
 8001f7c:	08001ebb 	.word	0x08001ebb
 8001f80:	08001ebb 	.word	0x08001ebb
 8001f84:	08001ebb 	.word	0x08001ebb
 8001f88:	08001ebb 	.word	0x08001ebb
 8001f8c:	08001ebb 	.word	0x08001ebb
 8001f90:	08001ebb 	.word	0x08001ebb
 8001f94:	08001ebb 	.word	0x08001ebb
 8001f98:	08002089 	.word	0x08002089
 8001f9c:	08002091 	.word	0x08002091
 8001fa0:	08002099 	.word	0x08002099
 8001fa4:	080020a1 	.word	0x080020a1
 8001fa8:	080020a9 	.word	0x080020a9
 8001fac:	080020b1 	.word	0x080020b1
 8001fb0:	080020b9 	.word	0x080020b9
 8001fb4:	080020c1 	.word	0x080020c1
 8001fb8:	080020c9 	.word	0x080020c9
 8001fbc:	080020d1 	.word	0x080020d1
 8001fc0:	080020d9 	.word	0x080020d9
 8001fc4:	08001ebb 	.word	0x08001ebb
 8001fc8:	08001ebb 	.word	0x08001ebb
 8001fcc:	08001ebb 	.word	0x08001ebb
 8001fd0:	08001ebb 	.word	0x08001ebb
 8001fd4:	08001ebb 	.word	0x08001ebb
 8001fd8:	080020e1 	.word	0x080020e1
                printf("\r\nNo.1\n");
 8001fdc:	4841      	ldr	r0, [pc, #260]	; (80020e4 <at_menu+0x22c>)
 8001fde:	f001 f88f 	bl	8003100 <puts>
                ESP_ResponseDataClean();
 8001fe2:	f000 f9c9 	bl	8002378 <ESP_ResponseDataClean>
                if(AT_Test())
 8001fe6:	f000 f967 	bl	80022b8 <AT_Test>
 8001fea:	b118      	cbz	r0, 8001ff4 <at_menu+0x13c>
                    printf("testing success\r\n");
 8001fec:	483e      	ldr	r0, [pc, #248]	; (80020e8 <at_menu+0x230>)
 8001fee:	f001 f887 	bl	8003100 <puts>
 8001ff2:	e762      	b.n	8001eba <at_menu+0x2>
                    printf("testing failed\r\n");
 8001ff4:	483d      	ldr	r0, [pc, #244]	; (80020ec <at_menu+0x234>)
 8001ff6:	f001 f883 	bl	8003100 <puts>
 8001ffa:	e75e      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.2\n");
 8001ffc:	483c      	ldr	r0, [pc, #240]	; (80020f0 <at_menu+0x238>)
 8001ffe:	f001 f87f 	bl	8003100 <puts>
                ESP_ResponseDataClean();
 8002002:	f000 f9b9 	bl	8002378 <ESP_ResponseDataClean>
                if(ESP_ModeSet(ESP8266_MODE_AP_STATION))
 8002006:	2003      	movs	r0, #3
 8002008:	f000 f96a 	bl	80022e0 <ESP_ModeSet>
 800200c:	b118      	cbz	r0, 8002016 <at_menu+0x15e>
                    printf("mode setting success\r\n");
 800200e:	4839      	ldr	r0, [pc, #228]	; (80020f4 <at_menu+0x23c>)
 8002010:	f001 f876 	bl	8003100 <puts>
 8002014:	e751      	b.n	8001eba <at_menu+0x2>
                    printf("mode setting failed\r\n");
 8002016:	4838      	ldr	r0, [pc, #224]	; (80020f8 <at_menu+0x240>)
 8002018:	f001 f872 	bl	8003100 <puts>
 800201c:	e74d      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.3\n");
 800201e:	4837      	ldr	r0, [pc, #220]	; (80020fc <at_menu+0x244>)
 8002020:	f001 f86e 	bl	8003100 <puts>
                ESP_ResponseDataClean();
 8002024:	f000 f9a8 	bl	8002378 <ESP_ResponseDataClean>
                if(ESP_StationList())
 8002028:	f000 f97a 	bl	8002320 <ESP_StationList>
 800202c:	b160      	cbz	r0, 8002048 <at_menu+0x190>
                    printf("list get \r\n");
 800202e:	4834      	ldr	r0, [pc, #208]	; (8002100 <at_menu+0x248>)
 8002030:	f001 f866 	bl	8003100 <puts>
                    uint8_t *getData = ESP_ResponseData();
 8002034:	f000 f9b4 	bl	80023a0 <ESP_ResponseData>
 8002038:	4604      	mov	r4, r0
                    printf("list ::: ");
 800203a:	4832      	ldr	r0, [pc, #200]	; (8002104 <at_menu+0x24c>)
 800203c:	f000 ffec 	bl	8003018 <iprintf>
                    printf(getData);
 8002040:	4620      	mov	r0, r4
 8002042:	f000 ffe9 	bl	8003018 <iprintf>
 8002046:	e738      	b.n	8001eba <at_menu+0x2>
                    printf("list get failed\r\n");
 8002048:	482f      	ldr	r0, [pc, #188]	; (8002108 <at_menu+0x250>)
 800204a:	f001 f859 	bl	8003100 <puts>
 800204e:	e734      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.4\n");
 8002050:	482e      	ldr	r0, [pc, #184]	; (800210c <at_menu+0x254>)
 8002052:	f001 f855 	bl	8003100 <puts>
            break;
 8002056:	e730      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.5\n");
 8002058:	482d      	ldr	r0, [pc, #180]	; (8002110 <at_menu+0x258>)
 800205a:	f001 f851 	bl	8003100 <puts>
            break;
 800205e:	e72c      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.6\n");
 8002060:	482c      	ldr	r0, [pc, #176]	; (8002114 <at_menu+0x25c>)
 8002062:	f001 f84d 	bl	8003100 <puts>
            break;
 8002066:	e728      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.7\n");
 8002068:	482b      	ldr	r0, [pc, #172]	; (8002118 <at_menu+0x260>)
 800206a:	f001 f849 	bl	8003100 <puts>
            break;
 800206e:	e724      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.8\n");
 8002070:	482a      	ldr	r0, [pc, #168]	; (800211c <at_menu+0x264>)
 8002072:	f001 f845 	bl	8003100 <puts>
            break;
 8002076:	e720      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.9\n");
 8002078:	4829      	ldr	r0, [pc, #164]	; (8002120 <at_menu+0x268>)
 800207a:	f001 f841 	bl	8003100 <puts>
            break;
 800207e:	e71c      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.0\n");
 8002080:	4828      	ldr	r0, [pc, #160]	; (8002124 <at_menu+0x26c>)
 8002082:	f001 f83d 	bl	8003100 <puts>
            break;
 8002086:	e718      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.a\n");
 8002088:	4827      	ldr	r0, [pc, #156]	; (8002128 <at_menu+0x270>)
 800208a:	f001 f839 	bl	8003100 <puts>
            break;
 800208e:	e714      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.b\n");
 8002090:	4826      	ldr	r0, [pc, #152]	; (800212c <at_menu+0x274>)
 8002092:	f001 f835 	bl	8003100 <puts>
            break;
 8002096:	e710      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.c\n");
 8002098:	4825      	ldr	r0, [pc, #148]	; (8002130 <at_menu+0x278>)
 800209a:	f001 f831 	bl	8003100 <puts>
            break;
 800209e:	e70c      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.d\n");
 80020a0:	4824      	ldr	r0, [pc, #144]	; (8002134 <at_menu+0x27c>)
 80020a2:	f001 f82d 	bl	8003100 <puts>
            break;
 80020a6:	e708      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.e\n");
 80020a8:	4823      	ldr	r0, [pc, #140]	; (8002138 <at_menu+0x280>)
 80020aa:	f001 f829 	bl	8003100 <puts>
            break;
 80020ae:	e704      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.f\n");
 80020b0:	4822      	ldr	r0, [pc, #136]	; (800213c <at_menu+0x284>)
 80020b2:	f001 f825 	bl	8003100 <puts>
            break;
 80020b6:	e700      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.g\n");
 80020b8:	4821      	ldr	r0, [pc, #132]	; (8002140 <at_menu+0x288>)
 80020ba:	f001 f821 	bl	8003100 <puts>
            break;
 80020be:	e6fc      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.h\n");
 80020c0:	4820      	ldr	r0, [pc, #128]	; (8002144 <at_menu+0x28c>)
 80020c2:	f001 f81d 	bl	8003100 <puts>
            break;
 80020c6:	e6f8      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.i\n");
 80020c8:	481f      	ldr	r0, [pc, #124]	; (8002148 <at_menu+0x290>)
 80020ca:	f001 f819 	bl	8003100 <puts>
            break;
 80020ce:	e6f4      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.j\n");
 80020d0:	481e      	ldr	r0, [pc, #120]	; (800214c <at_menu+0x294>)
 80020d2:	f001 f815 	bl	8003100 <puts>
            break;
 80020d6:	e6f0      	b.n	8001eba <at_menu+0x2>
                printf("\r\nNo.k\n");
 80020d8:	481d      	ldr	r0, [pc, #116]	; (8002150 <at_menu+0x298>)
 80020da:	f001 f811 	bl	8003100 <puts>
            break;
 80020de:	e6ec      	b.n	8001eba <at_menu+0x2>
}
 80020e0:	2000      	movs	r0, #0
 80020e2:	bd10      	pop	{r4, pc}
 80020e4:	08006b2c 	.word	0x08006b2c
 80020e8:	08006c28 	.word	0x08006c28
 80020ec:	08006c3c 	.word	0x08006c3c
 80020f0:	08006b34 	.word	0x08006b34
 80020f4:	08006c4c 	.word	0x08006c4c
 80020f8:	08006c64 	.word	0x08006c64
 80020fc:	08006b3c 	.word	0x08006b3c
 8002100:	08006c7c 	.word	0x08006c7c
 8002104:	08006c88 	.word	0x08006c88
 8002108:	08006c94 	.word	0x08006c94
 800210c:	08006b44 	.word	0x08006b44
 8002110:	08006b4c 	.word	0x08006b4c
 8002114:	08006b54 	.word	0x08006b54
 8002118:	08006b5c 	.word	0x08006b5c
 800211c:	08006b64 	.word	0x08006b64
 8002120:	08006b6c 	.word	0x08006b6c
 8002124:	08006b74 	.word	0x08006b74
 8002128:	08006b7c 	.word	0x08006b7c
 800212c:	08006b84 	.word	0x08006b84
 8002130:	08006b8c 	.word	0x08006b8c
 8002134:	08006b94 	.word	0x08006b94
 8002138:	08006b9c 	.word	0x08006b9c
 800213c:	08006ba4 	.word	0x08006ba4
 8002140:	08006bac 	.word	0x08006bac
 8002144:	08006bb4 	.word	0x08006bb4
 8002148:	08006bbc 	.word	0x08006bbc
 800214c:	08006bc4 	.word	0x08006bc4
 8002150:	08006bcc 	.word	0x08006bcc

08002154 <ESP_Configuration>:
uint32_t esp_rx_point_header = 0;
uint32_t esp_rx_point_tail = 0;


ESP8266_DEF void ESP_Configuration(void)
{
 8002154:	b530      	push	{r4, r5, lr}
 8002156:	b087      	sub	sp, #28
    /* GPIOA port */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB , ENABLE);
 8002158:	2101      	movs	r1, #1
 800215a:	2008      	movs	r0, #8
 800215c:	f7fe ff2c 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* USART3 enable */
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
 8002160:	2101      	movs	r1, #1
 8002162:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8002166:	f7fe ff4d 	bl	8001004 <RCC_APB1PeriphClockCmd>

    /* GPIO_Init */
    /* GPIO_Init ESP Rx */
    GPIO_InitTypeDef GPIO_InitStructure;
    GPIO_InitStructure.GPIO_Pin = ESP_Tx_pin;
 800216a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800216e:	f8ad 3014 	strh.w	r3, [sp, #20]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8002172:	2503      	movs	r5, #3
 8002174:	f88d 5016 	strb.w	r5, [sp, #22]
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 8002178:	2318      	movs	r3, #24
 800217a:	f88d 3017 	strb.w	r3, [sp, #23]
    GPIO_Init(ESPPORT, &GPIO_InitStructure);
 800217e:	4c19      	ldr	r4, [pc, #100]	; (80021e4 <ESP_Configuration+0x90>)
 8002180:	a905      	add	r1, sp, #20
 8002182:	4620      	mov	r0, r4
 8002184:	f7fe fe1c 	bl	8000dc0 <GPIO_Init>

    /* GPIO_Init ESP Tx */
    GPIO_InitStructure.GPIO_Pin = ESP_Rx_pin;
 8002188:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800218c:	f8ad 3014 	strh.w	r3, [sp, #20]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 8002190:	f88d 5016 	strb.w	r5, [sp, #22]
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 8002194:	2304      	movs	r3, #4
 8002196:	f88d 3017 	strb.w	r3, [sp, #23]
    GPIO_Init(ESPPORT, &GPIO_InitStructure);
 800219a:	a905      	add	r1, sp, #20
 800219c:	4620      	mov	r0, r4
 800219e:	f7fe fe0f 	bl	8000dc0 <GPIO_Init>

    /* USART Init */
    USART_InitTypeDef ESP_InitStructure;
    ESP_InitStructure.USART_BaudRate = 115200;
 80021a2:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 80021a6:	9301      	str	r3, [sp, #4]
    ESP_InitStructure.USART_WordLength = USART_WordLength_8b;
 80021a8:	2300      	movs	r3, #0
 80021aa:	f8ad 3008 	strh.w	r3, [sp, #8]
    ESP_InitStructure.USART_StopBits = USART_StopBits_1;
 80021ae:	f8ad 300a 	strh.w	r3, [sp, #10]
    ESP_InitStructure.USART_Parity = USART_Parity_No;
 80021b2:	f8ad 300c 	strh.w	r3, [sp, #12]
    ESP_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 80021b6:	f8ad 3010 	strh.w	r3, [sp, #16]
    ESP_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 80021ba:	230c      	movs	r3, #12
 80021bc:	f8ad 300e 	strh.w	r3, [sp, #14]

    /* usart3 set */
    USART_Init(ESPUSART, &ESP_InitStructure);
 80021c0:	f5a4 4444 	sub.w	r4, r4, #50176	; 0xc400
 80021c4:	a901      	add	r1, sp, #4
 80021c6:	4620      	mov	r0, r4
 80021c8:	f7fe ff42 	bl	8001050 <USART_Init>
    USART_ITConfig(ESPUSART, USART_IT_RXNE, ENABLE);
 80021cc:	2201      	movs	r2, #1
 80021ce:	f240 5125 	movw	r1, #1317	; 0x525
 80021d2:	4620      	mov	r0, r4
 80021d4:	f7ff f82e 	bl	8001234 <USART_ITConfig>
    /* usart3 start */
    USART_Cmd(ESPUSART, ENABLE);
 80021d8:	2101      	movs	r1, #1
 80021da:	4620      	mov	r0, r4
 80021dc:	f7fe fff6 	bl	80011cc <USART_Cmd>
}
 80021e0:	b007      	add	sp, #28
 80021e2:	bd30      	pop	{r4, r5, pc}
 80021e4:	40010c00 	.word	0x40010c00

080021e8 <esp_interrupt_configuration>:

ESP8266_DEF void esp_interrupt_configuration()
{
 80021e8:	b500      	push	{lr}
 80021ea:	b083      	sub	sp, #12
    NVIC_InitTypeDef NVIC_InitStructure;

    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 80021ec:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 80021f0:	f7fe fd68 	bl	8000cc4 <NVIC_PriorityGroupConfig>
    NVIC_InitStructure.NVIC_IRQChannel = USART3_IRQn;
 80021f4:	2327      	movs	r3, #39	; 0x27
 80021f6:	f88d 3004 	strb.w	r3, [sp, #4]
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80021fa:	2300      	movs	r3, #0
 80021fc:	f88d 3005 	strb.w	r3, [sp, #5]
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 8002200:	f88d 3006 	strb.w	r3, [sp, #6]
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8002204:	2301      	movs	r3, #1
 8002206:	f88d 3007 	strb.w	r3, [sp, #7]
    NVIC_Init(&NVIC_InitStructure);
 800220a:	a801      	add	r0, sp, #4
 800220c:	f7fe fd7a 	bl	8000d04 <NVIC_Init>
}
 8002210:	b003      	add	sp, #12
 8002212:	f85d fb04 	ldr.w	pc, [sp], #4

08002216 <ESP_Init>:


ESP8266_DEF void ESP_Init(void)
{
 8002216:	b508      	push	{r3, lr}
    
    ESP_Configuration();
 8002218:	f7ff ff9c 	bl	8002154 <ESP_Configuration>
    esp_interrupt_configuration();
 800221c:	f7ff ffe4 	bl	80021e8 <esp_interrupt_configuration>

    //ESP_Test();
}
 8002220:	bd08      	pop	{r3, pc}
	...

08002224 <ESP_SendCommand>:
        return FALSE;
    }
}

ESP8266_DEF void ESP_SendCommand(char *command)
{
 8002224:	b570      	push	{r4, r5, r6, lr}
 8002226:	4605      	mov	r5, r0
    uint16_t i, length = strlen((char *)command);
 8002228:	f7fd ff92 	bl	8000150 <strlen>
 800222c:	b286      	uxth	r6, r0
    for(i = 0; i < length; i++)
 800222e:	2400      	movs	r4, #0
 8002230:	e00c      	b.n	800224c <ESP_SendCommand+0x28>
    {
        USART_SendData(ESPUSART, *command);
 8002232:	7829      	ldrb	r1, [r5, #0]
 8002234:	4807      	ldr	r0, [pc, #28]	; (8002254 <ESP_SendCommand+0x30>)
 8002236:	f7ff f877 	bl	8001328 <USART_SendData>
        while(USART_GetFlagStatus(ESPUSART, USART_FLAG_TXE) == RESET);
 800223a:	2180      	movs	r1, #128	; 0x80
 800223c:	4805      	ldr	r0, [pc, #20]	; (8002254 <ESP_SendCommand+0x30>)
 800223e:	f7ff f8c1 	bl	80013c4 <USART_GetFlagStatus>
 8002242:	2800      	cmp	r0, #0
 8002244:	d0f9      	beq.n	800223a <ESP_SendCommand+0x16>
        *command++;
 8002246:	3501      	adds	r5, #1
    for(i = 0; i < length; i++)
 8002248:	3401      	adds	r4, #1
 800224a:	b2a4      	uxth	r4, r4
 800224c:	42b4      	cmp	r4, r6
 800224e:	d3f0      	bcc.n	8002232 <ESP_SendCommand+0xe>
    }
    
}
 8002250:	bd70      	pop	{r4, r5, r6, pc}
 8002252:	bf00      	nop
 8002254:	40004800 	.word	0x40004800

08002258 <esp8266RxBufferAvailable>:
    
    return FALSE;
}

ESP8266_DEF bool esp8266RxBufferAvailable(){
    return (esp_rx_point_header > 0) ? TRUE : FALSE;
 8002258:	4b02      	ldr	r3, [pc, #8]	; (8002264 <esp8266RxBufferAvailable+0xc>)
 800225a:	6818      	ldr	r0, [r3, #0]
}
 800225c:	3000      	adds	r0, #0
 800225e:	bf18      	it	ne
 8002260:	2001      	movne	r0, #1
 8002262:	4770      	bx	lr
 8002264:	20000204 	.word	0x20000204

08002268 <esp8266SearchBuffer>:

bool esp8266SearchBuffer(const char * test){
 8002268:	b510      	push	{r4, lr}
 800226a:	4604      	mov	r4, r0
    int i = 0;
    int bufferlen = strlen((const char *)ESP_BUFFER);
 800226c:	4808      	ldr	r0, [pc, #32]	; (8002290 <esp8266SearchBuffer+0x28>)
 800226e:	f7fd ff6f 	bl	8000150 <strlen>
    if(bufferlen < ESPBUF_MAXSIZE)
 8002272:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8002276:	da06      	bge.n	8002286 <esp8266SearchBuffer+0x1e>
    {
        if(strstr((const char *)ESP_BUFFER, test))
 8002278:	4621      	mov	r1, r4
 800227a:	4805      	ldr	r0, [pc, #20]	; (8002290 <esp8266SearchBuffer+0x28>)
 800227c:	f000 ff6c 	bl	8003158 <strstr>
 8002280:	b118      	cbz	r0, 800228a <esp8266SearchBuffer+0x22>
        {
            return TRUE;
 8002282:	2001      	movs	r0, #1
 8002284:	e000      	b.n	8002288 <esp8266SearchBuffer+0x20>
        }else{
            return FALSE;
        }
    }else{
        return FALSE;
 8002286:	2000      	movs	r0, #0
    }
}
 8002288:	bd10      	pop	{r4, pc}
            return FALSE;
 800228a:	2000      	movs	r0, #0
 800228c:	e7fc      	b.n	8002288 <esp8266SearchBuffer+0x20>
 800228e:	bf00      	nop
 8002290:	20000330 	.word	0x20000330

08002294 <esp8266ReadForResponse>:
{
 8002294:	b510      	push	{r4, lr}
 8002296:	4604      	mov	r4, r0
        Delay(timeout);
 8002298:	4608      	mov	r0, r1
 800229a:	f7ff fa11 	bl	80016c0 <Delay>
        if(esp8266RxBufferAvailable())
 800229e:	f7ff ffdb 	bl	8002258 <esp8266RxBufferAvailable>
 80022a2:	4603      	mov	r3, r0
 80022a4:	b120      	cbz	r0, 80022b0 <esp8266ReadForResponse+0x1c>
            if(esp8266SearchBuffer(rsp))
 80022a6:	4620      	mov	r0, r4
 80022a8:	f7ff ffde 	bl	8002268 <esp8266SearchBuffer>
 80022ac:	4603      	mov	r3, r0
 80022ae:	b908      	cbnz	r0, 80022b4 <esp8266ReadForResponse+0x20>
}
 80022b0:	4618      	mov	r0, r3
 80022b2:	bd10      	pop	{r4, pc}
                return TRUE;
 80022b4:	2301      	movs	r3, #1
 80022b6:	e7fb      	b.n	80022b0 <esp8266ReadForResponse+0x1c>

080022b8 <AT_Test>:
{
 80022b8:	b508      	push	{r3, lr}
    ESP_SendCommand("AT\r\n");
 80022ba:	4807      	ldr	r0, [pc, #28]	; (80022d8 <AT_Test+0x20>)
 80022bc:	f7ff ffb2 	bl	8002224 <ESP_SendCommand>
    if(esp8266ReadForResponse("OK", COMMAND_RESPONSE_TIMEOUT))
 80022c0:	f242 7110 	movw	r1, #10000	; 0x2710
 80022c4:	4805      	ldr	r0, [pc, #20]	; (80022dc <AT_Test+0x24>)
 80022c6:	f7ff ffe5 	bl	8002294 <esp8266ReadForResponse>
 80022ca:	4603      	mov	r3, r0
 80022cc:	b908      	cbnz	r0, 80022d2 <AT_Test+0x1a>
}
 80022ce:	4618      	mov	r0, r3
 80022d0:	bd08      	pop	{r3, pc}
        return TRUE;
 80022d2:	2301      	movs	r3, #1
 80022d4:	e7fb      	b.n	80022ce <AT_Test+0x16>
 80022d6:	bf00      	nop
 80022d8:	08006ca8 	.word	0x08006ca8
 80022dc:	08006cb0 	.word	0x08006cb0

080022e0 <ESP_ModeSet>:
{
 80022e0:	b500      	push	{lr}
 80022e2:	f5ad 7d7b 	sub.w	sp, sp, #1004	; 0x3ec
    sprintf(Command, "AT+CWMODE=%d\r\n", mode);
 80022e6:	4602      	mov	r2, r0
 80022e8:	490b      	ldr	r1, [pc, #44]	; (8002318 <ESP_ModeSet+0x38>)
 80022ea:	4668      	mov	r0, sp
 80022ec:	f000 ff14 	bl	8003118 <siprintf>
    ESP_SendCommand(Command);
 80022f0:	4668      	mov	r0, sp
 80022f2:	f7ff ff97 	bl	8002224 <ESP_SendCommand>
    printf(Command);
 80022f6:	4668      	mov	r0, sp
 80022f8:	f000 fe8e 	bl	8003018 <iprintf>
    if(esp8266ReadForResponse("OK\r\n", COMMAND_RESPONSE_TIMEOUT))
 80022fc:	f242 7110 	movw	r1, #10000	; 0x2710
 8002300:	4806      	ldr	r0, [pc, #24]	; (800231c <ESP_ModeSet+0x3c>)
 8002302:	f7ff ffc7 	bl	8002294 <esp8266ReadForResponse>
 8002306:	4603      	mov	r3, r0
 8002308:	b920      	cbnz	r0, 8002314 <ESP_ModeSet+0x34>
}
 800230a:	4618      	mov	r0, r3
 800230c:	f50d 7d7b 	add.w	sp, sp, #1004	; 0x3ec
 8002310:	f85d fb04 	ldr.w	pc, [sp], #4
        return TRUE;
 8002314:	2301      	movs	r3, #1
 8002316:	e7f8      	b.n	800230a <ESP_ModeSet+0x2a>
 8002318:	08006cb4 	.word	0x08006cb4
 800231c:	08006cd0 	.word	0x08006cd0

08002320 <ESP_StationList>:
{
 8002320:	b508      	push	{r3, lr}
    ESP_SendCommand("AT+CWLAP\r\n");
 8002322:	4807      	ldr	r0, [pc, #28]	; (8002340 <ESP_StationList+0x20>)
 8002324:	f7ff ff7e 	bl	8002224 <ESP_SendCommand>
    if(esp8266ReadForResponse("+CWLAP", COMMAND_RESPONSE_TIMEOUT))
 8002328:	f242 7110 	movw	r1, #10000	; 0x2710
 800232c:	4805      	ldr	r0, [pc, #20]	; (8002344 <ESP_StationList+0x24>)
 800232e:	f7ff ffb1 	bl	8002294 <esp8266ReadForResponse>
 8002332:	4603      	mov	r3, r0
 8002334:	b908      	cbnz	r0, 800233a <ESP_StationList+0x1a>
}
 8002336:	4618      	mov	r0, r3
 8002338:	bd08      	pop	{r3, pc}
        return TRUE;
 800233a:	2301      	movs	r3, #1
 800233c:	e7fb      	b.n	8002336 <ESP_StationList+0x16>
 800233e:	bf00      	nop
 8002340:	08006cd8 	.word	0x08006cd8
 8002344:	08006ce4 	.word	0x08006ce4

08002348 <ESP_Increase_point_value>:
    ESP_Increase_point_value(&esp_rx_point_header);
}

ESP8266_DEF void ESP_Increase_point_value(uint32_t *data_p)
{
    (*data_p)++;
 8002348:	6803      	ldr	r3, [r0, #0]
 800234a:	3301      	adds	r3, #1
 800234c:	6003      	str	r3, [r0, #0]
    if(ESPBUF_MAXSIZE == (*data_p))
 800234e:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002352:	d000      	beq.n	8002356 <ESP_Increase_point_value+0xe>
    {
        (*data_p) = 0;
    }
}
 8002354:	4770      	bx	lr
        (*data_p) = 0;
 8002356:	2300      	movs	r3, #0
 8002358:	6003      	str	r3, [r0, #0]
}
 800235a:	e7fb      	b.n	8002354 <ESP_Increase_point_value+0xc>

0800235c <ESP_EnQueue>:
{
 800235c:	b508      	push	{r3, lr}
    ESP_BUFFER[esp_rx_point_header] = data;
 800235e:	4b04      	ldr	r3, [pc, #16]	; (8002370 <ESP_EnQueue+0x14>)
 8002360:	681a      	ldr	r2, [r3, #0]
 8002362:	4904      	ldr	r1, [pc, #16]	; (8002374 <ESP_EnQueue+0x18>)
 8002364:	5488      	strb	r0, [r1, r2]
    ESP_Increase_point_value(&esp_rx_point_header);
 8002366:	4618      	mov	r0, r3
 8002368:	f7ff ffee 	bl	8002348 <ESP_Increase_point_value>
}
 800236c:	bd08      	pop	{r3, pc}
 800236e:	bf00      	nop
 8002370:	20000204 	.word	0x20000204
 8002374:	20000330 	.word	0x20000330

08002378 <ESP_ResponseDataClean>:
        return FALSE;
    }
}

ESP8266_DEF void ESP_ResponseDataClean(void)
{
 8002378:	b508      	push	{r3, lr}
    memset(ESP_BUFFER,'\0', ESPBUF_MAXSIZE);
 800237a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800237e:	2100      	movs	r1, #0
 8002380:	4804      	ldr	r0, [pc, #16]	; (8002394 <ESP_ResponseDataClean+0x1c>)
 8002382:	f000 f811 	bl	80023a8 <memset>
    esp_rx_point_header = esp_rx_point_tail = 0;
 8002386:	2300      	movs	r3, #0
 8002388:	4a03      	ldr	r2, [pc, #12]	; (8002398 <ESP_ResponseDataClean+0x20>)
 800238a:	6013      	str	r3, [r2, #0]
 800238c:	4a03      	ldr	r2, [pc, #12]	; (800239c <ESP_ResponseDataClean+0x24>)
 800238e:	6013      	str	r3, [r2, #0]
}
 8002390:	bd08      	pop	{r3, pc}
 8002392:	bf00      	nop
 8002394:	20000330 	.word	0x20000330
 8002398:	20000208 	.word	0x20000208
 800239c:	20000204 	.word	0x20000204

080023a0 <ESP_ResponseData>:

ESP8266_DEF uint8_t *ESP_ResponseData(void)
{
    return ESP_BUFFER;
}
 80023a0:	4800      	ldr	r0, [pc, #0]	; (80023a4 <ESP_ResponseData+0x4>)
 80023a2:	4770      	bx	lr
 80023a4:	20000330 	.word	0x20000330

080023a8 <memset>:
 80023a8:	4603      	mov	r3, r0
 80023aa:	4402      	add	r2, r0
 80023ac:	4293      	cmp	r3, r2
 80023ae:	d100      	bne.n	80023b2 <memset+0xa>
 80023b0:	4770      	bx	lr
 80023b2:	f803 1b01 	strb.w	r1, [r3], #1
 80023b6:	e7f9      	b.n	80023ac <memset+0x4>

080023b8 <__cvt>:
 80023b8:	2b00      	cmp	r3, #0
 80023ba:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80023be:	461e      	mov	r6, r3
 80023c0:	bfbb      	ittet	lt
 80023c2:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 80023c6:	461e      	movlt	r6, r3
 80023c8:	2300      	movge	r3, #0
 80023ca:	232d      	movlt	r3, #45	; 0x2d
 80023cc:	b088      	sub	sp, #32
 80023ce:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80023d0:	e9dd 1a12 	ldrd	r1, sl, [sp, #72]	; 0x48
 80023d4:	f027 0720 	bic.w	r7, r7, #32
 80023d8:	2f46      	cmp	r7, #70	; 0x46
 80023da:	4614      	mov	r4, r2
 80023dc:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80023de:	700b      	strb	r3, [r1, #0]
 80023e0:	d004      	beq.n	80023ec <__cvt+0x34>
 80023e2:	2f45      	cmp	r7, #69	; 0x45
 80023e4:	d100      	bne.n	80023e8 <__cvt+0x30>
 80023e6:	3501      	adds	r5, #1
 80023e8:	2302      	movs	r3, #2
 80023ea:	e000      	b.n	80023ee <__cvt+0x36>
 80023ec:	2303      	movs	r3, #3
 80023ee:	aa07      	add	r2, sp, #28
 80023f0:	9204      	str	r2, [sp, #16]
 80023f2:	aa06      	add	r2, sp, #24
 80023f4:	e9cd a202 	strd	sl, r2, [sp, #8]
 80023f8:	e9cd 3500 	strd	r3, r5, [sp]
 80023fc:	4622      	mov	r2, r4
 80023fe:	4633      	mov	r3, r6
 8002400:	f001 fed2 	bl	80041a8 <_dtoa_r>
 8002404:	2f47      	cmp	r7, #71	; 0x47
 8002406:	4680      	mov	r8, r0
 8002408:	d102      	bne.n	8002410 <__cvt+0x58>
 800240a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800240c:	07db      	lsls	r3, r3, #31
 800240e:	d526      	bpl.n	800245e <__cvt+0xa6>
 8002410:	2f46      	cmp	r7, #70	; 0x46
 8002412:	eb08 0905 	add.w	r9, r8, r5
 8002416:	d111      	bne.n	800243c <__cvt+0x84>
 8002418:	f898 3000 	ldrb.w	r3, [r8]
 800241c:	2b30      	cmp	r3, #48	; 0x30
 800241e:	d10a      	bne.n	8002436 <__cvt+0x7e>
 8002420:	2200      	movs	r2, #0
 8002422:	2300      	movs	r3, #0
 8002424:	4620      	mov	r0, r4
 8002426:	4631      	mov	r1, r6
 8002428:	f7fe fabe 	bl	80009a8 <__aeabi_dcmpeq>
 800242c:	b918      	cbnz	r0, 8002436 <__cvt+0x7e>
 800242e:	f1c5 0501 	rsb	r5, r5, #1
 8002432:	f8ca 5000 	str.w	r5, [sl]
 8002436:	f8da 3000 	ldr.w	r3, [sl]
 800243a:	4499      	add	r9, r3
 800243c:	2200      	movs	r2, #0
 800243e:	2300      	movs	r3, #0
 8002440:	4620      	mov	r0, r4
 8002442:	4631      	mov	r1, r6
 8002444:	f7fe fab0 	bl	80009a8 <__aeabi_dcmpeq>
 8002448:	b938      	cbnz	r0, 800245a <__cvt+0xa2>
 800244a:	2230      	movs	r2, #48	; 0x30
 800244c:	9b07      	ldr	r3, [sp, #28]
 800244e:	454b      	cmp	r3, r9
 8002450:	d205      	bcs.n	800245e <__cvt+0xa6>
 8002452:	1c59      	adds	r1, r3, #1
 8002454:	9107      	str	r1, [sp, #28]
 8002456:	701a      	strb	r2, [r3, #0]
 8002458:	e7f8      	b.n	800244c <__cvt+0x94>
 800245a:	f8cd 901c 	str.w	r9, [sp, #28]
 800245e:	4640      	mov	r0, r8
 8002460:	9b07      	ldr	r3, [sp, #28]
 8002462:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8002464:	eba3 0308 	sub.w	r3, r3, r8
 8002468:	6013      	str	r3, [r2, #0]
 800246a:	b008      	add	sp, #32
 800246c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08002470 <__exponent>:
 8002470:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002472:	2900      	cmp	r1, #0
 8002474:	bfb4      	ite	lt
 8002476:	232d      	movlt	r3, #45	; 0x2d
 8002478:	232b      	movge	r3, #43	; 0x2b
 800247a:	4604      	mov	r4, r0
 800247c:	bfb8      	it	lt
 800247e:	4249      	neglt	r1, r1
 8002480:	2909      	cmp	r1, #9
 8002482:	f804 2b02 	strb.w	r2, [r4], #2
 8002486:	7043      	strb	r3, [r0, #1]
 8002488:	dd21      	ble.n	80024ce <__exponent+0x5e>
 800248a:	f10d 0307 	add.w	r3, sp, #7
 800248e:	461f      	mov	r7, r3
 8002490:	260a      	movs	r6, #10
 8002492:	fb91 f5f6 	sdiv	r5, r1, r6
 8002496:	fb06 1115 	mls	r1, r6, r5, r1
 800249a:	2d09      	cmp	r5, #9
 800249c:	f101 0130 	add.w	r1, r1, #48	; 0x30
 80024a0:	f803 1c01 	strb.w	r1, [r3, #-1]
 80024a4:	f103 32ff 	add.w	r2, r3, #4294967295	; 0xffffffff
 80024a8:	4629      	mov	r1, r5
 80024aa:	dc09      	bgt.n	80024c0 <__exponent+0x50>
 80024ac:	3130      	adds	r1, #48	; 0x30
 80024ae:	3b02      	subs	r3, #2
 80024b0:	f802 1c01 	strb.w	r1, [r2, #-1]
 80024b4:	42bb      	cmp	r3, r7
 80024b6:	4622      	mov	r2, r4
 80024b8:	d304      	bcc.n	80024c4 <__exponent+0x54>
 80024ba:	1a10      	subs	r0, r2, r0
 80024bc:	b003      	add	sp, #12
 80024be:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80024c0:	4613      	mov	r3, r2
 80024c2:	e7e6      	b.n	8002492 <__exponent+0x22>
 80024c4:	f813 2b01 	ldrb.w	r2, [r3], #1
 80024c8:	f804 2b01 	strb.w	r2, [r4], #1
 80024cc:	e7f2      	b.n	80024b4 <__exponent+0x44>
 80024ce:	2330      	movs	r3, #48	; 0x30
 80024d0:	4419      	add	r1, r3
 80024d2:	7083      	strb	r3, [r0, #2]
 80024d4:	1d02      	adds	r2, r0, #4
 80024d6:	70c1      	strb	r1, [r0, #3]
 80024d8:	e7ef      	b.n	80024ba <__exponent+0x4a>
	...

080024dc <_printf_float>:
 80024dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80024e0:	b091      	sub	sp, #68	; 0x44
 80024e2:	460c      	mov	r4, r1
 80024e4:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80024e6:	4693      	mov	fp, r2
 80024e8:	461e      	mov	r6, r3
 80024ea:	4605      	mov	r5, r0
 80024ec:	f003 f8b8 	bl	8005660 <_localeconv_r>
 80024f0:	6803      	ldr	r3, [r0, #0]
 80024f2:	4618      	mov	r0, r3
 80024f4:	9309      	str	r3, [sp, #36]	; 0x24
 80024f6:	f7fd fe2b 	bl	8000150 <strlen>
 80024fa:	2300      	movs	r3, #0
 80024fc:	930e      	str	r3, [sp, #56]	; 0x38
 80024fe:	683b      	ldr	r3, [r7, #0]
 8002500:	900a      	str	r0, [sp, #40]	; 0x28
 8002502:	3307      	adds	r3, #7
 8002504:	f023 0307 	bic.w	r3, r3, #7
 8002508:	f103 0208 	add.w	r2, r3, #8
 800250c:	f894 8018 	ldrb.w	r8, [r4, #24]
 8002510:	f8d4 a000 	ldr.w	sl, [r4]
 8002514:	603a      	str	r2, [r7, #0]
 8002516:	e9d3 2300 	ldrd	r2, r3, [r3]
 800251a:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 800251e:	e9d4 7912 	ldrd	r7, r9, [r4, #72]	; 0x48
 8002522:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8002526:	930b      	str	r3, [sp, #44]	; 0x2c
 8002528:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800252c:	4ba6      	ldr	r3, [pc, #664]	; (80027c8 <_printf_float+0x2ec>)
 800252e:	4638      	mov	r0, r7
 8002530:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002532:	f7fe fa6b 	bl	8000a0c <__aeabi_dcmpun>
 8002536:	bb68      	cbnz	r0, 8002594 <_printf_float+0xb8>
 8002538:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800253c:	4ba2      	ldr	r3, [pc, #648]	; (80027c8 <_printf_float+0x2ec>)
 800253e:	4638      	mov	r0, r7
 8002540:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002542:	f7fe fa45 	bl	80009d0 <__aeabi_dcmple>
 8002546:	bb28      	cbnz	r0, 8002594 <_printf_float+0xb8>
 8002548:	2200      	movs	r2, #0
 800254a:	2300      	movs	r3, #0
 800254c:	4638      	mov	r0, r7
 800254e:	4649      	mov	r1, r9
 8002550:	f7fe fa34 	bl	80009bc <__aeabi_dcmplt>
 8002554:	b110      	cbz	r0, 800255c <_printf_float+0x80>
 8002556:	232d      	movs	r3, #45	; 0x2d
 8002558:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800255c:	4f9b      	ldr	r7, [pc, #620]	; (80027cc <_printf_float+0x2f0>)
 800255e:	4b9c      	ldr	r3, [pc, #624]	; (80027d0 <_printf_float+0x2f4>)
 8002560:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8002564:	bf98      	it	ls
 8002566:	461f      	movls	r7, r3
 8002568:	2303      	movs	r3, #3
 800256a:	f04f 0900 	mov.w	r9, #0
 800256e:	6123      	str	r3, [r4, #16]
 8002570:	f02a 0304 	bic.w	r3, sl, #4
 8002574:	6023      	str	r3, [r4, #0]
 8002576:	9600      	str	r6, [sp, #0]
 8002578:	465b      	mov	r3, fp
 800257a:	aa0f      	add	r2, sp, #60	; 0x3c
 800257c:	4621      	mov	r1, r4
 800257e:	4628      	mov	r0, r5
 8002580:	f000 f9e2 	bl	8002948 <_printf_common>
 8002584:	3001      	adds	r0, #1
 8002586:	f040 8090 	bne.w	80026aa <_printf_float+0x1ce>
 800258a:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800258e:	b011      	add	sp, #68	; 0x44
 8002590:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002594:	463a      	mov	r2, r7
 8002596:	464b      	mov	r3, r9
 8002598:	4638      	mov	r0, r7
 800259a:	4649      	mov	r1, r9
 800259c:	f7fe fa36 	bl	8000a0c <__aeabi_dcmpun>
 80025a0:	b110      	cbz	r0, 80025a8 <_printf_float+0xcc>
 80025a2:	4f8c      	ldr	r7, [pc, #560]	; (80027d4 <_printf_float+0x2f8>)
 80025a4:	4b8c      	ldr	r3, [pc, #560]	; (80027d8 <_printf_float+0x2fc>)
 80025a6:	e7db      	b.n	8002560 <_printf_float+0x84>
 80025a8:	6863      	ldr	r3, [r4, #4]
 80025aa:	f44a 6280 	orr.w	r2, sl, #1024	; 0x400
 80025ae:	1c59      	adds	r1, r3, #1
 80025b0:	a80d      	add	r0, sp, #52	; 0x34
 80025b2:	a90e      	add	r1, sp, #56	; 0x38
 80025b4:	d140      	bne.n	8002638 <_printf_float+0x15c>
 80025b6:	2306      	movs	r3, #6
 80025b8:	6063      	str	r3, [r4, #4]
 80025ba:	f04f 0c00 	mov.w	ip, #0
 80025be:	f10d 0333 	add.w	r3, sp, #51	; 0x33
 80025c2:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80025c6:	6863      	ldr	r3, [r4, #4]
 80025c8:	6022      	str	r2, [r4, #0]
 80025ca:	e9cd 0803 	strd	r0, r8, [sp, #12]
 80025ce:	9300      	str	r3, [sp, #0]
 80025d0:	463a      	mov	r2, r7
 80025d2:	464b      	mov	r3, r9
 80025d4:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 80025d8:	4628      	mov	r0, r5
 80025da:	f7ff feed 	bl	80023b8 <__cvt>
 80025de:	f008 03df 	and.w	r3, r8, #223	; 0xdf
 80025e2:	2b47      	cmp	r3, #71	; 0x47
 80025e4:	4607      	mov	r7, r0
 80025e6:	d109      	bne.n	80025fc <_printf_float+0x120>
 80025e8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80025ea:	1cd8      	adds	r0, r3, #3
 80025ec:	db02      	blt.n	80025f4 <_printf_float+0x118>
 80025ee:	6862      	ldr	r2, [r4, #4]
 80025f0:	4293      	cmp	r3, r2
 80025f2:	dd47      	ble.n	8002684 <_printf_float+0x1a8>
 80025f4:	f1a8 0802 	sub.w	r8, r8, #2
 80025f8:	fa5f f888 	uxtb.w	r8, r8
 80025fc:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8002600:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002602:	d824      	bhi.n	800264e <_printf_float+0x172>
 8002604:	3901      	subs	r1, #1
 8002606:	4642      	mov	r2, r8
 8002608:	f104 0050 	add.w	r0, r4, #80	; 0x50
 800260c:	910d      	str	r1, [sp, #52]	; 0x34
 800260e:	f7ff ff2f 	bl	8002470 <__exponent>
 8002612:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002614:	4681      	mov	r9, r0
 8002616:	1813      	adds	r3, r2, r0
 8002618:	2a01      	cmp	r2, #1
 800261a:	6123      	str	r3, [r4, #16]
 800261c:	dc02      	bgt.n	8002624 <_printf_float+0x148>
 800261e:	6822      	ldr	r2, [r4, #0]
 8002620:	07d1      	lsls	r1, r2, #31
 8002622:	d501      	bpl.n	8002628 <_printf_float+0x14c>
 8002624:	3301      	adds	r3, #1
 8002626:	6123      	str	r3, [r4, #16]
 8002628:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 800262c:	2b00      	cmp	r3, #0
 800262e:	d0a2      	beq.n	8002576 <_printf_float+0x9a>
 8002630:	232d      	movs	r3, #45	; 0x2d
 8002632:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002636:	e79e      	b.n	8002576 <_printf_float+0x9a>
 8002638:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
 800263c:	f000 816e 	beq.w	800291c <_printf_float+0x440>
 8002640:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8002644:	d1b9      	bne.n	80025ba <_printf_float+0xde>
 8002646:	2b00      	cmp	r3, #0
 8002648:	d1b7      	bne.n	80025ba <_printf_float+0xde>
 800264a:	2301      	movs	r3, #1
 800264c:	e7b4      	b.n	80025b8 <_printf_float+0xdc>
 800264e:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
 8002652:	d119      	bne.n	8002688 <_printf_float+0x1ac>
 8002654:	2900      	cmp	r1, #0
 8002656:	6863      	ldr	r3, [r4, #4]
 8002658:	dd0c      	ble.n	8002674 <_printf_float+0x198>
 800265a:	6121      	str	r1, [r4, #16]
 800265c:	b913      	cbnz	r3, 8002664 <_printf_float+0x188>
 800265e:	6822      	ldr	r2, [r4, #0]
 8002660:	07d2      	lsls	r2, r2, #31
 8002662:	d502      	bpl.n	800266a <_printf_float+0x18e>
 8002664:	3301      	adds	r3, #1
 8002666:	440b      	add	r3, r1
 8002668:	6123      	str	r3, [r4, #16]
 800266a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800266c:	f04f 0900 	mov.w	r9, #0
 8002670:	65a3      	str	r3, [r4, #88]	; 0x58
 8002672:	e7d9      	b.n	8002628 <_printf_float+0x14c>
 8002674:	b913      	cbnz	r3, 800267c <_printf_float+0x1a0>
 8002676:	6822      	ldr	r2, [r4, #0]
 8002678:	07d0      	lsls	r0, r2, #31
 800267a:	d501      	bpl.n	8002680 <_printf_float+0x1a4>
 800267c:	3302      	adds	r3, #2
 800267e:	e7f3      	b.n	8002668 <_printf_float+0x18c>
 8002680:	2301      	movs	r3, #1
 8002682:	e7f1      	b.n	8002668 <_printf_float+0x18c>
 8002684:	f04f 0867 	mov.w	r8, #103	; 0x67
 8002688:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 800268c:	4293      	cmp	r3, r2
 800268e:	db05      	blt.n	800269c <_printf_float+0x1c0>
 8002690:	6822      	ldr	r2, [r4, #0]
 8002692:	6123      	str	r3, [r4, #16]
 8002694:	07d1      	lsls	r1, r2, #31
 8002696:	d5e8      	bpl.n	800266a <_printf_float+0x18e>
 8002698:	3301      	adds	r3, #1
 800269a:	e7e5      	b.n	8002668 <_printf_float+0x18c>
 800269c:	2b00      	cmp	r3, #0
 800269e:	bfcc      	ite	gt
 80026a0:	2301      	movgt	r3, #1
 80026a2:	f1c3 0302 	rsble	r3, r3, #2
 80026a6:	4413      	add	r3, r2
 80026a8:	e7de      	b.n	8002668 <_printf_float+0x18c>
 80026aa:	6823      	ldr	r3, [r4, #0]
 80026ac:	055a      	lsls	r2, r3, #21
 80026ae:	d407      	bmi.n	80026c0 <_printf_float+0x1e4>
 80026b0:	6923      	ldr	r3, [r4, #16]
 80026b2:	463a      	mov	r2, r7
 80026b4:	4659      	mov	r1, fp
 80026b6:	4628      	mov	r0, r5
 80026b8:	47b0      	blx	r6
 80026ba:	3001      	adds	r0, #1
 80026bc:	d129      	bne.n	8002712 <_printf_float+0x236>
 80026be:	e764      	b.n	800258a <_printf_float+0xae>
 80026c0:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 80026c4:	f240 80d7 	bls.w	8002876 <_printf_float+0x39a>
 80026c8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80026cc:	2200      	movs	r2, #0
 80026ce:	2300      	movs	r3, #0
 80026d0:	f7fe f96a 	bl	80009a8 <__aeabi_dcmpeq>
 80026d4:	b388      	cbz	r0, 800273a <_printf_float+0x25e>
 80026d6:	2301      	movs	r3, #1
 80026d8:	4a40      	ldr	r2, [pc, #256]	; (80027dc <_printf_float+0x300>)
 80026da:	4659      	mov	r1, fp
 80026dc:	4628      	mov	r0, r5
 80026de:	47b0      	blx	r6
 80026e0:	3001      	adds	r0, #1
 80026e2:	f43f af52 	beq.w	800258a <_printf_float+0xae>
 80026e6:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80026ea:	429a      	cmp	r2, r3
 80026ec:	db02      	blt.n	80026f4 <_printf_float+0x218>
 80026ee:	6823      	ldr	r3, [r4, #0]
 80026f0:	07d8      	lsls	r0, r3, #31
 80026f2:	d50e      	bpl.n	8002712 <_printf_float+0x236>
 80026f4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80026f8:	4659      	mov	r1, fp
 80026fa:	4628      	mov	r0, r5
 80026fc:	47b0      	blx	r6
 80026fe:	3001      	adds	r0, #1
 8002700:	f43f af43 	beq.w	800258a <_printf_float+0xae>
 8002704:	2700      	movs	r7, #0
 8002706:	f104 081a 	add.w	r8, r4, #26
 800270a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800270c:	3b01      	subs	r3, #1
 800270e:	42bb      	cmp	r3, r7
 8002710:	dc09      	bgt.n	8002726 <_printf_float+0x24a>
 8002712:	6823      	ldr	r3, [r4, #0]
 8002714:	079f      	lsls	r7, r3, #30
 8002716:	f100 80fd 	bmi.w	8002914 <_printf_float+0x438>
 800271a:	68e0      	ldr	r0, [r4, #12]
 800271c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800271e:	4298      	cmp	r0, r3
 8002720:	bfb8      	it	lt
 8002722:	4618      	movlt	r0, r3
 8002724:	e733      	b.n	800258e <_printf_float+0xb2>
 8002726:	2301      	movs	r3, #1
 8002728:	4642      	mov	r2, r8
 800272a:	4659      	mov	r1, fp
 800272c:	4628      	mov	r0, r5
 800272e:	47b0      	blx	r6
 8002730:	3001      	adds	r0, #1
 8002732:	f43f af2a 	beq.w	800258a <_printf_float+0xae>
 8002736:	3701      	adds	r7, #1
 8002738:	e7e7      	b.n	800270a <_printf_float+0x22e>
 800273a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800273c:	2b00      	cmp	r3, #0
 800273e:	dc2b      	bgt.n	8002798 <_printf_float+0x2bc>
 8002740:	2301      	movs	r3, #1
 8002742:	4a26      	ldr	r2, [pc, #152]	; (80027dc <_printf_float+0x300>)
 8002744:	4659      	mov	r1, fp
 8002746:	4628      	mov	r0, r5
 8002748:	47b0      	blx	r6
 800274a:	3001      	adds	r0, #1
 800274c:	f43f af1d 	beq.w	800258a <_printf_float+0xae>
 8002750:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002752:	b923      	cbnz	r3, 800275e <_printf_float+0x282>
 8002754:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002756:	b913      	cbnz	r3, 800275e <_printf_float+0x282>
 8002758:	6823      	ldr	r3, [r4, #0]
 800275a:	07d9      	lsls	r1, r3, #31
 800275c:	d5d9      	bpl.n	8002712 <_printf_float+0x236>
 800275e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002762:	4659      	mov	r1, fp
 8002764:	4628      	mov	r0, r5
 8002766:	47b0      	blx	r6
 8002768:	3001      	adds	r0, #1
 800276a:	f43f af0e 	beq.w	800258a <_printf_float+0xae>
 800276e:	f04f 0800 	mov.w	r8, #0
 8002772:	f104 091a 	add.w	r9, r4, #26
 8002776:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002778:	425b      	negs	r3, r3
 800277a:	4543      	cmp	r3, r8
 800277c:	dc01      	bgt.n	8002782 <_printf_float+0x2a6>
 800277e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002780:	e797      	b.n	80026b2 <_printf_float+0x1d6>
 8002782:	2301      	movs	r3, #1
 8002784:	464a      	mov	r2, r9
 8002786:	4659      	mov	r1, fp
 8002788:	4628      	mov	r0, r5
 800278a:	47b0      	blx	r6
 800278c:	3001      	adds	r0, #1
 800278e:	f43f aefc 	beq.w	800258a <_printf_float+0xae>
 8002792:	f108 0801 	add.w	r8, r8, #1
 8002796:	e7ee      	b.n	8002776 <_printf_float+0x29a>
 8002798:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800279a:	6da3      	ldr	r3, [r4, #88]	; 0x58
 800279c:	429a      	cmp	r2, r3
 800279e:	bfa8      	it	ge
 80027a0:	461a      	movge	r2, r3
 80027a2:	2a00      	cmp	r2, #0
 80027a4:	4690      	mov	r8, r2
 80027a6:	dd07      	ble.n	80027b8 <_printf_float+0x2dc>
 80027a8:	4613      	mov	r3, r2
 80027aa:	4659      	mov	r1, fp
 80027ac:	463a      	mov	r2, r7
 80027ae:	4628      	mov	r0, r5
 80027b0:	47b0      	blx	r6
 80027b2:	3001      	adds	r0, #1
 80027b4:	f43f aee9 	beq.w	800258a <_printf_float+0xae>
 80027b8:	f104 031a 	add.w	r3, r4, #26
 80027bc:	f04f 0a00 	mov.w	sl, #0
 80027c0:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 80027c4:	930b      	str	r3, [sp, #44]	; 0x2c
 80027c6:	e015      	b.n	80027f4 <_printf_float+0x318>
 80027c8:	7fefffff 	.word	0x7fefffff
 80027cc:	08006cf4 	.word	0x08006cf4
 80027d0:	08006cf0 	.word	0x08006cf0
 80027d4:	08006cfc 	.word	0x08006cfc
 80027d8:	08006cf8 	.word	0x08006cf8
 80027dc:	08006d00 	.word	0x08006d00
 80027e0:	2301      	movs	r3, #1
 80027e2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80027e4:	4659      	mov	r1, fp
 80027e6:	4628      	mov	r0, r5
 80027e8:	47b0      	blx	r6
 80027ea:	3001      	adds	r0, #1
 80027ec:	f43f aecd 	beq.w	800258a <_printf_float+0xae>
 80027f0:	f10a 0a01 	add.w	sl, sl, #1
 80027f4:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
 80027f8:	eba9 0308 	sub.w	r3, r9, r8
 80027fc:	4553      	cmp	r3, sl
 80027fe:	dcef      	bgt.n	80027e0 <_printf_float+0x304>
 8002800:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002804:	429a      	cmp	r2, r3
 8002806:	444f      	add	r7, r9
 8002808:	db14      	blt.n	8002834 <_printf_float+0x358>
 800280a:	6823      	ldr	r3, [r4, #0]
 800280c:	07da      	lsls	r2, r3, #31
 800280e:	d411      	bmi.n	8002834 <_printf_float+0x358>
 8002810:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002812:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002814:	eba3 0209 	sub.w	r2, r3, r9
 8002818:	eba3 0901 	sub.w	r9, r3, r1
 800281c:	4591      	cmp	r9, r2
 800281e:	bfa8      	it	ge
 8002820:	4691      	movge	r9, r2
 8002822:	f1b9 0f00 	cmp.w	r9, #0
 8002826:	dc0d      	bgt.n	8002844 <_printf_float+0x368>
 8002828:	2700      	movs	r7, #0
 800282a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800282e:	f104 081a 	add.w	r8, r4, #26
 8002832:	e018      	b.n	8002866 <_printf_float+0x38a>
 8002834:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002838:	4659      	mov	r1, fp
 800283a:	4628      	mov	r0, r5
 800283c:	47b0      	blx	r6
 800283e:	3001      	adds	r0, #1
 8002840:	d1e6      	bne.n	8002810 <_printf_float+0x334>
 8002842:	e6a2      	b.n	800258a <_printf_float+0xae>
 8002844:	464b      	mov	r3, r9
 8002846:	463a      	mov	r2, r7
 8002848:	4659      	mov	r1, fp
 800284a:	4628      	mov	r0, r5
 800284c:	47b0      	blx	r6
 800284e:	3001      	adds	r0, #1
 8002850:	d1ea      	bne.n	8002828 <_printf_float+0x34c>
 8002852:	e69a      	b.n	800258a <_printf_float+0xae>
 8002854:	2301      	movs	r3, #1
 8002856:	4642      	mov	r2, r8
 8002858:	4659      	mov	r1, fp
 800285a:	4628      	mov	r0, r5
 800285c:	47b0      	blx	r6
 800285e:	3001      	adds	r0, #1
 8002860:	f43f ae93 	beq.w	800258a <_printf_float+0xae>
 8002864:	3701      	adds	r7, #1
 8002866:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800286a:	1a9b      	subs	r3, r3, r2
 800286c:	eba3 0309 	sub.w	r3, r3, r9
 8002870:	42bb      	cmp	r3, r7
 8002872:	dcef      	bgt.n	8002854 <_printf_float+0x378>
 8002874:	e74d      	b.n	8002712 <_printf_float+0x236>
 8002876:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002878:	2a01      	cmp	r2, #1
 800287a:	dc01      	bgt.n	8002880 <_printf_float+0x3a4>
 800287c:	07db      	lsls	r3, r3, #31
 800287e:	d538      	bpl.n	80028f2 <_printf_float+0x416>
 8002880:	2301      	movs	r3, #1
 8002882:	463a      	mov	r2, r7
 8002884:	4659      	mov	r1, fp
 8002886:	4628      	mov	r0, r5
 8002888:	47b0      	blx	r6
 800288a:	3001      	adds	r0, #1
 800288c:	f43f ae7d 	beq.w	800258a <_printf_float+0xae>
 8002890:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002894:	4659      	mov	r1, fp
 8002896:	4628      	mov	r0, r5
 8002898:	47b0      	blx	r6
 800289a:	3001      	adds	r0, #1
 800289c:	f107 0701 	add.w	r7, r7, #1
 80028a0:	f43f ae73 	beq.w	800258a <_printf_float+0xae>
 80028a4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80028a8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80028aa:	2200      	movs	r2, #0
 80028ac:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80028b0:	2300      	movs	r3, #0
 80028b2:	f7fe f879 	bl	80009a8 <__aeabi_dcmpeq>
 80028b6:	b9c0      	cbnz	r0, 80028ea <_printf_float+0x40e>
 80028b8:	4643      	mov	r3, r8
 80028ba:	463a      	mov	r2, r7
 80028bc:	4659      	mov	r1, fp
 80028be:	4628      	mov	r0, r5
 80028c0:	47b0      	blx	r6
 80028c2:	3001      	adds	r0, #1
 80028c4:	d10d      	bne.n	80028e2 <_printf_float+0x406>
 80028c6:	e660      	b.n	800258a <_printf_float+0xae>
 80028c8:	2301      	movs	r3, #1
 80028ca:	4642      	mov	r2, r8
 80028cc:	4659      	mov	r1, fp
 80028ce:	4628      	mov	r0, r5
 80028d0:	47b0      	blx	r6
 80028d2:	3001      	adds	r0, #1
 80028d4:	f43f ae59 	beq.w	800258a <_printf_float+0xae>
 80028d8:	3701      	adds	r7, #1
 80028da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80028dc:	3b01      	subs	r3, #1
 80028de:	42bb      	cmp	r3, r7
 80028e0:	dcf2      	bgt.n	80028c8 <_printf_float+0x3ec>
 80028e2:	464b      	mov	r3, r9
 80028e4:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80028e8:	e6e4      	b.n	80026b4 <_printf_float+0x1d8>
 80028ea:	2700      	movs	r7, #0
 80028ec:	f104 081a 	add.w	r8, r4, #26
 80028f0:	e7f3      	b.n	80028da <_printf_float+0x3fe>
 80028f2:	2301      	movs	r3, #1
 80028f4:	e7e1      	b.n	80028ba <_printf_float+0x3de>
 80028f6:	2301      	movs	r3, #1
 80028f8:	4642      	mov	r2, r8
 80028fa:	4659      	mov	r1, fp
 80028fc:	4628      	mov	r0, r5
 80028fe:	47b0      	blx	r6
 8002900:	3001      	adds	r0, #1
 8002902:	f43f ae42 	beq.w	800258a <_printf_float+0xae>
 8002906:	3701      	adds	r7, #1
 8002908:	68e3      	ldr	r3, [r4, #12]
 800290a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800290c:	1a9b      	subs	r3, r3, r2
 800290e:	42bb      	cmp	r3, r7
 8002910:	dcf1      	bgt.n	80028f6 <_printf_float+0x41a>
 8002912:	e702      	b.n	800271a <_printf_float+0x23e>
 8002914:	2700      	movs	r7, #0
 8002916:	f104 0819 	add.w	r8, r4, #25
 800291a:	e7f5      	b.n	8002908 <_printf_float+0x42c>
 800291c:	2b00      	cmp	r3, #0
 800291e:	f43f ae94 	beq.w	800264a <_printf_float+0x16e>
 8002922:	f04f 0c00 	mov.w	ip, #0
 8002926:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 800292a:	f10d 0133 	add.w	r1, sp, #51	; 0x33
 800292e:	6022      	str	r2, [r4, #0]
 8002930:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8002934:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8002938:	9300      	str	r3, [sp, #0]
 800293a:	463a      	mov	r2, r7
 800293c:	464b      	mov	r3, r9
 800293e:	4628      	mov	r0, r5
 8002940:	f7ff fd3a 	bl	80023b8 <__cvt>
 8002944:	4607      	mov	r7, r0
 8002946:	e64f      	b.n	80025e8 <_printf_float+0x10c>

08002948 <_printf_common>:
 8002948:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800294c:	4691      	mov	r9, r2
 800294e:	461f      	mov	r7, r3
 8002950:	688a      	ldr	r2, [r1, #8]
 8002952:	690b      	ldr	r3, [r1, #16]
 8002954:	4606      	mov	r6, r0
 8002956:	4293      	cmp	r3, r2
 8002958:	bfb8      	it	lt
 800295a:	4613      	movlt	r3, r2
 800295c:	f8c9 3000 	str.w	r3, [r9]
 8002960:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002964:	460c      	mov	r4, r1
 8002966:	f8dd 8020 	ldr.w	r8, [sp, #32]
 800296a:	b112      	cbz	r2, 8002972 <_printf_common+0x2a>
 800296c:	3301      	adds	r3, #1
 800296e:	f8c9 3000 	str.w	r3, [r9]
 8002972:	6823      	ldr	r3, [r4, #0]
 8002974:	0699      	lsls	r1, r3, #26
 8002976:	bf42      	ittt	mi
 8002978:	f8d9 3000 	ldrmi.w	r3, [r9]
 800297c:	3302      	addmi	r3, #2
 800297e:	f8c9 3000 	strmi.w	r3, [r9]
 8002982:	6825      	ldr	r5, [r4, #0]
 8002984:	f015 0506 	ands.w	r5, r5, #6
 8002988:	d107      	bne.n	800299a <_printf_common+0x52>
 800298a:	f104 0a19 	add.w	sl, r4, #25
 800298e:	68e3      	ldr	r3, [r4, #12]
 8002990:	f8d9 2000 	ldr.w	r2, [r9]
 8002994:	1a9b      	subs	r3, r3, r2
 8002996:	42ab      	cmp	r3, r5
 8002998:	dc29      	bgt.n	80029ee <_printf_common+0xa6>
 800299a:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 800299e:	6822      	ldr	r2, [r4, #0]
 80029a0:	3300      	adds	r3, #0
 80029a2:	bf18      	it	ne
 80029a4:	2301      	movne	r3, #1
 80029a6:	0692      	lsls	r2, r2, #26
 80029a8:	d42e      	bmi.n	8002a08 <_printf_common+0xc0>
 80029aa:	f104 0243 	add.w	r2, r4, #67	; 0x43
 80029ae:	4639      	mov	r1, r7
 80029b0:	4630      	mov	r0, r6
 80029b2:	47c0      	blx	r8
 80029b4:	3001      	adds	r0, #1
 80029b6:	d021      	beq.n	80029fc <_printf_common+0xb4>
 80029b8:	6823      	ldr	r3, [r4, #0]
 80029ba:	68e5      	ldr	r5, [r4, #12]
 80029bc:	f003 0306 	and.w	r3, r3, #6
 80029c0:	2b04      	cmp	r3, #4
 80029c2:	bf18      	it	ne
 80029c4:	2500      	movne	r5, #0
 80029c6:	f8d9 2000 	ldr.w	r2, [r9]
 80029ca:	f04f 0900 	mov.w	r9, #0
 80029ce:	bf08      	it	eq
 80029d0:	1aad      	subeq	r5, r5, r2
 80029d2:	68a3      	ldr	r3, [r4, #8]
 80029d4:	6922      	ldr	r2, [r4, #16]
 80029d6:	bf08      	it	eq
 80029d8:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80029dc:	4293      	cmp	r3, r2
 80029de:	bfc4      	itt	gt
 80029e0:	1a9b      	subgt	r3, r3, r2
 80029e2:	18ed      	addgt	r5, r5, r3
 80029e4:	341a      	adds	r4, #26
 80029e6:	454d      	cmp	r5, r9
 80029e8:	d11a      	bne.n	8002a20 <_printf_common+0xd8>
 80029ea:	2000      	movs	r0, #0
 80029ec:	e008      	b.n	8002a00 <_printf_common+0xb8>
 80029ee:	2301      	movs	r3, #1
 80029f0:	4652      	mov	r2, sl
 80029f2:	4639      	mov	r1, r7
 80029f4:	4630      	mov	r0, r6
 80029f6:	47c0      	blx	r8
 80029f8:	3001      	adds	r0, #1
 80029fa:	d103      	bne.n	8002a04 <_printf_common+0xbc>
 80029fc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002a00:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002a04:	3501      	adds	r5, #1
 8002a06:	e7c2      	b.n	800298e <_printf_common+0x46>
 8002a08:	2030      	movs	r0, #48	; 0x30
 8002a0a:	18e1      	adds	r1, r4, r3
 8002a0c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002a10:	1c5a      	adds	r2, r3, #1
 8002a12:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002a16:	4422      	add	r2, r4
 8002a18:	3302      	adds	r3, #2
 8002a1a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002a1e:	e7c4      	b.n	80029aa <_printf_common+0x62>
 8002a20:	2301      	movs	r3, #1
 8002a22:	4622      	mov	r2, r4
 8002a24:	4639      	mov	r1, r7
 8002a26:	4630      	mov	r0, r6
 8002a28:	47c0      	blx	r8
 8002a2a:	3001      	adds	r0, #1
 8002a2c:	d0e6      	beq.n	80029fc <_printf_common+0xb4>
 8002a2e:	f109 0901 	add.w	r9, r9, #1
 8002a32:	e7d8      	b.n	80029e6 <_printf_common+0x9e>

08002a34 <_printf_i>:
 8002a34:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002a38:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8002a3c:	460c      	mov	r4, r1
 8002a3e:	7e09      	ldrb	r1, [r1, #24]
 8002a40:	b085      	sub	sp, #20
 8002a42:	296e      	cmp	r1, #110	; 0x6e
 8002a44:	4617      	mov	r7, r2
 8002a46:	4606      	mov	r6, r0
 8002a48:	4698      	mov	r8, r3
 8002a4a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002a4c:	f000 80b3 	beq.w	8002bb6 <_printf_i+0x182>
 8002a50:	d822      	bhi.n	8002a98 <_printf_i+0x64>
 8002a52:	2963      	cmp	r1, #99	; 0x63
 8002a54:	d036      	beq.n	8002ac4 <_printf_i+0x90>
 8002a56:	d80a      	bhi.n	8002a6e <_printf_i+0x3a>
 8002a58:	2900      	cmp	r1, #0
 8002a5a:	f000 80b9 	beq.w	8002bd0 <_printf_i+0x19c>
 8002a5e:	2958      	cmp	r1, #88	; 0x58
 8002a60:	f000 8083 	beq.w	8002b6a <_printf_i+0x136>
 8002a64:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002a68:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8002a6c:	e032      	b.n	8002ad4 <_printf_i+0xa0>
 8002a6e:	2964      	cmp	r1, #100	; 0x64
 8002a70:	d001      	beq.n	8002a76 <_printf_i+0x42>
 8002a72:	2969      	cmp	r1, #105	; 0x69
 8002a74:	d1f6      	bne.n	8002a64 <_printf_i+0x30>
 8002a76:	6820      	ldr	r0, [r4, #0]
 8002a78:	6813      	ldr	r3, [r2, #0]
 8002a7a:	0605      	lsls	r5, r0, #24
 8002a7c:	f103 0104 	add.w	r1, r3, #4
 8002a80:	d52a      	bpl.n	8002ad8 <_printf_i+0xa4>
 8002a82:	681b      	ldr	r3, [r3, #0]
 8002a84:	6011      	str	r1, [r2, #0]
 8002a86:	2b00      	cmp	r3, #0
 8002a88:	da03      	bge.n	8002a92 <_printf_i+0x5e>
 8002a8a:	222d      	movs	r2, #45	; 0x2d
 8002a8c:	425b      	negs	r3, r3
 8002a8e:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8002a92:	486f      	ldr	r0, [pc, #444]	; (8002c50 <_printf_i+0x21c>)
 8002a94:	220a      	movs	r2, #10
 8002a96:	e039      	b.n	8002b0c <_printf_i+0xd8>
 8002a98:	2973      	cmp	r1, #115	; 0x73
 8002a9a:	f000 809d 	beq.w	8002bd8 <_printf_i+0x1a4>
 8002a9e:	d808      	bhi.n	8002ab2 <_printf_i+0x7e>
 8002aa0:	296f      	cmp	r1, #111	; 0x6f
 8002aa2:	d020      	beq.n	8002ae6 <_printf_i+0xb2>
 8002aa4:	2970      	cmp	r1, #112	; 0x70
 8002aa6:	d1dd      	bne.n	8002a64 <_printf_i+0x30>
 8002aa8:	6823      	ldr	r3, [r4, #0]
 8002aaa:	f043 0320 	orr.w	r3, r3, #32
 8002aae:	6023      	str	r3, [r4, #0]
 8002ab0:	e003      	b.n	8002aba <_printf_i+0x86>
 8002ab2:	2975      	cmp	r1, #117	; 0x75
 8002ab4:	d017      	beq.n	8002ae6 <_printf_i+0xb2>
 8002ab6:	2978      	cmp	r1, #120	; 0x78
 8002ab8:	d1d4      	bne.n	8002a64 <_printf_i+0x30>
 8002aba:	2378      	movs	r3, #120	; 0x78
 8002abc:	4865      	ldr	r0, [pc, #404]	; (8002c54 <_printf_i+0x220>)
 8002abe:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002ac2:	e055      	b.n	8002b70 <_printf_i+0x13c>
 8002ac4:	6813      	ldr	r3, [r2, #0]
 8002ac6:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002aca:	1d19      	adds	r1, r3, #4
 8002acc:	681b      	ldr	r3, [r3, #0]
 8002ace:	6011      	str	r1, [r2, #0]
 8002ad0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002ad4:	2301      	movs	r3, #1
 8002ad6:	e08c      	b.n	8002bf2 <_printf_i+0x1be>
 8002ad8:	681b      	ldr	r3, [r3, #0]
 8002ada:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002ade:	6011      	str	r1, [r2, #0]
 8002ae0:	bf18      	it	ne
 8002ae2:	b21b      	sxthne	r3, r3
 8002ae4:	e7cf      	b.n	8002a86 <_printf_i+0x52>
 8002ae6:	6813      	ldr	r3, [r2, #0]
 8002ae8:	6825      	ldr	r5, [r4, #0]
 8002aea:	1d18      	adds	r0, r3, #4
 8002aec:	6010      	str	r0, [r2, #0]
 8002aee:	0628      	lsls	r0, r5, #24
 8002af0:	d501      	bpl.n	8002af6 <_printf_i+0xc2>
 8002af2:	681b      	ldr	r3, [r3, #0]
 8002af4:	e002      	b.n	8002afc <_printf_i+0xc8>
 8002af6:	0668      	lsls	r0, r5, #25
 8002af8:	d5fb      	bpl.n	8002af2 <_printf_i+0xbe>
 8002afa:	881b      	ldrh	r3, [r3, #0]
 8002afc:	296f      	cmp	r1, #111	; 0x6f
 8002afe:	bf14      	ite	ne
 8002b00:	220a      	movne	r2, #10
 8002b02:	2208      	moveq	r2, #8
 8002b04:	4852      	ldr	r0, [pc, #328]	; (8002c50 <_printf_i+0x21c>)
 8002b06:	2100      	movs	r1, #0
 8002b08:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002b0c:	6865      	ldr	r5, [r4, #4]
 8002b0e:	2d00      	cmp	r5, #0
 8002b10:	60a5      	str	r5, [r4, #8]
 8002b12:	f2c0 8095 	blt.w	8002c40 <_printf_i+0x20c>
 8002b16:	6821      	ldr	r1, [r4, #0]
 8002b18:	f021 0104 	bic.w	r1, r1, #4
 8002b1c:	6021      	str	r1, [r4, #0]
 8002b1e:	2b00      	cmp	r3, #0
 8002b20:	d13d      	bne.n	8002b9e <_printf_i+0x16a>
 8002b22:	2d00      	cmp	r5, #0
 8002b24:	f040 808e 	bne.w	8002c44 <_printf_i+0x210>
 8002b28:	4665      	mov	r5, ip
 8002b2a:	2a08      	cmp	r2, #8
 8002b2c:	d10b      	bne.n	8002b46 <_printf_i+0x112>
 8002b2e:	6823      	ldr	r3, [r4, #0]
 8002b30:	07db      	lsls	r3, r3, #31
 8002b32:	d508      	bpl.n	8002b46 <_printf_i+0x112>
 8002b34:	6923      	ldr	r3, [r4, #16]
 8002b36:	6862      	ldr	r2, [r4, #4]
 8002b38:	429a      	cmp	r2, r3
 8002b3a:	bfde      	ittt	le
 8002b3c:	2330      	movle	r3, #48	; 0x30
 8002b3e:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002b42:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8002b46:	ebac 0305 	sub.w	r3, ip, r5
 8002b4a:	6123      	str	r3, [r4, #16]
 8002b4c:	f8cd 8000 	str.w	r8, [sp]
 8002b50:	463b      	mov	r3, r7
 8002b52:	aa03      	add	r2, sp, #12
 8002b54:	4621      	mov	r1, r4
 8002b56:	4630      	mov	r0, r6
 8002b58:	f7ff fef6 	bl	8002948 <_printf_common>
 8002b5c:	3001      	adds	r0, #1
 8002b5e:	d14d      	bne.n	8002bfc <_printf_i+0x1c8>
 8002b60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002b64:	b005      	add	sp, #20
 8002b66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002b6a:	4839      	ldr	r0, [pc, #228]	; (8002c50 <_printf_i+0x21c>)
 8002b6c:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8002b70:	6813      	ldr	r3, [r2, #0]
 8002b72:	6821      	ldr	r1, [r4, #0]
 8002b74:	1d1d      	adds	r5, r3, #4
 8002b76:	681b      	ldr	r3, [r3, #0]
 8002b78:	6015      	str	r5, [r2, #0]
 8002b7a:	060a      	lsls	r2, r1, #24
 8002b7c:	d50b      	bpl.n	8002b96 <_printf_i+0x162>
 8002b7e:	07ca      	lsls	r2, r1, #31
 8002b80:	bf44      	itt	mi
 8002b82:	f041 0120 	orrmi.w	r1, r1, #32
 8002b86:	6021      	strmi	r1, [r4, #0]
 8002b88:	b91b      	cbnz	r3, 8002b92 <_printf_i+0x15e>
 8002b8a:	6822      	ldr	r2, [r4, #0]
 8002b8c:	f022 0220 	bic.w	r2, r2, #32
 8002b90:	6022      	str	r2, [r4, #0]
 8002b92:	2210      	movs	r2, #16
 8002b94:	e7b7      	b.n	8002b06 <_printf_i+0xd2>
 8002b96:	064d      	lsls	r5, r1, #25
 8002b98:	bf48      	it	mi
 8002b9a:	b29b      	uxthmi	r3, r3
 8002b9c:	e7ef      	b.n	8002b7e <_printf_i+0x14a>
 8002b9e:	4665      	mov	r5, ip
 8002ba0:	fbb3 f1f2 	udiv	r1, r3, r2
 8002ba4:	fb02 3311 	mls	r3, r2, r1, r3
 8002ba8:	5cc3      	ldrb	r3, [r0, r3]
 8002baa:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8002bae:	460b      	mov	r3, r1
 8002bb0:	2900      	cmp	r1, #0
 8002bb2:	d1f5      	bne.n	8002ba0 <_printf_i+0x16c>
 8002bb4:	e7b9      	b.n	8002b2a <_printf_i+0xf6>
 8002bb6:	6813      	ldr	r3, [r2, #0]
 8002bb8:	6825      	ldr	r5, [r4, #0]
 8002bba:	1d18      	adds	r0, r3, #4
 8002bbc:	6961      	ldr	r1, [r4, #20]
 8002bbe:	6010      	str	r0, [r2, #0]
 8002bc0:	0628      	lsls	r0, r5, #24
 8002bc2:	681b      	ldr	r3, [r3, #0]
 8002bc4:	d501      	bpl.n	8002bca <_printf_i+0x196>
 8002bc6:	6019      	str	r1, [r3, #0]
 8002bc8:	e002      	b.n	8002bd0 <_printf_i+0x19c>
 8002bca:	066a      	lsls	r2, r5, #25
 8002bcc:	d5fb      	bpl.n	8002bc6 <_printf_i+0x192>
 8002bce:	8019      	strh	r1, [r3, #0]
 8002bd0:	2300      	movs	r3, #0
 8002bd2:	4665      	mov	r5, ip
 8002bd4:	6123      	str	r3, [r4, #16]
 8002bd6:	e7b9      	b.n	8002b4c <_printf_i+0x118>
 8002bd8:	6813      	ldr	r3, [r2, #0]
 8002bda:	1d19      	adds	r1, r3, #4
 8002bdc:	6011      	str	r1, [r2, #0]
 8002bde:	681d      	ldr	r5, [r3, #0]
 8002be0:	6862      	ldr	r2, [r4, #4]
 8002be2:	2100      	movs	r1, #0
 8002be4:	4628      	mov	r0, r5
 8002be6:	f002 fdc7 	bl	8005778 <memchr>
 8002bea:	b108      	cbz	r0, 8002bf0 <_printf_i+0x1bc>
 8002bec:	1b40      	subs	r0, r0, r5
 8002bee:	6060      	str	r0, [r4, #4]
 8002bf0:	6863      	ldr	r3, [r4, #4]
 8002bf2:	6123      	str	r3, [r4, #16]
 8002bf4:	2300      	movs	r3, #0
 8002bf6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002bfa:	e7a7      	b.n	8002b4c <_printf_i+0x118>
 8002bfc:	6923      	ldr	r3, [r4, #16]
 8002bfe:	462a      	mov	r2, r5
 8002c00:	4639      	mov	r1, r7
 8002c02:	4630      	mov	r0, r6
 8002c04:	47c0      	blx	r8
 8002c06:	3001      	adds	r0, #1
 8002c08:	d0aa      	beq.n	8002b60 <_printf_i+0x12c>
 8002c0a:	6823      	ldr	r3, [r4, #0]
 8002c0c:	079b      	lsls	r3, r3, #30
 8002c0e:	d413      	bmi.n	8002c38 <_printf_i+0x204>
 8002c10:	68e0      	ldr	r0, [r4, #12]
 8002c12:	9b03      	ldr	r3, [sp, #12]
 8002c14:	4298      	cmp	r0, r3
 8002c16:	bfb8      	it	lt
 8002c18:	4618      	movlt	r0, r3
 8002c1a:	e7a3      	b.n	8002b64 <_printf_i+0x130>
 8002c1c:	2301      	movs	r3, #1
 8002c1e:	464a      	mov	r2, r9
 8002c20:	4639      	mov	r1, r7
 8002c22:	4630      	mov	r0, r6
 8002c24:	47c0      	blx	r8
 8002c26:	3001      	adds	r0, #1
 8002c28:	d09a      	beq.n	8002b60 <_printf_i+0x12c>
 8002c2a:	3501      	adds	r5, #1
 8002c2c:	68e3      	ldr	r3, [r4, #12]
 8002c2e:	9a03      	ldr	r2, [sp, #12]
 8002c30:	1a9b      	subs	r3, r3, r2
 8002c32:	42ab      	cmp	r3, r5
 8002c34:	dcf2      	bgt.n	8002c1c <_printf_i+0x1e8>
 8002c36:	e7eb      	b.n	8002c10 <_printf_i+0x1dc>
 8002c38:	2500      	movs	r5, #0
 8002c3a:	f104 0919 	add.w	r9, r4, #25
 8002c3e:	e7f5      	b.n	8002c2c <_printf_i+0x1f8>
 8002c40:	2b00      	cmp	r3, #0
 8002c42:	d1ac      	bne.n	8002b9e <_printf_i+0x16a>
 8002c44:	7803      	ldrb	r3, [r0, #0]
 8002c46:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002c4a:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002c4e:	e76c      	b.n	8002b2a <_printf_i+0xf6>
 8002c50:	08006d02 	.word	0x08006d02
 8002c54:	08006d13 	.word	0x08006d13

08002c58 <_scanf_float>:
 8002c58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002c5c:	469a      	mov	sl, r3
 8002c5e:	688b      	ldr	r3, [r1, #8]
 8002c60:	4616      	mov	r6, r2
 8002c62:	1e5a      	subs	r2, r3, #1
 8002c64:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002c68:	bf88      	it	hi
 8002c6a:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
 8002c6e:	b087      	sub	sp, #28
 8002c70:	bf85      	ittet	hi
 8002c72:	189b      	addhi	r3, r3, r2
 8002c74:	9301      	strhi	r3, [sp, #4]
 8002c76:	2300      	movls	r3, #0
 8002c78:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002c7c:	4688      	mov	r8, r1
 8002c7e:	f04f 0b00 	mov.w	fp, #0
 8002c82:	bf8c      	ite	hi
 8002c84:	608b      	strhi	r3, [r1, #8]
 8002c86:	9301      	strls	r3, [sp, #4]
 8002c88:	680b      	ldr	r3, [r1, #0]
 8002c8a:	4607      	mov	r7, r0
 8002c8c:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8002c90:	f848 3b1c 	str.w	r3, [r8], #28
 8002c94:	460c      	mov	r4, r1
 8002c96:	4645      	mov	r5, r8
 8002c98:	465a      	mov	r2, fp
 8002c9a:	46d9      	mov	r9, fp
 8002c9c:	e9cd bb03 	strd	fp, fp, [sp, #12]
 8002ca0:	f8cd b008 	str.w	fp, [sp, #8]
 8002ca4:	68a1      	ldr	r1, [r4, #8]
 8002ca6:	b181      	cbz	r1, 8002cca <_scanf_float+0x72>
 8002ca8:	6833      	ldr	r3, [r6, #0]
 8002caa:	781b      	ldrb	r3, [r3, #0]
 8002cac:	2b49      	cmp	r3, #73	; 0x49
 8002cae:	d071      	beq.n	8002d94 <_scanf_float+0x13c>
 8002cb0:	d84d      	bhi.n	8002d4e <_scanf_float+0xf6>
 8002cb2:	2b39      	cmp	r3, #57	; 0x39
 8002cb4:	d840      	bhi.n	8002d38 <_scanf_float+0xe0>
 8002cb6:	2b31      	cmp	r3, #49	; 0x31
 8002cb8:	f080 8088 	bcs.w	8002dcc <_scanf_float+0x174>
 8002cbc:	2b2d      	cmp	r3, #45	; 0x2d
 8002cbe:	f000 8090 	beq.w	8002de2 <_scanf_float+0x18a>
 8002cc2:	d815      	bhi.n	8002cf0 <_scanf_float+0x98>
 8002cc4:	2b2b      	cmp	r3, #43	; 0x2b
 8002cc6:	f000 808c 	beq.w	8002de2 <_scanf_float+0x18a>
 8002cca:	f1b9 0f00 	cmp.w	r9, #0
 8002cce:	d003      	beq.n	8002cd8 <_scanf_float+0x80>
 8002cd0:	6823      	ldr	r3, [r4, #0]
 8002cd2:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002cd6:	6023      	str	r3, [r4, #0]
 8002cd8:	3a01      	subs	r2, #1
 8002cda:	2a01      	cmp	r2, #1
 8002cdc:	f200 80ea 	bhi.w	8002eb4 <_scanf_float+0x25c>
 8002ce0:	4545      	cmp	r5, r8
 8002ce2:	f200 80dc 	bhi.w	8002e9e <_scanf_float+0x246>
 8002ce6:	2601      	movs	r6, #1
 8002ce8:	4630      	mov	r0, r6
 8002cea:	b007      	add	sp, #28
 8002cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002cf0:	2b2e      	cmp	r3, #46	; 0x2e
 8002cf2:	f000 809f 	beq.w	8002e34 <_scanf_float+0x1dc>
 8002cf6:	2b30      	cmp	r3, #48	; 0x30
 8002cf8:	d1e7      	bne.n	8002cca <_scanf_float+0x72>
 8002cfa:	6820      	ldr	r0, [r4, #0]
 8002cfc:	f410 7f80 	tst.w	r0, #256	; 0x100
 8002d00:	d064      	beq.n	8002dcc <_scanf_float+0x174>
 8002d02:	9b01      	ldr	r3, [sp, #4]
 8002d04:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8002d08:	6020      	str	r0, [r4, #0]
 8002d0a:	f109 0901 	add.w	r9, r9, #1
 8002d0e:	b11b      	cbz	r3, 8002d18 <_scanf_float+0xc0>
 8002d10:	3b01      	subs	r3, #1
 8002d12:	3101      	adds	r1, #1
 8002d14:	9301      	str	r3, [sp, #4]
 8002d16:	60a1      	str	r1, [r4, #8]
 8002d18:	68a3      	ldr	r3, [r4, #8]
 8002d1a:	3b01      	subs	r3, #1
 8002d1c:	60a3      	str	r3, [r4, #8]
 8002d1e:	6923      	ldr	r3, [r4, #16]
 8002d20:	3301      	adds	r3, #1
 8002d22:	6123      	str	r3, [r4, #16]
 8002d24:	6873      	ldr	r3, [r6, #4]
 8002d26:	3b01      	subs	r3, #1
 8002d28:	2b00      	cmp	r3, #0
 8002d2a:	6073      	str	r3, [r6, #4]
 8002d2c:	f340 80ac 	ble.w	8002e88 <_scanf_float+0x230>
 8002d30:	6833      	ldr	r3, [r6, #0]
 8002d32:	3301      	adds	r3, #1
 8002d34:	6033      	str	r3, [r6, #0]
 8002d36:	e7b5      	b.n	8002ca4 <_scanf_float+0x4c>
 8002d38:	2b45      	cmp	r3, #69	; 0x45
 8002d3a:	f000 8085 	beq.w	8002e48 <_scanf_float+0x1f0>
 8002d3e:	2b46      	cmp	r3, #70	; 0x46
 8002d40:	d06a      	beq.n	8002e18 <_scanf_float+0x1c0>
 8002d42:	2b41      	cmp	r3, #65	; 0x41
 8002d44:	d1c1      	bne.n	8002cca <_scanf_float+0x72>
 8002d46:	2a01      	cmp	r2, #1
 8002d48:	d1bf      	bne.n	8002cca <_scanf_float+0x72>
 8002d4a:	2202      	movs	r2, #2
 8002d4c:	e046      	b.n	8002ddc <_scanf_float+0x184>
 8002d4e:	2b65      	cmp	r3, #101	; 0x65
 8002d50:	d07a      	beq.n	8002e48 <_scanf_float+0x1f0>
 8002d52:	d818      	bhi.n	8002d86 <_scanf_float+0x12e>
 8002d54:	2b54      	cmp	r3, #84	; 0x54
 8002d56:	d066      	beq.n	8002e26 <_scanf_float+0x1ce>
 8002d58:	d811      	bhi.n	8002d7e <_scanf_float+0x126>
 8002d5a:	2b4e      	cmp	r3, #78	; 0x4e
 8002d5c:	d1b5      	bne.n	8002cca <_scanf_float+0x72>
 8002d5e:	2a00      	cmp	r2, #0
 8002d60:	d146      	bne.n	8002df0 <_scanf_float+0x198>
 8002d62:	f1b9 0f00 	cmp.w	r9, #0
 8002d66:	d145      	bne.n	8002df4 <_scanf_float+0x19c>
 8002d68:	6821      	ldr	r1, [r4, #0]
 8002d6a:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 8002d6e:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8002d72:	d13f      	bne.n	8002df4 <_scanf_float+0x19c>
 8002d74:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002d78:	6021      	str	r1, [r4, #0]
 8002d7a:	2201      	movs	r2, #1
 8002d7c:	e02e      	b.n	8002ddc <_scanf_float+0x184>
 8002d7e:	2b59      	cmp	r3, #89	; 0x59
 8002d80:	d01e      	beq.n	8002dc0 <_scanf_float+0x168>
 8002d82:	2b61      	cmp	r3, #97	; 0x61
 8002d84:	e7de      	b.n	8002d44 <_scanf_float+0xec>
 8002d86:	2b6e      	cmp	r3, #110	; 0x6e
 8002d88:	d0e9      	beq.n	8002d5e <_scanf_float+0x106>
 8002d8a:	d815      	bhi.n	8002db8 <_scanf_float+0x160>
 8002d8c:	2b66      	cmp	r3, #102	; 0x66
 8002d8e:	d043      	beq.n	8002e18 <_scanf_float+0x1c0>
 8002d90:	2b69      	cmp	r3, #105	; 0x69
 8002d92:	d19a      	bne.n	8002cca <_scanf_float+0x72>
 8002d94:	f1bb 0f00 	cmp.w	fp, #0
 8002d98:	d138      	bne.n	8002e0c <_scanf_float+0x1b4>
 8002d9a:	f1b9 0f00 	cmp.w	r9, #0
 8002d9e:	d197      	bne.n	8002cd0 <_scanf_float+0x78>
 8002da0:	6821      	ldr	r1, [r4, #0]
 8002da2:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 8002da6:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8002daa:	d195      	bne.n	8002cd8 <_scanf_float+0x80>
 8002dac:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002db0:	6021      	str	r1, [r4, #0]
 8002db2:	f04f 0b01 	mov.w	fp, #1
 8002db6:	e011      	b.n	8002ddc <_scanf_float+0x184>
 8002db8:	2b74      	cmp	r3, #116	; 0x74
 8002dba:	d034      	beq.n	8002e26 <_scanf_float+0x1ce>
 8002dbc:	2b79      	cmp	r3, #121	; 0x79
 8002dbe:	d184      	bne.n	8002cca <_scanf_float+0x72>
 8002dc0:	f1bb 0f07 	cmp.w	fp, #7
 8002dc4:	d181      	bne.n	8002cca <_scanf_float+0x72>
 8002dc6:	f04f 0b08 	mov.w	fp, #8
 8002dca:	e007      	b.n	8002ddc <_scanf_float+0x184>
 8002dcc:	eb12 0f0b 	cmn.w	r2, fp
 8002dd0:	f47f af7b 	bne.w	8002cca <_scanf_float+0x72>
 8002dd4:	6821      	ldr	r1, [r4, #0]
 8002dd6:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
 8002dda:	6021      	str	r1, [r4, #0]
 8002ddc:	702b      	strb	r3, [r5, #0]
 8002dde:	3501      	adds	r5, #1
 8002de0:	e79a      	b.n	8002d18 <_scanf_float+0xc0>
 8002de2:	6821      	ldr	r1, [r4, #0]
 8002de4:	0608      	lsls	r0, r1, #24
 8002de6:	f57f af70 	bpl.w	8002cca <_scanf_float+0x72>
 8002dea:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002dee:	e7f4      	b.n	8002dda <_scanf_float+0x182>
 8002df0:	2a02      	cmp	r2, #2
 8002df2:	d047      	beq.n	8002e84 <_scanf_float+0x22c>
 8002df4:	f1bb 0f01 	cmp.w	fp, #1
 8002df8:	d003      	beq.n	8002e02 <_scanf_float+0x1aa>
 8002dfa:	f1bb 0f04 	cmp.w	fp, #4
 8002dfe:	f47f af64 	bne.w	8002cca <_scanf_float+0x72>
 8002e02:	f10b 0b01 	add.w	fp, fp, #1
 8002e06:	fa5f fb8b 	uxtb.w	fp, fp
 8002e0a:	e7e7      	b.n	8002ddc <_scanf_float+0x184>
 8002e0c:	f1bb 0f03 	cmp.w	fp, #3
 8002e10:	d0f7      	beq.n	8002e02 <_scanf_float+0x1aa>
 8002e12:	f1bb 0f05 	cmp.w	fp, #5
 8002e16:	e7f2      	b.n	8002dfe <_scanf_float+0x1a6>
 8002e18:	f1bb 0f02 	cmp.w	fp, #2
 8002e1c:	f47f af55 	bne.w	8002cca <_scanf_float+0x72>
 8002e20:	f04f 0b03 	mov.w	fp, #3
 8002e24:	e7da      	b.n	8002ddc <_scanf_float+0x184>
 8002e26:	f1bb 0f06 	cmp.w	fp, #6
 8002e2a:	f47f af4e 	bne.w	8002cca <_scanf_float+0x72>
 8002e2e:	f04f 0b07 	mov.w	fp, #7
 8002e32:	e7d3      	b.n	8002ddc <_scanf_float+0x184>
 8002e34:	6821      	ldr	r1, [r4, #0]
 8002e36:	0588      	lsls	r0, r1, #22
 8002e38:	f57f af47 	bpl.w	8002cca <_scanf_float+0x72>
 8002e3c:	f421 7120 	bic.w	r1, r1, #640	; 0x280
 8002e40:	6021      	str	r1, [r4, #0]
 8002e42:	f8cd 9008 	str.w	r9, [sp, #8]
 8002e46:	e7c9      	b.n	8002ddc <_scanf_float+0x184>
 8002e48:	6821      	ldr	r1, [r4, #0]
 8002e4a:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
 8002e4e:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8002e52:	d006      	beq.n	8002e62 <_scanf_float+0x20a>
 8002e54:	0548      	lsls	r0, r1, #21
 8002e56:	f57f af38 	bpl.w	8002cca <_scanf_float+0x72>
 8002e5a:	f1b9 0f00 	cmp.w	r9, #0
 8002e5e:	f43f af3b 	beq.w	8002cd8 <_scanf_float+0x80>
 8002e62:	0588      	lsls	r0, r1, #22
 8002e64:	bf58      	it	pl
 8002e66:	9802      	ldrpl	r0, [sp, #8]
 8002e68:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002e6c:	bf58      	it	pl
 8002e6e:	eba9 0000 	subpl.w	r0, r9, r0
 8002e72:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
 8002e76:	bf58      	it	pl
 8002e78:	e9cd 0503 	strdpl	r0, r5, [sp, #12]
 8002e7c:	6021      	str	r1, [r4, #0]
 8002e7e:	f04f 0900 	mov.w	r9, #0
 8002e82:	e7ab      	b.n	8002ddc <_scanf_float+0x184>
 8002e84:	2203      	movs	r2, #3
 8002e86:	e7a9      	b.n	8002ddc <_scanf_float+0x184>
 8002e88:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002e8c:	4631      	mov	r1, r6
 8002e8e:	4638      	mov	r0, r7
 8002e90:	9205      	str	r2, [sp, #20]
 8002e92:	4798      	blx	r3
 8002e94:	9a05      	ldr	r2, [sp, #20]
 8002e96:	2800      	cmp	r0, #0
 8002e98:	f43f af04 	beq.w	8002ca4 <_scanf_float+0x4c>
 8002e9c:	e715      	b.n	8002cca <_scanf_float+0x72>
 8002e9e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002ea2:	4632      	mov	r2, r6
 8002ea4:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002ea8:	4638      	mov	r0, r7
 8002eaa:	4798      	blx	r3
 8002eac:	6923      	ldr	r3, [r4, #16]
 8002eae:	3b01      	subs	r3, #1
 8002eb0:	6123      	str	r3, [r4, #16]
 8002eb2:	e715      	b.n	8002ce0 <_scanf_float+0x88>
 8002eb4:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
 8002eb8:	2b06      	cmp	r3, #6
 8002eba:	d80a      	bhi.n	8002ed2 <_scanf_float+0x27a>
 8002ebc:	f1bb 0f02 	cmp.w	fp, #2
 8002ec0:	d967      	bls.n	8002f92 <_scanf_float+0x33a>
 8002ec2:	f1ab 0b03 	sub.w	fp, fp, #3
 8002ec6:	fa5f fb8b 	uxtb.w	fp, fp
 8002eca:	eba5 0b0b 	sub.w	fp, r5, fp
 8002ece:	455d      	cmp	r5, fp
 8002ed0:	d14a      	bne.n	8002f68 <_scanf_float+0x310>
 8002ed2:	6823      	ldr	r3, [r4, #0]
 8002ed4:	05da      	lsls	r2, r3, #23
 8002ed6:	d51f      	bpl.n	8002f18 <_scanf_float+0x2c0>
 8002ed8:	055b      	lsls	r3, r3, #21
 8002eda:	d467      	bmi.n	8002fac <_scanf_float+0x354>
 8002edc:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8002ee0:	6923      	ldr	r3, [r4, #16]
 8002ee2:	2965      	cmp	r1, #101	; 0x65
 8002ee4:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8002ee8:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
 8002eec:	6123      	str	r3, [r4, #16]
 8002eee:	d00d      	beq.n	8002f0c <_scanf_float+0x2b4>
 8002ef0:	2945      	cmp	r1, #69	; 0x45
 8002ef2:	d00b      	beq.n	8002f0c <_scanf_float+0x2b4>
 8002ef4:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002ef8:	4632      	mov	r2, r6
 8002efa:	4638      	mov	r0, r7
 8002efc:	4798      	blx	r3
 8002efe:	6923      	ldr	r3, [r4, #16]
 8002f00:	f815 1c02 	ldrb.w	r1, [r5, #-2]
 8002f04:	3b01      	subs	r3, #1
 8002f06:	f1a5 0b02 	sub.w	fp, r5, #2
 8002f0a:	6123      	str	r3, [r4, #16]
 8002f0c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002f10:	4632      	mov	r2, r6
 8002f12:	4638      	mov	r0, r7
 8002f14:	4798      	blx	r3
 8002f16:	465d      	mov	r5, fp
 8002f18:	6826      	ldr	r6, [r4, #0]
 8002f1a:	f016 0610 	ands.w	r6, r6, #16
 8002f1e:	d176      	bne.n	800300e <_scanf_float+0x3b6>
 8002f20:	702e      	strb	r6, [r5, #0]
 8002f22:	6823      	ldr	r3, [r4, #0]
 8002f24:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8002f28:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8002f2c:	d141      	bne.n	8002fb2 <_scanf_float+0x35a>
 8002f2e:	9b02      	ldr	r3, [sp, #8]
 8002f30:	eba9 0303 	sub.w	r3, r9, r3
 8002f34:	425a      	negs	r2, r3
 8002f36:	2b00      	cmp	r3, #0
 8002f38:	d148      	bne.n	8002fcc <_scanf_float+0x374>
 8002f3a:	4641      	mov	r1, r8
 8002f3c:	2200      	movs	r2, #0
 8002f3e:	4638      	mov	r0, r7
 8002f40:	f000 ff46 	bl	8003dd0 <_strtod_r>
 8002f44:	6825      	ldr	r5, [r4, #0]
 8002f46:	4680      	mov	r8, r0
 8002f48:	f015 0f02 	tst.w	r5, #2
 8002f4c:	4689      	mov	r9, r1
 8002f4e:	f8da 3000 	ldr.w	r3, [sl]
 8002f52:	d046      	beq.n	8002fe2 <_scanf_float+0x38a>
 8002f54:	1d1a      	adds	r2, r3, #4
 8002f56:	f8ca 2000 	str.w	r2, [sl]
 8002f5a:	681b      	ldr	r3, [r3, #0]
 8002f5c:	e9c3 8900 	strd	r8, r9, [r3]
 8002f60:	68e3      	ldr	r3, [r4, #12]
 8002f62:	3301      	adds	r3, #1
 8002f64:	60e3      	str	r3, [r4, #12]
 8002f66:	e6bf      	b.n	8002ce8 <_scanf_float+0x90>
 8002f68:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002f6c:	4632      	mov	r2, r6
 8002f6e:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002f72:	4638      	mov	r0, r7
 8002f74:	4798      	blx	r3
 8002f76:	6923      	ldr	r3, [r4, #16]
 8002f78:	3b01      	subs	r3, #1
 8002f7a:	6123      	str	r3, [r4, #16]
 8002f7c:	e7a7      	b.n	8002ece <_scanf_float+0x276>
 8002f7e:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002f82:	4632      	mov	r2, r6
 8002f84:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002f88:	4638      	mov	r0, r7
 8002f8a:	4798      	blx	r3
 8002f8c:	6923      	ldr	r3, [r4, #16]
 8002f8e:	3b01      	subs	r3, #1
 8002f90:	6123      	str	r3, [r4, #16]
 8002f92:	4545      	cmp	r5, r8
 8002f94:	d8f3      	bhi.n	8002f7e <_scanf_float+0x326>
 8002f96:	e6a6      	b.n	8002ce6 <_scanf_float+0x8e>
 8002f98:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002f9c:	4632      	mov	r2, r6
 8002f9e:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002fa2:	4638      	mov	r0, r7
 8002fa4:	4798      	blx	r3
 8002fa6:	6923      	ldr	r3, [r4, #16]
 8002fa8:	3b01      	subs	r3, #1
 8002faa:	6123      	str	r3, [r4, #16]
 8002fac:	4545      	cmp	r5, r8
 8002fae:	d8f3      	bhi.n	8002f98 <_scanf_float+0x340>
 8002fb0:	e699      	b.n	8002ce6 <_scanf_float+0x8e>
 8002fb2:	9b03      	ldr	r3, [sp, #12]
 8002fb4:	2b00      	cmp	r3, #0
 8002fb6:	d0c0      	beq.n	8002f3a <_scanf_float+0x2e2>
 8002fb8:	9904      	ldr	r1, [sp, #16]
 8002fba:	230a      	movs	r3, #10
 8002fbc:	4632      	mov	r2, r6
 8002fbe:	3101      	adds	r1, #1
 8002fc0:	4638      	mov	r0, r7
 8002fc2:	f000 ff91 	bl	8003ee8 <_strtol_r>
 8002fc6:	9b03      	ldr	r3, [sp, #12]
 8002fc8:	9d04      	ldr	r5, [sp, #16]
 8002fca:	1ac2      	subs	r2, r0, r3
 8002fcc:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8002fd0:	429d      	cmp	r5, r3
 8002fd2:	bf28      	it	cs
 8002fd4:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
 8002fd8:	490e      	ldr	r1, [pc, #56]	; (8003014 <_scanf_float+0x3bc>)
 8002fda:	4628      	mov	r0, r5
 8002fdc:	f000 f89c 	bl	8003118 <siprintf>
 8002fe0:	e7ab      	b.n	8002f3a <_scanf_float+0x2e2>
 8002fe2:	1d1f      	adds	r7, r3, #4
 8002fe4:	f015 0504 	ands.w	r5, r5, #4
 8002fe8:	f8ca 7000 	str.w	r7, [sl]
 8002fec:	d1b5      	bne.n	8002f5a <_scanf_float+0x302>
 8002fee:	681f      	ldr	r7, [r3, #0]
 8002ff0:	4602      	mov	r2, r0
 8002ff2:	460b      	mov	r3, r1
 8002ff4:	f7fd fd0a 	bl	8000a0c <__aeabi_dcmpun>
 8002ff8:	b120      	cbz	r0, 8003004 <_scanf_float+0x3ac>
 8002ffa:	4628      	mov	r0, r5
 8002ffc:	f000 f888 	bl	8003110 <nanf>
 8003000:	6038      	str	r0, [r7, #0]
 8003002:	e7ad      	b.n	8002f60 <_scanf_float+0x308>
 8003004:	4640      	mov	r0, r8
 8003006:	4649      	mov	r1, r9
 8003008:	f7fd fd5e 	bl	8000ac8 <__aeabi_d2f>
 800300c:	e7f8      	b.n	8003000 <_scanf_float+0x3a8>
 800300e:	2600      	movs	r6, #0
 8003010:	e66a      	b.n	8002ce8 <_scanf_float+0x90>
 8003012:	bf00      	nop
 8003014:	08006d24 	.word	0x08006d24

08003018 <iprintf>:
 8003018:	b40f      	push	{r0, r1, r2, r3}
 800301a:	4b0a      	ldr	r3, [pc, #40]	; (8003044 <iprintf+0x2c>)
 800301c:	b513      	push	{r0, r1, r4, lr}
 800301e:	681c      	ldr	r4, [r3, #0]
 8003020:	b124      	cbz	r4, 800302c <iprintf+0x14>
 8003022:	69a3      	ldr	r3, [r4, #24]
 8003024:	b913      	cbnz	r3, 800302c <iprintf+0x14>
 8003026:	4620      	mov	r0, r4
 8003028:	f001 ff62 	bl	8004ef0 <__sinit>
 800302c:	ab05      	add	r3, sp, #20
 800302e:	9a04      	ldr	r2, [sp, #16]
 8003030:	68a1      	ldr	r1, [r4, #8]
 8003032:	4620      	mov	r0, r4
 8003034:	9301      	str	r3, [sp, #4]
 8003036:	f003 f9df 	bl	80063f8 <_vfiprintf_r>
 800303a:	b002      	add	sp, #8
 800303c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003040:	b004      	add	sp, #16
 8003042:	4770      	bx	lr
 8003044:	20000014 	.word	0x20000014

08003048 <_puts_r>:
 8003048:	b570      	push	{r4, r5, r6, lr}
 800304a:	460e      	mov	r6, r1
 800304c:	4605      	mov	r5, r0
 800304e:	b118      	cbz	r0, 8003058 <_puts_r+0x10>
 8003050:	6983      	ldr	r3, [r0, #24]
 8003052:	b90b      	cbnz	r3, 8003058 <_puts_r+0x10>
 8003054:	f001 ff4c 	bl	8004ef0 <__sinit>
 8003058:	69ab      	ldr	r3, [r5, #24]
 800305a:	68ac      	ldr	r4, [r5, #8]
 800305c:	b913      	cbnz	r3, 8003064 <_puts_r+0x1c>
 800305e:	4628      	mov	r0, r5
 8003060:	f001 ff46 	bl	8004ef0 <__sinit>
 8003064:	4b23      	ldr	r3, [pc, #140]	; (80030f4 <_puts_r+0xac>)
 8003066:	429c      	cmp	r4, r3
 8003068:	d117      	bne.n	800309a <_puts_r+0x52>
 800306a:	686c      	ldr	r4, [r5, #4]
 800306c:	89a3      	ldrh	r3, [r4, #12]
 800306e:	071b      	lsls	r3, r3, #28
 8003070:	d51d      	bpl.n	80030ae <_puts_r+0x66>
 8003072:	6923      	ldr	r3, [r4, #16]
 8003074:	b1db      	cbz	r3, 80030ae <_puts_r+0x66>
 8003076:	3e01      	subs	r6, #1
 8003078:	68a3      	ldr	r3, [r4, #8]
 800307a:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 800307e:	3b01      	subs	r3, #1
 8003080:	60a3      	str	r3, [r4, #8]
 8003082:	b9e9      	cbnz	r1, 80030c0 <_puts_r+0x78>
 8003084:	2b00      	cmp	r3, #0
 8003086:	da2e      	bge.n	80030e6 <_puts_r+0x9e>
 8003088:	4622      	mov	r2, r4
 800308a:	210a      	movs	r1, #10
 800308c:	4628      	mov	r0, r5
 800308e:	f000 ff3d 	bl	8003f0c <__swbuf_r>
 8003092:	3001      	adds	r0, #1
 8003094:	d011      	beq.n	80030ba <_puts_r+0x72>
 8003096:	200a      	movs	r0, #10
 8003098:	e011      	b.n	80030be <_puts_r+0x76>
 800309a:	4b17      	ldr	r3, [pc, #92]	; (80030f8 <_puts_r+0xb0>)
 800309c:	429c      	cmp	r4, r3
 800309e:	d101      	bne.n	80030a4 <_puts_r+0x5c>
 80030a0:	68ac      	ldr	r4, [r5, #8]
 80030a2:	e7e3      	b.n	800306c <_puts_r+0x24>
 80030a4:	4b15      	ldr	r3, [pc, #84]	; (80030fc <_puts_r+0xb4>)
 80030a6:	429c      	cmp	r4, r3
 80030a8:	bf08      	it	eq
 80030aa:	68ec      	ldreq	r4, [r5, #12]
 80030ac:	e7de      	b.n	800306c <_puts_r+0x24>
 80030ae:	4621      	mov	r1, r4
 80030b0:	4628      	mov	r0, r5
 80030b2:	f000 ff7d 	bl	8003fb0 <__swsetup_r>
 80030b6:	2800      	cmp	r0, #0
 80030b8:	d0dd      	beq.n	8003076 <_puts_r+0x2e>
 80030ba:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80030be:	bd70      	pop	{r4, r5, r6, pc}
 80030c0:	2b00      	cmp	r3, #0
 80030c2:	da04      	bge.n	80030ce <_puts_r+0x86>
 80030c4:	69a2      	ldr	r2, [r4, #24]
 80030c6:	429a      	cmp	r2, r3
 80030c8:	dc06      	bgt.n	80030d8 <_puts_r+0x90>
 80030ca:	290a      	cmp	r1, #10
 80030cc:	d004      	beq.n	80030d8 <_puts_r+0x90>
 80030ce:	6823      	ldr	r3, [r4, #0]
 80030d0:	1c5a      	adds	r2, r3, #1
 80030d2:	6022      	str	r2, [r4, #0]
 80030d4:	7019      	strb	r1, [r3, #0]
 80030d6:	e7cf      	b.n	8003078 <_puts_r+0x30>
 80030d8:	4622      	mov	r2, r4
 80030da:	4628      	mov	r0, r5
 80030dc:	f000 ff16 	bl	8003f0c <__swbuf_r>
 80030e0:	3001      	adds	r0, #1
 80030e2:	d1c9      	bne.n	8003078 <_puts_r+0x30>
 80030e4:	e7e9      	b.n	80030ba <_puts_r+0x72>
 80030e6:	200a      	movs	r0, #10
 80030e8:	6823      	ldr	r3, [r4, #0]
 80030ea:	1c5a      	adds	r2, r3, #1
 80030ec:	6022      	str	r2, [r4, #0]
 80030ee:	7018      	strb	r0, [r3, #0]
 80030f0:	e7e5      	b.n	80030be <_puts_r+0x76>
 80030f2:	bf00      	nop
 80030f4:	08006db0 	.word	0x08006db0
 80030f8:	08006dd0 	.word	0x08006dd0
 80030fc:	08006d90 	.word	0x08006d90

08003100 <puts>:
 8003100:	4b02      	ldr	r3, [pc, #8]	; (800310c <puts+0xc>)
 8003102:	4601      	mov	r1, r0
 8003104:	6818      	ldr	r0, [r3, #0]
 8003106:	f7ff bf9f 	b.w	8003048 <_puts_r>
 800310a:	bf00      	nop
 800310c:	20000014 	.word	0x20000014

08003110 <nanf>:
 8003110:	4800      	ldr	r0, [pc, #0]	; (8003114 <nanf+0x4>)
 8003112:	4770      	bx	lr
 8003114:	7fc00000 	.word	0x7fc00000

08003118 <siprintf>:
 8003118:	b40e      	push	{r1, r2, r3}
 800311a:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800311e:	b500      	push	{lr}
 8003120:	b09c      	sub	sp, #112	; 0x70
 8003122:	ab1d      	add	r3, sp, #116	; 0x74
 8003124:	9002      	str	r0, [sp, #8]
 8003126:	9006      	str	r0, [sp, #24]
 8003128:	9107      	str	r1, [sp, #28]
 800312a:	9104      	str	r1, [sp, #16]
 800312c:	4808      	ldr	r0, [pc, #32]	; (8003150 <siprintf+0x38>)
 800312e:	4909      	ldr	r1, [pc, #36]	; (8003154 <siprintf+0x3c>)
 8003130:	f853 2b04 	ldr.w	r2, [r3], #4
 8003134:	9105      	str	r1, [sp, #20]
 8003136:	6800      	ldr	r0, [r0, #0]
 8003138:	a902      	add	r1, sp, #8
 800313a:	9301      	str	r3, [sp, #4]
 800313c:	f003 f83c 	bl	80061b8 <_svfiprintf_r>
 8003140:	2200      	movs	r2, #0
 8003142:	9b02      	ldr	r3, [sp, #8]
 8003144:	701a      	strb	r2, [r3, #0]
 8003146:	b01c      	add	sp, #112	; 0x70
 8003148:	f85d eb04 	ldr.w	lr, [sp], #4
 800314c:	b003      	add	sp, #12
 800314e:	4770      	bx	lr
 8003150:	20000014 	.word	0x20000014
 8003154:	ffff0208 	.word	0xffff0208

08003158 <strstr>:
 8003158:	b5f0      	push	{r4, r5, r6, r7, lr}
 800315a:	7803      	ldrb	r3, [r0, #0]
 800315c:	b17b      	cbz	r3, 800317e <strstr+0x26>
 800315e:	4604      	mov	r4, r0
 8003160:	7823      	ldrb	r3, [r4, #0]
 8003162:	4620      	mov	r0, r4
 8003164:	1c66      	adds	r6, r4, #1
 8003166:	b17b      	cbz	r3, 8003188 <strstr+0x30>
 8003168:	1e4a      	subs	r2, r1, #1
 800316a:	1e63      	subs	r3, r4, #1
 800316c:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8003170:	b14d      	cbz	r5, 8003186 <strstr+0x2e>
 8003172:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 8003176:	4634      	mov	r4, r6
 8003178:	42af      	cmp	r7, r5
 800317a:	d0f7      	beq.n	800316c <strstr+0x14>
 800317c:	e7f0      	b.n	8003160 <strstr+0x8>
 800317e:	780b      	ldrb	r3, [r1, #0]
 8003180:	2b00      	cmp	r3, #0
 8003182:	bf18      	it	ne
 8003184:	2000      	movne	r0, #0
 8003186:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003188:	4618      	mov	r0, r3
 800318a:	e7fc      	b.n	8003186 <strstr+0x2e>

0800318c <sulp>:
 800318c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003190:	460f      	mov	r7, r1
 8003192:	4690      	mov	r8, r2
 8003194:	f002 fdd4 	bl	8005d40 <__ulp>
 8003198:	4604      	mov	r4, r0
 800319a:	460d      	mov	r5, r1
 800319c:	f1b8 0f00 	cmp.w	r8, #0
 80031a0:	d011      	beq.n	80031c6 <sulp+0x3a>
 80031a2:	f3c7 530a 	ubfx	r3, r7, #20, #11
 80031a6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80031aa:	2b00      	cmp	r3, #0
 80031ac:	dd0b      	ble.n	80031c6 <sulp+0x3a>
 80031ae:	2400      	movs	r4, #0
 80031b0:	051b      	lsls	r3, r3, #20
 80031b2:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80031b6:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80031ba:	4622      	mov	r2, r4
 80031bc:	462b      	mov	r3, r5
 80031be:	f7fd f98b 	bl	80004d8 <__aeabi_dmul>
 80031c2:	4604      	mov	r4, r0
 80031c4:	460d      	mov	r5, r1
 80031c6:	4620      	mov	r0, r4
 80031c8:	4629      	mov	r1, r5
 80031ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080031d0 <_strtod_l>:
 80031d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80031d4:	461f      	mov	r7, r3
 80031d6:	2300      	movs	r3, #0
 80031d8:	b0a1      	sub	sp, #132	; 0x84
 80031da:	4683      	mov	fp, r0
 80031dc:	4638      	mov	r0, r7
 80031de:	460e      	mov	r6, r1
 80031e0:	9217      	str	r2, [sp, #92]	; 0x5c
 80031e2:	931c      	str	r3, [sp, #112]	; 0x70
 80031e4:	f002 fa39 	bl	800565a <__localeconv_l>
 80031e8:	4680      	mov	r8, r0
 80031ea:	6800      	ldr	r0, [r0, #0]
 80031ec:	f7fc ffb0 	bl	8000150 <strlen>
 80031f0:	f04f 0900 	mov.w	r9, #0
 80031f4:	4604      	mov	r4, r0
 80031f6:	f04f 0a00 	mov.w	sl, #0
 80031fa:	961b      	str	r6, [sp, #108]	; 0x6c
 80031fc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80031fe:	781a      	ldrb	r2, [r3, #0]
 8003200:	2a0d      	cmp	r2, #13
 8003202:	d832      	bhi.n	800326a <_strtod_l+0x9a>
 8003204:	2a09      	cmp	r2, #9
 8003206:	d236      	bcs.n	8003276 <_strtod_l+0xa6>
 8003208:	2a00      	cmp	r2, #0
 800320a:	d03e      	beq.n	800328a <_strtod_l+0xba>
 800320c:	2300      	movs	r3, #0
 800320e:	930d      	str	r3, [sp, #52]	; 0x34
 8003210:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 8003212:	782b      	ldrb	r3, [r5, #0]
 8003214:	2b30      	cmp	r3, #48	; 0x30
 8003216:	f040 80ac 	bne.w	8003372 <_strtod_l+0x1a2>
 800321a:	786b      	ldrb	r3, [r5, #1]
 800321c:	2b58      	cmp	r3, #88	; 0x58
 800321e:	d001      	beq.n	8003224 <_strtod_l+0x54>
 8003220:	2b78      	cmp	r3, #120	; 0x78
 8003222:	d167      	bne.n	80032f4 <_strtod_l+0x124>
 8003224:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003226:	9702      	str	r7, [sp, #8]
 8003228:	9301      	str	r3, [sp, #4]
 800322a:	ab1c      	add	r3, sp, #112	; 0x70
 800322c:	9300      	str	r3, [sp, #0]
 800322e:	4a89      	ldr	r2, [pc, #548]	; (8003454 <_strtod_l+0x284>)
 8003230:	ab1d      	add	r3, sp, #116	; 0x74
 8003232:	a91b      	add	r1, sp, #108	; 0x6c
 8003234:	4658      	mov	r0, fp
 8003236:	f001 ff35 	bl	80050a4 <__gethex>
 800323a:	f010 0407 	ands.w	r4, r0, #7
 800323e:	4606      	mov	r6, r0
 8003240:	d005      	beq.n	800324e <_strtod_l+0x7e>
 8003242:	2c06      	cmp	r4, #6
 8003244:	d12b      	bne.n	800329e <_strtod_l+0xce>
 8003246:	2300      	movs	r3, #0
 8003248:	3501      	adds	r5, #1
 800324a:	951b      	str	r5, [sp, #108]	; 0x6c
 800324c:	930d      	str	r3, [sp, #52]	; 0x34
 800324e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003250:	2b00      	cmp	r3, #0
 8003252:	f040 85a6 	bne.w	8003da2 <_strtod_l+0xbd2>
 8003256:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003258:	b1e3      	cbz	r3, 8003294 <_strtod_l+0xc4>
 800325a:	464a      	mov	r2, r9
 800325c:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 8003260:	4610      	mov	r0, r2
 8003262:	4619      	mov	r1, r3
 8003264:	b021      	add	sp, #132	; 0x84
 8003266:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800326a:	2a2b      	cmp	r2, #43	; 0x2b
 800326c:	d015      	beq.n	800329a <_strtod_l+0xca>
 800326e:	2a2d      	cmp	r2, #45	; 0x2d
 8003270:	d004      	beq.n	800327c <_strtod_l+0xac>
 8003272:	2a20      	cmp	r2, #32
 8003274:	d1ca      	bne.n	800320c <_strtod_l+0x3c>
 8003276:	3301      	adds	r3, #1
 8003278:	931b      	str	r3, [sp, #108]	; 0x6c
 800327a:	e7bf      	b.n	80031fc <_strtod_l+0x2c>
 800327c:	2201      	movs	r2, #1
 800327e:	920d      	str	r2, [sp, #52]	; 0x34
 8003280:	1c5a      	adds	r2, r3, #1
 8003282:	921b      	str	r2, [sp, #108]	; 0x6c
 8003284:	785b      	ldrb	r3, [r3, #1]
 8003286:	2b00      	cmp	r3, #0
 8003288:	d1c2      	bne.n	8003210 <_strtod_l+0x40>
 800328a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 800328c:	961b      	str	r6, [sp, #108]	; 0x6c
 800328e:	2b00      	cmp	r3, #0
 8003290:	f040 8585 	bne.w	8003d9e <_strtod_l+0xbce>
 8003294:	464a      	mov	r2, r9
 8003296:	4653      	mov	r3, sl
 8003298:	e7e2      	b.n	8003260 <_strtod_l+0x90>
 800329a:	2200      	movs	r2, #0
 800329c:	e7ef      	b.n	800327e <_strtod_l+0xae>
 800329e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80032a0:	b13a      	cbz	r2, 80032b2 <_strtod_l+0xe2>
 80032a2:	2135      	movs	r1, #53	; 0x35
 80032a4:	a81e      	add	r0, sp, #120	; 0x78
 80032a6:	f002 fe3e 	bl	8005f26 <__copybits>
 80032aa:	991c      	ldr	r1, [sp, #112]	; 0x70
 80032ac:	4658      	mov	r0, fp
 80032ae:	f002 fab0 	bl	8005812 <_Bfree>
 80032b2:	3c01      	subs	r4, #1
 80032b4:	2c04      	cmp	r4, #4
 80032b6:	d806      	bhi.n	80032c6 <_strtod_l+0xf6>
 80032b8:	e8df f004 	tbb	[pc, r4]
 80032bc:	1714030a 	.word	0x1714030a
 80032c0:	0a          	.byte	0x0a
 80032c1:	00          	.byte	0x00
 80032c2:	e9dd 9a1e 	ldrd	r9, sl, [sp, #120]	; 0x78
 80032c6:	0731      	lsls	r1, r6, #28
 80032c8:	d5c1      	bpl.n	800324e <_strtod_l+0x7e>
 80032ca:	f04a 4a00 	orr.w	sl, sl, #2147483648	; 0x80000000
 80032ce:	e7be      	b.n	800324e <_strtod_l+0x7e>
 80032d0:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80032d2:	e9dd 931e 	ldrd	r9, r3, [sp, #120]	; 0x78
 80032d6:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80032da:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80032de:	ea43 5a02 	orr.w	sl, r3, r2, lsl #20
 80032e2:	e7f0      	b.n	80032c6 <_strtod_l+0xf6>
 80032e4:	f8df a170 	ldr.w	sl, [pc, #368]	; 8003458 <_strtod_l+0x288>
 80032e8:	e7ed      	b.n	80032c6 <_strtod_l+0xf6>
 80032ea:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 80032ee:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 80032f2:	e7e8      	b.n	80032c6 <_strtod_l+0xf6>
 80032f4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80032f6:	1c5a      	adds	r2, r3, #1
 80032f8:	921b      	str	r2, [sp, #108]	; 0x6c
 80032fa:	785b      	ldrb	r3, [r3, #1]
 80032fc:	2b30      	cmp	r3, #48	; 0x30
 80032fe:	d0f9      	beq.n	80032f4 <_strtod_l+0x124>
 8003300:	2b00      	cmp	r3, #0
 8003302:	d0a4      	beq.n	800324e <_strtod_l+0x7e>
 8003304:	2301      	movs	r3, #1
 8003306:	2500      	movs	r5, #0
 8003308:	220a      	movs	r2, #10
 800330a:	9307      	str	r3, [sp, #28]
 800330c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800330e:	9506      	str	r5, [sp, #24]
 8003310:	9308      	str	r3, [sp, #32]
 8003312:	9504      	str	r5, [sp, #16]
 8003314:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8003316:	7807      	ldrb	r7, [r0, #0]
 8003318:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 800331c:	b2d9      	uxtb	r1, r3
 800331e:	2909      	cmp	r1, #9
 8003320:	d929      	bls.n	8003376 <_strtod_l+0x1a6>
 8003322:	4622      	mov	r2, r4
 8003324:	f8d8 1000 	ldr.w	r1, [r8]
 8003328:	f003 f9cf 	bl	80066ca <strncmp>
 800332c:	2800      	cmp	r0, #0
 800332e:	d031      	beq.n	8003394 <_strtod_l+0x1c4>
 8003330:	2000      	movs	r0, #0
 8003332:	463b      	mov	r3, r7
 8003334:	4602      	mov	r2, r0
 8003336:	9c04      	ldr	r4, [sp, #16]
 8003338:	9005      	str	r0, [sp, #20]
 800333a:	2b65      	cmp	r3, #101	; 0x65
 800333c:	d001      	beq.n	8003342 <_strtod_l+0x172>
 800333e:	2b45      	cmp	r3, #69	; 0x45
 8003340:	d114      	bne.n	800336c <_strtod_l+0x19c>
 8003342:	b924      	cbnz	r4, 800334e <_strtod_l+0x17e>
 8003344:	b910      	cbnz	r0, 800334c <_strtod_l+0x17c>
 8003346:	9b07      	ldr	r3, [sp, #28]
 8003348:	2b00      	cmp	r3, #0
 800334a:	d09e      	beq.n	800328a <_strtod_l+0xba>
 800334c:	2400      	movs	r4, #0
 800334e:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8003350:	1c73      	adds	r3, r6, #1
 8003352:	931b      	str	r3, [sp, #108]	; 0x6c
 8003354:	7873      	ldrb	r3, [r6, #1]
 8003356:	2b2b      	cmp	r3, #43	; 0x2b
 8003358:	d078      	beq.n	800344c <_strtod_l+0x27c>
 800335a:	2b2d      	cmp	r3, #45	; 0x2d
 800335c:	d070      	beq.n	8003440 <_strtod_l+0x270>
 800335e:	f04f 0c00 	mov.w	ip, #0
 8003362:	f1a3 0730 	sub.w	r7, r3, #48	; 0x30
 8003366:	2f09      	cmp	r7, #9
 8003368:	d97c      	bls.n	8003464 <_strtod_l+0x294>
 800336a:	961b      	str	r6, [sp, #108]	; 0x6c
 800336c:	f04f 0e00 	mov.w	lr, #0
 8003370:	e09a      	b.n	80034a8 <_strtod_l+0x2d8>
 8003372:	2300      	movs	r3, #0
 8003374:	e7c7      	b.n	8003306 <_strtod_l+0x136>
 8003376:	9904      	ldr	r1, [sp, #16]
 8003378:	3001      	adds	r0, #1
 800337a:	2908      	cmp	r1, #8
 800337c:	bfd7      	itett	le
 800337e:	9906      	ldrle	r1, [sp, #24]
 8003380:	fb02 3505 	mlagt	r5, r2, r5, r3
 8003384:	fb02 3301 	mlale	r3, r2, r1, r3
 8003388:	9306      	strle	r3, [sp, #24]
 800338a:	9b04      	ldr	r3, [sp, #16]
 800338c:	901b      	str	r0, [sp, #108]	; 0x6c
 800338e:	3301      	adds	r3, #1
 8003390:	9304      	str	r3, [sp, #16]
 8003392:	e7bf      	b.n	8003314 <_strtod_l+0x144>
 8003394:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003396:	191a      	adds	r2, r3, r4
 8003398:	921b      	str	r2, [sp, #108]	; 0x6c
 800339a:	9a04      	ldr	r2, [sp, #16]
 800339c:	5d1b      	ldrb	r3, [r3, r4]
 800339e:	2a00      	cmp	r2, #0
 80033a0:	d037      	beq.n	8003412 <_strtod_l+0x242>
 80033a2:	4602      	mov	r2, r0
 80033a4:	9c04      	ldr	r4, [sp, #16]
 80033a6:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80033aa:	2909      	cmp	r1, #9
 80033ac:	d913      	bls.n	80033d6 <_strtod_l+0x206>
 80033ae:	2101      	movs	r1, #1
 80033b0:	9105      	str	r1, [sp, #20]
 80033b2:	e7c2      	b.n	800333a <_strtod_l+0x16a>
 80033b4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80033b6:	3001      	adds	r0, #1
 80033b8:	1c5a      	adds	r2, r3, #1
 80033ba:	921b      	str	r2, [sp, #108]	; 0x6c
 80033bc:	785b      	ldrb	r3, [r3, #1]
 80033be:	2b30      	cmp	r3, #48	; 0x30
 80033c0:	d0f8      	beq.n	80033b4 <_strtod_l+0x1e4>
 80033c2:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 80033c6:	2a08      	cmp	r2, #8
 80033c8:	f200 84f0 	bhi.w	8003dac <_strtod_l+0xbdc>
 80033cc:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80033ce:	9208      	str	r2, [sp, #32]
 80033d0:	4602      	mov	r2, r0
 80033d2:	2000      	movs	r0, #0
 80033d4:	4604      	mov	r4, r0
 80033d6:	f1b3 0e30 	subs.w	lr, r3, #48	; 0x30
 80033da:	f100 0101 	add.w	r1, r0, #1
 80033de:	d012      	beq.n	8003406 <_strtod_l+0x236>
 80033e0:	440a      	add	r2, r1
 80033e2:	270a      	movs	r7, #10
 80033e4:	4621      	mov	r1, r4
 80033e6:	eb00 0c04 	add.w	ip, r0, r4
 80033ea:	458c      	cmp	ip, r1
 80033ec:	d113      	bne.n	8003416 <_strtod_l+0x246>
 80033ee:	1821      	adds	r1, r4, r0
 80033f0:	2908      	cmp	r1, #8
 80033f2:	f104 0401 	add.w	r4, r4, #1
 80033f6:	4404      	add	r4, r0
 80033f8:	dc19      	bgt.n	800342e <_strtod_l+0x25e>
 80033fa:	210a      	movs	r1, #10
 80033fc:	9b06      	ldr	r3, [sp, #24]
 80033fe:	fb01 e303 	mla	r3, r1, r3, lr
 8003402:	9306      	str	r3, [sp, #24]
 8003404:	2100      	movs	r1, #0
 8003406:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003408:	1c58      	adds	r0, r3, #1
 800340a:	901b      	str	r0, [sp, #108]	; 0x6c
 800340c:	785b      	ldrb	r3, [r3, #1]
 800340e:	4608      	mov	r0, r1
 8003410:	e7c9      	b.n	80033a6 <_strtod_l+0x1d6>
 8003412:	9804      	ldr	r0, [sp, #16]
 8003414:	e7d3      	b.n	80033be <_strtod_l+0x1ee>
 8003416:	2908      	cmp	r1, #8
 8003418:	f101 0101 	add.w	r1, r1, #1
 800341c:	dc03      	bgt.n	8003426 <_strtod_l+0x256>
 800341e:	9b06      	ldr	r3, [sp, #24]
 8003420:	437b      	muls	r3, r7
 8003422:	9306      	str	r3, [sp, #24]
 8003424:	e7e1      	b.n	80033ea <_strtod_l+0x21a>
 8003426:	2910      	cmp	r1, #16
 8003428:	bfd8      	it	le
 800342a:	437d      	mulle	r5, r7
 800342c:	e7dd      	b.n	80033ea <_strtod_l+0x21a>
 800342e:	2c10      	cmp	r4, #16
 8003430:	bfdc      	itt	le
 8003432:	210a      	movle	r1, #10
 8003434:	fb01 e505 	mlale	r5, r1, r5, lr
 8003438:	e7e4      	b.n	8003404 <_strtod_l+0x234>
 800343a:	2301      	movs	r3, #1
 800343c:	9305      	str	r3, [sp, #20]
 800343e:	e781      	b.n	8003344 <_strtod_l+0x174>
 8003440:	f04f 0c01 	mov.w	ip, #1
 8003444:	1cb3      	adds	r3, r6, #2
 8003446:	931b      	str	r3, [sp, #108]	; 0x6c
 8003448:	78b3      	ldrb	r3, [r6, #2]
 800344a:	e78a      	b.n	8003362 <_strtod_l+0x192>
 800344c:	f04f 0c00 	mov.w	ip, #0
 8003450:	e7f8      	b.n	8003444 <_strtod_l+0x274>
 8003452:	bf00      	nop
 8003454:	08006d2c 	.word	0x08006d2c
 8003458:	7ff00000 	.word	0x7ff00000
 800345c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800345e:	1c5f      	adds	r7, r3, #1
 8003460:	971b      	str	r7, [sp, #108]	; 0x6c
 8003462:	785b      	ldrb	r3, [r3, #1]
 8003464:	2b30      	cmp	r3, #48	; 0x30
 8003466:	d0f9      	beq.n	800345c <_strtod_l+0x28c>
 8003468:	f1a3 0731 	sub.w	r7, r3, #49	; 0x31
 800346c:	2f08      	cmp	r7, #8
 800346e:	f63f af7d 	bhi.w	800336c <_strtod_l+0x19c>
 8003472:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 8003476:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003478:	9309      	str	r3, [sp, #36]	; 0x24
 800347a:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800347c:	1c5f      	adds	r7, r3, #1
 800347e:	971b      	str	r7, [sp, #108]	; 0x6c
 8003480:	785b      	ldrb	r3, [r3, #1]
 8003482:	f1a3 0830 	sub.w	r8, r3, #48	; 0x30
 8003486:	f1b8 0f09 	cmp.w	r8, #9
 800348a:	d937      	bls.n	80034fc <_strtod_l+0x32c>
 800348c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800348e:	1a7f      	subs	r7, r7, r1
 8003490:	2f08      	cmp	r7, #8
 8003492:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8003496:	dc37      	bgt.n	8003508 <_strtod_l+0x338>
 8003498:	45be      	cmp	lr, r7
 800349a:	bfa8      	it	ge
 800349c:	46be      	movge	lr, r7
 800349e:	f1bc 0f00 	cmp.w	ip, #0
 80034a2:	d001      	beq.n	80034a8 <_strtod_l+0x2d8>
 80034a4:	f1ce 0e00 	rsb	lr, lr, #0
 80034a8:	2c00      	cmp	r4, #0
 80034aa:	d151      	bne.n	8003550 <_strtod_l+0x380>
 80034ac:	2800      	cmp	r0, #0
 80034ae:	f47f aece 	bne.w	800324e <_strtod_l+0x7e>
 80034b2:	9a07      	ldr	r2, [sp, #28]
 80034b4:	2a00      	cmp	r2, #0
 80034b6:	f47f aeca 	bne.w	800324e <_strtod_l+0x7e>
 80034ba:	9a05      	ldr	r2, [sp, #20]
 80034bc:	2a00      	cmp	r2, #0
 80034be:	f47f aee4 	bne.w	800328a <_strtod_l+0xba>
 80034c2:	2b4e      	cmp	r3, #78	; 0x4e
 80034c4:	d027      	beq.n	8003516 <_strtod_l+0x346>
 80034c6:	dc21      	bgt.n	800350c <_strtod_l+0x33c>
 80034c8:	2b49      	cmp	r3, #73	; 0x49
 80034ca:	f47f aede 	bne.w	800328a <_strtod_l+0xba>
 80034ce:	49a4      	ldr	r1, [pc, #656]	; (8003760 <_strtod_l+0x590>)
 80034d0:	a81b      	add	r0, sp, #108	; 0x6c
 80034d2:	f002 f81b 	bl	800550c <__match>
 80034d6:	2800      	cmp	r0, #0
 80034d8:	f43f aed7 	beq.w	800328a <_strtod_l+0xba>
 80034dc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80034de:	49a1      	ldr	r1, [pc, #644]	; (8003764 <_strtod_l+0x594>)
 80034e0:	3b01      	subs	r3, #1
 80034e2:	a81b      	add	r0, sp, #108	; 0x6c
 80034e4:	931b      	str	r3, [sp, #108]	; 0x6c
 80034e6:	f002 f811 	bl	800550c <__match>
 80034ea:	b910      	cbnz	r0, 80034f2 <_strtod_l+0x322>
 80034ec:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80034ee:	3301      	adds	r3, #1
 80034f0:	931b      	str	r3, [sp, #108]	; 0x6c
 80034f2:	f8df a284 	ldr.w	sl, [pc, #644]	; 8003778 <_strtod_l+0x5a8>
 80034f6:	f04f 0900 	mov.w	r9, #0
 80034fa:	e6a8      	b.n	800324e <_strtod_l+0x7e>
 80034fc:	210a      	movs	r1, #10
 80034fe:	fb01 3e0e 	mla	lr, r1, lr, r3
 8003502:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8003506:	e7b8      	b.n	800347a <_strtod_l+0x2aa>
 8003508:	46be      	mov	lr, r7
 800350a:	e7c8      	b.n	800349e <_strtod_l+0x2ce>
 800350c:	2b69      	cmp	r3, #105	; 0x69
 800350e:	d0de      	beq.n	80034ce <_strtod_l+0x2fe>
 8003510:	2b6e      	cmp	r3, #110	; 0x6e
 8003512:	f47f aeba 	bne.w	800328a <_strtod_l+0xba>
 8003516:	4994      	ldr	r1, [pc, #592]	; (8003768 <_strtod_l+0x598>)
 8003518:	a81b      	add	r0, sp, #108	; 0x6c
 800351a:	f001 fff7 	bl	800550c <__match>
 800351e:	2800      	cmp	r0, #0
 8003520:	f43f aeb3 	beq.w	800328a <_strtod_l+0xba>
 8003524:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003526:	781b      	ldrb	r3, [r3, #0]
 8003528:	2b28      	cmp	r3, #40	; 0x28
 800352a:	d10e      	bne.n	800354a <_strtod_l+0x37a>
 800352c:	aa1e      	add	r2, sp, #120	; 0x78
 800352e:	498f      	ldr	r1, [pc, #572]	; (800376c <_strtod_l+0x59c>)
 8003530:	a81b      	add	r0, sp, #108	; 0x6c
 8003532:	f001 ffff 	bl	8005534 <__hexnan>
 8003536:	2805      	cmp	r0, #5
 8003538:	d107      	bne.n	800354a <_strtod_l+0x37a>
 800353a:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800353c:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 8003540:	f043 4aff 	orr.w	sl, r3, #2139095040	; 0x7f800000
 8003544:	f44a 0ae0 	orr.w	sl, sl, #7340032	; 0x700000
 8003548:	e681      	b.n	800324e <_strtod_l+0x7e>
 800354a:	f8df a234 	ldr.w	sl, [pc, #564]	; 8003780 <_strtod_l+0x5b0>
 800354e:	e7d2      	b.n	80034f6 <_strtod_l+0x326>
 8003550:	ebae 0302 	sub.w	r3, lr, r2
 8003554:	9307      	str	r3, [sp, #28]
 8003556:	9b04      	ldr	r3, [sp, #16]
 8003558:	9806      	ldr	r0, [sp, #24]
 800355a:	2b00      	cmp	r3, #0
 800355c:	bf08      	it	eq
 800355e:	4623      	moveq	r3, r4
 8003560:	2c10      	cmp	r4, #16
 8003562:	9304      	str	r3, [sp, #16]
 8003564:	46a0      	mov	r8, r4
 8003566:	bfa8      	it	ge
 8003568:	f04f 0810 	movge.w	r8, #16
 800356c:	f7fc ff3a 	bl	80003e4 <__aeabi_ui2d>
 8003570:	2c09      	cmp	r4, #9
 8003572:	4681      	mov	r9, r0
 8003574:	468a      	mov	sl, r1
 8003576:	dc13      	bgt.n	80035a0 <_strtod_l+0x3d0>
 8003578:	9b07      	ldr	r3, [sp, #28]
 800357a:	2b00      	cmp	r3, #0
 800357c:	f43f ae67 	beq.w	800324e <_strtod_l+0x7e>
 8003580:	9b07      	ldr	r3, [sp, #28]
 8003582:	dd7e      	ble.n	8003682 <_strtod_l+0x4b2>
 8003584:	2b16      	cmp	r3, #22
 8003586:	dc65      	bgt.n	8003654 <_strtod_l+0x484>
 8003588:	4a79      	ldr	r2, [pc, #484]	; (8003770 <_strtod_l+0x5a0>)
 800358a:	eb02 0ec3 	add.w	lr, r2, r3, lsl #3
 800358e:	464a      	mov	r2, r9
 8003590:	e9de 0100 	ldrd	r0, r1, [lr]
 8003594:	4653      	mov	r3, sl
 8003596:	f7fc ff9f 	bl	80004d8 <__aeabi_dmul>
 800359a:	4681      	mov	r9, r0
 800359c:	468a      	mov	sl, r1
 800359e:	e656      	b.n	800324e <_strtod_l+0x7e>
 80035a0:	4b73      	ldr	r3, [pc, #460]	; (8003770 <_strtod_l+0x5a0>)
 80035a2:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80035a6:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 80035aa:	f7fc ff95 	bl	80004d8 <__aeabi_dmul>
 80035ae:	4606      	mov	r6, r0
 80035b0:	4628      	mov	r0, r5
 80035b2:	460f      	mov	r7, r1
 80035b4:	f7fc ff16 	bl	80003e4 <__aeabi_ui2d>
 80035b8:	4602      	mov	r2, r0
 80035ba:	460b      	mov	r3, r1
 80035bc:	4630      	mov	r0, r6
 80035be:	4639      	mov	r1, r7
 80035c0:	f7fc fdd4 	bl	800016c <__adddf3>
 80035c4:	2c0f      	cmp	r4, #15
 80035c6:	4681      	mov	r9, r0
 80035c8:	468a      	mov	sl, r1
 80035ca:	ddd5      	ble.n	8003578 <_strtod_l+0x3a8>
 80035cc:	9b07      	ldr	r3, [sp, #28]
 80035ce:	eba4 0808 	sub.w	r8, r4, r8
 80035d2:	4498      	add	r8, r3
 80035d4:	f1b8 0f00 	cmp.w	r8, #0
 80035d8:	f340 809a 	ble.w	8003710 <_strtod_l+0x540>
 80035dc:	f018 030f 	ands.w	r3, r8, #15
 80035e0:	d00a      	beq.n	80035f8 <_strtod_l+0x428>
 80035e2:	4963      	ldr	r1, [pc, #396]	; (8003770 <_strtod_l+0x5a0>)
 80035e4:	464a      	mov	r2, r9
 80035e6:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80035ea:	e9d1 0100 	ldrd	r0, r1, [r1]
 80035ee:	4653      	mov	r3, sl
 80035f0:	f7fc ff72 	bl	80004d8 <__aeabi_dmul>
 80035f4:	4681      	mov	r9, r0
 80035f6:	468a      	mov	sl, r1
 80035f8:	f038 080f 	bics.w	r8, r8, #15
 80035fc:	d077      	beq.n	80036ee <_strtod_l+0x51e>
 80035fe:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8003602:	dd4b      	ble.n	800369c <_strtod_l+0x4cc>
 8003604:	f04f 0800 	mov.w	r8, #0
 8003608:	f8cd 8010 	str.w	r8, [sp, #16]
 800360c:	f8cd 8020 	str.w	r8, [sp, #32]
 8003610:	f8cd 8018 	str.w	r8, [sp, #24]
 8003614:	2322      	movs	r3, #34	; 0x22
 8003616:	f04f 0900 	mov.w	r9, #0
 800361a:	f8df a15c 	ldr.w	sl, [pc, #348]	; 8003778 <_strtod_l+0x5a8>
 800361e:	f8cb 3000 	str.w	r3, [fp]
 8003622:	9b08      	ldr	r3, [sp, #32]
 8003624:	2b00      	cmp	r3, #0
 8003626:	f43f ae12 	beq.w	800324e <_strtod_l+0x7e>
 800362a:	991c      	ldr	r1, [sp, #112]	; 0x70
 800362c:	4658      	mov	r0, fp
 800362e:	f002 f8f0 	bl	8005812 <_Bfree>
 8003632:	9906      	ldr	r1, [sp, #24]
 8003634:	4658      	mov	r0, fp
 8003636:	f002 f8ec 	bl	8005812 <_Bfree>
 800363a:	9904      	ldr	r1, [sp, #16]
 800363c:	4658      	mov	r0, fp
 800363e:	f002 f8e8 	bl	8005812 <_Bfree>
 8003642:	9908      	ldr	r1, [sp, #32]
 8003644:	4658      	mov	r0, fp
 8003646:	f002 f8e4 	bl	8005812 <_Bfree>
 800364a:	4641      	mov	r1, r8
 800364c:	4658      	mov	r0, fp
 800364e:	f002 f8e0 	bl	8005812 <_Bfree>
 8003652:	e5fc      	b.n	800324e <_strtod_l+0x7e>
 8003654:	9a07      	ldr	r2, [sp, #28]
 8003656:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 800365a:	4293      	cmp	r3, r2
 800365c:	dbb6      	blt.n	80035cc <_strtod_l+0x3fc>
 800365e:	4d44      	ldr	r5, [pc, #272]	; (8003770 <_strtod_l+0x5a0>)
 8003660:	f1c4 040f 	rsb	r4, r4, #15
 8003664:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8003668:	464a      	mov	r2, r9
 800366a:	e9d1 0100 	ldrd	r0, r1, [r1]
 800366e:	4653      	mov	r3, sl
 8003670:	f7fc ff32 	bl	80004d8 <__aeabi_dmul>
 8003674:	9b07      	ldr	r3, [sp, #28]
 8003676:	1b1c      	subs	r4, r3, r4
 8003678:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 800367c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003680:	e789      	b.n	8003596 <_strtod_l+0x3c6>
 8003682:	f113 0f16 	cmn.w	r3, #22
 8003686:	dba1      	blt.n	80035cc <_strtod_l+0x3fc>
 8003688:	4a39      	ldr	r2, [pc, #228]	; (8003770 <_strtod_l+0x5a0>)
 800368a:	4648      	mov	r0, r9
 800368c:	eba2 02c3 	sub.w	r2, r2, r3, lsl #3
 8003690:	e9d2 2300 	ldrd	r2, r3, [r2]
 8003694:	4651      	mov	r1, sl
 8003696:	f7fd f849 	bl	800072c <__aeabi_ddiv>
 800369a:	e77e      	b.n	800359a <_strtod_l+0x3ca>
 800369c:	2300      	movs	r3, #0
 800369e:	4648      	mov	r0, r9
 80036a0:	4651      	mov	r1, sl
 80036a2:	461d      	mov	r5, r3
 80036a4:	4e33      	ldr	r6, [pc, #204]	; (8003774 <_strtod_l+0x5a4>)
 80036a6:	ea4f 1828 	mov.w	r8, r8, asr #4
 80036aa:	f1b8 0f01 	cmp.w	r8, #1
 80036ae:	dc21      	bgt.n	80036f4 <_strtod_l+0x524>
 80036b0:	b10b      	cbz	r3, 80036b6 <_strtod_l+0x4e6>
 80036b2:	4681      	mov	r9, r0
 80036b4:	468a      	mov	sl, r1
 80036b6:	4b2f      	ldr	r3, [pc, #188]	; (8003774 <_strtod_l+0x5a4>)
 80036b8:	f1aa 7a54 	sub.w	sl, sl, #55574528	; 0x3500000
 80036bc:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 80036c0:	464a      	mov	r2, r9
 80036c2:	e9d5 0100 	ldrd	r0, r1, [r5]
 80036c6:	4653      	mov	r3, sl
 80036c8:	f7fc ff06 	bl	80004d8 <__aeabi_dmul>
 80036cc:	4b2a      	ldr	r3, [pc, #168]	; (8003778 <_strtod_l+0x5a8>)
 80036ce:	460a      	mov	r2, r1
 80036d0:	400b      	ands	r3, r1
 80036d2:	492a      	ldr	r1, [pc, #168]	; (800377c <_strtod_l+0x5ac>)
 80036d4:	4681      	mov	r9, r0
 80036d6:	428b      	cmp	r3, r1
 80036d8:	d894      	bhi.n	8003604 <_strtod_l+0x434>
 80036da:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80036de:	428b      	cmp	r3, r1
 80036e0:	bf86      	itte	hi
 80036e2:	f04f 39ff 	movhi.w	r9, #4294967295	; 0xffffffff
 80036e6:	f8df a09c 	ldrhi.w	sl, [pc, #156]	; 8003784 <_strtod_l+0x5b4>
 80036ea:	f102 7a54 	addls.w	sl, r2, #55574528	; 0x3500000
 80036ee:	2300      	movs	r3, #0
 80036f0:	9305      	str	r3, [sp, #20]
 80036f2:	e07b      	b.n	80037ec <_strtod_l+0x61c>
 80036f4:	f018 0f01 	tst.w	r8, #1
 80036f8:	d006      	beq.n	8003708 <_strtod_l+0x538>
 80036fa:	eb06 03c5 	add.w	r3, r6, r5, lsl #3
 80036fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003702:	f7fc fee9 	bl	80004d8 <__aeabi_dmul>
 8003706:	2301      	movs	r3, #1
 8003708:	3501      	adds	r5, #1
 800370a:	ea4f 0868 	mov.w	r8, r8, asr #1
 800370e:	e7cc      	b.n	80036aa <_strtod_l+0x4da>
 8003710:	d0ed      	beq.n	80036ee <_strtod_l+0x51e>
 8003712:	f1c8 0800 	rsb	r8, r8, #0
 8003716:	f018 020f 	ands.w	r2, r8, #15
 800371a:	d00a      	beq.n	8003732 <_strtod_l+0x562>
 800371c:	4b14      	ldr	r3, [pc, #80]	; (8003770 <_strtod_l+0x5a0>)
 800371e:	4648      	mov	r0, r9
 8003720:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8003724:	4651      	mov	r1, sl
 8003726:	e9d3 2300 	ldrd	r2, r3, [r3]
 800372a:	f7fc ffff 	bl	800072c <__aeabi_ddiv>
 800372e:	4681      	mov	r9, r0
 8003730:	468a      	mov	sl, r1
 8003732:	ea5f 1828 	movs.w	r8, r8, asr #4
 8003736:	d0da      	beq.n	80036ee <_strtod_l+0x51e>
 8003738:	f1b8 0f1f 	cmp.w	r8, #31
 800373c:	dd24      	ble.n	8003788 <_strtod_l+0x5b8>
 800373e:	f04f 0800 	mov.w	r8, #0
 8003742:	f8cd 8010 	str.w	r8, [sp, #16]
 8003746:	f8cd 8020 	str.w	r8, [sp, #32]
 800374a:	f8cd 8018 	str.w	r8, [sp, #24]
 800374e:	2322      	movs	r3, #34	; 0x22
 8003750:	f04f 0900 	mov.w	r9, #0
 8003754:	f04f 0a00 	mov.w	sl, #0
 8003758:	f8cb 3000 	str.w	r3, [fp]
 800375c:	e761      	b.n	8003622 <_strtod_l+0x452>
 800375e:	bf00      	nop
 8003760:	08006cf5 	.word	0x08006cf5
 8003764:	08006d83 	.word	0x08006d83
 8003768:	08006cfd 	.word	0x08006cfd
 800376c:	08006d40 	.word	0x08006d40
 8003770:	08006e28 	.word	0x08006e28
 8003774:	08006e00 	.word	0x08006e00
 8003778:	7ff00000 	.word	0x7ff00000
 800377c:	7ca00000 	.word	0x7ca00000
 8003780:	fff80000 	.word	0xfff80000
 8003784:	7fefffff 	.word	0x7fefffff
 8003788:	f018 0310 	ands.w	r3, r8, #16
 800378c:	bf18      	it	ne
 800378e:	236a      	movne	r3, #106	; 0x6a
 8003790:	4648      	mov	r0, r9
 8003792:	9305      	str	r3, [sp, #20]
 8003794:	4651      	mov	r1, sl
 8003796:	2300      	movs	r3, #0
 8003798:	4da1      	ldr	r5, [pc, #644]	; (8003a20 <_strtod_l+0x850>)
 800379a:	f1b8 0f00 	cmp.w	r8, #0
 800379e:	f300 8113 	bgt.w	80039c8 <_strtod_l+0x7f8>
 80037a2:	b10b      	cbz	r3, 80037a8 <_strtod_l+0x5d8>
 80037a4:	4681      	mov	r9, r0
 80037a6:	468a      	mov	sl, r1
 80037a8:	9b05      	ldr	r3, [sp, #20]
 80037aa:	b1bb      	cbz	r3, 80037dc <_strtod_l+0x60c>
 80037ac:	f3ca 530a 	ubfx	r3, sl, #20, #11
 80037b0:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80037b4:	2b00      	cmp	r3, #0
 80037b6:	4651      	mov	r1, sl
 80037b8:	dd10      	ble.n	80037dc <_strtod_l+0x60c>
 80037ba:	2b1f      	cmp	r3, #31
 80037bc:	f340 8110 	ble.w	80039e0 <_strtod_l+0x810>
 80037c0:	2b34      	cmp	r3, #52	; 0x34
 80037c2:	bfd8      	it	le
 80037c4:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
 80037c8:	f04f 0900 	mov.w	r9, #0
 80037cc:	bfcf      	iteee	gt
 80037ce:	f04f 7a5c 	movgt.w	sl, #57671680	; 0x3700000
 80037d2:	3b20      	suble	r3, #32
 80037d4:	fa02 f303 	lslle.w	r3, r2, r3
 80037d8:	ea03 0a01 	andle.w	sl, r3, r1
 80037dc:	2200      	movs	r2, #0
 80037de:	2300      	movs	r3, #0
 80037e0:	4648      	mov	r0, r9
 80037e2:	4651      	mov	r1, sl
 80037e4:	f7fd f8e0 	bl	80009a8 <__aeabi_dcmpeq>
 80037e8:	2800      	cmp	r0, #0
 80037ea:	d1a8      	bne.n	800373e <_strtod_l+0x56e>
 80037ec:	9b06      	ldr	r3, [sp, #24]
 80037ee:	9a04      	ldr	r2, [sp, #16]
 80037f0:	9300      	str	r3, [sp, #0]
 80037f2:	9908      	ldr	r1, [sp, #32]
 80037f4:	4623      	mov	r3, r4
 80037f6:	4658      	mov	r0, fp
 80037f8:	f002 f85d 	bl	80058b6 <__s2b>
 80037fc:	9008      	str	r0, [sp, #32]
 80037fe:	2800      	cmp	r0, #0
 8003800:	f43f af00 	beq.w	8003604 <_strtod_l+0x434>
 8003804:	9a07      	ldr	r2, [sp, #28]
 8003806:	9b07      	ldr	r3, [sp, #28]
 8003808:	2a00      	cmp	r2, #0
 800380a:	f1c3 0300 	rsb	r3, r3, #0
 800380e:	bfa8      	it	ge
 8003810:	2300      	movge	r3, #0
 8003812:	f04f 0800 	mov.w	r8, #0
 8003816:	930e      	str	r3, [sp, #56]	; 0x38
 8003818:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 800381c:	9316      	str	r3, [sp, #88]	; 0x58
 800381e:	f8cd 8010 	str.w	r8, [sp, #16]
 8003822:	9b08      	ldr	r3, [sp, #32]
 8003824:	4658      	mov	r0, fp
 8003826:	6859      	ldr	r1, [r3, #4]
 8003828:	f001 ffbf 	bl	80057aa <_Balloc>
 800382c:	9006      	str	r0, [sp, #24]
 800382e:	2800      	cmp	r0, #0
 8003830:	f43f aef0 	beq.w	8003614 <_strtod_l+0x444>
 8003834:	9b08      	ldr	r3, [sp, #32]
 8003836:	300c      	adds	r0, #12
 8003838:	691a      	ldr	r2, [r3, #16]
 800383a:	f103 010c 	add.w	r1, r3, #12
 800383e:	3202      	adds	r2, #2
 8003840:	0092      	lsls	r2, r2, #2
 8003842:	f001 ffa7 	bl	8005794 <memcpy>
 8003846:	ab1e      	add	r3, sp, #120	; 0x78
 8003848:	9301      	str	r3, [sp, #4]
 800384a:	ab1d      	add	r3, sp, #116	; 0x74
 800384c:	9300      	str	r3, [sp, #0]
 800384e:	464a      	mov	r2, r9
 8003850:	4653      	mov	r3, sl
 8003852:	4658      	mov	r0, fp
 8003854:	e9cd 9a0a 	strd	r9, sl, [sp, #40]	; 0x28
 8003858:	f002 fae8 	bl	8005e2c <__d2b>
 800385c:	901c      	str	r0, [sp, #112]	; 0x70
 800385e:	2800      	cmp	r0, #0
 8003860:	f43f aed8 	beq.w	8003614 <_strtod_l+0x444>
 8003864:	2101      	movs	r1, #1
 8003866:	4658      	mov	r0, fp
 8003868:	f002 f8b1 	bl	80059ce <__i2b>
 800386c:	9004      	str	r0, [sp, #16]
 800386e:	4603      	mov	r3, r0
 8003870:	2800      	cmp	r0, #0
 8003872:	f43f aecf 	beq.w	8003614 <_strtod_l+0x444>
 8003876:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8003878:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 800387a:	2d00      	cmp	r5, #0
 800387c:	bfab      	itete	ge
 800387e:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8003880:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8003882:	18ee      	addge	r6, r5, r3
 8003884:	1b5c      	sublt	r4, r3, r5
 8003886:	9b05      	ldr	r3, [sp, #20]
 8003888:	bfa8      	it	ge
 800388a:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 800388c:	eba5 0503 	sub.w	r5, r5, r3
 8003890:	4415      	add	r5, r2
 8003892:	4b64      	ldr	r3, [pc, #400]	; (8003a24 <_strtod_l+0x854>)
 8003894:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 8003898:	bfb8      	it	lt
 800389a:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 800389c:	429d      	cmp	r5, r3
 800389e:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80038a2:	f280 80af 	bge.w	8003a04 <_strtod_l+0x834>
 80038a6:	1b5b      	subs	r3, r3, r5
 80038a8:	2b1f      	cmp	r3, #31
 80038aa:	eba2 0203 	sub.w	r2, r2, r3
 80038ae:	f04f 0701 	mov.w	r7, #1
 80038b2:	f300 809c 	bgt.w	80039ee <_strtod_l+0x81e>
 80038b6:	2500      	movs	r5, #0
 80038b8:	fa07 f303 	lsl.w	r3, r7, r3
 80038bc:	930f      	str	r3, [sp, #60]	; 0x3c
 80038be:	18b7      	adds	r7, r6, r2
 80038c0:	9b05      	ldr	r3, [sp, #20]
 80038c2:	42be      	cmp	r6, r7
 80038c4:	4414      	add	r4, r2
 80038c6:	441c      	add	r4, r3
 80038c8:	4633      	mov	r3, r6
 80038ca:	bfa8      	it	ge
 80038cc:	463b      	movge	r3, r7
 80038ce:	42a3      	cmp	r3, r4
 80038d0:	bfa8      	it	ge
 80038d2:	4623      	movge	r3, r4
 80038d4:	2b00      	cmp	r3, #0
 80038d6:	bfc2      	ittt	gt
 80038d8:	1aff      	subgt	r7, r7, r3
 80038da:	1ae4      	subgt	r4, r4, r3
 80038dc:	1af6      	subgt	r6, r6, r3
 80038de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80038e0:	b1bb      	cbz	r3, 8003912 <_strtod_l+0x742>
 80038e2:	461a      	mov	r2, r3
 80038e4:	9904      	ldr	r1, [sp, #16]
 80038e6:	4658      	mov	r0, fp
 80038e8:	f002 f910 	bl	8005b0c <__pow5mult>
 80038ec:	9004      	str	r0, [sp, #16]
 80038ee:	2800      	cmp	r0, #0
 80038f0:	f43f ae90 	beq.w	8003614 <_strtod_l+0x444>
 80038f4:	4601      	mov	r1, r0
 80038f6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80038f8:	4658      	mov	r0, fp
 80038fa:	f002 f871 	bl	80059e0 <__multiply>
 80038fe:	9009      	str	r0, [sp, #36]	; 0x24
 8003900:	2800      	cmp	r0, #0
 8003902:	f43f ae87 	beq.w	8003614 <_strtod_l+0x444>
 8003906:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003908:	4658      	mov	r0, fp
 800390a:	f001 ff82 	bl	8005812 <_Bfree>
 800390e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003910:	931c      	str	r3, [sp, #112]	; 0x70
 8003912:	2f00      	cmp	r7, #0
 8003914:	dc7a      	bgt.n	8003a0c <_strtod_l+0x83c>
 8003916:	9b07      	ldr	r3, [sp, #28]
 8003918:	2b00      	cmp	r3, #0
 800391a:	dd08      	ble.n	800392e <_strtod_l+0x75e>
 800391c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800391e:	9906      	ldr	r1, [sp, #24]
 8003920:	4658      	mov	r0, fp
 8003922:	f002 f8f3 	bl	8005b0c <__pow5mult>
 8003926:	9006      	str	r0, [sp, #24]
 8003928:	2800      	cmp	r0, #0
 800392a:	f43f ae73 	beq.w	8003614 <_strtod_l+0x444>
 800392e:	2c00      	cmp	r4, #0
 8003930:	dd08      	ble.n	8003944 <_strtod_l+0x774>
 8003932:	4622      	mov	r2, r4
 8003934:	9906      	ldr	r1, [sp, #24]
 8003936:	4658      	mov	r0, fp
 8003938:	f002 f936 	bl	8005ba8 <__lshift>
 800393c:	9006      	str	r0, [sp, #24]
 800393e:	2800      	cmp	r0, #0
 8003940:	f43f ae68 	beq.w	8003614 <_strtod_l+0x444>
 8003944:	2e00      	cmp	r6, #0
 8003946:	dd08      	ble.n	800395a <_strtod_l+0x78a>
 8003948:	4632      	mov	r2, r6
 800394a:	9904      	ldr	r1, [sp, #16]
 800394c:	4658      	mov	r0, fp
 800394e:	f002 f92b 	bl	8005ba8 <__lshift>
 8003952:	9004      	str	r0, [sp, #16]
 8003954:	2800      	cmp	r0, #0
 8003956:	f43f ae5d 	beq.w	8003614 <_strtod_l+0x444>
 800395a:	9a06      	ldr	r2, [sp, #24]
 800395c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800395e:	4658      	mov	r0, fp
 8003960:	f002 f990 	bl	8005c84 <__mdiff>
 8003964:	4680      	mov	r8, r0
 8003966:	2800      	cmp	r0, #0
 8003968:	f43f ae54 	beq.w	8003614 <_strtod_l+0x444>
 800396c:	2400      	movs	r4, #0
 800396e:	68c3      	ldr	r3, [r0, #12]
 8003970:	9904      	ldr	r1, [sp, #16]
 8003972:	60c4      	str	r4, [r0, #12]
 8003974:	930c      	str	r3, [sp, #48]	; 0x30
 8003976:	f002 f96b 	bl	8005c50 <__mcmp>
 800397a:	42a0      	cmp	r0, r4
 800397c:	da54      	bge.n	8003a28 <_strtod_l+0x858>
 800397e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003980:	b9f3      	cbnz	r3, 80039c0 <_strtod_l+0x7f0>
 8003982:	f1b9 0f00 	cmp.w	r9, #0
 8003986:	d11b      	bne.n	80039c0 <_strtod_l+0x7f0>
 8003988:	f3ca 0313 	ubfx	r3, sl, #0, #20
 800398c:	b9c3      	cbnz	r3, 80039c0 <_strtod_l+0x7f0>
 800398e:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8003992:	0d1b      	lsrs	r3, r3, #20
 8003994:	051b      	lsls	r3, r3, #20
 8003996:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 800399a:	d911      	bls.n	80039c0 <_strtod_l+0x7f0>
 800399c:	f8d8 3014 	ldr.w	r3, [r8, #20]
 80039a0:	b91b      	cbnz	r3, 80039aa <_strtod_l+0x7da>
 80039a2:	f8d8 3010 	ldr.w	r3, [r8, #16]
 80039a6:	2b01      	cmp	r3, #1
 80039a8:	dd0a      	ble.n	80039c0 <_strtod_l+0x7f0>
 80039aa:	4641      	mov	r1, r8
 80039ac:	2201      	movs	r2, #1
 80039ae:	4658      	mov	r0, fp
 80039b0:	f002 f8fa 	bl	8005ba8 <__lshift>
 80039b4:	9904      	ldr	r1, [sp, #16]
 80039b6:	4680      	mov	r8, r0
 80039b8:	f002 f94a 	bl	8005c50 <__mcmp>
 80039bc:	2800      	cmp	r0, #0
 80039be:	dc68      	bgt.n	8003a92 <_strtod_l+0x8c2>
 80039c0:	9b05      	ldr	r3, [sp, #20]
 80039c2:	2b00      	cmp	r3, #0
 80039c4:	d172      	bne.n	8003aac <_strtod_l+0x8dc>
 80039c6:	e630      	b.n	800362a <_strtod_l+0x45a>
 80039c8:	f018 0f01 	tst.w	r8, #1
 80039cc:	d004      	beq.n	80039d8 <_strtod_l+0x808>
 80039ce:	e9d5 2300 	ldrd	r2, r3, [r5]
 80039d2:	f7fc fd81 	bl	80004d8 <__aeabi_dmul>
 80039d6:	2301      	movs	r3, #1
 80039d8:	ea4f 0868 	mov.w	r8, r8, asr #1
 80039dc:	3508      	adds	r5, #8
 80039de:	e6dc      	b.n	800379a <_strtod_l+0x5ca>
 80039e0:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 80039e4:	fa02 f303 	lsl.w	r3, r2, r3
 80039e8:	ea03 0909 	and.w	r9, r3, r9
 80039ec:	e6f6      	b.n	80037dc <_strtod_l+0x60c>
 80039ee:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 80039f2:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 80039f6:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 80039fa:	35e2      	adds	r5, #226	; 0xe2
 80039fc:	fa07 f505 	lsl.w	r5, r7, r5
 8003a00:	970f      	str	r7, [sp, #60]	; 0x3c
 8003a02:	e75c      	b.n	80038be <_strtod_l+0x6ee>
 8003a04:	2301      	movs	r3, #1
 8003a06:	2500      	movs	r5, #0
 8003a08:	930f      	str	r3, [sp, #60]	; 0x3c
 8003a0a:	e758      	b.n	80038be <_strtod_l+0x6ee>
 8003a0c:	463a      	mov	r2, r7
 8003a0e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003a10:	4658      	mov	r0, fp
 8003a12:	f002 f8c9 	bl	8005ba8 <__lshift>
 8003a16:	901c      	str	r0, [sp, #112]	; 0x70
 8003a18:	2800      	cmp	r0, #0
 8003a1a:	f47f af7c 	bne.w	8003916 <_strtod_l+0x746>
 8003a1e:	e5f9      	b.n	8003614 <_strtod_l+0x444>
 8003a20:	08006d58 	.word	0x08006d58
 8003a24:	fffffc02 	.word	0xfffffc02
 8003a28:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8003a2c:	f040 8089 	bne.w	8003b42 <_strtod_l+0x972>
 8003a30:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003a32:	f3ca 0313 	ubfx	r3, sl, #0, #20
 8003a36:	b342      	cbz	r2, 8003a8a <_strtod_l+0x8ba>
 8003a38:	4aaf      	ldr	r2, [pc, #700]	; (8003cf8 <_strtod_l+0xb28>)
 8003a3a:	4293      	cmp	r3, r2
 8003a3c:	d156      	bne.n	8003aec <_strtod_l+0x91c>
 8003a3e:	9b05      	ldr	r3, [sp, #20]
 8003a40:	4648      	mov	r0, r9
 8003a42:	b1eb      	cbz	r3, 8003a80 <_strtod_l+0x8b0>
 8003a44:	4653      	mov	r3, sl
 8003a46:	4aad      	ldr	r2, [pc, #692]	; (8003cfc <_strtod_l+0xb2c>)
 8003a48:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003a4c:	401a      	ands	r2, r3
 8003a4e:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8003a52:	d818      	bhi.n	8003a86 <_strtod_l+0x8b6>
 8003a54:	0d12      	lsrs	r2, r2, #20
 8003a56:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8003a5a:	fa01 f303 	lsl.w	r3, r1, r3
 8003a5e:	4298      	cmp	r0, r3
 8003a60:	d144      	bne.n	8003aec <_strtod_l+0x91c>
 8003a62:	4ba7      	ldr	r3, [pc, #668]	; (8003d00 <_strtod_l+0xb30>)
 8003a64:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003a66:	429a      	cmp	r2, r3
 8003a68:	d102      	bne.n	8003a70 <_strtod_l+0x8a0>
 8003a6a:	3001      	adds	r0, #1
 8003a6c:	f43f add2 	beq.w	8003614 <_strtod_l+0x444>
 8003a70:	4ba2      	ldr	r3, [pc, #648]	; (8003cfc <_strtod_l+0xb2c>)
 8003a72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003a74:	f04f 0900 	mov.w	r9, #0
 8003a78:	401a      	ands	r2, r3
 8003a7a:	f502 1a80 	add.w	sl, r2, #1048576	; 0x100000
 8003a7e:	e79f      	b.n	80039c0 <_strtod_l+0x7f0>
 8003a80:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003a84:	e7eb      	b.n	8003a5e <_strtod_l+0x88e>
 8003a86:	460b      	mov	r3, r1
 8003a88:	e7e9      	b.n	8003a5e <_strtod_l+0x88e>
 8003a8a:	bb7b      	cbnz	r3, 8003aec <_strtod_l+0x91c>
 8003a8c:	f1b9 0f00 	cmp.w	r9, #0
 8003a90:	d12c      	bne.n	8003aec <_strtod_l+0x91c>
 8003a92:	9905      	ldr	r1, [sp, #20]
 8003a94:	4653      	mov	r3, sl
 8003a96:	4a99      	ldr	r2, [pc, #612]	; (8003cfc <_strtod_l+0xb2c>)
 8003a98:	b1f1      	cbz	r1, 8003ad8 <_strtod_l+0x908>
 8003a9a:	ea02 010a 	and.w	r1, r2, sl
 8003a9e:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8003aa2:	dc19      	bgt.n	8003ad8 <_strtod_l+0x908>
 8003aa4:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003aa8:	f77f ae51 	ble.w	800374e <_strtod_l+0x57e>
 8003aac:	2300      	movs	r3, #0
 8003aae:	4a95      	ldr	r2, [pc, #596]	; (8003d04 <_strtod_l+0xb34>)
 8003ab0:	4648      	mov	r0, r9
 8003ab2:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 8003ab6:	4651      	mov	r1, sl
 8003ab8:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8003abc:	f7fc fd0c 	bl	80004d8 <__aeabi_dmul>
 8003ac0:	4681      	mov	r9, r0
 8003ac2:	468a      	mov	sl, r1
 8003ac4:	2900      	cmp	r1, #0
 8003ac6:	f47f adb0 	bne.w	800362a <_strtod_l+0x45a>
 8003aca:	2800      	cmp	r0, #0
 8003acc:	f47f adad 	bne.w	800362a <_strtod_l+0x45a>
 8003ad0:	2322      	movs	r3, #34	; 0x22
 8003ad2:	f8cb 3000 	str.w	r3, [fp]
 8003ad6:	e5a8      	b.n	800362a <_strtod_l+0x45a>
 8003ad8:	4013      	ands	r3, r2
 8003ada:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003ade:	ea6f 5a13 	mvn.w	sl, r3, lsr #20
 8003ae2:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8003ae6:	ea6f 5a0a 	mvn.w	sl, sl, lsl #20
 8003aea:	e769      	b.n	80039c0 <_strtod_l+0x7f0>
 8003aec:	b19d      	cbz	r5, 8003b16 <_strtod_l+0x946>
 8003aee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003af0:	421d      	tst	r5, r3
 8003af2:	f43f af65 	beq.w	80039c0 <_strtod_l+0x7f0>
 8003af6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003af8:	9a05      	ldr	r2, [sp, #20]
 8003afa:	4648      	mov	r0, r9
 8003afc:	4651      	mov	r1, sl
 8003afe:	b173      	cbz	r3, 8003b1e <_strtod_l+0x94e>
 8003b00:	f7ff fb44 	bl	800318c <sulp>
 8003b04:	4602      	mov	r2, r0
 8003b06:	460b      	mov	r3, r1
 8003b08:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003b0c:	f7fc fb2e 	bl	800016c <__adddf3>
 8003b10:	4681      	mov	r9, r0
 8003b12:	468a      	mov	sl, r1
 8003b14:	e754      	b.n	80039c0 <_strtod_l+0x7f0>
 8003b16:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003b18:	ea13 0f09 	tst.w	r3, r9
 8003b1c:	e7e9      	b.n	8003af2 <_strtod_l+0x922>
 8003b1e:	f7ff fb35 	bl	800318c <sulp>
 8003b22:	4602      	mov	r2, r0
 8003b24:	460b      	mov	r3, r1
 8003b26:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003b2a:	f7fc fb1d 	bl	8000168 <__aeabi_dsub>
 8003b2e:	2200      	movs	r2, #0
 8003b30:	2300      	movs	r3, #0
 8003b32:	4681      	mov	r9, r0
 8003b34:	468a      	mov	sl, r1
 8003b36:	f7fc ff37 	bl	80009a8 <__aeabi_dcmpeq>
 8003b3a:	2800      	cmp	r0, #0
 8003b3c:	f47f ae07 	bne.w	800374e <_strtod_l+0x57e>
 8003b40:	e73e      	b.n	80039c0 <_strtod_l+0x7f0>
 8003b42:	9904      	ldr	r1, [sp, #16]
 8003b44:	4640      	mov	r0, r8
 8003b46:	f002 f9c0 	bl	8005eca <__ratio>
 8003b4a:	2200      	movs	r2, #0
 8003b4c:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003b50:	4606      	mov	r6, r0
 8003b52:	460f      	mov	r7, r1
 8003b54:	f7fc ff3c 	bl	80009d0 <__aeabi_dcmple>
 8003b58:	2800      	cmp	r0, #0
 8003b5a:	d075      	beq.n	8003c48 <_strtod_l+0xa78>
 8003b5c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003b5e:	2b00      	cmp	r3, #0
 8003b60:	d047      	beq.n	8003bf2 <_strtod_l+0xa22>
 8003b62:	2600      	movs	r6, #0
 8003b64:	4f68      	ldr	r7, [pc, #416]	; (8003d08 <_strtod_l+0xb38>)
 8003b66:	4d68      	ldr	r5, [pc, #416]	; (8003d08 <_strtod_l+0xb38>)
 8003b68:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003b6a:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003b6e:	0d1b      	lsrs	r3, r3, #20
 8003b70:	051b      	lsls	r3, r3, #20
 8003b72:	930f      	str	r3, [sp, #60]	; 0x3c
 8003b74:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003b76:	4b65      	ldr	r3, [pc, #404]	; (8003d0c <_strtod_l+0xb3c>)
 8003b78:	429a      	cmp	r2, r3
 8003b7a:	f040 80cf 	bne.w	8003d1c <_strtod_l+0xb4c>
 8003b7e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003b82:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 8003b86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003b88:	4648      	mov	r0, r9
 8003b8a:	f1a3 7a54 	sub.w	sl, r3, #55574528	; 0x3500000
 8003b8e:	4651      	mov	r1, sl
 8003b90:	f002 f8d6 	bl	8005d40 <__ulp>
 8003b94:	4602      	mov	r2, r0
 8003b96:	460b      	mov	r3, r1
 8003b98:	4630      	mov	r0, r6
 8003b9a:	4639      	mov	r1, r7
 8003b9c:	f7fc fc9c 	bl	80004d8 <__aeabi_dmul>
 8003ba0:	464a      	mov	r2, r9
 8003ba2:	4653      	mov	r3, sl
 8003ba4:	f7fc fae2 	bl	800016c <__adddf3>
 8003ba8:	460b      	mov	r3, r1
 8003baa:	4954      	ldr	r1, [pc, #336]	; (8003cfc <_strtod_l+0xb2c>)
 8003bac:	4a58      	ldr	r2, [pc, #352]	; (8003d10 <_strtod_l+0xb40>)
 8003bae:	4019      	ands	r1, r3
 8003bb0:	4291      	cmp	r1, r2
 8003bb2:	4681      	mov	r9, r0
 8003bb4:	d95e      	bls.n	8003c74 <_strtod_l+0xaa4>
 8003bb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003bb8:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8003bbc:	4293      	cmp	r3, r2
 8003bbe:	d103      	bne.n	8003bc8 <_strtod_l+0x9f8>
 8003bc0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003bc2:	3301      	adds	r3, #1
 8003bc4:	f43f ad26 	beq.w	8003614 <_strtod_l+0x444>
 8003bc8:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8003bcc:	f8df a130 	ldr.w	sl, [pc, #304]	; 8003d00 <_strtod_l+0xb30>
 8003bd0:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003bd2:	4658      	mov	r0, fp
 8003bd4:	f001 fe1d 	bl	8005812 <_Bfree>
 8003bd8:	9906      	ldr	r1, [sp, #24]
 8003bda:	4658      	mov	r0, fp
 8003bdc:	f001 fe19 	bl	8005812 <_Bfree>
 8003be0:	9904      	ldr	r1, [sp, #16]
 8003be2:	4658      	mov	r0, fp
 8003be4:	f001 fe15 	bl	8005812 <_Bfree>
 8003be8:	4641      	mov	r1, r8
 8003bea:	4658      	mov	r0, fp
 8003bec:	f001 fe11 	bl	8005812 <_Bfree>
 8003bf0:	e617      	b.n	8003822 <_strtod_l+0x652>
 8003bf2:	f1b9 0f00 	cmp.w	r9, #0
 8003bf6:	d119      	bne.n	8003c2c <_strtod_l+0xa5c>
 8003bf8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003bfa:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003bfe:	b9e3      	cbnz	r3, 8003c3a <_strtod_l+0xa6a>
 8003c00:	2200      	movs	r2, #0
 8003c02:	4b41      	ldr	r3, [pc, #260]	; (8003d08 <_strtod_l+0xb38>)
 8003c04:	4630      	mov	r0, r6
 8003c06:	4639      	mov	r1, r7
 8003c08:	f7fc fed8 	bl	80009bc <__aeabi_dcmplt>
 8003c0c:	b9c8      	cbnz	r0, 8003c42 <_strtod_l+0xa72>
 8003c0e:	2200      	movs	r2, #0
 8003c10:	4b40      	ldr	r3, [pc, #256]	; (8003d14 <_strtod_l+0xb44>)
 8003c12:	4630      	mov	r0, r6
 8003c14:	4639      	mov	r1, r7
 8003c16:	f7fc fc5f 	bl	80004d8 <__aeabi_dmul>
 8003c1a:	4604      	mov	r4, r0
 8003c1c:	460d      	mov	r5, r1
 8003c1e:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003c22:	9418      	str	r4, [sp, #96]	; 0x60
 8003c24:	9319      	str	r3, [sp, #100]	; 0x64
 8003c26:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 8003c2a:	e79d      	b.n	8003b68 <_strtod_l+0x998>
 8003c2c:	f1b9 0f01 	cmp.w	r9, #1
 8003c30:	d103      	bne.n	8003c3a <_strtod_l+0xa6a>
 8003c32:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c34:	2b00      	cmp	r3, #0
 8003c36:	f43f ad8a 	beq.w	800374e <_strtod_l+0x57e>
 8003c3a:	2600      	movs	r6, #0
 8003c3c:	4f36      	ldr	r7, [pc, #216]	; (8003d18 <_strtod_l+0xb48>)
 8003c3e:	2400      	movs	r4, #0
 8003c40:	e791      	b.n	8003b66 <_strtod_l+0x996>
 8003c42:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8003c44:	4d33      	ldr	r5, [pc, #204]	; (8003d14 <_strtod_l+0xb44>)
 8003c46:	e7ea      	b.n	8003c1e <_strtod_l+0xa4e>
 8003c48:	4b32      	ldr	r3, [pc, #200]	; (8003d14 <_strtod_l+0xb44>)
 8003c4a:	2200      	movs	r2, #0
 8003c4c:	4630      	mov	r0, r6
 8003c4e:	4639      	mov	r1, r7
 8003c50:	f7fc fc42 	bl	80004d8 <__aeabi_dmul>
 8003c54:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003c56:	4604      	mov	r4, r0
 8003c58:	460d      	mov	r5, r1
 8003c5a:	b933      	cbnz	r3, 8003c6a <_strtod_l+0xa9a>
 8003c5c:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003c60:	9010      	str	r0, [sp, #64]	; 0x40
 8003c62:	9311      	str	r3, [sp, #68]	; 0x44
 8003c64:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003c68:	e77e      	b.n	8003b68 <_strtod_l+0x998>
 8003c6a:	4602      	mov	r2, r0
 8003c6c:	460b      	mov	r3, r1
 8003c6e:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8003c72:	e7f7      	b.n	8003c64 <_strtod_l+0xa94>
 8003c74:	f103 7a54 	add.w	sl, r3, #55574528	; 0x3500000
 8003c78:	9b05      	ldr	r3, [sp, #20]
 8003c7a:	2b00      	cmp	r3, #0
 8003c7c:	d1a8      	bne.n	8003bd0 <_strtod_l+0xa00>
 8003c7e:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8003c82:	0d1b      	lsrs	r3, r3, #20
 8003c84:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003c86:	051b      	lsls	r3, r3, #20
 8003c88:	429a      	cmp	r2, r3
 8003c8a:	4656      	mov	r6, sl
 8003c8c:	d1a0      	bne.n	8003bd0 <_strtod_l+0xa00>
 8003c8e:	4629      	mov	r1, r5
 8003c90:	4620      	mov	r0, r4
 8003c92:	f7fc fed1 	bl	8000a38 <__aeabi_d2iz>
 8003c96:	f7fc fbb5 	bl	8000404 <__aeabi_i2d>
 8003c9a:	460b      	mov	r3, r1
 8003c9c:	4602      	mov	r2, r0
 8003c9e:	4629      	mov	r1, r5
 8003ca0:	4620      	mov	r0, r4
 8003ca2:	f7fc fa61 	bl	8000168 <__aeabi_dsub>
 8003ca6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003ca8:	4604      	mov	r4, r0
 8003caa:	460d      	mov	r5, r1
 8003cac:	b933      	cbnz	r3, 8003cbc <_strtod_l+0xaec>
 8003cae:	f1b9 0f00 	cmp.w	r9, #0
 8003cb2:	d103      	bne.n	8003cbc <_strtod_l+0xaec>
 8003cb4:	f3ca 0613 	ubfx	r6, sl, #0, #20
 8003cb8:	2e00      	cmp	r6, #0
 8003cba:	d06a      	beq.n	8003d92 <_strtod_l+0xbc2>
 8003cbc:	a30a      	add	r3, pc, #40	; (adr r3, 8003ce8 <_strtod_l+0xb18>)
 8003cbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cc2:	4620      	mov	r0, r4
 8003cc4:	4629      	mov	r1, r5
 8003cc6:	f7fc fe79 	bl	80009bc <__aeabi_dcmplt>
 8003cca:	2800      	cmp	r0, #0
 8003ccc:	f47f acad 	bne.w	800362a <_strtod_l+0x45a>
 8003cd0:	a307      	add	r3, pc, #28	; (adr r3, 8003cf0 <_strtod_l+0xb20>)
 8003cd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003cd6:	4620      	mov	r0, r4
 8003cd8:	4629      	mov	r1, r5
 8003cda:	f7fc fe8d 	bl	80009f8 <__aeabi_dcmpgt>
 8003cde:	2800      	cmp	r0, #0
 8003ce0:	f43f af76 	beq.w	8003bd0 <_strtod_l+0xa00>
 8003ce4:	e4a1      	b.n	800362a <_strtod_l+0x45a>
 8003ce6:	bf00      	nop
 8003ce8:	94a03595 	.word	0x94a03595
 8003cec:	3fdfffff 	.word	0x3fdfffff
 8003cf0:	35afe535 	.word	0x35afe535
 8003cf4:	3fe00000 	.word	0x3fe00000
 8003cf8:	000fffff 	.word	0x000fffff
 8003cfc:	7ff00000 	.word	0x7ff00000
 8003d00:	7fefffff 	.word	0x7fefffff
 8003d04:	39500000 	.word	0x39500000
 8003d08:	3ff00000 	.word	0x3ff00000
 8003d0c:	7fe00000 	.word	0x7fe00000
 8003d10:	7c9fffff 	.word	0x7c9fffff
 8003d14:	3fe00000 	.word	0x3fe00000
 8003d18:	bff00000 	.word	0xbff00000
 8003d1c:	9b05      	ldr	r3, [sp, #20]
 8003d1e:	b313      	cbz	r3, 8003d66 <_strtod_l+0xb96>
 8003d20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003d22:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003d26:	d81e      	bhi.n	8003d66 <_strtod_l+0xb96>
 8003d28:	a325      	add	r3, pc, #148	; (adr r3, 8003dc0 <_strtod_l+0xbf0>)
 8003d2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d2e:	4620      	mov	r0, r4
 8003d30:	4629      	mov	r1, r5
 8003d32:	f7fc fe4d 	bl	80009d0 <__aeabi_dcmple>
 8003d36:	b190      	cbz	r0, 8003d5e <_strtod_l+0xb8e>
 8003d38:	4629      	mov	r1, r5
 8003d3a:	4620      	mov	r0, r4
 8003d3c:	f7fc fea4 	bl	8000a88 <__aeabi_d2uiz>
 8003d40:	2800      	cmp	r0, #0
 8003d42:	bf08      	it	eq
 8003d44:	2001      	moveq	r0, #1
 8003d46:	f7fc fb4d 	bl	80003e4 <__aeabi_ui2d>
 8003d4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003d4c:	4604      	mov	r4, r0
 8003d4e:	460d      	mov	r5, r1
 8003d50:	b9d3      	cbnz	r3, 8003d88 <_strtod_l+0xbb8>
 8003d52:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003d56:	9012      	str	r0, [sp, #72]	; 0x48
 8003d58:	9313      	str	r3, [sp, #76]	; 0x4c
 8003d5a:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8003d5e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003d60:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8003d64:	1a9f      	subs	r7, r3, r2
 8003d66:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003d6a:	f001 ffe9 	bl	8005d40 <__ulp>
 8003d6e:	4602      	mov	r2, r0
 8003d70:	460b      	mov	r3, r1
 8003d72:	4630      	mov	r0, r6
 8003d74:	4639      	mov	r1, r7
 8003d76:	f7fc fbaf 	bl	80004d8 <__aeabi_dmul>
 8003d7a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003d7e:	f7fc f9f5 	bl	800016c <__adddf3>
 8003d82:	4681      	mov	r9, r0
 8003d84:	468a      	mov	sl, r1
 8003d86:	e777      	b.n	8003c78 <_strtod_l+0xaa8>
 8003d88:	4602      	mov	r2, r0
 8003d8a:	460b      	mov	r3, r1
 8003d8c:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8003d90:	e7e3      	b.n	8003d5a <_strtod_l+0xb8a>
 8003d92:	a30d      	add	r3, pc, #52	; (adr r3, 8003dc8 <_strtod_l+0xbf8>)
 8003d94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003d98:	f7fc fe10 	bl	80009bc <__aeabi_dcmplt>
 8003d9c:	e79f      	b.n	8003cde <_strtod_l+0xb0e>
 8003d9e:	2300      	movs	r3, #0
 8003da0:	930d      	str	r3, [sp, #52]	; 0x34
 8003da2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003da4:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8003da6:	6013      	str	r3, [r2, #0]
 8003da8:	f7ff ba55 	b.w	8003256 <_strtod_l+0x86>
 8003dac:	2b65      	cmp	r3, #101	; 0x65
 8003dae:	f04f 0200 	mov.w	r2, #0
 8003db2:	f43f ab42 	beq.w	800343a <_strtod_l+0x26a>
 8003db6:	2101      	movs	r1, #1
 8003db8:	4614      	mov	r4, r2
 8003dba:	9105      	str	r1, [sp, #20]
 8003dbc:	f7ff babf 	b.w	800333e <_strtod_l+0x16e>
 8003dc0:	ffc00000 	.word	0xffc00000
 8003dc4:	41dfffff 	.word	0x41dfffff
 8003dc8:	94a03595 	.word	0x94a03595
 8003dcc:	3fcfffff 	.word	0x3fcfffff

08003dd0 <_strtod_r>:
 8003dd0:	4b05      	ldr	r3, [pc, #20]	; (8003de8 <_strtod_r+0x18>)
 8003dd2:	b410      	push	{r4}
 8003dd4:	681b      	ldr	r3, [r3, #0]
 8003dd6:	4c05      	ldr	r4, [pc, #20]	; (8003dec <_strtod_r+0x1c>)
 8003dd8:	6a1b      	ldr	r3, [r3, #32]
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	bf08      	it	eq
 8003dde:	4623      	moveq	r3, r4
 8003de0:	bc10      	pop	{r4}
 8003de2:	f7ff b9f5 	b.w	80031d0 <_strtod_l>
 8003de6:	bf00      	nop
 8003de8:	20000014 	.word	0x20000014
 8003dec:	20000078 	.word	0x20000078

08003df0 <_strtol_l.isra.0>:
 8003df0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003df4:	4680      	mov	r8, r0
 8003df6:	4689      	mov	r9, r1
 8003df8:	4692      	mov	sl, r2
 8003dfa:	461e      	mov	r6, r3
 8003dfc:	460f      	mov	r7, r1
 8003dfe:	463d      	mov	r5, r7
 8003e00:	9808      	ldr	r0, [sp, #32]
 8003e02:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003e06:	f001 fc25 	bl	8005654 <__locale_ctype_ptr_l>
 8003e0a:	4420      	add	r0, r4
 8003e0c:	7843      	ldrb	r3, [r0, #1]
 8003e0e:	f013 0308 	ands.w	r3, r3, #8
 8003e12:	d132      	bne.n	8003e7a <_strtol_l.isra.0+0x8a>
 8003e14:	2c2d      	cmp	r4, #45	; 0x2d
 8003e16:	d132      	bne.n	8003e7e <_strtol_l.isra.0+0x8e>
 8003e18:	2201      	movs	r2, #1
 8003e1a:	787c      	ldrb	r4, [r7, #1]
 8003e1c:	1cbd      	adds	r5, r7, #2
 8003e1e:	2e00      	cmp	r6, #0
 8003e20:	d05d      	beq.n	8003ede <_strtol_l.isra.0+0xee>
 8003e22:	2e10      	cmp	r6, #16
 8003e24:	d109      	bne.n	8003e3a <_strtol_l.isra.0+0x4a>
 8003e26:	2c30      	cmp	r4, #48	; 0x30
 8003e28:	d107      	bne.n	8003e3a <_strtol_l.isra.0+0x4a>
 8003e2a:	782b      	ldrb	r3, [r5, #0]
 8003e2c:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8003e30:	2b58      	cmp	r3, #88	; 0x58
 8003e32:	d14f      	bne.n	8003ed4 <_strtol_l.isra.0+0xe4>
 8003e34:	2610      	movs	r6, #16
 8003e36:	786c      	ldrb	r4, [r5, #1]
 8003e38:	3502      	adds	r5, #2
 8003e3a:	2a00      	cmp	r2, #0
 8003e3c:	bf14      	ite	ne
 8003e3e:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
 8003e42:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
 8003e46:	2700      	movs	r7, #0
 8003e48:	fbb1 fcf6 	udiv	ip, r1, r6
 8003e4c:	4638      	mov	r0, r7
 8003e4e:	fb06 1e1c 	mls	lr, r6, ip, r1
 8003e52:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8003e56:	2b09      	cmp	r3, #9
 8003e58:	d817      	bhi.n	8003e8a <_strtol_l.isra.0+0x9a>
 8003e5a:	461c      	mov	r4, r3
 8003e5c:	42a6      	cmp	r6, r4
 8003e5e:	dd23      	ble.n	8003ea8 <_strtol_l.isra.0+0xb8>
 8003e60:	1c7b      	adds	r3, r7, #1
 8003e62:	d007      	beq.n	8003e74 <_strtol_l.isra.0+0x84>
 8003e64:	4584      	cmp	ip, r0
 8003e66:	d31c      	bcc.n	8003ea2 <_strtol_l.isra.0+0xb2>
 8003e68:	d101      	bne.n	8003e6e <_strtol_l.isra.0+0x7e>
 8003e6a:	45a6      	cmp	lr, r4
 8003e6c:	db19      	blt.n	8003ea2 <_strtol_l.isra.0+0xb2>
 8003e6e:	2701      	movs	r7, #1
 8003e70:	fb00 4006 	mla	r0, r0, r6, r4
 8003e74:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003e78:	e7eb      	b.n	8003e52 <_strtol_l.isra.0+0x62>
 8003e7a:	462f      	mov	r7, r5
 8003e7c:	e7bf      	b.n	8003dfe <_strtol_l.isra.0+0xe>
 8003e7e:	2c2b      	cmp	r4, #43	; 0x2b
 8003e80:	bf04      	itt	eq
 8003e82:	1cbd      	addeq	r5, r7, #2
 8003e84:	787c      	ldrbeq	r4, [r7, #1]
 8003e86:	461a      	mov	r2, r3
 8003e88:	e7c9      	b.n	8003e1e <_strtol_l.isra.0+0x2e>
 8003e8a:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
 8003e8e:	2b19      	cmp	r3, #25
 8003e90:	d801      	bhi.n	8003e96 <_strtol_l.isra.0+0xa6>
 8003e92:	3c37      	subs	r4, #55	; 0x37
 8003e94:	e7e2      	b.n	8003e5c <_strtol_l.isra.0+0x6c>
 8003e96:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 8003e9a:	2b19      	cmp	r3, #25
 8003e9c:	d804      	bhi.n	8003ea8 <_strtol_l.isra.0+0xb8>
 8003e9e:	3c57      	subs	r4, #87	; 0x57
 8003ea0:	e7dc      	b.n	8003e5c <_strtol_l.isra.0+0x6c>
 8003ea2:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8003ea6:	e7e5      	b.n	8003e74 <_strtol_l.isra.0+0x84>
 8003ea8:	1c7b      	adds	r3, r7, #1
 8003eaa:	d108      	bne.n	8003ebe <_strtol_l.isra.0+0xce>
 8003eac:	2322      	movs	r3, #34	; 0x22
 8003eae:	4608      	mov	r0, r1
 8003eb0:	f8c8 3000 	str.w	r3, [r8]
 8003eb4:	f1ba 0f00 	cmp.w	sl, #0
 8003eb8:	d107      	bne.n	8003eca <_strtol_l.isra.0+0xda>
 8003eba:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003ebe:	b102      	cbz	r2, 8003ec2 <_strtol_l.isra.0+0xd2>
 8003ec0:	4240      	negs	r0, r0
 8003ec2:	f1ba 0f00 	cmp.w	sl, #0
 8003ec6:	d0f8      	beq.n	8003eba <_strtol_l.isra.0+0xca>
 8003ec8:	b10f      	cbz	r7, 8003ece <_strtol_l.isra.0+0xde>
 8003eca:	f105 39ff 	add.w	r9, r5, #4294967295	; 0xffffffff
 8003ece:	f8ca 9000 	str.w	r9, [sl]
 8003ed2:	e7f2      	b.n	8003eba <_strtol_l.isra.0+0xca>
 8003ed4:	2430      	movs	r4, #48	; 0x30
 8003ed6:	2e00      	cmp	r6, #0
 8003ed8:	d1af      	bne.n	8003e3a <_strtol_l.isra.0+0x4a>
 8003eda:	2608      	movs	r6, #8
 8003edc:	e7ad      	b.n	8003e3a <_strtol_l.isra.0+0x4a>
 8003ede:	2c30      	cmp	r4, #48	; 0x30
 8003ee0:	d0a3      	beq.n	8003e2a <_strtol_l.isra.0+0x3a>
 8003ee2:	260a      	movs	r6, #10
 8003ee4:	e7a9      	b.n	8003e3a <_strtol_l.isra.0+0x4a>
	...

08003ee8 <_strtol_r>:
 8003ee8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003eea:	4c06      	ldr	r4, [pc, #24]	; (8003f04 <_strtol_r+0x1c>)
 8003eec:	4d06      	ldr	r5, [pc, #24]	; (8003f08 <_strtol_r+0x20>)
 8003eee:	6824      	ldr	r4, [r4, #0]
 8003ef0:	6a24      	ldr	r4, [r4, #32]
 8003ef2:	2c00      	cmp	r4, #0
 8003ef4:	bf08      	it	eq
 8003ef6:	462c      	moveq	r4, r5
 8003ef8:	9400      	str	r4, [sp, #0]
 8003efa:	f7ff ff79 	bl	8003df0 <_strtol_l.isra.0>
 8003efe:	b003      	add	sp, #12
 8003f00:	bd30      	pop	{r4, r5, pc}
 8003f02:	bf00      	nop
 8003f04:	20000014 	.word	0x20000014
 8003f08:	20000078 	.word	0x20000078

08003f0c <__swbuf_r>:
 8003f0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003f0e:	460e      	mov	r6, r1
 8003f10:	4614      	mov	r4, r2
 8003f12:	4605      	mov	r5, r0
 8003f14:	b118      	cbz	r0, 8003f1e <__swbuf_r+0x12>
 8003f16:	6983      	ldr	r3, [r0, #24]
 8003f18:	b90b      	cbnz	r3, 8003f1e <__swbuf_r+0x12>
 8003f1a:	f000 ffe9 	bl	8004ef0 <__sinit>
 8003f1e:	4b21      	ldr	r3, [pc, #132]	; (8003fa4 <__swbuf_r+0x98>)
 8003f20:	429c      	cmp	r4, r3
 8003f22:	d12a      	bne.n	8003f7a <__swbuf_r+0x6e>
 8003f24:	686c      	ldr	r4, [r5, #4]
 8003f26:	69a3      	ldr	r3, [r4, #24]
 8003f28:	60a3      	str	r3, [r4, #8]
 8003f2a:	89a3      	ldrh	r3, [r4, #12]
 8003f2c:	071a      	lsls	r2, r3, #28
 8003f2e:	d52e      	bpl.n	8003f8e <__swbuf_r+0x82>
 8003f30:	6923      	ldr	r3, [r4, #16]
 8003f32:	b363      	cbz	r3, 8003f8e <__swbuf_r+0x82>
 8003f34:	6923      	ldr	r3, [r4, #16]
 8003f36:	6820      	ldr	r0, [r4, #0]
 8003f38:	b2f6      	uxtb	r6, r6
 8003f3a:	1ac0      	subs	r0, r0, r3
 8003f3c:	6963      	ldr	r3, [r4, #20]
 8003f3e:	4637      	mov	r7, r6
 8003f40:	4283      	cmp	r3, r0
 8003f42:	dc04      	bgt.n	8003f4e <__swbuf_r+0x42>
 8003f44:	4621      	mov	r1, r4
 8003f46:	4628      	mov	r0, r5
 8003f48:	f000 ff68 	bl	8004e1c <_fflush_r>
 8003f4c:	bb28      	cbnz	r0, 8003f9a <__swbuf_r+0x8e>
 8003f4e:	68a3      	ldr	r3, [r4, #8]
 8003f50:	3001      	adds	r0, #1
 8003f52:	3b01      	subs	r3, #1
 8003f54:	60a3      	str	r3, [r4, #8]
 8003f56:	6823      	ldr	r3, [r4, #0]
 8003f58:	1c5a      	adds	r2, r3, #1
 8003f5a:	6022      	str	r2, [r4, #0]
 8003f5c:	701e      	strb	r6, [r3, #0]
 8003f5e:	6963      	ldr	r3, [r4, #20]
 8003f60:	4283      	cmp	r3, r0
 8003f62:	d004      	beq.n	8003f6e <__swbuf_r+0x62>
 8003f64:	89a3      	ldrh	r3, [r4, #12]
 8003f66:	07db      	lsls	r3, r3, #31
 8003f68:	d519      	bpl.n	8003f9e <__swbuf_r+0x92>
 8003f6a:	2e0a      	cmp	r6, #10
 8003f6c:	d117      	bne.n	8003f9e <__swbuf_r+0x92>
 8003f6e:	4621      	mov	r1, r4
 8003f70:	4628      	mov	r0, r5
 8003f72:	f000 ff53 	bl	8004e1c <_fflush_r>
 8003f76:	b190      	cbz	r0, 8003f9e <__swbuf_r+0x92>
 8003f78:	e00f      	b.n	8003f9a <__swbuf_r+0x8e>
 8003f7a:	4b0b      	ldr	r3, [pc, #44]	; (8003fa8 <__swbuf_r+0x9c>)
 8003f7c:	429c      	cmp	r4, r3
 8003f7e:	d101      	bne.n	8003f84 <__swbuf_r+0x78>
 8003f80:	68ac      	ldr	r4, [r5, #8]
 8003f82:	e7d0      	b.n	8003f26 <__swbuf_r+0x1a>
 8003f84:	4b09      	ldr	r3, [pc, #36]	; (8003fac <__swbuf_r+0xa0>)
 8003f86:	429c      	cmp	r4, r3
 8003f88:	bf08      	it	eq
 8003f8a:	68ec      	ldreq	r4, [r5, #12]
 8003f8c:	e7cb      	b.n	8003f26 <__swbuf_r+0x1a>
 8003f8e:	4621      	mov	r1, r4
 8003f90:	4628      	mov	r0, r5
 8003f92:	f000 f80d 	bl	8003fb0 <__swsetup_r>
 8003f96:	2800      	cmp	r0, #0
 8003f98:	d0cc      	beq.n	8003f34 <__swbuf_r+0x28>
 8003f9a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8003f9e:	4638      	mov	r0, r7
 8003fa0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003fa2:	bf00      	nop
 8003fa4:	08006db0 	.word	0x08006db0
 8003fa8:	08006dd0 	.word	0x08006dd0
 8003fac:	08006d90 	.word	0x08006d90

08003fb0 <__swsetup_r>:
 8003fb0:	4b32      	ldr	r3, [pc, #200]	; (800407c <__swsetup_r+0xcc>)
 8003fb2:	b570      	push	{r4, r5, r6, lr}
 8003fb4:	681d      	ldr	r5, [r3, #0]
 8003fb6:	4606      	mov	r6, r0
 8003fb8:	460c      	mov	r4, r1
 8003fba:	b125      	cbz	r5, 8003fc6 <__swsetup_r+0x16>
 8003fbc:	69ab      	ldr	r3, [r5, #24]
 8003fbe:	b913      	cbnz	r3, 8003fc6 <__swsetup_r+0x16>
 8003fc0:	4628      	mov	r0, r5
 8003fc2:	f000 ff95 	bl	8004ef0 <__sinit>
 8003fc6:	4b2e      	ldr	r3, [pc, #184]	; (8004080 <__swsetup_r+0xd0>)
 8003fc8:	429c      	cmp	r4, r3
 8003fca:	d10f      	bne.n	8003fec <__swsetup_r+0x3c>
 8003fcc:	686c      	ldr	r4, [r5, #4]
 8003fce:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8003fd2:	b29a      	uxth	r2, r3
 8003fd4:	0715      	lsls	r5, r2, #28
 8003fd6:	d42c      	bmi.n	8004032 <__swsetup_r+0x82>
 8003fd8:	06d0      	lsls	r0, r2, #27
 8003fda:	d411      	bmi.n	8004000 <__swsetup_r+0x50>
 8003fdc:	2209      	movs	r2, #9
 8003fde:	6032      	str	r2, [r6, #0]
 8003fe0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003fe4:	81a3      	strh	r3, [r4, #12]
 8003fe6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003fea:	e03e      	b.n	800406a <__swsetup_r+0xba>
 8003fec:	4b25      	ldr	r3, [pc, #148]	; (8004084 <__swsetup_r+0xd4>)
 8003fee:	429c      	cmp	r4, r3
 8003ff0:	d101      	bne.n	8003ff6 <__swsetup_r+0x46>
 8003ff2:	68ac      	ldr	r4, [r5, #8]
 8003ff4:	e7eb      	b.n	8003fce <__swsetup_r+0x1e>
 8003ff6:	4b24      	ldr	r3, [pc, #144]	; (8004088 <__swsetup_r+0xd8>)
 8003ff8:	429c      	cmp	r4, r3
 8003ffa:	bf08      	it	eq
 8003ffc:	68ec      	ldreq	r4, [r5, #12]
 8003ffe:	e7e6      	b.n	8003fce <__swsetup_r+0x1e>
 8004000:	0751      	lsls	r1, r2, #29
 8004002:	d512      	bpl.n	800402a <__swsetup_r+0x7a>
 8004004:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004006:	b141      	cbz	r1, 800401a <__swsetup_r+0x6a>
 8004008:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800400c:	4299      	cmp	r1, r3
 800400e:	d002      	beq.n	8004016 <__swsetup_r+0x66>
 8004010:	4630      	mov	r0, r6
 8004012:	f001 ffd1 	bl	8005fb8 <_free_r>
 8004016:	2300      	movs	r3, #0
 8004018:	6363      	str	r3, [r4, #52]	; 0x34
 800401a:	89a3      	ldrh	r3, [r4, #12]
 800401c:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8004020:	81a3      	strh	r3, [r4, #12]
 8004022:	2300      	movs	r3, #0
 8004024:	6063      	str	r3, [r4, #4]
 8004026:	6923      	ldr	r3, [r4, #16]
 8004028:	6023      	str	r3, [r4, #0]
 800402a:	89a3      	ldrh	r3, [r4, #12]
 800402c:	f043 0308 	orr.w	r3, r3, #8
 8004030:	81a3      	strh	r3, [r4, #12]
 8004032:	6923      	ldr	r3, [r4, #16]
 8004034:	b94b      	cbnz	r3, 800404a <__swsetup_r+0x9a>
 8004036:	89a3      	ldrh	r3, [r4, #12]
 8004038:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800403c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004040:	d003      	beq.n	800404a <__swsetup_r+0x9a>
 8004042:	4621      	mov	r1, r4
 8004044:	4630      	mov	r0, r6
 8004046:	f001 fb3d 	bl	80056c4 <__smakebuf_r>
 800404a:	89a2      	ldrh	r2, [r4, #12]
 800404c:	f012 0301 	ands.w	r3, r2, #1
 8004050:	d00c      	beq.n	800406c <__swsetup_r+0xbc>
 8004052:	2300      	movs	r3, #0
 8004054:	60a3      	str	r3, [r4, #8]
 8004056:	6963      	ldr	r3, [r4, #20]
 8004058:	425b      	negs	r3, r3
 800405a:	61a3      	str	r3, [r4, #24]
 800405c:	6923      	ldr	r3, [r4, #16]
 800405e:	b953      	cbnz	r3, 8004076 <__swsetup_r+0xc6>
 8004060:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004064:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8004068:	d1ba      	bne.n	8003fe0 <__swsetup_r+0x30>
 800406a:	bd70      	pop	{r4, r5, r6, pc}
 800406c:	0792      	lsls	r2, r2, #30
 800406e:	bf58      	it	pl
 8004070:	6963      	ldrpl	r3, [r4, #20]
 8004072:	60a3      	str	r3, [r4, #8]
 8004074:	e7f2      	b.n	800405c <__swsetup_r+0xac>
 8004076:	2000      	movs	r0, #0
 8004078:	e7f7      	b.n	800406a <__swsetup_r+0xba>
 800407a:	bf00      	nop
 800407c:	20000014 	.word	0x20000014
 8004080:	08006db0 	.word	0x08006db0
 8004084:	08006dd0 	.word	0x08006dd0
 8004088:	08006d90 	.word	0x08006d90

0800408c <quorem>:
 800408c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004090:	6903      	ldr	r3, [r0, #16]
 8004092:	690c      	ldr	r4, [r1, #16]
 8004094:	4680      	mov	r8, r0
 8004096:	42a3      	cmp	r3, r4
 8004098:	f2c0 8084 	blt.w	80041a4 <quorem+0x118>
 800409c:	3c01      	subs	r4, #1
 800409e:	f101 0714 	add.w	r7, r1, #20
 80040a2:	f100 0614 	add.w	r6, r0, #20
 80040a6:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 80040aa:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 80040ae:	3501      	adds	r5, #1
 80040b0:	fbb0 f5f5 	udiv	r5, r0, r5
 80040b4:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 80040b8:	eb06 030c 	add.w	r3, r6, ip
 80040bc:	eb07 090c 	add.w	r9, r7, ip
 80040c0:	9301      	str	r3, [sp, #4]
 80040c2:	b39d      	cbz	r5, 800412c <quorem+0xa0>
 80040c4:	f04f 0a00 	mov.w	sl, #0
 80040c8:	4638      	mov	r0, r7
 80040ca:	46b6      	mov	lr, r6
 80040cc:	46d3      	mov	fp, sl
 80040ce:	f850 2b04 	ldr.w	r2, [r0], #4
 80040d2:	b293      	uxth	r3, r2
 80040d4:	fb05 a303 	mla	r3, r5, r3, sl
 80040d8:	0c12      	lsrs	r2, r2, #16
 80040da:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80040de:	fb05 a202 	mla	r2, r5, r2, sl
 80040e2:	b29b      	uxth	r3, r3
 80040e4:	ebab 0303 	sub.w	r3, fp, r3
 80040e8:	f8de b000 	ldr.w	fp, [lr]
 80040ec:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 80040f0:	fa1f fb8b 	uxth.w	fp, fp
 80040f4:	445b      	add	r3, fp
 80040f6:	fa1f fb82 	uxth.w	fp, r2
 80040fa:	f8de 2000 	ldr.w	r2, [lr]
 80040fe:	4581      	cmp	r9, r0
 8004100:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 8004104:	eb02 4223 	add.w	r2, r2, r3, asr #16
 8004108:	b29b      	uxth	r3, r3
 800410a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800410e:	ea4f 4b22 	mov.w	fp, r2, asr #16
 8004112:	f84e 3b04 	str.w	r3, [lr], #4
 8004116:	d2da      	bcs.n	80040ce <quorem+0x42>
 8004118:	f856 300c 	ldr.w	r3, [r6, ip]
 800411c:	b933      	cbnz	r3, 800412c <quorem+0xa0>
 800411e:	9b01      	ldr	r3, [sp, #4]
 8004120:	3b04      	subs	r3, #4
 8004122:	429e      	cmp	r6, r3
 8004124:	461a      	mov	r2, r3
 8004126:	d331      	bcc.n	800418c <quorem+0x100>
 8004128:	f8c8 4010 	str.w	r4, [r8, #16]
 800412c:	4640      	mov	r0, r8
 800412e:	f001 fd8f 	bl	8005c50 <__mcmp>
 8004132:	2800      	cmp	r0, #0
 8004134:	db26      	blt.n	8004184 <quorem+0xf8>
 8004136:	4630      	mov	r0, r6
 8004138:	f04f 0c00 	mov.w	ip, #0
 800413c:	3501      	adds	r5, #1
 800413e:	f857 1b04 	ldr.w	r1, [r7], #4
 8004142:	f8d0 e000 	ldr.w	lr, [r0]
 8004146:	b28b      	uxth	r3, r1
 8004148:	ebac 0303 	sub.w	r3, ip, r3
 800414c:	fa1f f28e 	uxth.w	r2, lr
 8004150:	4413      	add	r3, r2
 8004152:	0c0a      	lsrs	r2, r1, #16
 8004154:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8004158:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800415c:	b29b      	uxth	r3, r3
 800415e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004162:	45b9      	cmp	r9, r7
 8004164:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8004168:	f840 3b04 	str.w	r3, [r0], #4
 800416c:	d2e7      	bcs.n	800413e <quorem+0xb2>
 800416e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8004172:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8004176:	b92a      	cbnz	r2, 8004184 <quorem+0xf8>
 8004178:	3b04      	subs	r3, #4
 800417a:	429e      	cmp	r6, r3
 800417c:	461a      	mov	r2, r3
 800417e:	d30b      	bcc.n	8004198 <quorem+0x10c>
 8004180:	f8c8 4010 	str.w	r4, [r8, #16]
 8004184:	4628      	mov	r0, r5
 8004186:	b003      	add	sp, #12
 8004188:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800418c:	6812      	ldr	r2, [r2, #0]
 800418e:	3b04      	subs	r3, #4
 8004190:	2a00      	cmp	r2, #0
 8004192:	d1c9      	bne.n	8004128 <quorem+0x9c>
 8004194:	3c01      	subs	r4, #1
 8004196:	e7c4      	b.n	8004122 <quorem+0x96>
 8004198:	6812      	ldr	r2, [r2, #0]
 800419a:	3b04      	subs	r3, #4
 800419c:	2a00      	cmp	r2, #0
 800419e:	d1ef      	bne.n	8004180 <quorem+0xf4>
 80041a0:	3c01      	subs	r4, #1
 80041a2:	e7ea      	b.n	800417a <quorem+0xee>
 80041a4:	2000      	movs	r0, #0
 80041a6:	e7ee      	b.n	8004186 <quorem+0xfa>

080041a8 <_dtoa_r>:
 80041a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80041ac:	4616      	mov	r6, r2
 80041ae:	461f      	mov	r7, r3
 80041b0:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80041b2:	b095      	sub	sp, #84	; 0x54
 80041b4:	4604      	mov	r4, r0
 80041b6:	f8dd 8084 	ldr.w	r8, [sp, #132]	; 0x84
 80041ba:	e9cd 6702 	strd	r6, r7, [sp, #8]
 80041be:	b93d      	cbnz	r5, 80041d0 <_dtoa_r+0x28>
 80041c0:	2010      	movs	r0, #16
 80041c2:	f001 fabf 	bl	8005744 <malloc>
 80041c6:	6260      	str	r0, [r4, #36]	; 0x24
 80041c8:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80041cc:	6005      	str	r5, [r0, #0]
 80041ce:	60c5      	str	r5, [r0, #12]
 80041d0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80041d2:	6819      	ldr	r1, [r3, #0]
 80041d4:	b151      	cbz	r1, 80041ec <_dtoa_r+0x44>
 80041d6:	685a      	ldr	r2, [r3, #4]
 80041d8:	2301      	movs	r3, #1
 80041da:	4093      	lsls	r3, r2
 80041dc:	604a      	str	r2, [r1, #4]
 80041de:	608b      	str	r3, [r1, #8]
 80041e0:	4620      	mov	r0, r4
 80041e2:	f001 fb16 	bl	8005812 <_Bfree>
 80041e6:	2200      	movs	r2, #0
 80041e8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80041ea:	601a      	str	r2, [r3, #0]
 80041ec:	1e3b      	subs	r3, r7, #0
 80041ee:	bfaf      	iteee	ge
 80041f0:	2300      	movge	r3, #0
 80041f2:	2201      	movlt	r2, #1
 80041f4:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80041f8:	9303      	strlt	r3, [sp, #12]
 80041fa:	bfac      	ite	ge
 80041fc:	f8c8 3000 	strge.w	r3, [r8]
 8004200:	f8c8 2000 	strlt.w	r2, [r8]
 8004204:	4bae      	ldr	r3, [pc, #696]	; (80044c0 <_dtoa_r+0x318>)
 8004206:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800420a:	ea33 0308 	bics.w	r3, r3, r8
 800420e:	d11b      	bne.n	8004248 <_dtoa_r+0xa0>
 8004210:	f242 730f 	movw	r3, #9999	; 0x270f
 8004214:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004216:	6013      	str	r3, [r2, #0]
 8004218:	9b02      	ldr	r3, [sp, #8]
 800421a:	b923      	cbnz	r3, 8004226 <_dtoa_r+0x7e>
 800421c:	f3c8 0013 	ubfx	r0, r8, #0, #20
 8004220:	2800      	cmp	r0, #0
 8004222:	f000 8545 	beq.w	8004cb0 <_dtoa_r+0xb08>
 8004226:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004228:	b953      	cbnz	r3, 8004240 <_dtoa_r+0x98>
 800422a:	4ba6      	ldr	r3, [pc, #664]	; (80044c4 <_dtoa_r+0x31c>)
 800422c:	e021      	b.n	8004272 <_dtoa_r+0xca>
 800422e:	4ba6      	ldr	r3, [pc, #664]	; (80044c8 <_dtoa_r+0x320>)
 8004230:	9306      	str	r3, [sp, #24]
 8004232:	3308      	adds	r3, #8
 8004234:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8004236:	6013      	str	r3, [r2, #0]
 8004238:	9806      	ldr	r0, [sp, #24]
 800423a:	b015      	add	sp, #84	; 0x54
 800423c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004240:	4ba0      	ldr	r3, [pc, #640]	; (80044c4 <_dtoa_r+0x31c>)
 8004242:	9306      	str	r3, [sp, #24]
 8004244:	3303      	adds	r3, #3
 8004246:	e7f5      	b.n	8004234 <_dtoa_r+0x8c>
 8004248:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800424c:	2200      	movs	r2, #0
 800424e:	2300      	movs	r3, #0
 8004250:	4630      	mov	r0, r6
 8004252:	4639      	mov	r1, r7
 8004254:	f7fc fba8 	bl	80009a8 <__aeabi_dcmpeq>
 8004258:	4682      	mov	sl, r0
 800425a:	b160      	cbz	r0, 8004276 <_dtoa_r+0xce>
 800425c:	2301      	movs	r3, #1
 800425e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004260:	6013      	str	r3, [r2, #0]
 8004262:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004264:	2b00      	cmp	r3, #0
 8004266:	f000 8520 	beq.w	8004caa <_dtoa_r+0xb02>
 800426a:	4b98      	ldr	r3, [pc, #608]	; (80044cc <_dtoa_r+0x324>)
 800426c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800426e:	6013      	str	r3, [r2, #0]
 8004270:	3b01      	subs	r3, #1
 8004272:	9306      	str	r3, [sp, #24]
 8004274:	e7e0      	b.n	8004238 <_dtoa_r+0x90>
 8004276:	ab12      	add	r3, sp, #72	; 0x48
 8004278:	9301      	str	r3, [sp, #4]
 800427a:	ab13      	add	r3, sp, #76	; 0x4c
 800427c:	9300      	str	r3, [sp, #0]
 800427e:	4632      	mov	r2, r6
 8004280:	463b      	mov	r3, r7
 8004282:	4620      	mov	r0, r4
 8004284:	f001 fdd2 	bl	8005e2c <__d2b>
 8004288:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800428c:	4683      	mov	fp, r0
 800428e:	2d00      	cmp	r5, #0
 8004290:	d07d      	beq.n	800438e <_dtoa_r+0x1e6>
 8004292:	46b0      	mov	r8, r6
 8004294:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8004298:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 800429c:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 80042a0:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 80042a4:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 80042a8:	2200      	movs	r2, #0
 80042aa:	4b89      	ldr	r3, [pc, #548]	; (80044d0 <_dtoa_r+0x328>)
 80042ac:	4640      	mov	r0, r8
 80042ae:	4649      	mov	r1, r9
 80042b0:	f7fb ff5a 	bl	8000168 <__aeabi_dsub>
 80042b4:	a37c      	add	r3, pc, #496	; (adr r3, 80044a8 <_dtoa_r+0x300>)
 80042b6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042ba:	f7fc f90d 	bl	80004d8 <__aeabi_dmul>
 80042be:	a37c      	add	r3, pc, #496	; (adr r3, 80044b0 <_dtoa_r+0x308>)
 80042c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042c4:	f7fb ff52 	bl	800016c <__adddf3>
 80042c8:	4606      	mov	r6, r0
 80042ca:	4628      	mov	r0, r5
 80042cc:	460f      	mov	r7, r1
 80042ce:	f7fc f899 	bl	8000404 <__aeabi_i2d>
 80042d2:	a379      	add	r3, pc, #484	; (adr r3, 80044b8 <_dtoa_r+0x310>)
 80042d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80042d8:	f7fc f8fe 	bl	80004d8 <__aeabi_dmul>
 80042dc:	4602      	mov	r2, r0
 80042de:	460b      	mov	r3, r1
 80042e0:	4630      	mov	r0, r6
 80042e2:	4639      	mov	r1, r7
 80042e4:	f7fb ff42 	bl	800016c <__adddf3>
 80042e8:	4606      	mov	r6, r0
 80042ea:	460f      	mov	r7, r1
 80042ec:	f7fc fba4 	bl	8000a38 <__aeabi_d2iz>
 80042f0:	2200      	movs	r2, #0
 80042f2:	4682      	mov	sl, r0
 80042f4:	2300      	movs	r3, #0
 80042f6:	4630      	mov	r0, r6
 80042f8:	4639      	mov	r1, r7
 80042fa:	f7fc fb5f 	bl	80009bc <__aeabi_dcmplt>
 80042fe:	b148      	cbz	r0, 8004314 <_dtoa_r+0x16c>
 8004300:	4650      	mov	r0, sl
 8004302:	f7fc f87f 	bl	8000404 <__aeabi_i2d>
 8004306:	4632      	mov	r2, r6
 8004308:	463b      	mov	r3, r7
 800430a:	f7fc fb4d 	bl	80009a8 <__aeabi_dcmpeq>
 800430e:	b908      	cbnz	r0, 8004314 <_dtoa_r+0x16c>
 8004310:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8004314:	f1ba 0f16 	cmp.w	sl, #22
 8004318:	d85a      	bhi.n	80043d0 <_dtoa_r+0x228>
 800431a:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800431e:	496d      	ldr	r1, [pc, #436]	; (80044d4 <_dtoa_r+0x32c>)
 8004320:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8004324:	e9d1 0100 	ldrd	r0, r1, [r1]
 8004328:	f7fc fb66 	bl	80009f8 <__aeabi_dcmpgt>
 800432c:	2800      	cmp	r0, #0
 800432e:	d051      	beq.n	80043d4 <_dtoa_r+0x22c>
 8004330:	2300      	movs	r3, #0
 8004332:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8004336:	930d      	str	r3, [sp, #52]	; 0x34
 8004338:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800433a:	1b5d      	subs	r5, r3, r5
 800433c:	1e6b      	subs	r3, r5, #1
 800433e:	9307      	str	r3, [sp, #28]
 8004340:	bf43      	ittte	mi
 8004342:	2300      	movmi	r3, #0
 8004344:	f1c5 0901 	rsbmi	r9, r5, #1
 8004348:	9307      	strmi	r3, [sp, #28]
 800434a:	f04f 0900 	movpl.w	r9, #0
 800434e:	f1ba 0f00 	cmp.w	sl, #0
 8004352:	db41      	blt.n	80043d8 <_dtoa_r+0x230>
 8004354:	9b07      	ldr	r3, [sp, #28]
 8004356:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800435a:	4453      	add	r3, sl
 800435c:	9307      	str	r3, [sp, #28]
 800435e:	2300      	movs	r3, #0
 8004360:	9308      	str	r3, [sp, #32]
 8004362:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004364:	2b09      	cmp	r3, #9
 8004366:	f200 808f 	bhi.w	8004488 <_dtoa_r+0x2e0>
 800436a:	2b05      	cmp	r3, #5
 800436c:	bfc4      	itt	gt
 800436e:	3b04      	subgt	r3, #4
 8004370:	931e      	strgt	r3, [sp, #120]	; 0x78
 8004372:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004374:	bfc8      	it	gt
 8004376:	2500      	movgt	r5, #0
 8004378:	f1a3 0302 	sub.w	r3, r3, #2
 800437c:	bfd8      	it	le
 800437e:	2501      	movle	r5, #1
 8004380:	2b03      	cmp	r3, #3
 8004382:	f200 808d 	bhi.w	80044a0 <_dtoa_r+0x2f8>
 8004386:	e8df f003 	tbb	[pc, r3]
 800438a:	7d7b      	.short	0x7d7b
 800438c:	6f2f      	.short	0x6f2f
 800438e:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8004392:	441d      	add	r5, r3
 8004394:	f205 4032 	addw	r0, r5, #1074	; 0x432
 8004398:	2820      	cmp	r0, #32
 800439a:	dd13      	ble.n	80043c4 <_dtoa_r+0x21c>
 800439c:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 80043a0:	9b02      	ldr	r3, [sp, #8]
 80043a2:	fa08 f800 	lsl.w	r8, r8, r0
 80043a6:	f205 4012 	addw	r0, r5, #1042	; 0x412
 80043aa:	fa23 f000 	lsr.w	r0, r3, r0
 80043ae:	ea48 0000 	orr.w	r0, r8, r0
 80043b2:	f7fc f817 	bl	80003e4 <__aeabi_ui2d>
 80043b6:	2301      	movs	r3, #1
 80043b8:	4680      	mov	r8, r0
 80043ba:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 80043be:	3d01      	subs	r5, #1
 80043c0:	9310      	str	r3, [sp, #64]	; 0x40
 80043c2:	e771      	b.n	80042a8 <_dtoa_r+0x100>
 80043c4:	9b02      	ldr	r3, [sp, #8]
 80043c6:	f1c0 0020 	rsb	r0, r0, #32
 80043ca:	fa03 f000 	lsl.w	r0, r3, r0
 80043ce:	e7f0      	b.n	80043b2 <_dtoa_r+0x20a>
 80043d0:	2301      	movs	r3, #1
 80043d2:	e7b0      	b.n	8004336 <_dtoa_r+0x18e>
 80043d4:	900d      	str	r0, [sp, #52]	; 0x34
 80043d6:	e7af      	b.n	8004338 <_dtoa_r+0x190>
 80043d8:	f1ca 0300 	rsb	r3, sl, #0
 80043dc:	9308      	str	r3, [sp, #32]
 80043de:	2300      	movs	r3, #0
 80043e0:	eba9 090a 	sub.w	r9, r9, sl
 80043e4:	930c      	str	r3, [sp, #48]	; 0x30
 80043e6:	e7bc      	b.n	8004362 <_dtoa_r+0x1ba>
 80043e8:	2301      	movs	r3, #1
 80043ea:	9309      	str	r3, [sp, #36]	; 0x24
 80043ec:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80043ee:	2b00      	cmp	r3, #0
 80043f0:	dd74      	ble.n	80044dc <_dtoa_r+0x334>
 80043f2:	4698      	mov	r8, r3
 80043f4:	9304      	str	r3, [sp, #16]
 80043f6:	2200      	movs	r2, #0
 80043f8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80043fa:	6072      	str	r2, [r6, #4]
 80043fc:	2204      	movs	r2, #4
 80043fe:	f102 0014 	add.w	r0, r2, #20
 8004402:	4298      	cmp	r0, r3
 8004404:	6871      	ldr	r1, [r6, #4]
 8004406:	d96e      	bls.n	80044e6 <_dtoa_r+0x33e>
 8004408:	4620      	mov	r0, r4
 800440a:	f001 f9ce 	bl	80057aa <_Balloc>
 800440e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004410:	6030      	str	r0, [r6, #0]
 8004412:	681b      	ldr	r3, [r3, #0]
 8004414:	f1b8 0f0e 	cmp.w	r8, #14
 8004418:	9306      	str	r3, [sp, #24]
 800441a:	f200 80ed 	bhi.w	80045f8 <_dtoa_r+0x450>
 800441e:	2d00      	cmp	r5, #0
 8004420:	f000 80ea 	beq.w	80045f8 <_dtoa_r+0x450>
 8004424:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004428:	f1ba 0f00 	cmp.w	sl, #0
 800442c:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8004430:	dd77      	ble.n	8004522 <_dtoa_r+0x37a>
 8004432:	4a28      	ldr	r2, [pc, #160]	; (80044d4 <_dtoa_r+0x32c>)
 8004434:	f00a 030f 	and.w	r3, sl, #15
 8004438:	ea4f 162a 	mov.w	r6, sl, asr #4
 800443c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8004440:	06f0      	lsls	r0, r6, #27
 8004442:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004446:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800444a:	d568      	bpl.n	800451e <_dtoa_r+0x376>
 800444c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8004450:	4b21      	ldr	r3, [pc, #132]	; (80044d8 <_dtoa_r+0x330>)
 8004452:	2503      	movs	r5, #3
 8004454:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004458:	f7fc f968 	bl	800072c <__aeabi_ddiv>
 800445c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004460:	f006 060f 	and.w	r6, r6, #15
 8004464:	4f1c      	ldr	r7, [pc, #112]	; (80044d8 <_dtoa_r+0x330>)
 8004466:	e04f      	b.n	8004508 <_dtoa_r+0x360>
 8004468:	2301      	movs	r3, #1
 800446a:	9309      	str	r3, [sp, #36]	; 0x24
 800446c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800446e:	4453      	add	r3, sl
 8004470:	f103 0801 	add.w	r8, r3, #1
 8004474:	9304      	str	r3, [sp, #16]
 8004476:	4643      	mov	r3, r8
 8004478:	2b01      	cmp	r3, #1
 800447a:	bfb8      	it	lt
 800447c:	2301      	movlt	r3, #1
 800447e:	e7ba      	b.n	80043f6 <_dtoa_r+0x24e>
 8004480:	2300      	movs	r3, #0
 8004482:	e7b2      	b.n	80043ea <_dtoa_r+0x242>
 8004484:	2300      	movs	r3, #0
 8004486:	e7f0      	b.n	800446a <_dtoa_r+0x2c2>
 8004488:	2501      	movs	r5, #1
 800448a:	2300      	movs	r3, #0
 800448c:	9509      	str	r5, [sp, #36]	; 0x24
 800448e:	931e      	str	r3, [sp, #120]	; 0x78
 8004490:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004494:	2200      	movs	r2, #0
 8004496:	9304      	str	r3, [sp, #16]
 8004498:	4698      	mov	r8, r3
 800449a:	2312      	movs	r3, #18
 800449c:	921f      	str	r2, [sp, #124]	; 0x7c
 800449e:	e7aa      	b.n	80043f6 <_dtoa_r+0x24e>
 80044a0:	2301      	movs	r3, #1
 80044a2:	9309      	str	r3, [sp, #36]	; 0x24
 80044a4:	e7f4      	b.n	8004490 <_dtoa_r+0x2e8>
 80044a6:	bf00      	nop
 80044a8:	636f4361 	.word	0x636f4361
 80044ac:	3fd287a7 	.word	0x3fd287a7
 80044b0:	8b60c8b3 	.word	0x8b60c8b3
 80044b4:	3fc68a28 	.word	0x3fc68a28
 80044b8:	509f79fb 	.word	0x509f79fb
 80044bc:	3fd34413 	.word	0x3fd34413
 80044c0:	7ff00000 	.word	0x7ff00000
 80044c4:	08006d89 	.word	0x08006d89
 80044c8:	08006d80 	.word	0x08006d80
 80044cc:	08006d01 	.word	0x08006d01
 80044d0:	3ff80000 	.word	0x3ff80000
 80044d4:	08006e28 	.word	0x08006e28
 80044d8:	08006e00 	.word	0x08006e00
 80044dc:	2301      	movs	r3, #1
 80044de:	9304      	str	r3, [sp, #16]
 80044e0:	4698      	mov	r8, r3
 80044e2:	461a      	mov	r2, r3
 80044e4:	e7da      	b.n	800449c <_dtoa_r+0x2f4>
 80044e6:	3101      	adds	r1, #1
 80044e8:	6071      	str	r1, [r6, #4]
 80044ea:	0052      	lsls	r2, r2, #1
 80044ec:	e787      	b.n	80043fe <_dtoa_r+0x256>
 80044ee:	07f1      	lsls	r1, r6, #31
 80044f0:	d508      	bpl.n	8004504 <_dtoa_r+0x35c>
 80044f2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80044f6:	e9d7 2300 	ldrd	r2, r3, [r7]
 80044fa:	f7fb ffed 	bl	80004d8 <__aeabi_dmul>
 80044fe:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8004502:	3501      	adds	r5, #1
 8004504:	1076      	asrs	r6, r6, #1
 8004506:	3708      	adds	r7, #8
 8004508:	2e00      	cmp	r6, #0
 800450a:	d1f0      	bne.n	80044ee <_dtoa_r+0x346>
 800450c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004510:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004514:	f7fc f90a 	bl	800072c <__aeabi_ddiv>
 8004518:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800451c:	e01b      	b.n	8004556 <_dtoa_r+0x3ae>
 800451e:	2502      	movs	r5, #2
 8004520:	e7a0      	b.n	8004464 <_dtoa_r+0x2bc>
 8004522:	f000 80a4 	beq.w	800466e <_dtoa_r+0x4c6>
 8004526:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 800452a:	f1ca 0600 	rsb	r6, sl, #0
 800452e:	4ba0      	ldr	r3, [pc, #640]	; (80047b0 <_dtoa_r+0x608>)
 8004530:	f006 020f 	and.w	r2, r6, #15
 8004534:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004538:	e9d3 2300 	ldrd	r2, r3, [r3]
 800453c:	f7fb ffcc 	bl	80004d8 <__aeabi_dmul>
 8004540:	2502      	movs	r5, #2
 8004542:	2300      	movs	r3, #0
 8004544:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004548:	4f9a      	ldr	r7, [pc, #616]	; (80047b4 <_dtoa_r+0x60c>)
 800454a:	1136      	asrs	r6, r6, #4
 800454c:	2e00      	cmp	r6, #0
 800454e:	f040 8083 	bne.w	8004658 <_dtoa_r+0x4b0>
 8004552:	2b00      	cmp	r3, #0
 8004554:	d1e0      	bne.n	8004518 <_dtoa_r+0x370>
 8004556:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004558:	2b00      	cmp	r3, #0
 800455a:	f000 808a 	beq.w	8004672 <_dtoa_r+0x4ca>
 800455e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004562:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8004566:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800456a:	2200      	movs	r2, #0
 800456c:	4b92      	ldr	r3, [pc, #584]	; (80047b8 <_dtoa_r+0x610>)
 800456e:	f7fc fa25 	bl	80009bc <__aeabi_dcmplt>
 8004572:	2800      	cmp	r0, #0
 8004574:	d07d      	beq.n	8004672 <_dtoa_r+0x4ca>
 8004576:	f1b8 0f00 	cmp.w	r8, #0
 800457a:	d07a      	beq.n	8004672 <_dtoa_r+0x4ca>
 800457c:	9b04      	ldr	r3, [sp, #16]
 800457e:	2b00      	cmp	r3, #0
 8004580:	dd36      	ble.n	80045f0 <_dtoa_r+0x448>
 8004582:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8004586:	2200      	movs	r2, #0
 8004588:	4b8c      	ldr	r3, [pc, #560]	; (80047bc <_dtoa_r+0x614>)
 800458a:	f7fb ffa5 	bl	80004d8 <__aeabi_dmul>
 800458e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004592:	9e04      	ldr	r6, [sp, #16]
 8004594:	f10a 37ff 	add.w	r7, sl, #4294967295	; 0xffffffff
 8004598:	3501      	adds	r5, #1
 800459a:	4628      	mov	r0, r5
 800459c:	f7fb ff32 	bl	8000404 <__aeabi_i2d>
 80045a0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80045a4:	f7fb ff98 	bl	80004d8 <__aeabi_dmul>
 80045a8:	2200      	movs	r2, #0
 80045aa:	4b85      	ldr	r3, [pc, #532]	; (80047c0 <_dtoa_r+0x618>)
 80045ac:	f7fb fdde 	bl	800016c <__adddf3>
 80045b0:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 80045b4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80045b8:	950b      	str	r5, [sp, #44]	; 0x2c
 80045ba:	2e00      	cmp	r6, #0
 80045bc:	d15c      	bne.n	8004678 <_dtoa_r+0x4d0>
 80045be:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80045c2:	2200      	movs	r2, #0
 80045c4:	4b7f      	ldr	r3, [pc, #508]	; (80047c4 <_dtoa_r+0x61c>)
 80045c6:	f7fb fdcf 	bl	8000168 <__aeabi_dsub>
 80045ca:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80045cc:	462b      	mov	r3, r5
 80045ce:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80045d2:	f7fc fa11 	bl	80009f8 <__aeabi_dcmpgt>
 80045d6:	2800      	cmp	r0, #0
 80045d8:	f040 8281 	bne.w	8004ade <_dtoa_r+0x936>
 80045dc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80045e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80045e2:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 80045e6:	f7fc f9e9 	bl	80009bc <__aeabi_dcmplt>
 80045ea:	2800      	cmp	r0, #0
 80045ec:	f040 8275 	bne.w	8004ada <_dtoa_r+0x932>
 80045f0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 80045f4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80045f8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80045fa:	2b00      	cmp	r3, #0
 80045fc:	f2c0 814b 	blt.w	8004896 <_dtoa_r+0x6ee>
 8004600:	f1ba 0f0e 	cmp.w	sl, #14
 8004604:	f300 8147 	bgt.w	8004896 <_dtoa_r+0x6ee>
 8004608:	4b69      	ldr	r3, [pc, #420]	; (80047b0 <_dtoa_r+0x608>)
 800460a:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 800460e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004612:	e9cd 2304 	strd	r2, r3, [sp, #16]
 8004616:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004618:	2b00      	cmp	r3, #0
 800461a:	f280 80d7 	bge.w	80047cc <_dtoa_r+0x624>
 800461e:	f1b8 0f00 	cmp.w	r8, #0
 8004622:	f300 80d3 	bgt.w	80047cc <_dtoa_r+0x624>
 8004626:	f040 8257 	bne.w	8004ad8 <_dtoa_r+0x930>
 800462a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 800462e:	2200      	movs	r2, #0
 8004630:	4b64      	ldr	r3, [pc, #400]	; (80047c4 <_dtoa_r+0x61c>)
 8004632:	f7fb ff51 	bl	80004d8 <__aeabi_dmul>
 8004636:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800463a:	f7fc f9d3 	bl	80009e4 <__aeabi_dcmpge>
 800463e:	4646      	mov	r6, r8
 8004640:	4647      	mov	r7, r8
 8004642:	2800      	cmp	r0, #0
 8004644:	f040 822d 	bne.w	8004aa2 <_dtoa_r+0x8fa>
 8004648:	9b06      	ldr	r3, [sp, #24]
 800464a:	9a06      	ldr	r2, [sp, #24]
 800464c:	1c5d      	adds	r5, r3, #1
 800464e:	2331      	movs	r3, #49	; 0x31
 8004650:	f10a 0a01 	add.w	sl, sl, #1
 8004654:	7013      	strb	r3, [r2, #0]
 8004656:	e228      	b.n	8004aaa <_dtoa_r+0x902>
 8004658:	07f2      	lsls	r2, r6, #31
 800465a:	d505      	bpl.n	8004668 <_dtoa_r+0x4c0>
 800465c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004660:	f7fb ff3a 	bl	80004d8 <__aeabi_dmul>
 8004664:	2301      	movs	r3, #1
 8004666:	3501      	adds	r5, #1
 8004668:	1076      	asrs	r6, r6, #1
 800466a:	3708      	adds	r7, #8
 800466c:	e76e      	b.n	800454c <_dtoa_r+0x3a4>
 800466e:	2502      	movs	r5, #2
 8004670:	e771      	b.n	8004556 <_dtoa_r+0x3ae>
 8004672:	4657      	mov	r7, sl
 8004674:	4646      	mov	r6, r8
 8004676:	e790      	b.n	800459a <_dtoa_r+0x3f2>
 8004678:	4b4d      	ldr	r3, [pc, #308]	; (80047b0 <_dtoa_r+0x608>)
 800467a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800467e:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8004682:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004684:	2b00      	cmp	r3, #0
 8004686:	d048      	beq.n	800471a <_dtoa_r+0x572>
 8004688:	4602      	mov	r2, r0
 800468a:	460b      	mov	r3, r1
 800468c:	2000      	movs	r0, #0
 800468e:	494e      	ldr	r1, [pc, #312]	; (80047c8 <_dtoa_r+0x620>)
 8004690:	f7fc f84c 	bl	800072c <__aeabi_ddiv>
 8004694:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004698:	f7fb fd66 	bl	8000168 <__aeabi_dsub>
 800469c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80046a0:	9d06      	ldr	r5, [sp, #24]
 80046a2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80046a6:	f7fc f9c7 	bl	8000a38 <__aeabi_d2iz>
 80046aa:	9011      	str	r0, [sp, #68]	; 0x44
 80046ac:	f7fb feaa 	bl	8000404 <__aeabi_i2d>
 80046b0:	4602      	mov	r2, r0
 80046b2:	460b      	mov	r3, r1
 80046b4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80046b8:	f7fb fd56 	bl	8000168 <__aeabi_dsub>
 80046bc:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80046be:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80046c2:	3330      	adds	r3, #48	; 0x30
 80046c4:	f805 3b01 	strb.w	r3, [r5], #1
 80046c8:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80046cc:	f7fc f976 	bl	80009bc <__aeabi_dcmplt>
 80046d0:	2800      	cmp	r0, #0
 80046d2:	d163      	bne.n	800479c <_dtoa_r+0x5f4>
 80046d4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80046d8:	2000      	movs	r0, #0
 80046da:	4937      	ldr	r1, [pc, #220]	; (80047b8 <_dtoa_r+0x610>)
 80046dc:	f7fb fd44 	bl	8000168 <__aeabi_dsub>
 80046e0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80046e4:	f7fc f96a 	bl	80009bc <__aeabi_dcmplt>
 80046e8:	2800      	cmp	r0, #0
 80046ea:	f040 80b5 	bne.w	8004858 <_dtoa_r+0x6b0>
 80046ee:	9b06      	ldr	r3, [sp, #24]
 80046f0:	1aeb      	subs	r3, r5, r3
 80046f2:	429e      	cmp	r6, r3
 80046f4:	f77f af7c 	ble.w	80045f0 <_dtoa_r+0x448>
 80046f8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80046fc:	2200      	movs	r2, #0
 80046fe:	4b2f      	ldr	r3, [pc, #188]	; (80047bc <_dtoa_r+0x614>)
 8004700:	f7fb feea 	bl	80004d8 <__aeabi_dmul>
 8004704:	2200      	movs	r2, #0
 8004706:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 800470a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800470e:	4b2b      	ldr	r3, [pc, #172]	; (80047bc <_dtoa_r+0x614>)
 8004710:	f7fb fee2 	bl	80004d8 <__aeabi_dmul>
 8004714:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004718:	e7c3      	b.n	80046a2 <_dtoa_r+0x4fa>
 800471a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800471e:	f7fb fedb 	bl	80004d8 <__aeabi_dmul>
 8004722:	9b06      	ldr	r3, [sp, #24]
 8004724:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8004728:	199d      	adds	r5, r3, r6
 800472a:	461e      	mov	r6, r3
 800472c:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004730:	f7fc f982 	bl	8000a38 <__aeabi_d2iz>
 8004734:	9011      	str	r0, [sp, #68]	; 0x44
 8004736:	f7fb fe65 	bl	8000404 <__aeabi_i2d>
 800473a:	4602      	mov	r2, r0
 800473c:	460b      	mov	r3, r1
 800473e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004742:	f7fb fd11 	bl	8000168 <__aeabi_dsub>
 8004746:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004748:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800474c:	3330      	adds	r3, #48	; 0x30
 800474e:	f806 3b01 	strb.w	r3, [r6], #1
 8004752:	42ae      	cmp	r6, r5
 8004754:	f04f 0200 	mov.w	r2, #0
 8004758:	d124      	bne.n	80047a4 <_dtoa_r+0x5fc>
 800475a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800475e:	4b1a      	ldr	r3, [pc, #104]	; (80047c8 <_dtoa_r+0x620>)
 8004760:	f7fb fd04 	bl	800016c <__adddf3>
 8004764:	4602      	mov	r2, r0
 8004766:	460b      	mov	r3, r1
 8004768:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800476c:	f7fc f944 	bl	80009f8 <__aeabi_dcmpgt>
 8004770:	2800      	cmp	r0, #0
 8004772:	d171      	bne.n	8004858 <_dtoa_r+0x6b0>
 8004774:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004778:	2000      	movs	r0, #0
 800477a:	4913      	ldr	r1, [pc, #76]	; (80047c8 <_dtoa_r+0x620>)
 800477c:	f7fb fcf4 	bl	8000168 <__aeabi_dsub>
 8004780:	4602      	mov	r2, r0
 8004782:	460b      	mov	r3, r1
 8004784:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004788:	f7fc f918 	bl	80009bc <__aeabi_dcmplt>
 800478c:	2800      	cmp	r0, #0
 800478e:	f43f af2f 	beq.w	80045f0 <_dtoa_r+0x448>
 8004792:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004796:	1e6a      	subs	r2, r5, #1
 8004798:	2b30      	cmp	r3, #48	; 0x30
 800479a:	d001      	beq.n	80047a0 <_dtoa_r+0x5f8>
 800479c:	46ba      	mov	sl, r7
 800479e:	e04a      	b.n	8004836 <_dtoa_r+0x68e>
 80047a0:	4615      	mov	r5, r2
 80047a2:	e7f6      	b.n	8004792 <_dtoa_r+0x5ea>
 80047a4:	4b05      	ldr	r3, [pc, #20]	; (80047bc <_dtoa_r+0x614>)
 80047a6:	f7fb fe97 	bl	80004d8 <__aeabi_dmul>
 80047aa:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80047ae:	e7bd      	b.n	800472c <_dtoa_r+0x584>
 80047b0:	08006e28 	.word	0x08006e28
 80047b4:	08006e00 	.word	0x08006e00
 80047b8:	3ff00000 	.word	0x3ff00000
 80047bc:	40240000 	.word	0x40240000
 80047c0:	401c0000 	.word	0x401c0000
 80047c4:	40140000 	.word	0x40140000
 80047c8:	3fe00000 	.word	0x3fe00000
 80047cc:	9d06      	ldr	r5, [sp, #24]
 80047ce:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80047d2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80047d6:	4630      	mov	r0, r6
 80047d8:	4639      	mov	r1, r7
 80047da:	f7fb ffa7 	bl	800072c <__aeabi_ddiv>
 80047de:	f7fc f92b 	bl	8000a38 <__aeabi_d2iz>
 80047e2:	4681      	mov	r9, r0
 80047e4:	f7fb fe0e 	bl	8000404 <__aeabi_i2d>
 80047e8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80047ec:	f7fb fe74 	bl	80004d8 <__aeabi_dmul>
 80047f0:	4602      	mov	r2, r0
 80047f2:	460b      	mov	r3, r1
 80047f4:	4630      	mov	r0, r6
 80047f6:	4639      	mov	r1, r7
 80047f8:	f7fb fcb6 	bl	8000168 <__aeabi_dsub>
 80047fc:	f109 0630 	add.w	r6, r9, #48	; 0x30
 8004800:	f805 6b01 	strb.w	r6, [r5], #1
 8004804:	9e06      	ldr	r6, [sp, #24]
 8004806:	4602      	mov	r2, r0
 8004808:	1bae      	subs	r6, r5, r6
 800480a:	45b0      	cmp	r8, r6
 800480c:	460b      	mov	r3, r1
 800480e:	d135      	bne.n	800487c <_dtoa_r+0x6d4>
 8004810:	f7fb fcac 	bl	800016c <__adddf3>
 8004814:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004818:	4606      	mov	r6, r0
 800481a:	460f      	mov	r7, r1
 800481c:	f7fc f8ec 	bl	80009f8 <__aeabi_dcmpgt>
 8004820:	b9c8      	cbnz	r0, 8004856 <_dtoa_r+0x6ae>
 8004822:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8004826:	4630      	mov	r0, r6
 8004828:	4639      	mov	r1, r7
 800482a:	f7fc f8bd 	bl	80009a8 <__aeabi_dcmpeq>
 800482e:	b110      	cbz	r0, 8004836 <_dtoa_r+0x68e>
 8004830:	f019 0f01 	tst.w	r9, #1
 8004834:	d10f      	bne.n	8004856 <_dtoa_r+0x6ae>
 8004836:	4659      	mov	r1, fp
 8004838:	4620      	mov	r0, r4
 800483a:	f000 ffea 	bl	8005812 <_Bfree>
 800483e:	2300      	movs	r3, #0
 8004840:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004842:	702b      	strb	r3, [r5, #0]
 8004844:	f10a 0301 	add.w	r3, sl, #1
 8004848:	6013      	str	r3, [r2, #0]
 800484a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 800484c:	2b00      	cmp	r3, #0
 800484e:	f43f acf3 	beq.w	8004238 <_dtoa_r+0x90>
 8004852:	601d      	str	r5, [r3, #0]
 8004854:	e4f0      	b.n	8004238 <_dtoa_r+0x90>
 8004856:	4657      	mov	r7, sl
 8004858:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800485c:	1e6b      	subs	r3, r5, #1
 800485e:	2a39      	cmp	r2, #57	; 0x39
 8004860:	d106      	bne.n	8004870 <_dtoa_r+0x6c8>
 8004862:	9a06      	ldr	r2, [sp, #24]
 8004864:	429a      	cmp	r2, r3
 8004866:	d107      	bne.n	8004878 <_dtoa_r+0x6d0>
 8004868:	2330      	movs	r3, #48	; 0x30
 800486a:	7013      	strb	r3, [r2, #0]
 800486c:	4613      	mov	r3, r2
 800486e:	3701      	adds	r7, #1
 8004870:	781a      	ldrb	r2, [r3, #0]
 8004872:	3201      	adds	r2, #1
 8004874:	701a      	strb	r2, [r3, #0]
 8004876:	e791      	b.n	800479c <_dtoa_r+0x5f4>
 8004878:	461d      	mov	r5, r3
 800487a:	e7ed      	b.n	8004858 <_dtoa_r+0x6b0>
 800487c:	2200      	movs	r2, #0
 800487e:	4b99      	ldr	r3, [pc, #612]	; (8004ae4 <_dtoa_r+0x93c>)
 8004880:	f7fb fe2a 	bl	80004d8 <__aeabi_dmul>
 8004884:	2200      	movs	r2, #0
 8004886:	2300      	movs	r3, #0
 8004888:	4606      	mov	r6, r0
 800488a:	460f      	mov	r7, r1
 800488c:	f7fc f88c 	bl	80009a8 <__aeabi_dcmpeq>
 8004890:	2800      	cmp	r0, #0
 8004892:	d09e      	beq.n	80047d2 <_dtoa_r+0x62a>
 8004894:	e7cf      	b.n	8004836 <_dtoa_r+0x68e>
 8004896:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004898:	2a00      	cmp	r2, #0
 800489a:	f000 8088 	beq.w	80049ae <_dtoa_r+0x806>
 800489e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80048a0:	2a01      	cmp	r2, #1
 80048a2:	dc6d      	bgt.n	8004980 <_dtoa_r+0x7d8>
 80048a4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80048a6:	2a00      	cmp	r2, #0
 80048a8:	d066      	beq.n	8004978 <_dtoa_r+0x7d0>
 80048aa:	f203 4333 	addw	r3, r3, #1075	; 0x433
 80048ae:	464d      	mov	r5, r9
 80048b0:	9e08      	ldr	r6, [sp, #32]
 80048b2:	9a07      	ldr	r2, [sp, #28]
 80048b4:	2101      	movs	r1, #1
 80048b6:	441a      	add	r2, r3
 80048b8:	4620      	mov	r0, r4
 80048ba:	4499      	add	r9, r3
 80048bc:	9207      	str	r2, [sp, #28]
 80048be:	f001 f886 	bl	80059ce <__i2b>
 80048c2:	4607      	mov	r7, r0
 80048c4:	2d00      	cmp	r5, #0
 80048c6:	dd0b      	ble.n	80048e0 <_dtoa_r+0x738>
 80048c8:	9b07      	ldr	r3, [sp, #28]
 80048ca:	2b00      	cmp	r3, #0
 80048cc:	dd08      	ble.n	80048e0 <_dtoa_r+0x738>
 80048ce:	42ab      	cmp	r3, r5
 80048d0:	bfa8      	it	ge
 80048d2:	462b      	movge	r3, r5
 80048d4:	9a07      	ldr	r2, [sp, #28]
 80048d6:	eba9 0903 	sub.w	r9, r9, r3
 80048da:	1aed      	subs	r5, r5, r3
 80048dc:	1ad3      	subs	r3, r2, r3
 80048de:	9307      	str	r3, [sp, #28]
 80048e0:	9b08      	ldr	r3, [sp, #32]
 80048e2:	b1eb      	cbz	r3, 8004920 <_dtoa_r+0x778>
 80048e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80048e6:	2b00      	cmp	r3, #0
 80048e8:	d065      	beq.n	80049b6 <_dtoa_r+0x80e>
 80048ea:	b18e      	cbz	r6, 8004910 <_dtoa_r+0x768>
 80048ec:	4639      	mov	r1, r7
 80048ee:	4632      	mov	r2, r6
 80048f0:	4620      	mov	r0, r4
 80048f2:	f001 f90b 	bl	8005b0c <__pow5mult>
 80048f6:	465a      	mov	r2, fp
 80048f8:	4601      	mov	r1, r0
 80048fa:	4607      	mov	r7, r0
 80048fc:	4620      	mov	r0, r4
 80048fe:	f001 f86f 	bl	80059e0 <__multiply>
 8004902:	4659      	mov	r1, fp
 8004904:	900a      	str	r0, [sp, #40]	; 0x28
 8004906:	4620      	mov	r0, r4
 8004908:	f000 ff83 	bl	8005812 <_Bfree>
 800490c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800490e:	469b      	mov	fp, r3
 8004910:	9b08      	ldr	r3, [sp, #32]
 8004912:	1b9a      	subs	r2, r3, r6
 8004914:	d004      	beq.n	8004920 <_dtoa_r+0x778>
 8004916:	4659      	mov	r1, fp
 8004918:	4620      	mov	r0, r4
 800491a:	f001 f8f7 	bl	8005b0c <__pow5mult>
 800491e:	4683      	mov	fp, r0
 8004920:	2101      	movs	r1, #1
 8004922:	4620      	mov	r0, r4
 8004924:	f001 f853 	bl	80059ce <__i2b>
 8004928:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800492a:	4606      	mov	r6, r0
 800492c:	2b00      	cmp	r3, #0
 800492e:	f000 81c6 	beq.w	8004cbe <_dtoa_r+0xb16>
 8004932:	461a      	mov	r2, r3
 8004934:	4601      	mov	r1, r0
 8004936:	4620      	mov	r0, r4
 8004938:	f001 f8e8 	bl	8005b0c <__pow5mult>
 800493c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 800493e:	4606      	mov	r6, r0
 8004940:	2b01      	cmp	r3, #1
 8004942:	dc3e      	bgt.n	80049c2 <_dtoa_r+0x81a>
 8004944:	9b02      	ldr	r3, [sp, #8]
 8004946:	2b00      	cmp	r3, #0
 8004948:	d137      	bne.n	80049ba <_dtoa_r+0x812>
 800494a:	9b03      	ldr	r3, [sp, #12]
 800494c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004950:	2b00      	cmp	r3, #0
 8004952:	d134      	bne.n	80049be <_dtoa_r+0x816>
 8004954:	9b03      	ldr	r3, [sp, #12]
 8004956:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800495a:	0d1b      	lsrs	r3, r3, #20
 800495c:	051b      	lsls	r3, r3, #20
 800495e:	b12b      	cbz	r3, 800496c <_dtoa_r+0x7c4>
 8004960:	9b07      	ldr	r3, [sp, #28]
 8004962:	f109 0901 	add.w	r9, r9, #1
 8004966:	3301      	adds	r3, #1
 8004968:	9307      	str	r3, [sp, #28]
 800496a:	2301      	movs	r3, #1
 800496c:	9308      	str	r3, [sp, #32]
 800496e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004970:	2b00      	cmp	r3, #0
 8004972:	d128      	bne.n	80049c6 <_dtoa_r+0x81e>
 8004974:	2001      	movs	r0, #1
 8004976:	e02e      	b.n	80049d6 <_dtoa_r+0x82e>
 8004978:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800497a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800497e:	e796      	b.n	80048ae <_dtoa_r+0x706>
 8004980:	9b08      	ldr	r3, [sp, #32]
 8004982:	f108 36ff 	add.w	r6, r8, #4294967295	; 0xffffffff
 8004986:	42b3      	cmp	r3, r6
 8004988:	bfb7      	itett	lt
 800498a:	9b08      	ldrlt	r3, [sp, #32]
 800498c:	1b9e      	subge	r6, r3, r6
 800498e:	1af2      	sublt	r2, r6, r3
 8004990:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 8004992:	bfbf      	itttt	lt
 8004994:	9608      	strlt	r6, [sp, #32]
 8004996:	189b      	addlt	r3, r3, r2
 8004998:	930c      	strlt	r3, [sp, #48]	; 0x30
 800499a:	2600      	movlt	r6, #0
 800499c:	f1b8 0f00 	cmp.w	r8, #0
 80049a0:	bfb9      	ittee	lt
 80049a2:	eba9 0508 	sublt.w	r5, r9, r8
 80049a6:	2300      	movlt	r3, #0
 80049a8:	464d      	movge	r5, r9
 80049aa:	4643      	movge	r3, r8
 80049ac:	e781      	b.n	80048b2 <_dtoa_r+0x70a>
 80049ae:	9e08      	ldr	r6, [sp, #32]
 80049b0:	464d      	mov	r5, r9
 80049b2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80049b4:	e786      	b.n	80048c4 <_dtoa_r+0x71c>
 80049b6:	9a08      	ldr	r2, [sp, #32]
 80049b8:	e7ad      	b.n	8004916 <_dtoa_r+0x76e>
 80049ba:	2300      	movs	r3, #0
 80049bc:	e7d6      	b.n	800496c <_dtoa_r+0x7c4>
 80049be:	9b02      	ldr	r3, [sp, #8]
 80049c0:	e7d4      	b.n	800496c <_dtoa_r+0x7c4>
 80049c2:	2300      	movs	r3, #0
 80049c4:	9308      	str	r3, [sp, #32]
 80049c6:	6933      	ldr	r3, [r6, #16]
 80049c8:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 80049cc:	6918      	ldr	r0, [r3, #16]
 80049ce:	f000 ffb0 	bl	8005932 <__hi0bits>
 80049d2:	f1c0 0020 	rsb	r0, r0, #32
 80049d6:	9b07      	ldr	r3, [sp, #28]
 80049d8:	4418      	add	r0, r3
 80049da:	f010 001f 	ands.w	r0, r0, #31
 80049de:	d047      	beq.n	8004a70 <_dtoa_r+0x8c8>
 80049e0:	f1c0 0320 	rsb	r3, r0, #32
 80049e4:	2b04      	cmp	r3, #4
 80049e6:	dd3b      	ble.n	8004a60 <_dtoa_r+0x8b8>
 80049e8:	9b07      	ldr	r3, [sp, #28]
 80049ea:	f1c0 001c 	rsb	r0, r0, #28
 80049ee:	4481      	add	r9, r0
 80049f0:	4405      	add	r5, r0
 80049f2:	4403      	add	r3, r0
 80049f4:	9307      	str	r3, [sp, #28]
 80049f6:	f1b9 0f00 	cmp.w	r9, #0
 80049fa:	dd05      	ble.n	8004a08 <_dtoa_r+0x860>
 80049fc:	4659      	mov	r1, fp
 80049fe:	464a      	mov	r2, r9
 8004a00:	4620      	mov	r0, r4
 8004a02:	f001 f8d1 	bl	8005ba8 <__lshift>
 8004a06:	4683      	mov	fp, r0
 8004a08:	9b07      	ldr	r3, [sp, #28]
 8004a0a:	2b00      	cmp	r3, #0
 8004a0c:	dd05      	ble.n	8004a1a <_dtoa_r+0x872>
 8004a0e:	4631      	mov	r1, r6
 8004a10:	461a      	mov	r2, r3
 8004a12:	4620      	mov	r0, r4
 8004a14:	f001 f8c8 	bl	8005ba8 <__lshift>
 8004a18:	4606      	mov	r6, r0
 8004a1a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004a1c:	b353      	cbz	r3, 8004a74 <_dtoa_r+0x8cc>
 8004a1e:	4631      	mov	r1, r6
 8004a20:	4658      	mov	r0, fp
 8004a22:	f001 f915 	bl	8005c50 <__mcmp>
 8004a26:	2800      	cmp	r0, #0
 8004a28:	da24      	bge.n	8004a74 <_dtoa_r+0x8cc>
 8004a2a:	2300      	movs	r3, #0
 8004a2c:	4659      	mov	r1, fp
 8004a2e:	220a      	movs	r2, #10
 8004a30:	4620      	mov	r0, r4
 8004a32:	f000 ff05 	bl	8005840 <__multadd>
 8004a36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004a38:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8004a3c:	4683      	mov	fp, r0
 8004a3e:	2b00      	cmp	r3, #0
 8004a40:	f000 8144 	beq.w	8004ccc <_dtoa_r+0xb24>
 8004a44:	2300      	movs	r3, #0
 8004a46:	4639      	mov	r1, r7
 8004a48:	220a      	movs	r2, #10
 8004a4a:	4620      	mov	r0, r4
 8004a4c:	f000 fef8 	bl	8005840 <__multadd>
 8004a50:	9b04      	ldr	r3, [sp, #16]
 8004a52:	4607      	mov	r7, r0
 8004a54:	2b00      	cmp	r3, #0
 8004a56:	dc4d      	bgt.n	8004af4 <_dtoa_r+0x94c>
 8004a58:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004a5a:	2b02      	cmp	r3, #2
 8004a5c:	dd4a      	ble.n	8004af4 <_dtoa_r+0x94c>
 8004a5e:	e011      	b.n	8004a84 <_dtoa_r+0x8dc>
 8004a60:	d0c9      	beq.n	80049f6 <_dtoa_r+0x84e>
 8004a62:	9a07      	ldr	r2, [sp, #28]
 8004a64:	331c      	adds	r3, #28
 8004a66:	441a      	add	r2, r3
 8004a68:	4499      	add	r9, r3
 8004a6a:	441d      	add	r5, r3
 8004a6c:	4613      	mov	r3, r2
 8004a6e:	e7c1      	b.n	80049f4 <_dtoa_r+0x84c>
 8004a70:	4603      	mov	r3, r0
 8004a72:	e7f6      	b.n	8004a62 <_dtoa_r+0x8ba>
 8004a74:	f1b8 0f00 	cmp.w	r8, #0
 8004a78:	dc36      	bgt.n	8004ae8 <_dtoa_r+0x940>
 8004a7a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004a7c:	2b02      	cmp	r3, #2
 8004a7e:	dd33      	ble.n	8004ae8 <_dtoa_r+0x940>
 8004a80:	f8cd 8010 	str.w	r8, [sp, #16]
 8004a84:	9b04      	ldr	r3, [sp, #16]
 8004a86:	b963      	cbnz	r3, 8004aa2 <_dtoa_r+0x8fa>
 8004a88:	4631      	mov	r1, r6
 8004a8a:	2205      	movs	r2, #5
 8004a8c:	4620      	mov	r0, r4
 8004a8e:	f000 fed7 	bl	8005840 <__multadd>
 8004a92:	4601      	mov	r1, r0
 8004a94:	4606      	mov	r6, r0
 8004a96:	4658      	mov	r0, fp
 8004a98:	f001 f8da 	bl	8005c50 <__mcmp>
 8004a9c:	2800      	cmp	r0, #0
 8004a9e:	f73f add3 	bgt.w	8004648 <_dtoa_r+0x4a0>
 8004aa2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004aa4:	9d06      	ldr	r5, [sp, #24]
 8004aa6:	ea6f 0a03 	mvn.w	sl, r3
 8004aaa:	f04f 0900 	mov.w	r9, #0
 8004aae:	4631      	mov	r1, r6
 8004ab0:	4620      	mov	r0, r4
 8004ab2:	f000 feae 	bl	8005812 <_Bfree>
 8004ab6:	2f00      	cmp	r7, #0
 8004ab8:	f43f aebd 	beq.w	8004836 <_dtoa_r+0x68e>
 8004abc:	f1b9 0f00 	cmp.w	r9, #0
 8004ac0:	d005      	beq.n	8004ace <_dtoa_r+0x926>
 8004ac2:	45b9      	cmp	r9, r7
 8004ac4:	d003      	beq.n	8004ace <_dtoa_r+0x926>
 8004ac6:	4649      	mov	r1, r9
 8004ac8:	4620      	mov	r0, r4
 8004aca:	f000 fea2 	bl	8005812 <_Bfree>
 8004ace:	4639      	mov	r1, r7
 8004ad0:	4620      	mov	r0, r4
 8004ad2:	f000 fe9e 	bl	8005812 <_Bfree>
 8004ad6:	e6ae      	b.n	8004836 <_dtoa_r+0x68e>
 8004ad8:	2600      	movs	r6, #0
 8004ada:	4637      	mov	r7, r6
 8004adc:	e7e1      	b.n	8004aa2 <_dtoa_r+0x8fa>
 8004ade:	46ba      	mov	sl, r7
 8004ae0:	4637      	mov	r7, r6
 8004ae2:	e5b1      	b.n	8004648 <_dtoa_r+0x4a0>
 8004ae4:	40240000 	.word	0x40240000
 8004ae8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004aea:	f8cd 8010 	str.w	r8, [sp, #16]
 8004aee:	2b00      	cmp	r3, #0
 8004af0:	f000 80f3 	beq.w	8004cda <_dtoa_r+0xb32>
 8004af4:	2d00      	cmp	r5, #0
 8004af6:	dd05      	ble.n	8004b04 <_dtoa_r+0x95c>
 8004af8:	4639      	mov	r1, r7
 8004afa:	462a      	mov	r2, r5
 8004afc:	4620      	mov	r0, r4
 8004afe:	f001 f853 	bl	8005ba8 <__lshift>
 8004b02:	4607      	mov	r7, r0
 8004b04:	9b08      	ldr	r3, [sp, #32]
 8004b06:	2b00      	cmp	r3, #0
 8004b08:	d04c      	beq.n	8004ba4 <_dtoa_r+0x9fc>
 8004b0a:	6879      	ldr	r1, [r7, #4]
 8004b0c:	4620      	mov	r0, r4
 8004b0e:	f000 fe4c 	bl	80057aa <_Balloc>
 8004b12:	4605      	mov	r5, r0
 8004b14:	693a      	ldr	r2, [r7, #16]
 8004b16:	f107 010c 	add.w	r1, r7, #12
 8004b1a:	3202      	adds	r2, #2
 8004b1c:	0092      	lsls	r2, r2, #2
 8004b1e:	300c      	adds	r0, #12
 8004b20:	f000 fe38 	bl	8005794 <memcpy>
 8004b24:	2201      	movs	r2, #1
 8004b26:	4629      	mov	r1, r5
 8004b28:	4620      	mov	r0, r4
 8004b2a:	f001 f83d 	bl	8005ba8 <__lshift>
 8004b2e:	46b9      	mov	r9, r7
 8004b30:	4607      	mov	r7, r0
 8004b32:	9b06      	ldr	r3, [sp, #24]
 8004b34:	9307      	str	r3, [sp, #28]
 8004b36:	9b02      	ldr	r3, [sp, #8]
 8004b38:	f003 0301 	and.w	r3, r3, #1
 8004b3c:	9308      	str	r3, [sp, #32]
 8004b3e:	4631      	mov	r1, r6
 8004b40:	4658      	mov	r0, fp
 8004b42:	f7ff faa3 	bl	800408c <quorem>
 8004b46:	4649      	mov	r1, r9
 8004b48:	4605      	mov	r5, r0
 8004b4a:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8004b4e:	4658      	mov	r0, fp
 8004b50:	f001 f87e 	bl	8005c50 <__mcmp>
 8004b54:	463a      	mov	r2, r7
 8004b56:	9002      	str	r0, [sp, #8]
 8004b58:	4631      	mov	r1, r6
 8004b5a:	4620      	mov	r0, r4
 8004b5c:	f001 f892 	bl	8005c84 <__mdiff>
 8004b60:	68c3      	ldr	r3, [r0, #12]
 8004b62:	4602      	mov	r2, r0
 8004b64:	bb03      	cbnz	r3, 8004ba8 <_dtoa_r+0xa00>
 8004b66:	4601      	mov	r1, r0
 8004b68:	9009      	str	r0, [sp, #36]	; 0x24
 8004b6a:	4658      	mov	r0, fp
 8004b6c:	f001 f870 	bl	8005c50 <__mcmp>
 8004b70:	4603      	mov	r3, r0
 8004b72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004b74:	4611      	mov	r1, r2
 8004b76:	4620      	mov	r0, r4
 8004b78:	9309      	str	r3, [sp, #36]	; 0x24
 8004b7a:	f000 fe4a 	bl	8005812 <_Bfree>
 8004b7e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004b80:	b9a3      	cbnz	r3, 8004bac <_dtoa_r+0xa04>
 8004b82:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8004b84:	b992      	cbnz	r2, 8004bac <_dtoa_r+0xa04>
 8004b86:	9a08      	ldr	r2, [sp, #32]
 8004b88:	b982      	cbnz	r2, 8004bac <_dtoa_r+0xa04>
 8004b8a:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004b8e:	d029      	beq.n	8004be4 <_dtoa_r+0xa3c>
 8004b90:	9b02      	ldr	r3, [sp, #8]
 8004b92:	2b00      	cmp	r3, #0
 8004b94:	dd01      	ble.n	8004b9a <_dtoa_r+0x9f2>
 8004b96:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8004b9a:	9b07      	ldr	r3, [sp, #28]
 8004b9c:	1c5d      	adds	r5, r3, #1
 8004b9e:	f883 8000 	strb.w	r8, [r3]
 8004ba2:	e784      	b.n	8004aae <_dtoa_r+0x906>
 8004ba4:	4638      	mov	r0, r7
 8004ba6:	e7c2      	b.n	8004b2e <_dtoa_r+0x986>
 8004ba8:	2301      	movs	r3, #1
 8004baa:	e7e3      	b.n	8004b74 <_dtoa_r+0x9cc>
 8004bac:	9a02      	ldr	r2, [sp, #8]
 8004bae:	2a00      	cmp	r2, #0
 8004bb0:	db04      	blt.n	8004bbc <_dtoa_r+0xa14>
 8004bb2:	d123      	bne.n	8004bfc <_dtoa_r+0xa54>
 8004bb4:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8004bb6:	bb0a      	cbnz	r2, 8004bfc <_dtoa_r+0xa54>
 8004bb8:	9a08      	ldr	r2, [sp, #32]
 8004bba:	b9fa      	cbnz	r2, 8004bfc <_dtoa_r+0xa54>
 8004bbc:	2b00      	cmp	r3, #0
 8004bbe:	ddec      	ble.n	8004b9a <_dtoa_r+0x9f2>
 8004bc0:	4659      	mov	r1, fp
 8004bc2:	2201      	movs	r2, #1
 8004bc4:	4620      	mov	r0, r4
 8004bc6:	f000 ffef 	bl	8005ba8 <__lshift>
 8004bca:	4631      	mov	r1, r6
 8004bcc:	4683      	mov	fp, r0
 8004bce:	f001 f83f 	bl	8005c50 <__mcmp>
 8004bd2:	2800      	cmp	r0, #0
 8004bd4:	dc03      	bgt.n	8004bde <_dtoa_r+0xa36>
 8004bd6:	d1e0      	bne.n	8004b9a <_dtoa_r+0x9f2>
 8004bd8:	f018 0f01 	tst.w	r8, #1
 8004bdc:	d0dd      	beq.n	8004b9a <_dtoa_r+0x9f2>
 8004bde:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004be2:	d1d8      	bne.n	8004b96 <_dtoa_r+0x9ee>
 8004be4:	9b07      	ldr	r3, [sp, #28]
 8004be6:	9a07      	ldr	r2, [sp, #28]
 8004be8:	1c5d      	adds	r5, r3, #1
 8004bea:	2339      	movs	r3, #57	; 0x39
 8004bec:	7013      	strb	r3, [r2, #0]
 8004bee:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004bf2:	1e6a      	subs	r2, r5, #1
 8004bf4:	2b39      	cmp	r3, #57	; 0x39
 8004bf6:	d04d      	beq.n	8004c94 <_dtoa_r+0xaec>
 8004bf8:	3301      	adds	r3, #1
 8004bfa:	e052      	b.n	8004ca2 <_dtoa_r+0xafa>
 8004bfc:	9a07      	ldr	r2, [sp, #28]
 8004bfe:	2b00      	cmp	r3, #0
 8004c00:	f102 0501 	add.w	r5, r2, #1
 8004c04:	dd06      	ble.n	8004c14 <_dtoa_r+0xa6c>
 8004c06:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004c0a:	d0eb      	beq.n	8004be4 <_dtoa_r+0xa3c>
 8004c0c:	f108 0801 	add.w	r8, r8, #1
 8004c10:	9b07      	ldr	r3, [sp, #28]
 8004c12:	e7c4      	b.n	8004b9e <_dtoa_r+0x9f6>
 8004c14:	9b06      	ldr	r3, [sp, #24]
 8004c16:	9a04      	ldr	r2, [sp, #16]
 8004c18:	1aeb      	subs	r3, r5, r3
 8004c1a:	4293      	cmp	r3, r2
 8004c1c:	f805 8c01 	strb.w	r8, [r5, #-1]
 8004c20:	d021      	beq.n	8004c66 <_dtoa_r+0xabe>
 8004c22:	4659      	mov	r1, fp
 8004c24:	2300      	movs	r3, #0
 8004c26:	220a      	movs	r2, #10
 8004c28:	4620      	mov	r0, r4
 8004c2a:	f000 fe09 	bl	8005840 <__multadd>
 8004c2e:	45b9      	cmp	r9, r7
 8004c30:	4683      	mov	fp, r0
 8004c32:	f04f 0300 	mov.w	r3, #0
 8004c36:	f04f 020a 	mov.w	r2, #10
 8004c3a:	4649      	mov	r1, r9
 8004c3c:	4620      	mov	r0, r4
 8004c3e:	d105      	bne.n	8004c4c <_dtoa_r+0xaa4>
 8004c40:	f000 fdfe 	bl	8005840 <__multadd>
 8004c44:	4681      	mov	r9, r0
 8004c46:	4607      	mov	r7, r0
 8004c48:	9507      	str	r5, [sp, #28]
 8004c4a:	e778      	b.n	8004b3e <_dtoa_r+0x996>
 8004c4c:	f000 fdf8 	bl	8005840 <__multadd>
 8004c50:	4639      	mov	r1, r7
 8004c52:	4681      	mov	r9, r0
 8004c54:	2300      	movs	r3, #0
 8004c56:	220a      	movs	r2, #10
 8004c58:	4620      	mov	r0, r4
 8004c5a:	f000 fdf1 	bl	8005840 <__multadd>
 8004c5e:	4607      	mov	r7, r0
 8004c60:	e7f2      	b.n	8004c48 <_dtoa_r+0xaa0>
 8004c62:	f04f 0900 	mov.w	r9, #0
 8004c66:	4659      	mov	r1, fp
 8004c68:	2201      	movs	r2, #1
 8004c6a:	4620      	mov	r0, r4
 8004c6c:	f000 ff9c 	bl	8005ba8 <__lshift>
 8004c70:	4631      	mov	r1, r6
 8004c72:	4683      	mov	fp, r0
 8004c74:	f000 ffec 	bl	8005c50 <__mcmp>
 8004c78:	2800      	cmp	r0, #0
 8004c7a:	dcb8      	bgt.n	8004bee <_dtoa_r+0xa46>
 8004c7c:	d102      	bne.n	8004c84 <_dtoa_r+0xadc>
 8004c7e:	f018 0f01 	tst.w	r8, #1
 8004c82:	d1b4      	bne.n	8004bee <_dtoa_r+0xa46>
 8004c84:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004c88:	1e6a      	subs	r2, r5, #1
 8004c8a:	2b30      	cmp	r3, #48	; 0x30
 8004c8c:	f47f af0f 	bne.w	8004aae <_dtoa_r+0x906>
 8004c90:	4615      	mov	r5, r2
 8004c92:	e7f7      	b.n	8004c84 <_dtoa_r+0xadc>
 8004c94:	9b06      	ldr	r3, [sp, #24]
 8004c96:	4293      	cmp	r3, r2
 8004c98:	d105      	bne.n	8004ca6 <_dtoa_r+0xafe>
 8004c9a:	2331      	movs	r3, #49	; 0x31
 8004c9c:	9a06      	ldr	r2, [sp, #24]
 8004c9e:	f10a 0a01 	add.w	sl, sl, #1
 8004ca2:	7013      	strb	r3, [r2, #0]
 8004ca4:	e703      	b.n	8004aae <_dtoa_r+0x906>
 8004ca6:	4615      	mov	r5, r2
 8004ca8:	e7a1      	b.n	8004bee <_dtoa_r+0xa46>
 8004caa:	4b17      	ldr	r3, [pc, #92]	; (8004d08 <_dtoa_r+0xb60>)
 8004cac:	f7ff bae1 	b.w	8004272 <_dtoa_r+0xca>
 8004cb0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004cb2:	2b00      	cmp	r3, #0
 8004cb4:	f47f aabb 	bne.w	800422e <_dtoa_r+0x86>
 8004cb8:	4b14      	ldr	r3, [pc, #80]	; (8004d0c <_dtoa_r+0xb64>)
 8004cba:	f7ff bada 	b.w	8004272 <_dtoa_r+0xca>
 8004cbe:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004cc0:	2b01      	cmp	r3, #1
 8004cc2:	f77f ae3f 	ble.w	8004944 <_dtoa_r+0x79c>
 8004cc6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004cc8:	9308      	str	r3, [sp, #32]
 8004cca:	e653      	b.n	8004974 <_dtoa_r+0x7cc>
 8004ccc:	9b04      	ldr	r3, [sp, #16]
 8004cce:	2b00      	cmp	r3, #0
 8004cd0:	dc03      	bgt.n	8004cda <_dtoa_r+0xb32>
 8004cd2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004cd4:	2b02      	cmp	r3, #2
 8004cd6:	f73f aed5 	bgt.w	8004a84 <_dtoa_r+0x8dc>
 8004cda:	9d06      	ldr	r5, [sp, #24]
 8004cdc:	4631      	mov	r1, r6
 8004cde:	4658      	mov	r0, fp
 8004ce0:	f7ff f9d4 	bl	800408c <quorem>
 8004ce4:	9b06      	ldr	r3, [sp, #24]
 8004ce6:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8004cea:	f805 8b01 	strb.w	r8, [r5], #1
 8004cee:	9a04      	ldr	r2, [sp, #16]
 8004cf0:	1aeb      	subs	r3, r5, r3
 8004cf2:	429a      	cmp	r2, r3
 8004cf4:	ddb5      	ble.n	8004c62 <_dtoa_r+0xaba>
 8004cf6:	4659      	mov	r1, fp
 8004cf8:	2300      	movs	r3, #0
 8004cfa:	220a      	movs	r2, #10
 8004cfc:	4620      	mov	r0, r4
 8004cfe:	f000 fd9f 	bl	8005840 <__multadd>
 8004d02:	4683      	mov	fp, r0
 8004d04:	e7ea      	b.n	8004cdc <_dtoa_r+0xb34>
 8004d06:	bf00      	nop
 8004d08:	08006d00 	.word	0x08006d00
 8004d0c:	08006d80 	.word	0x08006d80

08004d10 <__sflush_r>:
 8004d10:	898a      	ldrh	r2, [r1, #12]
 8004d12:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004d16:	4605      	mov	r5, r0
 8004d18:	0710      	lsls	r0, r2, #28
 8004d1a:	460c      	mov	r4, r1
 8004d1c:	d458      	bmi.n	8004dd0 <__sflush_r+0xc0>
 8004d1e:	684b      	ldr	r3, [r1, #4]
 8004d20:	2b00      	cmp	r3, #0
 8004d22:	dc05      	bgt.n	8004d30 <__sflush_r+0x20>
 8004d24:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004d26:	2b00      	cmp	r3, #0
 8004d28:	dc02      	bgt.n	8004d30 <__sflush_r+0x20>
 8004d2a:	2000      	movs	r0, #0
 8004d2c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004d30:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004d32:	2e00      	cmp	r6, #0
 8004d34:	d0f9      	beq.n	8004d2a <__sflush_r+0x1a>
 8004d36:	2300      	movs	r3, #0
 8004d38:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004d3c:	682f      	ldr	r7, [r5, #0]
 8004d3e:	6a21      	ldr	r1, [r4, #32]
 8004d40:	602b      	str	r3, [r5, #0]
 8004d42:	d032      	beq.n	8004daa <__sflush_r+0x9a>
 8004d44:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004d46:	89a3      	ldrh	r3, [r4, #12]
 8004d48:	075a      	lsls	r2, r3, #29
 8004d4a:	d505      	bpl.n	8004d58 <__sflush_r+0x48>
 8004d4c:	6863      	ldr	r3, [r4, #4]
 8004d4e:	1ac0      	subs	r0, r0, r3
 8004d50:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004d52:	b10b      	cbz	r3, 8004d58 <__sflush_r+0x48>
 8004d54:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004d56:	1ac0      	subs	r0, r0, r3
 8004d58:	2300      	movs	r3, #0
 8004d5a:	4602      	mov	r2, r0
 8004d5c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004d5e:	6a21      	ldr	r1, [r4, #32]
 8004d60:	4628      	mov	r0, r5
 8004d62:	47b0      	blx	r6
 8004d64:	1c43      	adds	r3, r0, #1
 8004d66:	89a3      	ldrh	r3, [r4, #12]
 8004d68:	d106      	bne.n	8004d78 <__sflush_r+0x68>
 8004d6a:	6829      	ldr	r1, [r5, #0]
 8004d6c:	291d      	cmp	r1, #29
 8004d6e:	d848      	bhi.n	8004e02 <__sflush_r+0xf2>
 8004d70:	4a29      	ldr	r2, [pc, #164]	; (8004e18 <__sflush_r+0x108>)
 8004d72:	40ca      	lsrs	r2, r1
 8004d74:	07d6      	lsls	r6, r2, #31
 8004d76:	d544      	bpl.n	8004e02 <__sflush_r+0xf2>
 8004d78:	2200      	movs	r2, #0
 8004d7a:	6062      	str	r2, [r4, #4]
 8004d7c:	6922      	ldr	r2, [r4, #16]
 8004d7e:	04d9      	lsls	r1, r3, #19
 8004d80:	6022      	str	r2, [r4, #0]
 8004d82:	d504      	bpl.n	8004d8e <__sflush_r+0x7e>
 8004d84:	1c42      	adds	r2, r0, #1
 8004d86:	d101      	bne.n	8004d8c <__sflush_r+0x7c>
 8004d88:	682b      	ldr	r3, [r5, #0]
 8004d8a:	b903      	cbnz	r3, 8004d8e <__sflush_r+0x7e>
 8004d8c:	6560      	str	r0, [r4, #84]	; 0x54
 8004d8e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004d90:	602f      	str	r7, [r5, #0]
 8004d92:	2900      	cmp	r1, #0
 8004d94:	d0c9      	beq.n	8004d2a <__sflush_r+0x1a>
 8004d96:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004d9a:	4299      	cmp	r1, r3
 8004d9c:	d002      	beq.n	8004da4 <__sflush_r+0x94>
 8004d9e:	4628      	mov	r0, r5
 8004da0:	f001 f90a 	bl	8005fb8 <_free_r>
 8004da4:	2000      	movs	r0, #0
 8004da6:	6360      	str	r0, [r4, #52]	; 0x34
 8004da8:	e7c0      	b.n	8004d2c <__sflush_r+0x1c>
 8004daa:	2301      	movs	r3, #1
 8004dac:	4628      	mov	r0, r5
 8004dae:	47b0      	blx	r6
 8004db0:	1c41      	adds	r1, r0, #1
 8004db2:	d1c8      	bne.n	8004d46 <__sflush_r+0x36>
 8004db4:	682b      	ldr	r3, [r5, #0]
 8004db6:	2b00      	cmp	r3, #0
 8004db8:	d0c5      	beq.n	8004d46 <__sflush_r+0x36>
 8004dba:	2b1d      	cmp	r3, #29
 8004dbc:	d001      	beq.n	8004dc2 <__sflush_r+0xb2>
 8004dbe:	2b16      	cmp	r3, #22
 8004dc0:	d101      	bne.n	8004dc6 <__sflush_r+0xb6>
 8004dc2:	602f      	str	r7, [r5, #0]
 8004dc4:	e7b1      	b.n	8004d2a <__sflush_r+0x1a>
 8004dc6:	89a3      	ldrh	r3, [r4, #12]
 8004dc8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004dcc:	81a3      	strh	r3, [r4, #12]
 8004dce:	e7ad      	b.n	8004d2c <__sflush_r+0x1c>
 8004dd0:	690f      	ldr	r7, [r1, #16]
 8004dd2:	2f00      	cmp	r7, #0
 8004dd4:	d0a9      	beq.n	8004d2a <__sflush_r+0x1a>
 8004dd6:	0793      	lsls	r3, r2, #30
 8004dd8:	bf18      	it	ne
 8004dda:	2300      	movne	r3, #0
 8004ddc:	680e      	ldr	r6, [r1, #0]
 8004dde:	bf08      	it	eq
 8004de0:	694b      	ldreq	r3, [r1, #20]
 8004de2:	eba6 0807 	sub.w	r8, r6, r7
 8004de6:	600f      	str	r7, [r1, #0]
 8004de8:	608b      	str	r3, [r1, #8]
 8004dea:	f1b8 0f00 	cmp.w	r8, #0
 8004dee:	dd9c      	ble.n	8004d2a <__sflush_r+0x1a>
 8004df0:	4643      	mov	r3, r8
 8004df2:	463a      	mov	r2, r7
 8004df4:	6a21      	ldr	r1, [r4, #32]
 8004df6:	4628      	mov	r0, r5
 8004df8:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004dfa:	47b0      	blx	r6
 8004dfc:	2800      	cmp	r0, #0
 8004dfe:	dc06      	bgt.n	8004e0e <__sflush_r+0xfe>
 8004e00:	89a3      	ldrh	r3, [r4, #12]
 8004e02:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004e06:	81a3      	strh	r3, [r4, #12]
 8004e08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004e0c:	e78e      	b.n	8004d2c <__sflush_r+0x1c>
 8004e0e:	4407      	add	r7, r0
 8004e10:	eba8 0800 	sub.w	r8, r8, r0
 8004e14:	e7e9      	b.n	8004dea <__sflush_r+0xda>
 8004e16:	bf00      	nop
 8004e18:	20400001 	.word	0x20400001

08004e1c <_fflush_r>:
 8004e1c:	b538      	push	{r3, r4, r5, lr}
 8004e1e:	690b      	ldr	r3, [r1, #16]
 8004e20:	4605      	mov	r5, r0
 8004e22:	460c      	mov	r4, r1
 8004e24:	b1db      	cbz	r3, 8004e5e <_fflush_r+0x42>
 8004e26:	b118      	cbz	r0, 8004e30 <_fflush_r+0x14>
 8004e28:	6983      	ldr	r3, [r0, #24]
 8004e2a:	b90b      	cbnz	r3, 8004e30 <_fflush_r+0x14>
 8004e2c:	f000 f860 	bl	8004ef0 <__sinit>
 8004e30:	4b0c      	ldr	r3, [pc, #48]	; (8004e64 <_fflush_r+0x48>)
 8004e32:	429c      	cmp	r4, r3
 8004e34:	d109      	bne.n	8004e4a <_fflush_r+0x2e>
 8004e36:	686c      	ldr	r4, [r5, #4]
 8004e38:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004e3c:	b17b      	cbz	r3, 8004e5e <_fflush_r+0x42>
 8004e3e:	4621      	mov	r1, r4
 8004e40:	4628      	mov	r0, r5
 8004e42:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8004e46:	f7ff bf63 	b.w	8004d10 <__sflush_r>
 8004e4a:	4b07      	ldr	r3, [pc, #28]	; (8004e68 <_fflush_r+0x4c>)
 8004e4c:	429c      	cmp	r4, r3
 8004e4e:	d101      	bne.n	8004e54 <_fflush_r+0x38>
 8004e50:	68ac      	ldr	r4, [r5, #8]
 8004e52:	e7f1      	b.n	8004e38 <_fflush_r+0x1c>
 8004e54:	4b05      	ldr	r3, [pc, #20]	; (8004e6c <_fflush_r+0x50>)
 8004e56:	429c      	cmp	r4, r3
 8004e58:	bf08      	it	eq
 8004e5a:	68ec      	ldreq	r4, [r5, #12]
 8004e5c:	e7ec      	b.n	8004e38 <_fflush_r+0x1c>
 8004e5e:	2000      	movs	r0, #0
 8004e60:	bd38      	pop	{r3, r4, r5, pc}
 8004e62:	bf00      	nop
 8004e64:	08006db0 	.word	0x08006db0
 8004e68:	08006dd0 	.word	0x08006dd0
 8004e6c:	08006d90 	.word	0x08006d90

08004e70 <std>:
 8004e70:	2300      	movs	r3, #0
 8004e72:	b510      	push	{r4, lr}
 8004e74:	4604      	mov	r4, r0
 8004e76:	e9c0 3300 	strd	r3, r3, [r0]
 8004e7a:	6083      	str	r3, [r0, #8]
 8004e7c:	8181      	strh	r1, [r0, #12]
 8004e7e:	6643      	str	r3, [r0, #100]	; 0x64
 8004e80:	81c2      	strh	r2, [r0, #14]
 8004e82:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8004e86:	6183      	str	r3, [r0, #24]
 8004e88:	4619      	mov	r1, r3
 8004e8a:	2208      	movs	r2, #8
 8004e8c:	305c      	adds	r0, #92	; 0x5c
 8004e8e:	f7fd fa8b 	bl	80023a8 <memset>
 8004e92:	4b05      	ldr	r3, [pc, #20]	; (8004ea8 <std+0x38>)
 8004e94:	6224      	str	r4, [r4, #32]
 8004e96:	6263      	str	r3, [r4, #36]	; 0x24
 8004e98:	4b04      	ldr	r3, [pc, #16]	; (8004eac <std+0x3c>)
 8004e9a:	62a3      	str	r3, [r4, #40]	; 0x28
 8004e9c:	4b04      	ldr	r3, [pc, #16]	; (8004eb0 <std+0x40>)
 8004e9e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8004ea0:	4b04      	ldr	r3, [pc, #16]	; (8004eb4 <std+0x44>)
 8004ea2:	6323      	str	r3, [r4, #48]	; 0x30
 8004ea4:	bd10      	pop	{r4, pc}
 8004ea6:	bf00      	nop
 8004ea8:	08006645 	.word	0x08006645
 8004eac:	08006667 	.word	0x08006667
 8004eb0:	0800669f 	.word	0x0800669f
 8004eb4:	080066c3 	.word	0x080066c3

08004eb8 <_cleanup_r>:
 8004eb8:	4901      	ldr	r1, [pc, #4]	; (8004ec0 <_cleanup_r+0x8>)
 8004eba:	f000 b885 	b.w	8004fc8 <_fwalk_reent>
 8004ebe:	bf00      	nop
 8004ec0:	08004e1d 	.word	0x08004e1d

08004ec4 <__sfmoreglue>:
 8004ec4:	b570      	push	{r4, r5, r6, lr}
 8004ec6:	2568      	movs	r5, #104	; 0x68
 8004ec8:	1e4a      	subs	r2, r1, #1
 8004eca:	4355      	muls	r5, r2
 8004ecc:	460e      	mov	r6, r1
 8004ece:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8004ed2:	f001 f8bd 	bl	8006050 <_malloc_r>
 8004ed6:	4604      	mov	r4, r0
 8004ed8:	b140      	cbz	r0, 8004eec <__sfmoreglue+0x28>
 8004eda:	2100      	movs	r1, #0
 8004edc:	e9c0 1600 	strd	r1, r6, [r0]
 8004ee0:	300c      	adds	r0, #12
 8004ee2:	60a0      	str	r0, [r4, #8]
 8004ee4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8004ee8:	f7fd fa5e 	bl	80023a8 <memset>
 8004eec:	4620      	mov	r0, r4
 8004eee:	bd70      	pop	{r4, r5, r6, pc}

08004ef0 <__sinit>:
 8004ef0:	6983      	ldr	r3, [r0, #24]
 8004ef2:	b510      	push	{r4, lr}
 8004ef4:	4604      	mov	r4, r0
 8004ef6:	bb33      	cbnz	r3, 8004f46 <__sinit+0x56>
 8004ef8:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 8004efc:	6503      	str	r3, [r0, #80]	; 0x50
 8004efe:	4b12      	ldr	r3, [pc, #72]	; (8004f48 <__sinit+0x58>)
 8004f00:	4a12      	ldr	r2, [pc, #72]	; (8004f4c <__sinit+0x5c>)
 8004f02:	681b      	ldr	r3, [r3, #0]
 8004f04:	6282      	str	r2, [r0, #40]	; 0x28
 8004f06:	4298      	cmp	r0, r3
 8004f08:	bf04      	itt	eq
 8004f0a:	2301      	moveq	r3, #1
 8004f0c:	6183      	streq	r3, [r0, #24]
 8004f0e:	f000 f81f 	bl	8004f50 <__sfp>
 8004f12:	6060      	str	r0, [r4, #4]
 8004f14:	4620      	mov	r0, r4
 8004f16:	f000 f81b 	bl	8004f50 <__sfp>
 8004f1a:	60a0      	str	r0, [r4, #8]
 8004f1c:	4620      	mov	r0, r4
 8004f1e:	f000 f817 	bl	8004f50 <__sfp>
 8004f22:	2200      	movs	r2, #0
 8004f24:	60e0      	str	r0, [r4, #12]
 8004f26:	2104      	movs	r1, #4
 8004f28:	6860      	ldr	r0, [r4, #4]
 8004f2a:	f7ff ffa1 	bl	8004e70 <std>
 8004f2e:	2201      	movs	r2, #1
 8004f30:	2109      	movs	r1, #9
 8004f32:	68a0      	ldr	r0, [r4, #8]
 8004f34:	f7ff ff9c 	bl	8004e70 <std>
 8004f38:	2202      	movs	r2, #2
 8004f3a:	2112      	movs	r1, #18
 8004f3c:	68e0      	ldr	r0, [r4, #12]
 8004f3e:	f7ff ff97 	bl	8004e70 <std>
 8004f42:	2301      	movs	r3, #1
 8004f44:	61a3      	str	r3, [r4, #24]
 8004f46:	bd10      	pop	{r4, pc}
 8004f48:	08006cec 	.word	0x08006cec
 8004f4c:	08004eb9 	.word	0x08004eb9

08004f50 <__sfp>:
 8004f50:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004f52:	4b1b      	ldr	r3, [pc, #108]	; (8004fc0 <__sfp+0x70>)
 8004f54:	4607      	mov	r7, r0
 8004f56:	681e      	ldr	r6, [r3, #0]
 8004f58:	69b3      	ldr	r3, [r6, #24]
 8004f5a:	b913      	cbnz	r3, 8004f62 <__sfp+0x12>
 8004f5c:	4630      	mov	r0, r6
 8004f5e:	f7ff ffc7 	bl	8004ef0 <__sinit>
 8004f62:	3648      	adds	r6, #72	; 0x48
 8004f64:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8004f68:	3b01      	subs	r3, #1
 8004f6a:	d503      	bpl.n	8004f74 <__sfp+0x24>
 8004f6c:	6833      	ldr	r3, [r6, #0]
 8004f6e:	b133      	cbz	r3, 8004f7e <__sfp+0x2e>
 8004f70:	6836      	ldr	r6, [r6, #0]
 8004f72:	e7f7      	b.n	8004f64 <__sfp+0x14>
 8004f74:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8004f78:	b16d      	cbz	r5, 8004f96 <__sfp+0x46>
 8004f7a:	3468      	adds	r4, #104	; 0x68
 8004f7c:	e7f4      	b.n	8004f68 <__sfp+0x18>
 8004f7e:	2104      	movs	r1, #4
 8004f80:	4638      	mov	r0, r7
 8004f82:	f7ff ff9f 	bl	8004ec4 <__sfmoreglue>
 8004f86:	6030      	str	r0, [r6, #0]
 8004f88:	2800      	cmp	r0, #0
 8004f8a:	d1f1      	bne.n	8004f70 <__sfp+0x20>
 8004f8c:	230c      	movs	r3, #12
 8004f8e:	4604      	mov	r4, r0
 8004f90:	603b      	str	r3, [r7, #0]
 8004f92:	4620      	mov	r0, r4
 8004f94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004f96:	4b0b      	ldr	r3, [pc, #44]	; (8004fc4 <__sfp+0x74>)
 8004f98:	6665      	str	r5, [r4, #100]	; 0x64
 8004f9a:	e9c4 5500 	strd	r5, r5, [r4]
 8004f9e:	60a5      	str	r5, [r4, #8]
 8004fa0:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8004fa4:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8004fa8:	2208      	movs	r2, #8
 8004faa:	4629      	mov	r1, r5
 8004fac:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8004fb0:	f7fd f9fa 	bl	80023a8 <memset>
 8004fb4:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8004fb8:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004fbc:	e7e9      	b.n	8004f92 <__sfp+0x42>
 8004fbe:	bf00      	nop
 8004fc0:	08006cec 	.word	0x08006cec
 8004fc4:	ffff0001 	.word	0xffff0001

08004fc8 <_fwalk_reent>:
 8004fc8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8004fcc:	4680      	mov	r8, r0
 8004fce:	4689      	mov	r9, r1
 8004fd0:	2600      	movs	r6, #0
 8004fd2:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8004fd6:	b914      	cbnz	r4, 8004fde <_fwalk_reent+0x16>
 8004fd8:	4630      	mov	r0, r6
 8004fda:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8004fde:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 8004fe2:	3f01      	subs	r7, #1
 8004fe4:	d501      	bpl.n	8004fea <_fwalk_reent+0x22>
 8004fe6:	6824      	ldr	r4, [r4, #0]
 8004fe8:	e7f5      	b.n	8004fd6 <_fwalk_reent+0xe>
 8004fea:	89ab      	ldrh	r3, [r5, #12]
 8004fec:	2b01      	cmp	r3, #1
 8004fee:	d907      	bls.n	8005000 <_fwalk_reent+0x38>
 8004ff0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8004ff4:	3301      	adds	r3, #1
 8004ff6:	d003      	beq.n	8005000 <_fwalk_reent+0x38>
 8004ff8:	4629      	mov	r1, r5
 8004ffa:	4640      	mov	r0, r8
 8004ffc:	47c8      	blx	r9
 8004ffe:	4306      	orrs	r6, r0
 8005000:	3568      	adds	r5, #104	; 0x68
 8005002:	e7ee      	b.n	8004fe2 <_fwalk_reent+0x1a>

08005004 <rshift>:
 8005004:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005006:	6906      	ldr	r6, [r0, #16]
 8005008:	114b      	asrs	r3, r1, #5
 800500a:	429e      	cmp	r6, r3
 800500c:	f100 0414 	add.w	r4, r0, #20
 8005010:	dd31      	ble.n	8005076 <rshift+0x72>
 8005012:	f011 011f 	ands.w	r1, r1, #31
 8005016:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 800501a:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 800501e:	d108      	bne.n	8005032 <rshift+0x2e>
 8005020:	4621      	mov	r1, r4
 8005022:	42b2      	cmp	r2, r6
 8005024:	460b      	mov	r3, r1
 8005026:	d211      	bcs.n	800504c <rshift+0x48>
 8005028:	f852 3b04 	ldr.w	r3, [r2], #4
 800502c:	f841 3b04 	str.w	r3, [r1], #4
 8005030:	e7f7      	b.n	8005022 <rshift+0x1e>
 8005032:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 8005036:	4623      	mov	r3, r4
 8005038:	f1c1 0c20 	rsb	ip, r1, #32
 800503c:	40cd      	lsrs	r5, r1
 800503e:	3204      	adds	r2, #4
 8005040:	42b2      	cmp	r2, r6
 8005042:	4617      	mov	r7, r2
 8005044:	d30d      	bcc.n	8005062 <rshift+0x5e>
 8005046:	601d      	str	r5, [r3, #0]
 8005048:	b105      	cbz	r5, 800504c <rshift+0x48>
 800504a:	3304      	adds	r3, #4
 800504c:	42a3      	cmp	r3, r4
 800504e:	eba3 0204 	sub.w	r2, r3, r4
 8005052:	bf08      	it	eq
 8005054:	2300      	moveq	r3, #0
 8005056:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800505a:	6102      	str	r2, [r0, #16]
 800505c:	bf08      	it	eq
 800505e:	6143      	streq	r3, [r0, #20]
 8005060:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005062:	683f      	ldr	r7, [r7, #0]
 8005064:	fa07 f70c 	lsl.w	r7, r7, ip
 8005068:	433d      	orrs	r5, r7
 800506a:	f843 5b04 	str.w	r5, [r3], #4
 800506e:	f852 5b04 	ldr.w	r5, [r2], #4
 8005072:	40cd      	lsrs	r5, r1
 8005074:	e7e4      	b.n	8005040 <rshift+0x3c>
 8005076:	4623      	mov	r3, r4
 8005078:	e7e8      	b.n	800504c <rshift+0x48>

0800507a <__hexdig_fun>:
 800507a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800507e:	2b09      	cmp	r3, #9
 8005080:	d802      	bhi.n	8005088 <__hexdig_fun+0xe>
 8005082:	3820      	subs	r0, #32
 8005084:	b2c0      	uxtb	r0, r0
 8005086:	4770      	bx	lr
 8005088:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800508c:	2b05      	cmp	r3, #5
 800508e:	d801      	bhi.n	8005094 <__hexdig_fun+0x1a>
 8005090:	3847      	subs	r0, #71	; 0x47
 8005092:	e7f7      	b.n	8005084 <__hexdig_fun+0xa>
 8005094:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005098:	2b05      	cmp	r3, #5
 800509a:	d801      	bhi.n	80050a0 <__hexdig_fun+0x26>
 800509c:	3827      	subs	r0, #39	; 0x27
 800509e:	e7f1      	b.n	8005084 <__hexdig_fun+0xa>
 80050a0:	2000      	movs	r0, #0
 80050a2:	4770      	bx	lr

080050a4 <__gethex>:
 80050a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80050a8:	b08b      	sub	sp, #44	; 0x2c
 80050aa:	9002      	str	r0, [sp, #8]
 80050ac:	9816      	ldr	r0, [sp, #88]	; 0x58
 80050ae:	468a      	mov	sl, r1
 80050b0:	4690      	mov	r8, r2
 80050b2:	9306      	str	r3, [sp, #24]
 80050b4:	f000 fad1 	bl	800565a <__localeconv_l>
 80050b8:	6803      	ldr	r3, [r0, #0]
 80050ba:	f04f 0b00 	mov.w	fp, #0
 80050be:	4618      	mov	r0, r3
 80050c0:	9303      	str	r3, [sp, #12]
 80050c2:	f7fb f845 	bl	8000150 <strlen>
 80050c6:	9b03      	ldr	r3, [sp, #12]
 80050c8:	9001      	str	r0, [sp, #4]
 80050ca:	4403      	add	r3, r0
 80050cc:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80050d0:	9307      	str	r3, [sp, #28]
 80050d2:	f8da 3000 	ldr.w	r3, [sl]
 80050d6:	3302      	adds	r3, #2
 80050d8:	461f      	mov	r7, r3
 80050da:	f813 0b01 	ldrb.w	r0, [r3], #1
 80050de:	2830      	cmp	r0, #48	; 0x30
 80050e0:	d06c      	beq.n	80051bc <__gethex+0x118>
 80050e2:	f7ff ffca 	bl	800507a <__hexdig_fun>
 80050e6:	4604      	mov	r4, r0
 80050e8:	2800      	cmp	r0, #0
 80050ea:	d16a      	bne.n	80051c2 <__gethex+0x11e>
 80050ec:	9a01      	ldr	r2, [sp, #4]
 80050ee:	9903      	ldr	r1, [sp, #12]
 80050f0:	4638      	mov	r0, r7
 80050f2:	f001 faea 	bl	80066ca <strncmp>
 80050f6:	2800      	cmp	r0, #0
 80050f8:	d166      	bne.n	80051c8 <__gethex+0x124>
 80050fa:	9b01      	ldr	r3, [sp, #4]
 80050fc:	5cf8      	ldrb	r0, [r7, r3]
 80050fe:	18fe      	adds	r6, r7, r3
 8005100:	f7ff ffbb 	bl	800507a <__hexdig_fun>
 8005104:	2800      	cmp	r0, #0
 8005106:	d062      	beq.n	80051ce <__gethex+0x12a>
 8005108:	4633      	mov	r3, r6
 800510a:	7818      	ldrb	r0, [r3, #0]
 800510c:	461f      	mov	r7, r3
 800510e:	2830      	cmp	r0, #48	; 0x30
 8005110:	f103 0301 	add.w	r3, r3, #1
 8005114:	d0f9      	beq.n	800510a <__gethex+0x66>
 8005116:	f7ff ffb0 	bl	800507a <__hexdig_fun>
 800511a:	fab0 f580 	clz	r5, r0
 800511e:	4634      	mov	r4, r6
 8005120:	f04f 0b01 	mov.w	fp, #1
 8005124:	096d      	lsrs	r5, r5, #5
 8005126:	463a      	mov	r2, r7
 8005128:	4616      	mov	r6, r2
 800512a:	7830      	ldrb	r0, [r6, #0]
 800512c:	3201      	adds	r2, #1
 800512e:	f7ff ffa4 	bl	800507a <__hexdig_fun>
 8005132:	2800      	cmp	r0, #0
 8005134:	d1f8      	bne.n	8005128 <__gethex+0x84>
 8005136:	9a01      	ldr	r2, [sp, #4]
 8005138:	9903      	ldr	r1, [sp, #12]
 800513a:	4630      	mov	r0, r6
 800513c:	f001 fac5 	bl	80066ca <strncmp>
 8005140:	b950      	cbnz	r0, 8005158 <__gethex+0xb4>
 8005142:	b954      	cbnz	r4, 800515a <__gethex+0xb6>
 8005144:	9b01      	ldr	r3, [sp, #4]
 8005146:	18f4      	adds	r4, r6, r3
 8005148:	4622      	mov	r2, r4
 800514a:	4616      	mov	r6, r2
 800514c:	7830      	ldrb	r0, [r6, #0]
 800514e:	3201      	adds	r2, #1
 8005150:	f7ff ff93 	bl	800507a <__hexdig_fun>
 8005154:	2800      	cmp	r0, #0
 8005156:	d1f8      	bne.n	800514a <__gethex+0xa6>
 8005158:	b10c      	cbz	r4, 800515e <__gethex+0xba>
 800515a:	1ba4      	subs	r4, r4, r6
 800515c:	00a4      	lsls	r4, r4, #2
 800515e:	7833      	ldrb	r3, [r6, #0]
 8005160:	2b50      	cmp	r3, #80	; 0x50
 8005162:	d001      	beq.n	8005168 <__gethex+0xc4>
 8005164:	2b70      	cmp	r3, #112	; 0x70
 8005166:	d140      	bne.n	80051ea <__gethex+0x146>
 8005168:	7873      	ldrb	r3, [r6, #1]
 800516a:	2b2b      	cmp	r3, #43	; 0x2b
 800516c:	d031      	beq.n	80051d2 <__gethex+0x12e>
 800516e:	2b2d      	cmp	r3, #45	; 0x2d
 8005170:	d033      	beq.n	80051da <__gethex+0x136>
 8005172:	f04f 0900 	mov.w	r9, #0
 8005176:	1c71      	adds	r1, r6, #1
 8005178:	7808      	ldrb	r0, [r1, #0]
 800517a:	f7ff ff7e 	bl	800507a <__hexdig_fun>
 800517e:	1e43      	subs	r3, r0, #1
 8005180:	b2db      	uxtb	r3, r3
 8005182:	2b18      	cmp	r3, #24
 8005184:	d831      	bhi.n	80051ea <__gethex+0x146>
 8005186:	f1a0 0210 	sub.w	r2, r0, #16
 800518a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800518e:	f7ff ff74 	bl	800507a <__hexdig_fun>
 8005192:	1e43      	subs	r3, r0, #1
 8005194:	b2db      	uxtb	r3, r3
 8005196:	2b18      	cmp	r3, #24
 8005198:	d922      	bls.n	80051e0 <__gethex+0x13c>
 800519a:	f1b9 0f00 	cmp.w	r9, #0
 800519e:	d000      	beq.n	80051a2 <__gethex+0xfe>
 80051a0:	4252      	negs	r2, r2
 80051a2:	4414      	add	r4, r2
 80051a4:	f8ca 1000 	str.w	r1, [sl]
 80051a8:	b30d      	cbz	r5, 80051ee <__gethex+0x14a>
 80051aa:	f1bb 0f00 	cmp.w	fp, #0
 80051ae:	bf0c      	ite	eq
 80051b0:	2706      	moveq	r7, #6
 80051b2:	2700      	movne	r7, #0
 80051b4:	4638      	mov	r0, r7
 80051b6:	b00b      	add	sp, #44	; 0x2c
 80051b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80051bc:	f10b 0b01 	add.w	fp, fp, #1
 80051c0:	e78a      	b.n	80050d8 <__gethex+0x34>
 80051c2:	2500      	movs	r5, #0
 80051c4:	462c      	mov	r4, r5
 80051c6:	e7ae      	b.n	8005126 <__gethex+0x82>
 80051c8:	463e      	mov	r6, r7
 80051ca:	2501      	movs	r5, #1
 80051cc:	e7c7      	b.n	800515e <__gethex+0xba>
 80051ce:	4604      	mov	r4, r0
 80051d0:	e7fb      	b.n	80051ca <__gethex+0x126>
 80051d2:	f04f 0900 	mov.w	r9, #0
 80051d6:	1cb1      	adds	r1, r6, #2
 80051d8:	e7ce      	b.n	8005178 <__gethex+0xd4>
 80051da:	f04f 0901 	mov.w	r9, #1
 80051de:	e7fa      	b.n	80051d6 <__gethex+0x132>
 80051e0:	230a      	movs	r3, #10
 80051e2:	fb03 0202 	mla	r2, r3, r2, r0
 80051e6:	3a10      	subs	r2, #16
 80051e8:	e7cf      	b.n	800518a <__gethex+0xe6>
 80051ea:	4631      	mov	r1, r6
 80051ec:	e7da      	b.n	80051a4 <__gethex+0x100>
 80051ee:	4629      	mov	r1, r5
 80051f0:	1bf3      	subs	r3, r6, r7
 80051f2:	3b01      	subs	r3, #1
 80051f4:	2b07      	cmp	r3, #7
 80051f6:	dc49      	bgt.n	800528c <__gethex+0x1e8>
 80051f8:	9802      	ldr	r0, [sp, #8]
 80051fa:	f000 fad6 	bl	80057aa <_Balloc>
 80051fe:	f04f 0b00 	mov.w	fp, #0
 8005202:	4605      	mov	r5, r0
 8005204:	46da      	mov	sl, fp
 8005206:	9b01      	ldr	r3, [sp, #4]
 8005208:	f100 0914 	add.w	r9, r0, #20
 800520c:	f1c3 0301 	rsb	r3, r3, #1
 8005210:	f8cd 9010 	str.w	r9, [sp, #16]
 8005214:	9308      	str	r3, [sp, #32]
 8005216:	42b7      	cmp	r7, r6
 8005218:	d33b      	bcc.n	8005292 <__gethex+0x1ee>
 800521a:	9804      	ldr	r0, [sp, #16]
 800521c:	f840 ab04 	str.w	sl, [r0], #4
 8005220:	eba0 0009 	sub.w	r0, r0, r9
 8005224:	1080      	asrs	r0, r0, #2
 8005226:	6128      	str	r0, [r5, #16]
 8005228:	0147      	lsls	r7, r0, #5
 800522a:	4650      	mov	r0, sl
 800522c:	f000 fb81 	bl	8005932 <__hi0bits>
 8005230:	f8d8 6000 	ldr.w	r6, [r8]
 8005234:	1a3f      	subs	r7, r7, r0
 8005236:	42b7      	cmp	r7, r6
 8005238:	dd64      	ble.n	8005304 <__gethex+0x260>
 800523a:	1bbf      	subs	r7, r7, r6
 800523c:	4639      	mov	r1, r7
 800523e:	4628      	mov	r0, r5
 8005240:	f000 fe8b 	bl	8005f5a <__any_on>
 8005244:	4682      	mov	sl, r0
 8005246:	b178      	cbz	r0, 8005268 <__gethex+0x1c4>
 8005248:	f04f 0a01 	mov.w	sl, #1
 800524c:	1e7b      	subs	r3, r7, #1
 800524e:	1159      	asrs	r1, r3, #5
 8005250:	f003 021f 	and.w	r2, r3, #31
 8005254:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8005258:	fa0a f202 	lsl.w	r2, sl, r2
 800525c:	420a      	tst	r2, r1
 800525e:	d003      	beq.n	8005268 <__gethex+0x1c4>
 8005260:	4553      	cmp	r3, sl
 8005262:	dc46      	bgt.n	80052f2 <__gethex+0x24e>
 8005264:	f04f 0a02 	mov.w	sl, #2
 8005268:	4639      	mov	r1, r7
 800526a:	4628      	mov	r0, r5
 800526c:	f7ff feca 	bl	8005004 <rshift>
 8005270:	443c      	add	r4, r7
 8005272:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005276:	42a3      	cmp	r3, r4
 8005278:	da52      	bge.n	8005320 <__gethex+0x27c>
 800527a:	4629      	mov	r1, r5
 800527c:	9802      	ldr	r0, [sp, #8]
 800527e:	f000 fac8 	bl	8005812 <_Bfree>
 8005282:	2300      	movs	r3, #0
 8005284:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005286:	27a3      	movs	r7, #163	; 0xa3
 8005288:	6013      	str	r3, [r2, #0]
 800528a:	e793      	b.n	80051b4 <__gethex+0x110>
 800528c:	3101      	adds	r1, #1
 800528e:	105b      	asrs	r3, r3, #1
 8005290:	e7b0      	b.n	80051f4 <__gethex+0x150>
 8005292:	1e73      	subs	r3, r6, #1
 8005294:	9305      	str	r3, [sp, #20]
 8005296:	9a07      	ldr	r2, [sp, #28]
 8005298:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800529c:	4293      	cmp	r3, r2
 800529e:	d018      	beq.n	80052d2 <__gethex+0x22e>
 80052a0:	f1bb 0f20 	cmp.w	fp, #32
 80052a4:	d107      	bne.n	80052b6 <__gethex+0x212>
 80052a6:	9b04      	ldr	r3, [sp, #16]
 80052a8:	f8c3 a000 	str.w	sl, [r3]
 80052ac:	f04f 0a00 	mov.w	sl, #0
 80052b0:	46d3      	mov	fp, sl
 80052b2:	3304      	adds	r3, #4
 80052b4:	9304      	str	r3, [sp, #16]
 80052b6:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80052ba:	f7ff fede 	bl	800507a <__hexdig_fun>
 80052be:	f000 000f 	and.w	r0, r0, #15
 80052c2:	fa00 f00b 	lsl.w	r0, r0, fp
 80052c6:	ea4a 0a00 	orr.w	sl, sl, r0
 80052ca:	f10b 0b04 	add.w	fp, fp, #4
 80052ce:	9b05      	ldr	r3, [sp, #20]
 80052d0:	e00d      	b.n	80052ee <__gethex+0x24a>
 80052d2:	9b05      	ldr	r3, [sp, #20]
 80052d4:	9a08      	ldr	r2, [sp, #32]
 80052d6:	4413      	add	r3, r2
 80052d8:	42bb      	cmp	r3, r7
 80052da:	d3e1      	bcc.n	80052a0 <__gethex+0x1fc>
 80052dc:	4618      	mov	r0, r3
 80052de:	9a01      	ldr	r2, [sp, #4]
 80052e0:	9903      	ldr	r1, [sp, #12]
 80052e2:	9309      	str	r3, [sp, #36]	; 0x24
 80052e4:	f001 f9f1 	bl	80066ca <strncmp>
 80052e8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80052ea:	2800      	cmp	r0, #0
 80052ec:	d1d8      	bne.n	80052a0 <__gethex+0x1fc>
 80052ee:	461e      	mov	r6, r3
 80052f0:	e791      	b.n	8005216 <__gethex+0x172>
 80052f2:	1eb9      	subs	r1, r7, #2
 80052f4:	4628      	mov	r0, r5
 80052f6:	f000 fe30 	bl	8005f5a <__any_on>
 80052fa:	2800      	cmp	r0, #0
 80052fc:	d0b2      	beq.n	8005264 <__gethex+0x1c0>
 80052fe:	f04f 0a03 	mov.w	sl, #3
 8005302:	e7b1      	b.n	8005268 <__gethex+0x1c4>
 8005304:	da09      	bge.n	800531a <__gethex+0x276>
 8005306:	1bf7      	subs	r7, r6, r7
 8005308:	4629      	mov	r1, r5
 800530a:	463a      	mov	r2, r7
 800530c:	9802      	ldr	r0, [sp, #8]
 800530e:	f000 fc4b 	bl	8005ba8 <__lshift>
 8005312:	4605      	mov	r5, r0
 8005314:	1be4      	subs	r4, r4, r7
 8005316:	f100 0914 	add.w	r9, r0, #20
 800531a:	f04f 0a00 	mov.w	sl, #0
 800531e:	e7a8      	b.n	8005272 <__gethex+0x1ce>
 8005320:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8005324:	42a0      	cmp	r0, r4
 8005326:	dd6b      	ble.n	8005400 <__gethex+0x35c>
 8005328:	1b04      	subs	r4, r0, r4
 800532a:	42a6      	cmp	r6, r4
 800532c:	dc2e      	bgt.n	800538c <__gethex+0x2e8>
 800532e:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005332:	2b02      	cmp	r3, #2
 8005334:	d022      	beq.n	800537c <__gethex+0x2d8>
 8005336:	2b03      	cmp	r3, #3
 8005338:	d024      	beq.n	8005384 <__gethex+0x2e0>
 800533a:	2b01      	cmp	r3, #1
 800533c:	d115      	bne.n	800536a <__gethex+0x2c6>
 800533e:	42a6      	cmp	r6, r4
 8005340:	d113      	bne.n	800536a <__gethex+0x2c6>
 8005342:	2e01      	cmp	r6, #1
 8005344:	dc0b      	bgt.n	800535e <__gethex+0x2ba>
 8005346:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800534a:	9a06      	ldr	r2, [sp, #24]
 800534c:	2762      	movs	r7, #98	; 0x62
 800534e:	6013      	str	r3, [r2, #0]
 8005350:	2301      	movs	r3, #1
 8005352:	612b      	str	r3, [r5, #16]
 8005354:	f8c9 3000 	str.w	r3, [r9]
 8005358:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800535a:	601d      	str	r5, [r3, #0]
 800535c:	e72a      	b.n	80051b4 <__gethex+0x110>
 800535e:	1e71      	subs	r1, r6, #1
 8005360:	4628      	mov	r0, r5
 8005362:	f000 fdfa 	bl	8005f5a <__any_on>
 8005366:	2800      	cmp	r0, #0
 8005368:	d1ed      	bne.n	8005346 <__gethex+0x2a2>
 800536a:	4629      	mov	r1, r5
 800536c:	9802      	ldr	r0, [sp, #8]
 800536e:	f000 fa50 	bl	8005812 <_Bfree>
 8005372:	2300      	movs	r3, #0
 8005374:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005376:	2750      	movs	r7, #80	; 0x50
 8005378:	6013      	str	r3, [r2, #0]
 800537a:	e71b      	b.n	80051b4 <__gethex+0x110>
 800537c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800537e:	2b00      	cmp	r3, #0
 8005380:	d0e1      	beq.n	8005346 <__gethex+0x2a2>
 8005382:	e7f2      	b.n	800536a <__gethex+0x2c6>
 8005384:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005386:	2b00      	cmp	r3, #0
 8005388:	d1dd      	bne.n	8005346 <__gethex+0x2a2>
 800538a:	e7ee      	b.n	800536a <__gethex+0x2c6>
 800538c:	1e67      	subs	r7, r4, #1
 800538e:	f1ba 0f00 	cmp.w	sl, #0
 8005392:	d132      	bne.n	80053fa <__gethex+0x356>
 8005394:	b127      	cbz	r7, 80053a0 <__gethex+0x2fc>
 8005396:	4639      	mov	r1, r7
 8005398:	4628      	mov	r0, r5
 800539a:	f000 fdde 	bl	8005f5a <__any_on>
 800539e:	4682      	mov	sl, r0
 80053a0:	2301      	movs	r3, #1
 80053a2:	117a      	asrs	r2, r7, #5
 80053a4:	f007 071f 	and.w	r7, r7, #31
 80053a8:	fa03 f707 	lsl.w	r7, r3, r7
 80053ac:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
 80053b0:	4621      	mov	r1, r4
 80053b2:	421f      	tst	r7, r3
 80053b4:	f04f 0702 	mov.w	r7, #2
 80053b8:	4628      	mov	r0, r5
 80053ba:	bf18      	it	ne
 80053bc:	f04a 0a02 	orrne.w	sl, sl, #2
 80053c0:	1b36      	subs	r6, r6, r4
 80053c2:	f7ff fe1f 	bl	8005004 <rshift>
 80053c6:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80053ca:	f1ba 0f00 	cmp.w	sl, #0
 80053ce:	d048      	beq.n	8005462 <__gethex+0x3be>
 80053d0:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80053d4:	2b02      	cmp	r3, #2
 80053d6:	d015      	beq.n	8005404 <__gethex+0x360>
 80053d8:	2b03      	cmp	r3, #3
 80053da:	d017      	beq.n	800540c <__gethex+0x368>
 80053dc:	2b01      	cmp	r3, #1
 80053de:	d109      	bne.n	80053f4 <__gethex+0x350>
 80053e0:	f01a 0f02 	tst.w	sl, #2
 80053e4:	d006      	beq.n	80053f4 <__gethex+0x350>
 80053e6:	f8d9 3000 	ldr.w	r3, [r9]
 80053ea:	ea4a 0a03 	orr.w	sl, sl, r3
 80053ee:	f01a 0f01 	tst.w	sl, #1
 80053f2:	d10e      	bne.n	8005412 <__gethex+0x36e>
 80053f4:	f047 0710 	orr.w	r7, r7, #16
 80053f8:	e033      	b.n	8005462 <__gethex+0x3be>
 80053fa:	f04f 0a01 	mov.w	sl, #1
 80053fe:	e7cf      	b.n	80053a0 <__gethex+0x2fc>
 8005400:	2701      	movs	r7, #1
 8005402:	e7e2      	b.n	80053ca <__gethex+0x326>
 8005404:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005406:	f1c3 0301 	rsb	r3, r3, #1
 800540a:	9315      	str	r3, [sp, #84]	; 0x54
 800540c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800540e:	2b00      	cmp	r3, #0
 8005410:	d0f0      	beq.n	80053f4 <__gethex+0x350>
 8005412:	f04f 0c00 	mov.w	ip, #0
 8005416:	f8d5 9010 	ldr.w	r9, [r5, #16]
 800541a:	f105 0314 	add.w	r3, r5, #20
 800541e:	ea4f 0a89 	mov.w	sl, r9, lsl #2
 8005422:	eb03 010a 	add.w	r1, r3, sl
 8005426:	4618      	mov	r0, r3
 8005428:	f853 2b04 	ldr.w	r2, [r3], #4
 800542c:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8005430:	d01c      	beq.n	800546c <__gethex+0x3c8>
 8005432:	3201      	adds	r2, #1
 8005434:	6002      	str	r2, [r0, #0]
 8005436:	2f02      	cmp	r7, #2
 8005438:	f105 0314 	add.w	r3, r5, #20
 800543c:	d138      	bne.n	80054b0 <__gethex+0x40c>
 800543e:	f8d8 2000 	ldr.w	r2, [r8]
 8005442:	3a01      	subs	r2, #1
 8005444:	42b2      	cmp	r2, r6
 8005446:	d10a      	bne.n	800545e <__gethex+0x3ba>
 8005448:	2201      	movs	r2, #1
 800544a:	1171      	asrs	r1, r6, #5
 800544c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005450:	f006 061f 	and.w	r6, r6, #31
 8005454:	fa02 f606 	lsl.w	r6, r2, r6
 8005458:	421e      	tst	r6, r3
 800545a:	bf18      	it	ne
 800545c:	4617      	movne	r7, r2
 800545e:	f047 0720 	orr.w	r7, r7, #32
 8005462:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005464:	601d      	str	r5, [r3, #0]
 8005466:	9b06      	ldr	r3, [sp, #24]
 8005468:	601c      	str	r4, [r3, #0]
 800546a:	e6a3      	b.n	80051b4 <__gethex+0x110>
 800546c:	4299      	cmp	r1, r3
 800546e:	f843 cc04 	str.w	ip, [r3, #-4]
 8005472:	d8d8      	bhi.n	8005426 <__gethex+0x382>
 8005474:	68ab      	ldr	r3, [r5, #8]
 8005476:	4599      	cmp	r9, r3
 8005478:	db12      	blt.n	80054a0 <__gethex+0x3fc>
 800547a:	6869      	ldr	r1, [r5, #4]
 800547c:	9802      	ldr	r0, [sp, #8]
 800547e:	3101      	adds	r1, #1
 8005480:	f000 f993 	bl	80057aa <_Balloc>
 8005484:	4683      	mov	fp, r0
 8005486:	692a      	ldr	r2, [r5, #16]
 8005488:	f105 010c 	add.w	r1, r5, #12
 800548c:	3202      	adds	r2, #2
 800548e:	0092      	lsls	r2, r2, #2
 8005490:	300c      	adds	r0, #12
 8005492:	f000 f97f 	bl	8005794 <memcpy>
 8005496:	4629      	mov	r1, r5
 8005498:	9802      	ldr	r0, [sp, #8]
 800549a:	f000 f9ba 	bl	8005812 <_Bfree>
 800549e:	465d      	mov	r5, fp
 80054a0:	692b      	ldr	r3, [r5, #16]
 80054a2:	1c5a      	adds	r2, r3, #1
 80054a4:	612a      	str	r2, [r5, #16]
 80054a6:	2201      	movs	r2, #1
 80054a8:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 80054ac:	615a      	str	r2, [r3, #20]
 80054ae:	e7c2      	b.n	8005436 <__gethex+0x392>
 80054b0:	692a      	ldr	r2, [r5, #16]
 80054b2:	454a      	cmp	r2, r9
 80054b4:	dd0b      	ble.n	80054ce <__gethex+0x42a>
 80054b6:	2101      	movs	r1, #1
 80054b8:	4628      	mov	r0, r5
 80054ba:	f7ff fda3 	bl	8005004 <rshift>
 80054be:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80054c2:	3401      	adds	r4, #1
 80054c4:	42a3      	cmp	r3, r4
 80054c6:	f6ff aed8 	blt.w	800527a <__gethex+0x1d6>
 80054ca:	2701      	movs	r7, #1
 80054cc:	e7c7      	b.n	800545e <__gethex+0x3ba>
 80054ce:	f016 061f 	ands.w	r6, r6, #31
 80054d2:	d0fa      	beq.n	80054ca <__gethex+0x426>
 80054d4:	449a      	add	sl, r3
 80054d6:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 80054da:	f000 fa2a 	bl	8005932 <__hi0bits>
 80054de:	f1c6 0620 	rsb	r6, r6, #32
 80054e2:	42b0      	cmp	r0, r6
 80054e4:	dbe7      	blt.n	80054b6 <__gethex+0x412>
 80054e6:	e7f0      	b.n	80054ca <__gethex+0x426>

080054e8 <L_shift>:
 80054e8:	f1c2 0208 	rsb	r2, r2, #8
 80054ec:	0092      	lsls	r2, r2, #2
 80054ee:	b570      	push	{r4, r5, r6, lr}
 80054f0:	f1c2 0620 	rsb	r6, r2, #32
 80054f4:	6843      	ldr	r3, [r0, #4]
 80054f6:	6804      	ldr	r4, [r0, #0]
 80054f8:	fa03 f506 	lsl.w	r5, r3, r6
 80054fc:	432c      	orrs	r4, r5
 80054fe:	40d3      	lsrs	r3, r2
 8005500:	6004      	str	r4, [r0, #0]
 8005502:	f840 3f04 	str.w	r3, [r0, #4]!
 8005506:	4288      	cmp	r0, r1
 8005508:	d3f4      	bcc.n	80054f4 <L_shift+0xc>
 800550a:	bd70      	pop	{r4, r5, r6, pc}

0800550c <__match>:
 800550c:	b530      	push	{r4, r5, lr}
 800550e:	6803      	ldr	r3, [r0, #0]
 8005510:	3301      	adds	r3, #1
 8005512:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005516:	b914      	cbnz	r4, 800551e <__match+0x12>
 8005518:	6003      	str	r3, [r0, #0]
 800551a:	2001      	movs	r0, #1
 800551c:	bd30      	pop	{r4, r5, pc}
 800551e:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005522:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8005526:	2d19      	cmp	r5, #25
 8005528:	bf98      	it	ls
 800552a:	3220      	addls	r2, #32
 800552c:	42a2      	cmp	r2, r4
 800552e:	d0f0      	beq.n	8005512 <__match+0x6>
 8005530:	2000      	movs	r0, #0
 8005532:	e7f3      	b.n	800551c <__match+0x10>

08005534 <__hexnan>:
 8005534:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005538:	2500      	movs	r5, #0
 800553a:	680b      	ldr	r3, [r1, #0]
 800553c:	4682      	mov	sl, r0
 800553e:	115f      	asrs	r7, r3, #5
 8005540:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 8005544:	f013 031f 	ands.w	r3, r3, #31
 8005548:	bf18      	it	ne
 800554a:	3704      	addne	r7, #4
 800554c:	1f3e      	subs	r6, r7, #4
 800554e:	4690      	mov	r8, r2
 8005550:	46b1      	mov	r9, r6
 8005552:	4634      	mov	r4, r6
 8005554:	46ab      	mov	fp, r5
 8005556:	b087      	sub	sp, #28
 8005558:	6801      	ldr	r1, [r0, #0]
 800555a:	9301      	str	r3, [sp, #4]
 800555c:	f847 5c04 	str.w	r5, [r7, #-4]
 8005560:	9502      	str	r5, [sp, #8]
 8005562:	784a      	ldrb	r2, [r1, #1]
 8005564:	1c4b      	adds	r3, r1, #1
 8005566:	9303      	str	r3, [sp, #12]
 8005568:	b342      	cbz	r2, 80055bc <__hexnan+0x88>
 800556a:	4610      	mov	r0, r2
 800556c:	9105      	str	r1, [sp, #20]
 800556e:	9204      	str	r2, [sp, #16]
 8005570:	f7ff fd83 	bl	800507a <__hexdig_fun>
 8005574:	2800      	cmp	r0, #0
 8005576:	d143      	bne.n	8005600 <__hexnan+0xcc>
 8005578:	9a04      	ldr	r2, [sp, #16]
 800557a:	9905      	ldr	r1, [sp, #20]
 800557c:	2a20      	cmp	r2, #32
 800557e:	d818      	bhi.n	80055b2 <__hexnan+0x7e>
 8005580:	9b02      	ldr	r3, [sp, #8]
 8005582:	459b      	cmp	fp, r3
 8005584:	dd13      	ble.n	80055ae <__hexnan+0x7a>
 8005586:	454c      	cmp	r4, r9
 8005588:	d206      	bcs.n	8005598 <__hexnan+0x64>
 800558a:	2d07      	cmp	r5, #7
 800558c:	dc04      	bgt.n	8005598 <__hexnan+0x64>
 800558e:	462a      	mov	r2, r5
 8005590:	4649      	mov	r1, r9
 8005592:	4620      	mov	r0, r4
 8005594:	f7ff ffa8 	bl	80054e8 <L_shift>
 8005598:	4544      	cmp	r4, r8
 800559a:	d944      	bls.n	8005626 <__hexnan+0xf2>
 800559c:	2300      	movs	r3, #0
 800559e:	f1a4 0904 	sub.w	r9, r4, #4
 80055a2:	f844 3c04 	str.w	r3, [r4, #-4]
 80055a6:	461d      	mov	r5, r3
 80055a8:	464c      	mov	r4, r9
 80055aa:	f8cd b008 	str.w	fp, [sp, #8]
 80055ae:	9903      	ldr	r1, [sp, #12]
 80055b0:	e7d7      	b.n	8005562 <__hexnan+0x2e>
 80055b2:	2a29      	cmp	r2, #41	; 0x29
 80055b4:	d14a      	bne.n	800564c <__hexnan+0x118>
 80055b6:	3102      	adds	r1, #2
 80055b8:	f8ca 1000 	str.w	r1, [sl]
 80055bc:	f1bb 0f00 	cmp.w	fp, #0
 80055c0:	d044      	beq.n	800564c <__hexnan+0x118>
 80055c2:	454c      	cmp	r4, r9
 80055c4:	d206      	bcs.n	80055d4 <__hexnan+0xa0>
 80055c6:	2d07      	cmp	r5, #7
 80055c8:	dc04      	bgt.n	80055d4 <__hexnan+0xa0>
 80055ca:	462a      	mov	r2, r5
 80055cc:	4649      	mov	r1, r9
 80055ce:	4620      	mov	r0, r4
 80055d0:	f7ff ff8a 	bl	80054e8 <L_shift>
 80055d4:	4544      	cmp	r4, r8
 80055d6:	d928      	bls.n	800562a <__hexnan+0xf6>
 80055d8:	4643      	mov	r3, r8
 80055da:	f854 2b04 	ldr.w	r2, [r4], #4
 80055de:	42a6      	cmp	r6, r4
 80055e0:	f843 2b04 	str.w	r2, [r3], #4
 80055e4:	d2f9      	bcs.n	80055da <__hexnan+0xa6>
 80055e6:	2200      	movs	r2, #0
 80055e8:	f843 2b04 	str.w	r2, [r3], #4
 80055ec:	429e      	cmp	r6, r3
 80055ee:	d2fb      	bcs.n	80055e8 <__hexnan+0xb4>
 80055f0:	6833      	ldr	r3, [r6, #0]
 80055f2:	b91b      	cbnz	r3, 80055fc <__hexnan+0xc8>
 80055f4:	4546      	cmp	r6, r8
 80055f6:	d127      	bne.n	8005648 <__hexnan+0x114>
 80055f8:	2301      	movs	r3, #1
 80055fa:	6033      	str	r3, [r6, #0]
 80055fc:	2005      	movs	r0, #5
 80055fe:	e026      	b.n	800564e <__hexnan+0x11a>
 8005600:	3501      	adds	r5, #1
 8005602:	2d08      	cmp	r5, #8
 8005604:	f10b 0b01 	add.w	fp, fp, #1
 8005608:	dd06      	ble.n	8005618 <__hexnan+0xe4>
 800560a:	4544      	cmp	r4, r8
 800560c:	d9cf      	bls.n	80055ae <__hexnan+0x7a>
 800560e:	2300      	movs	r3, #0
 8005610:	2501      	movs	r5, #1
 8005612:	f844 3c04 	str.w	r3, [r4, #-4]
 8005616:	3c04      	subs	r4, #4
 8005618:	6822      	ldr	r2, [r4, #0]
 800561a:	f000 000f 	and.w	r0, r0, #15
 800561e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8005622:	6020      	str	r0, [r4, #0]
 8005624:	e7c3      	b.n	80055ae <__hexnan+0x7a>
 8005626:	2508      	movs	r5, #8
 8005628:	e7c1      	b.n	80055ae <__hexnan+0x7a>
 800562a:	9b01      	ldr	r3, [sp, #4]
 800562c:	2b00      	cmp	r3, #0
 800562e:	d0df      	beq.n	80055f0 <__hexnan+0xbc>
 8005630:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005634:	f1c3 0320 	rsb	r3, r3, #32
 8005638:	fa22 f303 	lsr.w	r3, r2, r3
 800563c:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8005640:	401a      	ands	r2, r3
 8005642:	f847 2c04 	str.w	r2, [r7, #-4]
 8005646:	e7d3      	b.n	80055f0 <__hexnan+0xbc>
 8005648:	3e04      	subs	r6, #4
 800564a:	e7d1      	b.n	80055f0 <__hexnan+0xbc>
 800564c:	2004      	movs	r0, #4
 800564e:	b007      	add	sp, #28
 8005650:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005654 <__locale_ctype_ptr_l>:
 8005654:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 8005658:	4770      	bx	lr

0800565a <__localeconv_l>:
 800565a:	30f0      	adds	r0, #240	; 0xf0
 800565c:	4770      	bx	lr
	...

08005660 <_localeconv_r>:
 8005660:	4b04      	ldr	r3, [pc, #16]	; (8005674 <_localeconv_r+0x14>)
 8005662:	681b      	ldr	r3, [r3, #0]
 8005664:	6a18      	ldr	r0, [r3, #32]
 8005666:	4b04      	ldr	r3, [pc, #16]	; (8005678 <_localeconv_r+0x18>)
 8005668:	2800      	cmp	r0, #0
 800566a:	bf08      	it	eq
 800566c:	4618      	moveq	r0, r3
 800566e:	30f0      	adds	r0, #240	; 0xf0
 8005670:	4770      	bx	lr
 8005672:	bf00      	nop
 8005674:	20000014 	.word	0x20000014
 8005678:	20000078 	.word	0x20000078

0800567c <__swhatbuf_r>:
 800567c:	b570      	push	{r4, r5, r6, lr}
 800567e:	460e      	mov	r6, r1
 8005680:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005684:	b096      	sub	sp, #88	; 0x58
 8005686:	2900      	cmp	r1, #0
 8005688:	4614      	mov	r4, r2
 800568a:	461d      	mov	r5, r3
 800568c:	da07      	bge.n	800569e <__swhatbuf_r+0x22>
 800568e:	2300      	movs	r3, #0
 8005690:	602b      	str	r3, [r5, #0]
 8005692:	89b3      	ldrh	r3, [r6, #12]
 8005694:	061a      	lsls	r2, r3, #24
 8005696:	d410      	bmi.n	80056ba <__swhatbuf_r+0x3e>
 8005698:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800569c:	e00e      	b.n	80056bc <__swhatbuf_r+0x40>
 800569e:	466a      	mov	r2, sp
 80056a0:	f001 f854 	bl	800674c <_fstat_r>
 80056a4:	2800      	cmp	r0, #0
 80056a6:	dbf2      	blt.n	800568e <__swhatbuf_r+0x12>
 80056a8:	9a01      	ldr	r2, [sp, #4]
 80056aa:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80056ae:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80056b2:	425a      	negs	r2, r3
 80056b4:	415a      	adcs	r2, r3
 80056b6:	602a      	str	r2, [r5, #0]
 80056b8:	e7ee      	b.n	8005698 <__swhatbuf_r+0x1c>
 80056ba:	2340      	movs	r3, #64	; 0x40
 80056bc:	2000      	movs	r0, #0
 80056be:	6023      	str	r3, [r4, #0]
 80056c0:	b016      	add	sp, #88	; 0x58
 80056c2:	bd70      	pop	{r4, r5, r6, pc}

080056c4 <__smakebuf_r>:
 80056c4:	898b      	ldrh	r3, [r1, #12]
 80056c6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80056c8:	079d      	lsls	r5, r3, #30
 80056ca:	4606      	mov	r6, r0
 80056cc:	460c      	mov	r4, r1
 80056ce:	d507      	bpl.n	80056e0 <__smakebuf_r+0x1c>
 80056d0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80056d4:	6023      	str	r3, [r4, #0]
 80056d6:	6123      	str	r3, [r4, #16]
 80056d8:	2301      	movs	r3, #1
 80056da:	6163      	str	r3, [r4, #20]
 80056dc:	b002      	add	sp, #8
 80056de:	bd70      	pop	{r4, r5, r6, pc}
 80056e0:	ab01      	add	r3, sp, #4
 80056e2:	466a      	mov	r2, sp
 80056e4:	f7ff ffca 	bl	800567c <__swhatbuf_r>
 80056e8:	9900      	ldr	r1, [sp, #0]
 80056ea:	4605      	mov	r5, r0
 80056ec:	4630      	mov	r0, r6
 80056ee:	f000 fcaf 	bl	8006050 <_malloc_r>
 80056f2:	b948      	cbnz	r0, 8005708 <__smakebuf_r+0x44>
 80056f4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80056f8:	059a      	lsls	r2, r3, #22
 80056fa:	d4ef      	bmi.n	80056dc <__smakebuf_r+0x18>
 80056fc:	f023 0303 	bic.w	r3, r3, #3
 8005700:	f043 0302 	orr.w	r3, r3, #2
 8005704:	81a3      	strh	r3, [r4, #12]
 8005706:	e7e3      	b.n	80056d0 <__smakebuf_r+0xc>
 8005708:	4b0d      	ldr	r3, [pc, #52]	; (8005740 <__smakebuf_r+0x7c>)
 800570a:	62b3      	str	r3, [r6, #40]	; 0x28
 800570c:	89a3      	ldrh	r3, [r4, #12]
 800570e:	6020      	str	r0, [r4, #0]
 8005710:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005714:	81a3      	strh	r3, [r4, #12]
 8005716:	9b00      	ldr	r3, [sp, #0]
 8005718:	6120      	str	r0, [r4, #16]
 800571a:	6163      	str	r3, [r4, #20]
 800571c:	9b01      	ldr	r3, [sp, #4]
 800571e:	b15b      	cbz	r3, 8005738 <__smakebuf_r+0x74>
 8005720:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8005724:	4630      	mov	r0, r6
 8005726:	f001 f823 	bl	8006770 <_isatty_r>
 800572a:	b128      	cbz	r0, 8005738 <__smakebuf_r+0x74>
 800572c:	89a3      	ldrh	r3, [r4, #12]
 800572e:	f023 0303 	bic.w	r3, r3, #3
 8005732:	f043 0301 	orr.w	r3, r3, #1
 8005736:	81a3      	strh	r3, [r4, #12]
 8005738:	89a3      	ldrh	r3, [r4, #12]
 800573a:	431d      	orrs	r5, r3
 800573c:	81a5      	strh	r5, [r4, #12]
 800573e:	e7cd      	b.n	80056dc <__smakebuf_r+0x18>
 8005740:	08004eb9 	.word	0x08004eb9

08005744 <malloc>:
 8005744:	4b02      	ldr	r3, [pc, #8]	; (8005750 <malloc+0xc>)
 8005746:	4601      	mov	r1, r0
 8005748:	6818      	ldr	r0, [r3, #0]
 800574a:	f000 bc81 	b.w	8006050 <_malloc_r>
 800574e:	bf00      	nop
 8005750:	20000014 	.word	0x20000014

08005754 <__ascii_mbtowc>:
 8005754:	b082      	sub	sp, #8
 8005756:	b901      	cbnz	r1, 800575a <__ascii_mbtowc+0x6>
 8005758:	a901      	add	r1, sp, #4
 800575a:	b142      	cbz	r2, 800576e <__ascii_mbtowc+0x1a>
 800575c:	b14b      	cbz	r3, 8005772 <__ascii_mbtowc+0x1e>
 800575e:	7813      	ldrb	r3, [r2, #0]
 8005760:	600b      	str	r3, [r1, #0]
 8005762:	7812      	ldrb	r2, [r2, #0]
 8005764:	1c10      	adds	r0, r2, #0
 8005766:	bf18      	it	ne
 8005768:	2001      	movne	r0, #1
 800576a:	b002      	add	sp, #8
 800576c:	4770      	bx	lr
 800576e:	4610      	mov	r0, r2
 8005770:	e7fb      	b.n	800576a <__ascii_mbtowc+0x16>
 8005772:	f06f 0001 	mvn.w	r0, #1
 8005776:	e7f8      	b.n	800576a <__ascii_mbtowc+0x16>

08005778 <memchr>:
 8005778:	b510      	push	{r4, lr}
 800577a:	b2c9      	uxtb	r1, r1
 800577c:	4402      	add	r2, r0
 800577e:	4290      	cmp	r0, r2
 8005780:	4603      	mov	r3, r0
 8005782:	d101      	bne.n	8005788 <memchr+0x10>
 8005784:	2300      	movs	r3, #0
 8005786:	e003      	b.n	8005790 <memchr+0x18>
 8005788:	781c      	ldrb	r4, [r3, #0]
 800578a:	3001      	adds	r0, #1
 800578c:	428c      	cmp	r4, r1
 800578e:	d1f6      	bne.n	800577e <memchr+0x6>
 8005790:	4618      	mov	r0, r3
 8005792:	bd10      	pop	{r4, pc}

08005794 <memcpy>:
 8005794:	b510      	push	{r4, lr}
 8005796:	1e43      	subs	r3, r0, #1
 8005798:	440a      	add	r2, r1
 800579a:	4291      	cmp	r1, r2
 800579c:	d100      	bne.n	80057a0 <memcpy+0xc>
 800579e:	bd10      	pop	{r4, pc}
 80057a0:	f811 4b01 	ldrb.w	r4, [r1], #1
 80057a4:	f803 4f01 	strb.w	r4, [r3, #1]!
 80057a8:	e7f7      	b.n	800579a <memcpy+0x6>

080057aa <_Balloc>:
 80057aa:	b570      	push	{r4, r5, r6, lr}
 80057ac:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80057ae:	4604      	mov	r4, r0
 80057b0:	460e      	mov	r6, r1
 80057b2:	b93d      	cbnz	r5, 80057c4 <_Balloc+0x1a>
 80057b4:	2010      	movs	r0, #16
 80057b6:	f7ff ffc5 	bl	8005744 <malloc>
 80057ba:	6260      	str	r0, [r4, #36]	; 0x24
 80057bc:	e9c0 5501 	strd	r5, r5, [r0, #4]
 80057c0:	6005      	str	r5, [r0, #0]
 80057c2:	60c5      	str	r5, [r0, #12]
 80057c4:	6a65      	ldr	r5, [r4, #36]	; 0x24
 80057c6:	68eb      	ldr	r3, [r5, #12]
 80057c8:	b183      	cbz	r3, 80057ec <_Balloc+0x42>
 80057ca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80057cc:	68db      	ldr	r3, [r3, #12]
 80057ce:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80057d2:	b9b8      	cbnz	r0, 8005804 <_Balloc+0x5a>
 80057d4:	2101      	movs	r1, #1
 80057d6:	fa01 f506 	lsl.w	r5, r1, r6
 80057da:	1d6a      	adds	r2, r5, #5
 80057dc:	0092      	lsls	r2, r2, #2
 80057de:	4620      	mov	r0, r4
 80057e0:	f000 fbdc 	bl	8005f9c <_calloc_r>
 80057e4:	b160      	cbz	r0, 8005800 <_Balloc+0x56>
 80057e6:	e9c0 6501 	strd	r6, r5, [r0, #4]
 80057ea:	e00e      	b.n	800580a <_Balloc+0x60>
 80057ec:	2221      	movs	r2, #33	; 0x21
 80057ee:	2104      	movs	r1, #4
 80057f0:	4620      	mov	r0, r4
 80057f2:	f000 fbd3 	bl	8005f9c <_calloc_r>
 80057f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80057f8:	60e8      	str	r0, [r5, #12]
 80057fa:	68db      	ldr	r3, [r3, #12]
 80057fc:	2b00      	cmp	r3, #0
 80057fe:	d1e4      	bne.n	80057ca <_Balloc+0x20>
 8005800:	2000      	movs	r0, #0
 8005802:	bd70      	pop	{r4, r5, r6, pc}
 8005804:	6802      	ldr	r2, [r0, #0]
 8005806:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 800580a:	2300      	movs	r3, #0
 800580c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8005810:	e7f7      	b.n	8005802 <_Balloc+0x58>

08005812 <_Bfree>:
 8005812:	b570      	push	{r4, r5, r6, lr}
 8005814:	6a44      	ldr	r4, [r0, #36]	; 0x24
 8005816:	4606      	mov	r6, r0
 8005818:	460d      	mov	r5, r1
 800581a:	b93c      	cbnz	r4, 800582c <_Bfree+0x1a>
 800581c:	2010      	movs	r0, #16
 800581e:	f7ff ff91 	bl	8005744 <malloc>
 8005822:	6270      	str	r0, [r6, #36]	; 0x24
 8005824:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8005828:	6004      	str	r4, [r0, #0]
 800582a:	60c4      	str	r4, [r0, #12]
 800582c:	b13d      	cbz	r5, 800583e <_Bfree+0x2c>
 800582e:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005830:	686a      	ldr	r2, [r5, #4]
 8005832:	68db      	ldr	r3, [r3, #12]
 8005834:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8005838:	6029      	str	r1, [r5, #0]
 800583a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 800583e:	bd70      	pop	{r4, r5, r6, pc}

08005840 <__multadd>:
 8005840:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005844:	461f      	mov	r7, r3
 8005846:	4606      	mov	r6, r0
 8005848:	460c      	mov	r4, r1
 800584a:	2300      	movs	r3, #0
 800584c:	690d      	ldr	r5, [r1, #16]
 800584e:	f101 0c14 	add.w	ip, r1, #20
 8005852:	f8dc 0000 	ldr.w	r0, [ip]
 8005856:	3301      	adds	r3, #1
 8005858:	b281      	uxth	r1, r0
 800585a:	fb02 7101 	mla	r1, r2, r1, r7
 800585e:	0c00      	lsrs	r0, r0, #16
 8005860:	0c0f      	lsrs	r7, r1, #16
 8005862:	fb02 7000 	mla	r0, r2, r0, r7
 8005866:	b289      	uxth	r1, r1
 8005868:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 800586c:	429d      	cmp	r5, r3
 800586e:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8005872:	f84c 1b04 	str.w	r1, [ip], #4
 8005876:	dcec      	bgt.n	8005852 <__multadd+0x12>
 8005878:	b1d7      	cbz	r7, 80058b0 <__multadd+0x70>
 800587a:	68a3      	ldr	r3, [r4, #8]
 800587c:	42ab      	cmp	r3, r5
 800587e:	dc12      	bgt.n	80058a6 <__multadd+0x66>
 8005880:	6861      	ldr	r1, [r4, #4]
 8005882:	4630      	mov	r0, r6
 8005884:	3101      	adds	r1, #1
 8005886:	f7ff ff90 	bl	80057aa <_Balloc>
 800588a:	4680      	mov	r8, r0
 800588c:	6922      	ldr	r2, [r4, #16]
 800588e:	f104 010c 	add.w	r1, r4, #12
 8005892:	3202      	adds	r2, #2
 8005894:	0092      	lsls	r2, r2, #2
 8005896:	300c      	adds	r0, #12
 8005898:	f7ff ff7c 	bl	8005794 <memcpy>
 800589c:	4621      	mov	r1, r4
 800589e:	4630      	mov	r0, r6
 80058a0:	f7ff ffb7 	bl	8005812 <_Bfree>
 80058a4:	4644      	mov	r4, r8
 80058a6:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80058aa:	3501      	adds	r5, #1
 80058ac:	615f      	str	r7, [r3, #20]
 80058ae:	6125      	str	r5, [r4, #16]
 80058b0:	4620      	mov	r0, r4
 80058b2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080058b6 <__s2b>:
 80058b6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80058ba:	4615      	mov	r5, r2
 80058bc:	2209      	movs	r2, #9
 80058be:	461f      	mov	r7, r3
 80058c0:	3308      	adds	r3, #8
 80058c2:	460c      	mov	r4, r1
 80058c4:	fb93 f3f2 	sdiv	r3, r3, r2
 80058c8:	4606      	mov	r6, r0
 80058ca:	2201      	movs	r2, #1
 80058cc:	2100      	movs	r1, #0
 80058ce:	429a      	cmp	r2, r3
 80058d0:	db20      	blt.n	8005914 <__s2b+0x5e>
 80058d2:	4630      	mov	r0, r6
 80058d4:	f7ff ff69 	bl	80057aa <_Balloc>
 80058d8:	9b08      	ldr	r3, [sp, #32]
 80058da:	2d09      	cmp	r5, #9
 80058dc:	6143      	str	r3, [r0, #20]
 80058de:	f04f 0301 	mov.w	r3, #1
 80058e2:	6103      	str	r3, [r0, #16]
 80058e4:	dd19      	ble.n	800591a <__s2b+0x64>
 80058e6:	f104 0809 	add.w	r8, r4, #9
 80058ea:	46c1      	mov	r9, r8
 80058ec:	442c      	add	r4, r5
 80058ee:	f819 3b01 	ldrb.w	r3, [r9], #1
 80058f2:	4601      	mov	r1, r0
 80058f4:	3b30      	subs	r3, #48	; 0x30
 80058f6:	220a      	movs	r2, #10
 80058f8:	4630      	mov	r0, r6
 80058fa:	f7ff ffa1 	bl	8005840 <__multadd>
 80058fe:	45a1      	cmp	r9, r4
 8005900:	d1f5      	bne.n	80058ee <__s2b+0x38>
 8005902:	eb08 0405 	add.w	r4, r8, r5
 8005906:	3c08      	subs	r4, #8
 8005908:	1b2d      	subs	r5, r5, r4
 800590a:	1963      	adds	r3, r4, r5
 800590c:	42bb      	cmp	r3, r7
 800590e:	db07      	blt.n	8005920 <__s2b+0x6a>
 8005910:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005914:	0052      	lsls	r2, r2, #1
 8005916:	3101      	adds	r1, #1
 8005918:	e7d9      	b.n	80058ce <__s2b+0x18>
 800591a:	340a      	adds	r4, #10
 800591c:	2509      	movs	r5, #9
 800591e:	e7f3      	b.n	8005908 <__s2b+0x52>
 8005920:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005924:	4601      	mov	r1, r0
 8005926:	3b30      	subs	r3, #48	; 0x30
 8005928:	220a      	movs	r2, #10
 800592a:	4630      	mov	r0, r6
 800592c:	f7ff ff88 	bl	8005840 <__multadd>
 8005930:	e7eb      	b.n	800590a <__s2b+0x54>

08005932 <__hi0bits>:
 8005932:	0c02      	lsrs	r2, r0, #16
 8005934:	0412      	lsls	r2, r2, #16
 8005936:	4603      	mov	r3, r0
 8005938:	b9b2      	cbnz	r2, 8005968 <__hi0bits+0x36>
 800593a:	0403      	lsls	r3, r0, #16
 800593c:	2010      	movs	r0, #16
 800593e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005942:	bf04      	itt	eq
 8005944:	021b      	lsleq	r3, r3, #8
 8005946:	3008      	addeq	r0, #8
 8005948:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800594c:	bf04      	itt	eq
 800594e:	011b      	lsleq	r3, r3, #4
 8005950:	3004      	addeq	r0, #4
 8005952:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8005956:	bf04      	itt	eq
 8005958:	009b      	lsleq	r3, r3, #2
 800595a:	3002      	addeq	r0, #2
 800595c:	2b00      	cmp	r3, #0
 800595e:	db06      	blt.n	800596e <__hi0bits+0x3c>
 8005960:	005b      	lsls	r3, r3, #1
 8005962:	d503      	bpl.n	800596c <__hi0bits+0x3a>
 8005964:	3001      	adds	r0, #1
 8005966:	4770      	bx	lr
 8005968:	2000      	movs	r0, #0
 800596a:	e7e8      	b.n	800593e <__hi0bits+0xc>
 800596c:	2020      	movs	r0, #32
 800596e:	4770      	bx	lr

08005970 <__lo0bits>:
 8005970:	6803      	ldr	r3, [r0, #0]
 8005972:	4601      	mov	r1, r0
 8005974:	f013 0207 	ands.w	r2, r3, #7
 8005978:	d00b      	beq.n	8005992 <__lo0bits+0x22>
 800597a:	07da      	lsls	r2, r3, #31
 800597c:	d423      	bmi.n	80059c6 <__lo0bits+0x56>
 800597e:	0798      	lsls	r0, r3, #30
 8005980:	bf49      	itett	mi
 8005982:	085b      	lsrmi	r3, r3, #1
 8005984:	089b      	lsrpl	r3, r3, #2
 8005986:	2001      	movmi	r0, #1
 8005988:	600b      	strmi	r3, [r1, #0]
 800598a:	bf5c      	itt	pl
 800598c:	600b      	strpl	r3, [r1, #0]
 800598e:	2002      	movpl	r0, #2
 8005990:	4770      	bx	lr
 8005992:	b298      	uxth	r0, r3
 8005994:	b9a8      	cbnz	r0, 80059c2 <__lo0bits+0x52>
 8005996:	2010      	movs	r0, #16
 8005998:	0c1b      	lsrs	r3, r3, #16
 800599a:	f013 0fff 	tst.w	r3, #255	; 0xff
 800599e:	bf04      	itt	eq
 80059a0:	0a1b      	lsreq	r3, r3, #8
 80059a2:	3008      	addeq	r0, #8
 80059a4:	071a      	lsls	r2, r3, #28
 80059a6:	bf04      	itt	eq
 80059a8:	091b      	lsreq	r3, r3, #4
 80059aa:	3004      	addeq	r0, #4
 80059ac:	079a      	lsls	r2, r3, #30
 80059ae:	bf04      	itt	eq
 80059b0:	089b      	lsreq	r3, r3, #2
 80059b2:	3002      	addeq	r0, #2
 80059b4:	07da      	lsls	r2, r3, #31
 80059b6:	d402      	bmi.n	80059be <__lo0bits+0x4e>
 80059b8:	085b      	lsrs	r3, r3, #1
 80059ba:	d006      	beq.n	80059ca <__lo0bits+0x5a>
 80059bc:	3001      	adds	r0, #1
 80059be:	600b      	str	r3, [r1, #0]
 80059c0:	4770      	bx	lr
 80059c2:	4610      	mov	r0, r2
 80059c4:	e7e9      	b.n	800599a <__lo0bits+0x2a>
 80059c6:	2000      	movs	r0, #0
 80059c8:	4770      	bx	lr
 80059ca:	2020      	movs	r0, #32
 80059cc:	4770      	bx	lr

080059ce <__i2b>:
 80059ce:	b510      	push	{r4, lr}
 80059d0:	460c      	mov	r4, r1
 80059d2:	2101      	movs	r1, #1
 80059d4:	f7ff fee9 	bl	80057aa <_Balloc>
 80059d8:	2201      	movs	r2, #1
 80059da:	6144      	str	r4, [r0, #20]
 80059dc:	6102      	str	r2, [r0, #16]
 80059de:	bd10      	pop	{r4, pc}

080059e0 <__multiply>:
 80059e0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059e4:	4614      	mov	r4, r2
 80059e6:	690a      	ldr	r2, [r1, #16]
 80059e8:	6923      	ldr	r3, [r4, #16]
 80059ea:	4688      	mov	r8, r1
 80059ec:	429a      	cmp	r2, r3
 80059ee:	bfbe      	ittt	lt
 80059f0:	460b      	movlt	r3, r1
 80059f2:	46a0      	movlt	r8, r4
 80059f4:	461c      	movlt	r4, r3
 80059f6:	f8d8 7010 	ldr.w	r7, [r8, #16]
 80059fa:	f8d4 9010 	ldr.w	r9, [r4, #16]
 80059fe:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005a02:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8005a06:	eb07 0609 	add.w	r6, r7, r9
 8005a0a:	42b3      	cmp	r3, r6
 8005a0c:	bfb8      	it	lt
 8005a0e:	3101      	addlt	r1, #1
 8005a10:	f7ff fecb 	bl	80057aa <_Balloc>
 8005a14:	f100 0514 	add.w	r5, r0, #20
 8005a18:	462b      	mov	r3, r5
 8005a1a:	2200      	movs	r2, #0
 8005a1c:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8005a20:	4573      	cmp	r3, lr
 8005a22:	d316      	bcc.n	8005a52 <__multiply+0x72>
 8005a24:	f104 0214 	add.w	r2, r4, #20
 8005a28:	f108 0114 	add.w	r1, r8, #20
 8005a2c:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8005a30:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8005a34:	9300      	str	r3, [sp, #0]
 8005a36:	9b00      	ldr	r3, [sp, #0]
 8005a38:	9201      	str	r2, [sp, #4]
 8005a3a:	4293      	cmp	r3, r2
 8005a3c:	d80c      	bhi.n	8005a58 <__multiply+0x78>
 8005a3e:	2e00      	cmp	r6, #0
 8005a40:	dd03      	ble.n	8005a4a <__multiply+0x6a>
 8005a42:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8005a46:	2b00      	cmp	r3, #0
 8005a48:	d05d      	beq.n	8005b06 <__multiply+0x126>
 8005a4a:	6106      	str	r6, [r0, #16]
 8005a4c:	b003      	add	sp, #12
 8005a4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a52:	f843 2b04 	str.w	r2, [r3], #4
 8005a56:	e7e3      	b.n	8005a20 <__multiply+0x40>
 8005a58:	f8b2 b000 	ldrh.w	fp, [r2]
 8005a5c:	f1bb 0f00 	cmp.w	fp, #0
 8005a60:	d023      	beq.n	8005aaa <__multiply+0xca>
 8005a62:	4689      	mov	r9, r1
 8005a64:	46ac      	mov	ip, r5
 8005a66:	f04f 0800 	mov.w	r8, #0
 8005a6a:	f859 4b04 	ldr.w	r4, [r9], #4
 8005a6e:	f8dc a000 	ldr.w	sl, [ip]
 8005a72:	b2a3      	uxth	r3, r4
 8005a74:	fa1f fa8a 	uxth.w	sl, sl
 8005a78:	fb0b a303 	mla	r3, fp, r3, sl
 8005a7c:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8005a80:	f8dc 4000 	ldr.w	r4, [ip]
 8005a84:	4443      	add	r3, r8
 8005a86:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8005a8a:	fb0b 840a 	mla	r4, fp, sl, r8
 8005a8e:	46e2      	mov	sl, ip
 8005a90:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8005a94:	b29b      	uxth	r3, r3
 8005a96:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8005a9a:	454f      	cmp	r7, r9
 8005a9c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8005aa0:	f84a 3b04 	str.w	r3, [sl], #4
 8005aa4:	d82b      	bhi.n	8005afe <__multiply+0x11e>
 8005aa6:	f8cc 8004 	str.w	r8, [ip, #4]
 8005aaa:	9b01      	ldr	r3, [sp, #4]
 8005aac:	3204      	adds	r2, #4
 8005aae:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8005ab2:	f1ba 0f00 	cmp.w	sl, #0
 8005ab6:	d020      	beq.n	8005afa <__multiply+0x11a>
 8005ab8:	4689      	mov	r9, r1
 8005aba:	46a8      	mov	r8, r5
 8005abc:	f04f 0b00 	mov.w	fp, #0
 8005ac0:	682b      	ldr	r3, [r5, #0]
 8005ac2:	f8b9 c000 	ldrh.w	ip, [r9]
 8005ac6:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8005aca:	b29b      	uxth	r3, r3
 8005acc:	fb0a 440c 	mla	r4, sl, ip, r4
 8005ad0:	46c4      	mov	ip, r8
 8005ad2:	445c      	add	r4, fp
 8005ad4:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8005ad8:	f84c 3b04 	str.w	r3, [ip], #4
 8005adc:	f859 3b04 	ldr.w	r3, [r9], #4
 8005ae0:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8005ae4:	0c1b      	lsrs	r3, r3, #16
 8005ae6:	fb0a b303 	mla	r3, sl, r3, fp
 8005aea:	454f      	cmp	r7, r9
 8005aec:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8005af0:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8005af4:	d805      	bhi.n	8005b02 <__multiply+0x122>
 8005af6:	f8c8 3004 	str.w	r3, [r8, #4]
 8005afa:	3504      	adds	r5, #4
 8005afc:	e79b      	b.n	8005a36 <__multiply+0x56>
 8005afe:	46d4      	mov	ip, sl
 8005b00:	e7b3      	b.n	8005a6a <__multiply+0x8a>
 8005b02:	46e0      	mov	r8, ip
 8005b04:	e7dd      	b.n	8005ac2 <__multiply+0xe2>
 8005b06:	3e01      	subs	r6, #1
 8005b08:	e799      	b.n	8005a3e <__multiply+0x5e>
	...

08005b0c <__pow5mult>:
 8005b0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005b10:	4615      	mov	r5, r2
 8005b12:	f012 0203 	ands.w	r2, r2, #3
 8005b16:	4606      	mov	r6, r0
 8005b18:	460f      	mov	r7, r1
 8005b1a:	d007      	beq.n	8005b2c <__pow5mult+0x20>
 8005b1c:	4c21      	ldr	r4, [pc, #132]	; (8005ba4 <__pow5mult+0x98>)
 8005b1e:	3a01      	subs	r2, #1
 8005b20:	2300      	movs	r3, #0
 8005b22:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8005b26:	f7ff fe8b 	bl	8005840 <__multadd>
 8005b2a:	4607      	mov	r7, r0
 8005b2c:	10ad      	asrs	r5, r5, #2
 8005b2e:	d035      	beq.n	8005b9c <__pow5mult+0x90>
 8005b30:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8005b32:	b93c      	cbnz	r4, 8005b44 <__pow5mult+0x38>
 8005b34:	2010      	movs	r0, #16
 8005b36:	f7ff fe05 	bl	8005744 <malloc>
 8005b3a:	6270      	str	r0, [r6, #36]	; 0x24
 8005b3c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8005b40:	6004      	str	r4, [r0, #0]
 8005b42:	60c4      	str	r4, [r0, #12]
 8005b44:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8005b48:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8005b4c:	b94c      	cbnz	r4, 8005b62 <__pow5mult+0x56>
 8005b4e:	f240 2171 	movw	r1, #625	; 0x271
 8005b52:	4630      	mov	r0, r6
 8005b54:	f7ff ff3b 	bl	80059ce <__i2b>
 8005b58:	2300      	movs	r3, #0
 8005b5a:	4604      	mov	r4, r0
 8005b5c:	f8c8 0008 	str.w	r0, [r8, #8]
 8005b60:	6003      	str	r3, [r0, #0]
 8005b62:	f04f 0800 	mov.w	r8, #0
 8005b66:	07eb      	lsls	r3, r5, #31
 8005b68:	d50a      	bpl.n	8005b80 <__pow5mult+0x74>
 8005b6a:	4639      	mov	r1, r7
 8005b6c:	4622      	mov	r2, r4
 8005b6e:	4630      	mov	r0, r6
 8005b70:	f7ff ff36 	bl	80059e0 <__multiply>
 8005b74:	4681      	mov	r9, r0
 8005b76:	4639      	mov	r1, r7
 8005b78:	4630      	mov	r0, r6
 8005b7a:	f7ff fe4a 	bl	8005812 <_Bfree>
 8005b7e:	464f      	mov	r7, r9
 8005b80:	106d      	asrs	r5, r5, #1
 8005b82:	d00b      	beq.n	8005b9c <__pow5mult+0x90>
 8005b84:	6820      	ldr	r0, [r4, #0]
 8005b86:	b938      	cbnz	r0, 8005b98 <__pow5mult+0x8c>
 8005b88:	4622      	mov	r2, r4
 8005b8a:	4621      	mov	r1, r4
 8005b8c:	4630      	mov	r0, r6
 8005b8e:	f7ff ff27 	bl	80059e0 <__multiply>
 8005b92:	6020      	str	r0, [r4, #0]
 8005b94:	f8c0 8000 	str.w	r8, [r0]
 8005b98:	4604      	mov	r4, r0
 8005b9a:	e7e4      	b.n	8005b66 <__pow5mult+0x5a>
 8005b9c:	4638      	mov	r0, r7
 8005b9e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005ba2:	bf00      	nop
 8005ba4:	08006ef0 	.word	0x08006ef0

08005ba8 <__lshift>:
 8005ba8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005bac:	460c      	mov	r4, r1
 8005bae:	4607      	mov	r7, r0
 8005bb0:	4616      	mov	r6, r2
 8005bb2:	6923      	ldr	r3, [r4, #16]
 8005bb4:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005bb8:	eb0a 0903 	add.w	r9, sl, r3
 8005bbc:	6849      	ldr	r1, [r1, #4]
 8005bbe:	68a3      	ldr	r3, [r4, #8]
 8005bc0:	f109 0501 	add.w	r5, r9, #1
 8005bc4:	42ab      	cmp	r3, r5
 8005bc6:	db32      	blt.n	8005c2e <__lshift+0x86>
 8005bc8:	4638      	mov	r0, r7
 8005bca:	f7ff fdee 	bl	80057aa <_Balloc>
 8005bce:	2300      	movs	r3, #0
 8005bd0:	4680      	mov	r8, r0
 8005bd2:	461a      	mov	r2, r3
 8005bd4:	f100 0114 	add.w	r1, r0, #20
 8005bd8:	4553      	cmp	r3, sl
 8005bda:	db2b      	blt.n	8005c34 <__lshift+0x8c>
 8005bdc:	6920      	ldr	r0, [r4, #16]
 8005bde:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005be2:	f104 0314 	add.w	r3, r4, #20
 8005be6:	f016 021f 	ands.w	r2, r6, #31
 8005bea:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8005bee:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8005bf2:	d025      	beq.n	8005c40 <__lshift+0x98>
 8005bf4:	2000      	movs	r0, #0
 8005bf6:	f1c2 0e20 	rsb	lr, r2, #32
 8005bfa:	468a      	mov	sl, r1
 8005bfc:	681e      	ldr	r6, [r3, #0]
 8005bfe:	4096      	lsls	r6, r2
 8005c00:	4330      	orrs	r0, r6
 8005c02:	f84a 0b04 	str.w	r0, [sl], #4
 8005c06:	f853 0b04 	ldr.w	r0, [r3], #4
 8005c0a:	459c      	cmp	ip, r3
 8005c0c:	fa20 f00e 	lsr.w	r0, r0, lr
 8005c10:	d814      	bhi.n	8005c3c <__lshift+0x94>
 8005c12:	6048      	str	r0, [r1, #4]
 8005c14:	b108      	cbz	r0, 8005c1a <__lshift+0x72>
 8005c16:	f109 0502 	add.w	r5, r9, #2
 8005c1a:	3d01      	subs	r5, #1
 8005c1c:	4638      	mov	r0, r7
 8005c1e:	f8c8 5010 	str.w	r5, [r8, #16]
 8005c22:	4621      	mov	r1, r4
 8005c24:	f7ff fdf5 	bl	8005812 <_Bfree>
 8005c28:	4640      	mov	r0, r8
 8005c2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c2e:	3101      	adds	r1, #1
 8005c30:	005b      	lsls	r3, r3, #1
 8005c32:	e7c7      	b.n	8005bc4 <__lshift+0x1c>
 8005c34:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005c38:	3301      	adds	r3, #1
 8005c3a:	e7cd      	b.n	8005bd8 <__lshift+0x30>
 8005c3c:	4651      	mov	r1, sl
 8005c3e:	e7dc      	b.n	8005bfa <__lshift+0x52>
 8005c40:	3904      	subs	r1, #4
 8005c42:	f853 2b04 	ldr.w	r2, [r3], #4
 8005c46:	459c      	cmp	ip, r3
 8005c48:	f841 2f04 	str.w	r2, [r1, #4]!
 8005c4c:	d8f9      	bhi.n	8005c42 <__lshift+0x9a>
 8005c4e:	e7e4      	b.n	8005c1a <__lshift+0x72>

08005c50 <__mcmp>:
 8005c50:	6903      	ldr	r3, [r0, #16]
 8005c52:	690a      	ldr	r2, [r1, #16]
 8005c54:	b530      	push	{r4, r5, lr}
 8005c56:	1a9b      	subs	r3, r3, r2
 8005c58:	d10c      	bne.n	8005c74 <__mcmp+0x24>
 8005c5a:	0092      	lsls	r2, r2, #2
 8005c5c:	3014      	adds	r0, #20
 8005c5e:	3114      	adds	r1, #20
 8005c60:	1884      	adds	r4, r0, r2
 8005c62:	4411      	add	r1, r2
 8005c64:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8005c68:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8005c6c:	4295      	cmp	r5, r2
 8005c6e:	d003      	beq.n	8005c78 <__mcmp+0x28>
 8005c70:	d305      	bcc.n	8005c7e <__mcmp+0x2e>
 8005c72:	2301      	movs	r3, #1
 8005c74:	4618      	mov	r0, r3
 8005c76:	bd30      	pop	{r4, r5, pc}
 8005c78:	42a0      	cmp	r0, r4
 8005c7a:	d3f3      	bcc.n	8005c64 <__mcmp+0x14>
 8005c7c:	e7fa      	b.n	8005c74 <__mcmp+0x24>
 8005c7e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8005c82:	e7f7      	b.n	8005c74 <__mcmp+0x24>

08005c84 <__mdiff>:
 8005c84:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005c88:	460d      	mov	r5, r1
 8005c8a:	4607      	mov	r7, r0
 8005c8c:	4611      	mov	r1, r2
 8005c8e:	4628      	mov	r0, r5
 8005c90:	4614      	mov	r4, r2
 8005c92:	f7ff ffdd 	bl	8005c50 <__mcmp>
 8005c96:	1e06      	subs	r6, r0, #0
 8005c98:	d108      	bne.n	8005cac <__mdiff+0x28>
 8005c9a:	4631      	mov	r1, r6
 8005c9c:	4638      	mov	r0, r7
 8005c9e:	f7ff fd84 	bl	80057aa <_Balloc>
 8005ca2:	2301      	movs	r3, #1
 8005ca4:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8005ca8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005cac:	bfa4      	itt	ge
 8005cae:	4623      	movge	r3, r4
 8005cb0:	462c      	movge	r4, r5
 8005cb2:	4638      	mov	r0, r7
 8005cb4:	6861      	ldr	r1, [r4, #4]
 8005cb6:	bfa6      	itte	ge
 8005cb8:	461d      	movge	r5, r3
 8005cba:	2600      	movge	r6, #0
 8005cbc:	2601      	movlt	r6, #1
 8005cbe:	f7ff fd74 	bl	80057aa <_Balloc>
 8005cc2:	f04f 0e00 	mov.w	lr, #0
 8005cc6:	60c6      	str	r6, [r0, #12]
 8005cc8:	692b      	ldr	r3, [r5, #16]
 8005cca:	6926      	ldr	r6, [r4, #16]
 8005ccc:	f104 0214 	add.w	r2, r4, #20
 8005cd0:	f105 0914 	add.w	r9, r5, #20
 8005cd4:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8005cd8:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8005cdc:	f100 0114 	add.w	r1, r0, #20
 8005ce0:	f852 ab04 	ldr.w	sl, [r2], #4
 8005ce4:	f859 5b04 	ldr.w	r5, [r9], #4
 8005ce8:	fa1f f38a 	uxth.w	r3, sl
 8005cec:	4473      	add	r3, lr
 8005cee:	b2ac      	uxth	r4, r5
 8005cf0:	1b1b      	subs	r3, r3, r4
 8005cf2:	0c2c      	lsrs	r4, r5, #16
 8005cf4:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 8005cf8:	eb04 4423 	add.w	r4, r4, r3, asr #16
 8005cfc:	b29b      	uxth	r3, r3
 8005cfe:	ea4f 4e24 	mov.w	lr, r4, asr #16
 8005d02:	45c8      	cmp	r8, r9
 8005d04:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8005d08:	4694      	mov	ip, r2
 8005d0a:	f841 4b04 	str.w	r4, [r1], #4
 8005d0e:	d8e7      	bhi.n	8005ce0 <__mdiff+0x5c>
 8005d10:	45bc      	cmp	ip, r7
 8005d12:	d304      	bcc.n	8005d1e <__mdiff+0x9a>
 8005d14:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8005d18:	b183      	cbz	r3, 8005d3c <__mdiff+0xb8>
 8005d1a:	6106      	str	r6, [r0, #16]
 8005d1c:	e7c4      	b.n	8005ca8 <__mdiff+0x24>
 8005d1e:	f85c 4b04 	ldr.w	r4, [ip], #4
 8005d22:	b2a2      	uxth	r2, r4
 8005d24:	4472      	add	r2, lr
 8005d26:	1413      	asrs	r3, r2, #16
 8005d28:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8005d2c:	b292      	uxth	r2, r2
 8005d2e:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8005d32:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8005d36:	f841 2b04 	str.w	r2, [r1], #4
 8005d3a:	e7e9      	b.n	8005d10 <__mdiff+0x8c>
 8005d3c:	3e01      	subs	r6, #1
 8005d3e:	e7e9      	b.n	8005d14 <__mdiff+0x90>

08005d40 <__ulp>:
 8005d40:	4b10      	ldr	r3, [pc, #64]	; (8005d84 <__ulp+0x44>)
 8005d42:	400b      	ands	r3, r1
 8005d44:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8005d48:	2b00      	cmp	r3, #0
 8005d4a:	dd02      	ble.n	8005d52 <__ulp+0x12>
 8005d4c:	2000      	movs	r0, #0
 8005d4e:	4619      	mov	r1, r3
 8005d50:	4770      	bx	lr
 8005d52:	425b      	negs	r3, r3
 8005d54:	151b      	asrs	r3, r3, #20
 8005d56:	2b13      	cmp	r3, #19
 8005d58:	f04f 0000 	mov.w	r0, #0
 8005d5c:	f04f 0100 	mov.w	r1, #0
 8005d60:	dc04      	bgt.n	8005d6c <__ulp+0x2c>
 8005d62:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8005d66:	fa42 f103 	asr.w	r1, r2, r3
 8005d6a:	4770      	bx	lr
 8005d6c:	2201      	movs	r2, #1
 8005d6e:	3b14      	subs	r3, #20
 8005d70:	2b1e      	cmp	r3, #30
 8005d72:	bfce      	itee	gt
 8005d74:	4613      	movgt	r3, r2
 8005d76:	f1c3 031f 	rsble	r3, r3, #31
 8005d7a:	fa02 f303 	lslle.w	r3, r2, r3
 8005d7e:	4618      	mov	r0, r3
 8005d80:	4770      	bx	lr
 8005d82:	bf00      	nop
 8005d84:	7ff00000 	.word	0x7ff00000

08005d88 <__b2d>:
 8005d88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005d8c:	6907      	ldr	r7, [r0, #16]
 8005d8e:	f100 0914 	add.w	r9, r0, #20
 8005d92:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 8005d96:	f857 6c04 	ldr.w	r6, [r7, #-4]
 8005d9a:	f1a7 0804 	sub.w	r8, r7, #4
 8005d9e:	4630      	mov	r0, r6
 8005da0:	f7ff fdc7 	bl	8005932 <__hi0bits>
 8005da4:	f1c0 0320 	rsb	r3, r0, #32
 8005da8:	280a      	cmp	r0, #10
 8005daa:	600b      	str	r3, [r1, #0]
 8005dac:	491e      	ldr	r1, [pc, #120]	; (8005e28 <__b2d+0xa0>)
 8005dae:	dc17      	bgt.n	8005de0 <__b2d+0x58>
 8005db0:	45c1      	cmp	r9, r8
 8005db2:	bf28      	it	cs
 8005db4:	2200      	movcs	r2, #0
 8005db6:	f1c0 0c0b 	rsb	ip, r0, #11
 8005dba:	fa26 f30c 	lsr.w	r3, r6, ip
 8005dbe:	bf38      	it	cc
 8005dc0:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005dc4:	ea43 0501 	orr.w	r5, r3, r1
 8005dc8:	f100 0315 	add.w	r3, r0, #21
 8005dcc:	fa06 f303 	lsl.w	r3, r6, r3
 8005dd0:	fa22 f20c 	lsr.w	r2, r2, ip
 8005dd4:	ea43 0402 	orr.w	r4, r3, r2
 8005dd8:	4620      	mov	r0, r4
 8005dda:	4629      	mov	r1, r5
 8005ddc:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005de0:	45c1      	cmp	r9, r8
 8005de2:	bf3a      	itte	cc
 8005de4:	f1a7 0808 	subcc.w	r8, r7, #8
 8005de8:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005dec:	2200      	movcs	r2, #0
 8005dee:	f1b0 030b 	subs.w	r3, r0, #11
 8005df2:	d015      	beq.n	8005e20 <__b2d+0x98>
 8005df4:	409e      	lsls	r6, r3
 8005df6:	f1c3 0720 	rsb	r7, r3, #32
 8005dfa:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
 8005dfe:	fa22 f107 	lsr.w	r1, r2, r7
 8005e02:	45c8      	cmp	r8, r9
 8005e04:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
 8005e08:	ea46 0501 	orr.w	r5, r6, r1
 8005e0c:	bf94      	ite	ls
 8005e0e:	2100      	movls	r1, #0
 8005e10:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 8005e14:	fa02 f003 	lsl.w	r0, r2, r3
 8005e18:	40f9      	lsrs	r1, r7
 8005e1a:	ea40 0401 	orr.w	r4, r0, r1
 8005e1e:	e7db      	b.n	8005dd8 <__b2d+0x50>
 8005e20:	ea46 0501 	orr.w	r5, r6, r1
 8005e24:	4614      	mov	r4, r2
 8005e26:	e7d7      	b.n	8005dd8 <__b2d+0x50>
 8005e28:	3ff00000 	.word	0x3ff00000

08005e2c <__d2b>:
 8005e2c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8005e30:	461c      	mov	r4, r3
 8005e32:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 8005e36:	2101      	movs	r1, #1
 8005e38:	4690      	mov	r8, r2
 8005e3a:	f7ff fcb6 	bl	80057aa <_Balloc>
 8005e3e:	f3c4 0213 	ubfx	r2, r4, #0, #20
 8005e42:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8005e46:	4607      	mov	r7, r0
 8005e48:	bb34      	cbnz	r4, 8005e98 <__d2b+0x6c>
 8005e4a:	9201      	str	r2, [sp, #4]
 8005e4c:	f1b8 0200 	subs.w	r2, r8, #0
 8005e50:	d027      	beq.n	8005ea2 <__d2b+0x76>
 8005e52:	a802      	add	r0, sp, #8
 8005e54:	f840 2d08 	str.w	r2, [r0, #-8]!
 8005e58:	f7ff fd8a 	bl	8005970 <__lo0bits>
 8005e5c:	9900      	ldr	r1, [sp, #0]
 8005e5e:	b1f0      	cbz	r0, 8005e9e <__d2b+0x72>
 8005e60:	9a01      	ldr	r2, [sp, #4]
 8005e62:	f1c0 0320 	rsb	r3, r0, #32
 8005e66:	fa02 f303 	lsl.w	r3, r2, r3
 8005e6a:	430b      	orrs	r3, r1
 8005e6c:	40c2      	lsrs	r2, r0
 8005e6e:	617b      	str	r3, [r7, #20]
 8005e70:	9201      	str	r2, [sp, #4]
 8005e72:	9b01      	ldr	r3, [sp, #4]
 8005e74:	2b00      	cmp	r3, #0
 8005e76:	bf14      	ite	ne
 8005e78:	2102      	movne	r1, #2
 8005e7a:	2101      	moveq	r1, #1
 8005e7c:	61bb      	str	r3, [r7, #24]
 8005e7e:	6139      	str	r1, [r7, #16]
 8005e80:	b1c4      	cbz	r4, 8005eb4 <__d2b+0x88>
 8005e82:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8005e86:	4404      	add	r4, r0
 8005e88:	6034      	str	r4, [r6, #0]
 8005e8a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8005e8e:	6028      	str	r0, [r5, #0]
 8005e90:	4638      	mov	r0, r7
 8005e92:	b002      	add	sp, #8
 8005e94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005e98:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005e9c:	e7d5      	b.n	8005e4a <__d2b+0x1e>
 8005e9e:	6179      	str	r1, [r7, #20]
 8005ea0:	e7e7      	b.n	8005e72 <__d2b+0x46>
 8005ea2:	a801      	add	r0, sp, #4
 8005ea4:	f7ff fd64 	bl	8005970 <__lo0bits>
 8005ea8:	2101      	movs	r1, #1
 8005eaa:	9b01      	ldr	r3, [sp, #4]
 8005eac:	6139      	str	r1, [r7, #16]
 8005eae:	617b      	str	r3, [r7, #20]
 8005eb0:	3020      	adds	r0, #32
 8005eb2:	e7e5      	b.n	8005e80 <__d2b+0x54>
 8005eb4:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8005eb8:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 8005ebc:	6030      	str	r0, [r6, #0]
 8005ebe:	6918      	ldr	r0, [r3, #16]
 8005ec0:	f7ff fd37 	bl	8005932 <__hi0bits>
 8005ec4:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8005ec8:	e7e1      	b.n	8005e8e <__d2b+0x62>

08005eca <__ratio>:
 8005eca:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005ece:	4688      	mov	r8, r1
 8005ed0:	4669      	mov	r1, sp
 8005ed2:	4681      	mov	r9, r0
 8005ed4:	f7ff ff58 	bl	8005d88 <__b2d>
 8005ed8:	468b      	mov	fp, r1
 8005eda:	4606      	mov	r6, r0
 8005edc:	460f      	mov	r7, r1
 8005ede:	4640      	mov	r0, r8
 8005ee0:	a901      	add	r1, sp, #4
 8005ee2:	f7ff ff51 	bl	8005d88 <__b2d>
 8005ee6:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8005eea:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8005eee:	460d      	mov	r5, r1
 8005ef0:	eba3 0c02 	sub.w	ip, r3, r2
 8005ef4:	e9dd 3200 	ldrd	r3, r2, [sp]
 8005ef8:	1a9b      	subs	r3, r3, r2
 8005efa:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8005efe:	2b00      	cmp	r3, #0
 8005f00:	bfd5      	itete	le
 8005f02:	460a      	movle	r2, r1
 8005f04:	463a      	movgt	r2, r7
 8005f06:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8005f0a:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 8005f0e:	bfd8      	it	le
 8005f10:	eb02 5503 	addle.w	r5, r2, r3, lsl #20
 8005f14:	462b      	mov	r3, r5
 8005f16:	4602      	mov	r2, r0
 8005f18:	4659      	mov	r1, fp
 8005f1a:	4630      	mov	r0, r6
 8005f1c:	f7fa fc06 	bl	800072c <__aeabi_ddiv>
 8005f20:	b003      	add	sp, #12
 8005f22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005f26 <__copybits>:
 8005f26:	3901      	subs	r1, #1
 8005f28:	b510      	push	{r4, lr}
 8005f2a:	1149      	asrs	r1, r1, #5
 8005f2c:	6914      	ldr	r4, [r2, #16]
 8005f2e:	3101      	adds	r1, #1
 8005f30:	f102 0314 	add.w	r3, r2, #20
 8005f34:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8005f38:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 8005f3c:	42a3      	cmp	r3, r4
 8005f3e:	4602      	mov	r2, r0
 8005f40:	d303      	bcc.n	8005f4a <__copybits+0x24>
 8005f42:	2300      	movs	r3, #0
 8005f44:	428a      	cmp	r2, r1
 8005f46:	d305      	bcc.n	8005f54 <__copybits+0x2e>
 8005f48:	bd10      	pop	{r4, pc}
 8005f4a:	f853 2b04 	ldr.w	r2, [r3], #4
 8005f4e:	f840 2b04 	str.w	r2, [r0], #4
 8005f52:	e7f3      	b.n	8005f3c <__copybits+0x16>
 8005f54:	f842 3b04 	str.w	r3, [r2], #4
 8005f58:	e7f4      	b.n	8005f44 <__copybits+0x1e>

08005f5a <__any_on>:
 8005f5a:	f100 0214 	add.w	r2, r0, #20
 8005f5e:	6900      	ldr	r0, [r0, #16]
 8005f60:	114b      	asrs	r3, r1, #5
 8005f62:	4298      	cmp	r0, r3
 8005f64:	b510      	push	{r4, lr}
 8005f66:	db11      	blt.n	8005f8c <__any_on+0x32>
 8005f68:	dd0a      	ble.n	8005f80 <__any_on+0x26>
 8005f6a:	f011 011f 	ands.w	r1, r1, #31
 8005f6e:	d007      	beq.n	8005f80 <__any_on+0x26>
 8005f70:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8005f74:	fa24 f001 	lsr.w	r0, r4, r1
 8005f78:	fa00 f101 	lsl.w	r1, r0, r1
 8005f7c:	428c      	cmp	r4, r1
 8005f7e:	d10b      	bne.n	8005f98 <__any_on+0x3e>
 8005f80:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8005f84:	4293      	cmp	r3, r2
 8005f86:	d803      	bhi.n	8005f90 <__any_on+0x36>
 8005f88:	2000      	movs	r0, #0
 8005f8a:	bd10      	pop	{r4, pc}
 8005f8c:	4603      	mov	r3, r0
 8005f8e:	e7f7      	b.n	8005f80 <__any_on+0x26>
 8005f90:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8005f94:	2900      	cmp	r1, #0
 8005f96:	d0f5      	beq.n	8005f84 <__any_on+0x2a>
 8005f98:	2001      	movs	r0, #1
 8005f9a:	e7f6      	b.n	8005f8a <__any_on+0x30>

08005f9c <_calloc_r>:
 8005f9c:	b538      	push	{r3, r4, r5, lr}
 8005f9e:	fb02 f401 	mul.w	r4, r2, r1
 8005fa2:	4621      	mov	r1, r4
 8005fa4:	f000 f854 	bl	8006050 <_malloc_r>
 8005fa8:	4605      	mov	r5, r0
 8005faa:	b118      	cbz	r0, 8005fb4 <_calloc_r+0x18>
 8005fac:	4622      	mov	r2, r4
 8005fae:	2100      	movs	r1, #0
 8005fb0:	f7fc f9fa 	bl	80023a8 <memset>
 8005fb4:	4628      	mov	r0, r5
 8005fb6:	bd38      	pop	{r3, r4, r5, pc}

08005fb8 <_free_r>:
 8005fb8:	b538      	push	{r3, r4, r5, lr}
 8005fba:	4605      	mov	r5, r0
 8005fbc:	2900      	cmp	r1, #0
 8005fbe:	d043      	beq.n	8006048 <_free_r+0x90>
 8005fc0:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005fc4:	1f0c      	subs	r4, r1, #4
 8005fc6:	2b00      	cmp	r3, #0
 8005fc8:	bfb8      	it	lt
 8005fca:	18e4      	addlt	r4, r4, r3
 8005fcc:	f000 fc0b 	bl	80067e6 <__malloc_lock>
 8005fd0:	4a1e      	ldr	r2, [pc, #120]	; (800604c <_free_r+0x94>)
 8005fd2:	6813      	ldr	r3, [r2, #0]
 8005fd4:	4610      	mov	r0, r2
 8005fd6:	b933      	cbnz	r3, 8005fe6 <_free_r+0x2e>
 8005fd8:	6063      	str	r3, [r4, #4]
 8005fda:	6014      	str	r4, [r2, #0]
 8005fdc:	4628      	mov	r0, r5
 8005fde:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005fe2:	f000 bc01 	b.w	80067e8 <__malloc_unlock>
 8005fe6:	42a3      	cmp	r3, r4
 8005fe8:	d90b      	bls.n	8006002 <_free_r+0x4a>
 8005fea:	6821      	ldr	r1, [r4, #0]
 8005fec:	1862      	adds	r2, r4, r1
 8005fee:	4293      	cmp	r3, r2
 8005ff0:	bf01      	itttt	eq
 8005ff2:	681a      	ldreq	r2, [r3, #0]
 8005ff4:	685b      	ldreq	r3, [r3, #4]
 8005ff6:	1852      	addeq	r2, r2, r1
 8005ff8:	6022      	streq	r2, [r4, #0]
 8005ffa:	6063      	str	r3, [r4, #4]
 8005ffc:	6004      	str	r4, [r0, #0]
 8005ffe:	e7ed      	b.n	8005fdc <_free_r+0x24>
 8006000:	4613      	mov	r3, r2
 8006002:	685a      	ldr	r2, [r3, #4]
 8006004:	b10a      	cbz	r2, 800600a <_free_r+0x52>
 8006006:	42a2      	cmp	r2, r4
 8006008:	d9fa      	bls.n	8006000 <_free_r+0x48>
 800600a:	6819      	ldr	r1, [r3, #0]
 800600c:	1858      	adds	r0, r3, r1
 800600e:	42a0      	cmp	r0, r4
 8006010:	d10b      	bne.n	800602a <_free_r+0x72>
 8006012:	6820      	ldr	r0, [r4, #0]
 8006014:	4401      	add	r1, r0
 8006016:	1858      	adds	r0, r3, r1
 8006018:	4282      	cmp	r2, r0
 800601a:	6019      	str	r1, [r3, #0]
 800601c:	d1de      	bne.n	8005fdc <_free_r+0x24>
 800601e:	6810      	ldr	r0, [r2, #0]
 8006020:	6852      	ldr	r2, [r2, #4]
 8006022:	4401      	add	r1, r0
 8006024:	6019      	str	r1, [r3, #0]
 8006026:	605a      	str	r2, [r3, #4]
 8006028:	e7d8      	b.n	8005fdc <_free_r+0x24>
 800602a:	d902      	bls.n	8006032 <_free_r+0x7a>
 800602c:	230c      	movs	r3, #12
 800602e:	602b      	str	r3, [r5, #0]
 8006030:	e7d4      	b.n	8005fdc <_free_r+0x24>
 8006032:	6820      	ldr	r0, [r4, #0]
 8006034:	1821      	adds	r1, r4, r0
 8006036:	428a      	cmp	r2, r1
 8006038:	bf01      	itttt	eq
 800603a:	6811      	ldreq	r1, [r2, #0]
 800603c:	6852      	ldreq	r2, [r2, #4]
 800603e:	1809      	addeq	r1, r1, r0
 8006040:	6021      	streq	r1, [r4, #0]
 8006042:	6062      	str	r2, [r4, #4]
 8006044:	605c      	str	r4, [r3, #4]
 8006046:	e7c9      	b.n	8005fdc <_free_r+0x24>
 8006048:	bd38      	pop	{r3, r4, r5, pc}
 800604a:	bf00      	nop
 800604c:	2000020c 	.word	0x2000020c

08006050 <_malloc_r>:
 8006050:	b570      	push	{r4, r5, r6, lr}
 8006052:	1ccd      	adds	r5, r1, #3
 8006054:	f025 0503 	bic.w	r5, r5, #3
 8006058:	3508      	adds	r5, #8
 800605a:	2d0c      	cmp	r5, #12
 800605c:	bf38      	it	cc
 800605e:	250c      	movcc	r5, #12
 8006060:	2d00      	cmp	r5, #0
 8006062:	4606      	mov	r6, r0
 8006064:	db01      	blt.n	800606a <_malloc_r+0x1a>
 8006066:	42a9      	cmp	r1, r5
 8006068:	d903      	bls.n	8006072 <_malloc_r+0x22>
 800606a:	230c      	movs	r3, #12
 800606c:	6033      	str	r3, [r6, #0]
 800606e:	2000      	movs	r0, #0
 8006070:	bd70      	pop	{r4, r5, r6, pc}
 8006072:	f000 fbb8 	bl	80067e6 <__malloc_lock>
 8006076:	4a21      	ldr	r2, [pc, #132]	; (80060fc <_malloc_r+0xac>)
 8006078:	6814      	ldr	r4, [r2, #0]
 800607a:	4621      	mov	r1, r4
 800607c:	b991      	cbnz	r1, 80060a4 <_malloc_r+0x54>
 800607e:	4c20      	ldr	r4, [pc, #128]	; (8006100 <_malloc_r+0xb0>)
 8006080:	6823      	ldr	r3, [r4, #0]
 8006082:	b91b      	cbnz	r3, 800608c <_malloc_r+0x3c>
 8006084:	4630      	mov	r0, r6
 8006086:	f000 facd 	bl	8006624 <_sbrk_r>
 800608a:	6020      	str	r0, [r4, #0]
 800608c:	4629      	mov	r1, r5
 800608e:	4630      	mov	r0, r6
 8006090:	f000 fac8 	bl	8006624 <_sbrk_r>
 8006094:	1c43      	adds	r3, r0, #1
 8006096:	d124      	bne.n	80060e2 <_malloc_r+0x92>
 8006098:	230c      	movs	r3, #12
 800609a:	4630      	mov	r0, r6
 800609c:	6033      	str	r3, [r6, #0]
 800609e:	f000 fba3 	bl	80067e8 <__malloc_unlock>
 80060a2:	e7e4      	b.n	800606e <_malloc_r+0x1e>
 80060a4:	680b      	ldr	r3, [r1, #0]
 80060a6:	1b5b      	subs	r3, r3, r5
 80060a8:	d418      	bmi.n	80060dc <_malloc_r+0x8c>
 80060aa:	2b0b      	cmp	r3, #11
 80060ac:	d90f      	bls.n	80060ce <_malloc_r+0x7e>
 80060ae:	600b      	str	r3, [r1, #0]
 80060b0:	18cc      	adds	r4, r1, r3
 80060b2:	50cd      	str	r5, [r1, r3]
 80060b4:	4630      	mov	r0, r6
 80060b6:	f000 fb97 	bl	80067e8 <__malloc_unlock>
 80060ba:	f104 000b 	add.w	r0, r4, #11
 80060be:	1d23      	adds	r3, r4, #4
 80060c0:	f020 0007 	bic.w	r0, r0, #7
 80060c4:	1ac3      	subs	r3, r0, r3
 80060c6:	d0d3      	beq.n	8006070 <_malloc_r+0x20>
 80060c8:	425a      	negs	r2, r3
 80060ca:	50e2      	str	r2, [r4, r3]
 80060cc:	e7d0      	b.n	8006070 <_malloc_r+0x20>
 80060ce:	684b      	ldr	r3, [r1, #4]
 80060d0:	428c      	cmp	r4, r1
 80060d2:	bf16      	itet	ne
 80060d4:	6063      	strne	r3, [r4, #4]
 80060d6:	6013      	streq	r3, [r2, #0]
 80060d8:	460c      	movne	r4, r1
 80060da:	e7eb      	b.n	80060b4 <_malloc_r+0x64>
 80060dc:	460c      	mov	r4, r1
 80060de:	6849      	ldr	r1, [r1, #4]
 80060e0:	e7cc      	b.n	800607c <_malloc_r+0x2c>
 80060e2:	1cc4      	adds	r4, r0, #3
 80060e4:	f024 0403 	bic.w	r4, r4, #3
 80060e8:	42a0      	cmp	r0, r4
 80060ea:	d005      	beq.n	80060f8 <_malloc_r+0xa8>
 80060ec:	1a21      	subs	r1, r4, r0
 80060ee:	4630      	mov	r0, r6
 80060f0:	f000 fa98 	bl	8006624 <_sbrk_r>
 80060f4:	3001      	adds	r0, #1
 80060f6:	d0cf      	beq.n	8006098 <_malloc_r+0x48>
 80060f8:	6025      	str	r5, [r4, #0]
 80060fa:	e7db      	b.n	80060b4 <_malloc_r+0x64>
 80060fc:	2000020c 	.word	0x2000020c
 8006100:	20000210 	.word	0x20000210

08006104 <__ssputs_r>:
 8006104:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8006108:	688e      	ldr	r6, [r1, #8]
 800610a:	4682      	mov	sl, r0
 800610c:	429e      	cmp	r6, r3
 800610e:	460c      	mov	r4, r1
 8006110:	4690      	mov	r8, r2
 8006112:	4699      	mov	r9, r3
 8006114:	d837      	bhi.n	8006186 <__ssputs_r+0x82>
 8006116:	898a      	ldrh	r2, [r1, #12]
 8006118:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800611c:	d031      	beq.n	8006182 <__ssputs_r+0x7e>
 800611e:	2302      	movs	r3, #2
 8006120:	6825      	ldr	r5, [r4, #0]
 8006122:	6909      	ldr	r1, [r1, #16]
 8006124:	1a6f      	subs	r7, r5, r1
 8006126:	6965      	ldr	r5, [r4, #20]
 8006128:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800612c:	fb95 f5f3 	sdiv	r5, r5, r3
 8006130:	f109 0301 	add.w	r3, r9, #1
 8006134:	443b      	add	r3, r7
 8006136:	429d      	cmp	r5, r3
 8006138:	bf38      	it	cc
 800613a:	461d      	movcc	r5, r3
 800613c:	0553      	lsls	r3, r2, #21
 800613e:	d530      	bpl.n	80061a2 <__ssputs_r+0x9e>
 8006140:	4629      	mov	r1, r5
 8006142:	f7ff ff85 	bl	8006050 <_malloc_r>
 8006146:	4606      	mov	r6, r0
 8006148:	b950      	cbnz	r0, 8006160 <__ssputs_r+0x5c>
 800614a:	230c      	movs	r3, #12
 800614c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006150:	f8ca 3000 	str.w	r3, [sl]
 8006154:	89a3      	ldrh	r3, [r4, #12]
 8006156:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800615a:	81a3      	strh	r3, [r4, #12]
 800615c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006160:	463a      	mov	r2, r7
 8006162:	6921      	ldr	r1, [r4, #16]
 8006164:	f7ff fb16 	bl	8005794 <memcpy>
 8006168:	89a3      	ldrh	r3, [r4, #12]
 800616a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800616e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006172:	81a3      	strh	r3, [r4, #12]
 8006174:	6126      	str	r6, [r4, #16]
 8006176:	443e      	add	r6, r7
 8006178:	6026      	str	r6, [r4, #0]
 800617a:	464e      	mov	r6, r9
 800617c:	6165      	str	r5, [r4, #20]
 800617e:	1bed      	subs	r5, r5, r7
 8006180:	60a5      	str	r5, [r4, #8]
 8006182:	454e      	cmp	r6, r9
 8006184:	d900      	bls.n	8006188 <__ssputs_r+0x84>
 8006186:	464e      	mov	r6, r9
 8006188:	4632      	mov	r2, r6
 800618a:	4641      	mov	r1, r8
 800618c:	6820      	ldr	r0, [r4, #0]
 800618e:	f000 fb11 	bl	80067b4 <memmove>
 8006192:	68a3      	ldr	r3, [r4, #8]
 8006194:	2000      	movs	r0, #0
 8006196:	1b9b      	subs	r3, r3, r6
 8006198:	60a3      	str	r3, [r4, #8]
 800619a:	6823      	ldr	r3, [r4, #0]
 800619c:	441e      	add	r6, r3
 800619e:	6026      	str	r6, [r4, #0]
 80061a0:	e7dc      	b.n	800615c <__ssputs_r+0x58>
 80061a2:	462a      	mov	r2, r5
 80061a4:	f000 fb21 	bl	80067ea <_realloc_r>
 80061a8:	4606      	mov	r6, r0
 80061aa:	2800      	cmp	r0, #0
 80061ac:	d1e2      	bne.n	8006174 <__ssputs_r+0x70>
 80061ae:	6921      	ldr	r1, [r4, #16]
 80061b0:	4650      	mov	r0, sl
 80061b2:	f7ff ff01 	bl	8005fb8 <_free_r>
 80061b6:	e7c8      	b.n	800614a <__ssputs_r+0x46>

080061b8 <_svfiprintf_r>:
 80061b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80061bc:	461d      	mov	r5, r3
 80061be:	898b      	ldrh	r3, [r1, #12]
 80061c0:	b09d      	sub	sp, #116	; 0x74
 80061c2:	061f      	lsls	r7, r3, #24
 80061c4:	4680      	mov	r8, r0
 80061c6:	460c      	mov	r4, r1
 80061c8:	4616      	mov	r6, r2
 80061ca:	d50f      	bpl.n	80061ec <_svfiprintf_r+0x34>
 80061cc:	690b      	ldr	r3, [r1, #16]
 80061ce:	b96b      	cbnz	r3, 80061ec <_svfiprintf_r+0x34>
 80061d0:	2140      	movs	r1, #64	; 0x40
 80061d2:	f7ff ff3d 	bl	8006050 <_malloc_r>
 80061d6:	6020      	str	r0, [r4, #0]
 80061d8:	6120      	str	r0, [r4, #16]
 80061da:	b928      	cbnz	r0, 80061e8 <_svfiprintf_r+0x30>
 80061dc:	230c      	movs	r3, #12
 80061de:	f8c8 3000 	str.w	r3, [r8]
 80061e2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80061e6:	e0c8      	b.n	800637a <_svfiprintf_r+0x1c2>
 80061e8:	2340      	movs	r3, #64	; 0x40
 80061ea:	6163      	str	r3, [r4, #20]
 80061ec:	2300      	movs	r3, #0
 80061ee:	9309      	str	r3, [sp, #36]	; 0x24
 80061f0:	2320      	movs	r3, #32
 80061f2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80061f6:	2330      	movs	r3, #48	; 0x30
 80061f8:	f04f 0b01 	mov.w	fp, #1
 80061fc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006200:	9503      	str	r5, [sp, #12]
 8006202:	4637      	mov	r7, r6
 8006204:	463d      	mov	r5, r7
 8006206:	f815 3b01 	ldrb.w	r3, [r5], #1
 800620a:	b10b      	cbz	r3, 8006210 <_svfiprintf_r+0x58>
 800620c:	2b25      	cmp	r3, #37	; 0x25
 800620e:	d13e      	bne.n	800628e <_svfiprintf_r+0xd6>
 8006210:	ebb7 0a06 	subs.w	sl, r7, r6
 8006214:	d00b      	beq.n	800622e <_svfiprintf_r+0x76>
 8006216:	4653      	mov	r3, sl
 8006218:	4632      	mov	r2, r6
 800621a:	4621      	mov	r1, r4
 800621c:	4640      	mov	r0, r8
 800621e:	f7ff ff71 	bl	8006104 <__ssputs_r>
 8006222:	3001      	adds	r0, #1
 8006224:	f000 80a4 	beq.w	8006370 <_svfiprintf_r+0x1b8>
 8006228:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800622a:	4453      	add	r3, sl
 800622c:	9309      	str	r3, [sp, #36]	; 0x24
 800622e:	783b      	ldrb	r3, [r7, #0]
 8006230:	2b00      	cmp	r3, #0
 8006232:	f000 809d 	beq.w	8006370 <_svfiprintf_r+0x1b8>
 8006236:	2300      	movs	r3, #0
 8006238:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800623c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006240:	9304      	str	r3, [sp, #16]
 8006242:	9307      	str	r3, [sp, #28]
 8006244:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006248:	931a      	str	r3, [sp, #104]	; 0x68
 800624a:	462f      	mov	r7, r5
 800624c:	2205      	movs	r2, #5
 800624e:	f817 1b01 	ldrb.w	r1, [r7], #1
 8006252:	4850      	ldr	r0, [pc, #320]	; (8006394 <_svfiprintf_r+0x1dc>)
 8006254:	f7ff fa90 	bl	8005778 <memchr>
 8006258:	9b04      	ldr	r3, [sp, #16]
 800625a:	b9d0      	cbnz	r0, 8006292 <_svfiprintf_r+0xda>
 800625c:	06d9      	lsls	r1, r3, #27
 800625e:	bf44      	itt	mi
 8006260:	2220      	movmi	r2, #32
 8006262:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006266:	071a      	lsls	r2, r3, #28
 8006268:	bf44      	itt	mi
 800626a:	222b      	movmi	r2, #43	; 0x2b
 800626c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006270:	782a      	ldrb	r2, [r5, #0]
 8006272:	2a2a      	cmp	r2, #42	; 0x2a
 8006274:	d015      	beq.n	80062a2 <_svfiprintf_r+0xea>
 8006276:	462f      	mov	r7, r5
 8006278:	2000      	movs	r0, #0
 800627a:	250a      	movs	r5, #10
 800627c:	9a07      	ldr	r2, [sp, #28]
 800627e:	4639      	mov	r1, r7
 8006280:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006284:	3b30      	subs	r3, #48	; 0x30
 8006286:	2b09      	cmp	r3, #9
 8006288:	d94d      	bls.n	8006326 <_svfiprintf_r+0x16e>
 800628a:	b1b8      	cbz	r0, 80062bc <_svfiprintf_r+0x104>
 800628c:	e00f      	b.n	80062ae <_svfiprintf_r+0xf6>
 800628e:	462f      	mov	r7, r5
 8006290:	e7b8      	b.n	8006204 <_svfiprintf_r+0x4c>
 8006292:	4a40      	ldr	r2, [pc, #256]	; (8006394 <_svfiprintf_r+0x1dc>)
 8006294:	463d      	mov	r5, r7
 8006296:	1a80      	subs	r0, r0, r2
 8006298:	fa0b f000 	lsl.w	r0, fp, r0
 800629c:	4318      	orrs	r0, r3
 800629e:	9004      	str	r0, [sp, #16]
 80062a0:	e7d3      	b.n	800624a <_svfiprintf_r+0x92>
 80062a2:	9a03      	ldr	r2, [sp, #12]
 80062a4:	1d11      	adds	r1, r2, #4
 80062a6:	6812      	ldr	r2, [r2, #0]
 80062a8:	9103      	str	r1, [sp, #12]
 80062aa:	2a00      	cmp	r2, #0
 80062ac:	db01      	blt.n	80062b2 <_svfiprintf_r+0xfa>
 80062ae:	9207      	str	r2, [sp, #28]
 80062b0:	e004      	b.n	80062bc <_svfiprintf_r+0x104>
 80062b2:	4252      	negs	r2, r2
 80062b4:	f043 0302 	orr.w	r3, r3, #2
 80062b8:	9207      	str	r2, [sp, #28]
 80062ba:	9304      	str	r3, [sp, #16]
 80062bc:	783b      	ldrb	r3, [r7, #0]
 80062be:	2b2e      	cmp	r3, #46	; 0x2e
 80062c0:	d10c      	bne.n	80062dc <_svfiprintf_r+0x124>
 80062c2:	787b      	ldrb	r3, [r7, #1]
 80062c4:	2b2a      	cmp	r3, #42	; 0x2a
 80062c6:	d133      	bne.n	8006330 <_svfiprintf_r+0x178>
 80062c8:	9b03      	ldr	r3, [sp, #12]
 80062ca:	3702      	adds	r7, #2
 80062cc:	1d1a      	adds	r2, r3, #4
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	9203      	str	r2, [sp, #12]
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	bfb8      	it	lt
 80062d6:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80062da:	9305      	str	r3, [sp, #20]
 80062dc:	4d2e      	ldr	r5, [pc, #184]	; (8006398 <_svfiprintf_r+0x1e0>)
 80062de:	2203      	movs	r2, #3
 80062e0:	7839      	ldrb	r1, [r7, #0]
 80062e2:	4628      	mov	r0, r5
 80062e4:	f7ff fa48 	bl	8005778 <memchr>
 80062e8:	b138      	cbz	r0, 80062fa <_svfiprintf_r+0x142>
 80062ea:	2340      	movs	r3, #64	; 0x40
 80062ec:	1b40      	subs	r0, r0, r5
 80062ee:	fa03 f000 	lsl.w	r0, r3, r0
 80062f2:	9b04      	ldr	r3, [sp, #16]
 80062f4:	3701      	adds	r7, #1
 80062f6:	4303      	orrs	r3, r0
 80062f8:	9304      	str	r3, [sp, #16]
 80062fa:	7839      	ldrb	r1, [r7, #0]
 80062fc:	2206      	movs	r2, #6
 80062fe:	4827      	ldr	r0, [pc, #156]	; (800639c <_svfiprintf_r+0x1e4>)
 8006300:	1c7e      	adds	r6, r7, #1
 8006302:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006306:	f7ff fa37 	bl	8005778 <memchr>
 800630a:	2800      	cmp	r0, #0
 800630c:	d038      	beq.n	8006380 <_svfiprintf_r+0x1c8>
 800630e:	4b24      	ldr	r3, [pc, #144]	; (80063a0 <_svfiprintf_r+0x1e8>)
 8006310:	bb13      	cbnz	r3, 8006358 <_svfiprintf_r+0x1a0>
 8006312:	9b03      	ldr	r3, [sp, #12]
 8006314:	3307      	adds	r3, #7
 8006316:	f023 0307 	bic.w	r3, r3, #7
 800631a:	3308      	adds	r3, #8
 800631c:	9303      	str	r3, [sp, #12]
 800631e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006320:	444b      	add	r3, r9
 8006322:	9309      	str	r3, [sp, #36]	; 0x24
 8006324:	e76d      	b.n	8006202 <_svfiprintf_r+0x4a>
 8006326:	fb05 3202 	mla	r2, r5, r2, r3
 800632a:	2001      	movs	r0, #1
 800632c:	460f      	mov	r7, r1
 800632e:	e7a6      	b.n	800627e <_svfiprintf_r+0xc6>
 8006330:	2300      	movs	r3, #0
 8006332:	250a      	movs	r5, #10
 8006334:	4619      	mov	r1, r3
 8006336:	3701      	adds	r7, #1
 8006338:	9305      	str	r3, [sp, #20]
 800633a:	4638      	mov	r0, r7
 800633c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006340:	3a30      	subs	r2, #48	; 0x30
 8006342:	2a09      	cmp	r2, #9
 8006344:	d903      	bls.n	800634e <_svfiprintf_r+0x196>
 8006346:	2b00      	cmp	r3, #0
 8006348:	d0c8      	beq.n	80062dc <_svfiprintf_r+0x124>
 800634a:	9105      	str	r1, [sp, #20]
 800634c:	e7c6      	b.n	80062dc <_svfiprintf_r+0x124>
 800634e:	fb05 2101 	mla	r1, r5, r1, r2
 8006352:	2301      	movs	r3, #1
 8006354:	4607      	mov	r7, r0
 8006356:	e7f0      	b.n	800633a <_svfiprintf_r+0x182>
 8006358:	ab03      	add	r3, sp, #12
 800635a:	9300      	str	r3, [sp, #0]
 800635c:	4622      	mov	r2, r4
 800635e:	4b11      	ldr	r3, [pc, #68]	; (80063a4 <_svfiprintf_r+0x1ec>)
 8006360:	a904      	add	r1, sp, #16
 8006362:	4640      	mov	r0, r8
 8006364:	f7fc f8ba 	bl	80024dc <_printf_float>
 8006368:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 800636c:	4681      	mov	r9, r0
 800636e:	d1d6      	bne.n	800631e <_svfiprintf_r+0x166>
 8006370:	89a3      	ldrh	r3, [r4, #12]
 8006372:	065b      	lsls	r3, r3, #25
 8006374:	f53f af35 	bmi.w	80061e2 <_svfiprintf_r+0x2a>
 8006378:	9809      	ldr	r0, [sp, #36]	; 0x24
 800637a:	b01d      	add	sp, #116	; 0x74
 800637c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006380:	ab03      	add	r3, sp, #12
 8006382:	9300      	str	r3, [sp, #0]
 8006384:	4622      	mov	r2, r4
 8006386:	4b07      	ldr	r3, [pc, #28]	; (80063a4 <_svfiprintf_r+0x1ec>)
 8006388:	a904      	add	r1, sp, #16
 800638a:	4640      	mov	r0, r8
 800638c:	f7fc fb52 	bl	8002a34 <_printf_i>
 8006390:	e7ea      	b.n	8006368 <_svfiprintf_r+0x1b0>
 8006392:	bf00      	nop
 8006394:	08006efc 	.word	0x08006efc
 8006398:	08006f02 	.word	0x08006f02
 800639c:	08006f06 	.word	0x08006f06
 80063a0:	080024dd 	.word	0x080024dd
 80063a4:	08006105 	.word	0x08006105

080063a8 <__sfputc_r>:
 80063a8:	6893      	ldr	r3, [r2, #8]
 80063aa:	b410      	push	{r4}
 80063ac:	3b01      	subs	r3, #1
 80063ae:	2b00      	cmp	r3, #0
 80063b0:	6093      	str	r3, [r2, #8]
 80063b2:	da07      	bge.n	80063c4 <__sfputc_r+0x1c>
 80063b4:	6994      	ldr	r4, [r2, #24]
 80063b6:	42a3      	cmp	r3, r4
 80063b8:	db01      	blt.n	80063be <__sfputc_r+0x16>
 80063ba:	290a      	cmp	r1, #10
 80063bc:	d102      	bne.n	80063c4 <__sfputc_r+0x1c>
 80063be:	bc10      	pop	{r4}
 80063c0:	f7fd bda4 	b.w	8003f0c <__swbuf_r>
 80063c4:	6813      	ldr	r3, [r2, #0]
 80063c6:	1c58      	adds	r0, r3, #1
 80063c8:	6010      	str	r0, [r2, #0]
 80063ca:	7019      	strb	r1, [r3, #0]
 80063cc:	4608      	mov	r0, r1
 80063ce:	bc10      	pop	{r4}
 80063d0:	4770      	bx	lr

080063d2 <__sfputs_r>:
 80063d2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80063d4:	4606      	mov	r6, r0
 80063d6:	460f      	mov	r7, r1
 80063d8:	4614      	mov	r4, r2
 80063da:	18d5      	adds	r5, r2, r3
 80063dc:	42ac      	cmp	r4, r5
 80063de:	d101      	bne.n	80063e4 <__sfputs_r+0x12>
 80063e0:	2000      	movs	r0, #0
 80063e2:	e007      	b.n	80063f4 <__sfputs_r+0x22>
 80063e4:	463a      	mov	r2, r7
 80063e6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80063ea:	4630      	mov	r0, r6
 80063ec:	f7ff ffdc 	bl	80063a8 <__sfputc_r>
 80063f0:	1c43      	adds	r3, r0, #1
 80063f2:	d1f3      	bne.n	80063dc <__sfputs_r+0xa>
 80063f4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080063f8 <_vfiprintf_r>:
 80063f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80063fc:	460c      	mov	r4, r1
 80063fe:	b09d      	sub	sp, #116	; 0x74
 8006400:	4617      	mov	r7, r2
 8006402:	461d      	mov	r5, r3
 8006404:	4606      	mov	r6, r0
 8006406:	b118      	cbz	r0, 8006410 <_vfiprintf_r+0x18>
 8006408:	6983      	ldr	r3, [r0, #24]
 800640a:	b90b      	cbnz	r3, 8006410 <_vfiprintf_r+0x18>
 800640c:	f7fe fd70 	bl	8004ef0 <__sinit>
 8006410:	4b7c      	ldr	r3, [pc, #496]	; (8006604 <_vfiprintf_r+0x20c>)
 8006412:	429c      	cmp	r4, r3
 8006414:	d158      	bne.n	80064c8 <_vfiprintf_r+0xd0>
 8006416:	6874      	ldr	r4, [r6, #4]
 8006418:	89a3      	ldrh	r3, [r4, #12]
 800641a:	0718      	lsls	r0, r3, #28
 800641c:	d55e      	bpl.n	80064dc <_vfiprintf_r+0xe4>
 800641e:	6923      	ldr	r3, [r4, #16]
 8006420:	2b00      	cmp	r3, #0
 8006422:	d05b      	beq.n	80064dc <_vfiprintf_r+0xe4>
 8006424:	2300      	movs	r3, #0
 8006426:	9309      	str	r3, [sp, #36]	; 0x24
 8006428:	2320      	movs	r3, #32
 800642a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800642e:	2330      	movs	r3, #48	; 0x30
 8006430:	f04f 0b01 	mov.w	fp, #1
 8006434:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006438:	9503      	str	r5, [sp, #12]
 800643a:	46b8      	mov	r8, r7
 800643c:	4645      	mov	r5, r8
 800643e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8006442:	b10b      	cbz	r3, 8006448 <_vfiprintf_r+0x50>
 8006444:	2b25      	cmp	r3, #37	; 0x25
 8006446:	d154      	bne.n	80064f2 <_vfiprintf_r+0xfa>
 8006448:	ebb8 0a07 	subs.w	sl, r8, r7
 800644c:	d00b      	beq.n	8006466 <_vfiprintf_r+0x6e>
 800644e:	4653      	mov	r3, sl
 8006450:	463a      	mov	r2, r7
 8006452:	4621      	mov	r1, r4
 8006454:	4630      	mov	r0, r6
 8006456:	f7ff ffbc 	bl	80063d2 <__sfputs_r>
 800645a:	3001      	adds	r0, #1
 800645c:	f000 80c2 	beq.w	80065e4 <_vfiprintf_r+0x1ec>
 8006460:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006462:	4453      	add	r3, sl
 8006464:	9309      	str	r3, [sp, #36]	; 0x24
 8006466:	f898 3000 	ldrb.w	r3, [r8]
 800646a:	2b00      	cmp	r3, #0
 800646c:	f000 80ba 	beq.w	80065e4 <_vfiprintf_r+0x1ec>
 8006470:	2300      	movs	r3, #0
 8006472:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006476:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800647a:	9304      	str	r3, [sp, #16]
 800647c:	9307      	str	r3, [sp, #28]
 800647e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006482:	931a      	str	r3, [sp, #104]	; 0x68
 8006484:	46a8      	mov	r8, r5
 8006486:	2205      	movs	r2, #5
 8006488:	f818 1b01 	ldrb.w	r1, [r8], #1
 800648c:	485e      	ldr	r0, [pc, #376]	; (8006608 <_vfiprintf_r+0x210>)
 800648e:	f7ff f973 	bl	8005778 <memchr>
 8006492:	9b04      	ldr	r3, [sp, #16]
 8006494:	bb78      	cbnz	r0, 80064f6 <_vfiprintf_r+0xfe>
 8006496:	06d9      	lsls	r1, r3, #27
 8006498:	bf44      	itt	mi
 800649a:	2220      	movmi	r2, #32
 800649c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80064a0:	071a      	lsls	r2, r3, #28
 80064a2:	bf44      	itt	mi
 80064a4:	222b      	movmi	r2, #43	; 0x2b
 80064a6:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 80064aa:	782a      	ldrb	r2, [r5, #0]
 80064ac:	2a2a      	cmp	r2, #42	; 0x2a
 80064ae:	d02a      	beq.n	8006506 <_vfiprintf_r+0x10e>
 80064b0:	46a8      	mov	r8, r5
 80064b2:	2000      	movs	r0, #0
 80064b4:	250a      	movs	r5, #10
 80064b6:	9a07      	ldr	r2, [sp, #28]
 80064b8:	4641      	mov	r1, r8
 80064ba:	f811 3b01 	ldrb.w	r3, [r1], #1
 80064be:	3b30      	subs	r3, #48	; 0x30
 80064c0:	2b09      	cmp	r3, #9
 80064c2:	d969      	bls.n	8006598 <_vfiprintf_r+0x1a0>
 80064c4:	b360      	cbz	r0, 8006520 <_vfiprintf_r+0x128>
 80064c6:	e024      	b.n	8006512 <_vfiprintf_r+0x11a>
 80064c8:	4b50      	ldr	r3, [pc, #320]	; (800660c <_vfiprintf_r+0x214>)
 80064ca:	429c      	cmp	r4, r3
 80064cc:	d101      	bne.n	80064d2 <_vfiprintf_r+0xda>
 80064ce:	68b4      	ldr	r4, [r6, #8]
 80064d0:	e7a2      	b.n	8006418 <_vfiprintf_r+0x20>
 80064d2:	4b4f      	ldr	r3, [pc, #316]	; (8006610 <_vfiprintf_r+0x218>)
 80064d4:	429c      	cmp	r4, r3
 80064d6:	bf08      	it	eq
 80064d8:	68f4      	ldreq	r4, [r6, #12]
 80064da:	e79d      	b.n	8006418 <_vfiprintf_r+0x20>
 80064dc:	4621      	mov	r1, r4
 80064de:	4630      	mov	r0, r6
 80064e0:	f7fd fd66 	bl	8003fb0 <__swsetup_r>
 80064e4:	2800      	cmp	r0, #0
 80064e6:	d09d      	beq.n	8006424 <_vfiprintf_r+0x2c>
 80064e8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80064ec:	b01d      	add	sp, #116	; 0x74
 80064ee:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80064f2:	46a8      	mov	r8, r5
 80064f4:	e7a2      	b.n	800643c <_vfiprintf_r+0x44>
 80064f6:	4a44      	ldr	r2, [pc, #272]	; (8006608 <_vfiprintf_r+0x210>)
 80064f8:	4645      	mov	r5, r8
 80064fa:	1a80      	subs	r0, r0, r2
 80064fc:	fa0b f000 	lsl.w	r0, fp, r0
 8006500:	4318      	orrs	r0, r3
 8006502:	9004      	str	r0, [sp, #16]
 8006504:	e7be      	b.n	8006484 <_vfiprintf_r+0x8c>
 8006506:	9a03      	ldr	r2, [sp, #12]
 8006508:	1d11      	adds	r1, r2, #4
 800650a:	6812      	ldr	r2, [r2, #0]
 800650c:	9103      	str	r1, [sp, #12]
 800650e:	2a00      	cmp	r2, #0
 8006510:	db01      	blt.n	8006516 <_vfiprintf_r+0x11e>
 8006512:	9207      	str	r2, [sp, #28]
 8006514:	e004      	b.n	8006520 <_vfiprintf_r+0x128>
 8006516:	4252      	negs	r2, r2
 8006518:	f043 0302 	orr.w	r3, r3, #2
 800651c:	9207      	str	r2, [sp, #28]
 800651e:	9304      	str	r3, [sp, #16]
 8006520:	f898 3000 	ldrb.w	r3, [r8]
 8006524:	2b2e      	cmp	r3, #46	; 0x2e
 8006526:	d10e      	bne.n	8006546 <_vfiprintf_r+0x14e>
 8006528:	f898 3001 	ldrb.w	r3, [r8, #1]
 800652c:	2b2a      	cmp	r3, #42	; 0x2a
 800652e:	d138      	bne.n	80065a2 <_vfiprintf_r+0x1aa>
 8006530:	9b03      	ldr	r3, [sp, #12]
 8006532:	f108 0802 	add.w	r8, r8, #2
 8006536:	1d1a      	adds	r2, r3, #4
 8006538:	681b      	ldr	r3, [r3, #0]
 800653a:	9203      	str	r2, [sp, #12]
 800653c:	2b00      	cmp	r3, #0
 800653e:	bfb8      	it	lt
 8006540:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8006544:	9305      	str	r3, [sp, #20]
 8006546:	4d33      	ldr	r5, [pc, #204]	; (8006614 <_vfiprintf_r+0x21c>)
 8006548:	2203      	movs	r2, #3
 800654a:	f898 1000 	ldrb.w	r1, [r8]
 800654e:	4628      	mov	r0, r5
 8006550:	f7ff f912 	bl	8005778 <memchr>
 8006554:	b140      	cbz	r0, 8006568 <_vfiprintf_r+0x170>
 8006556:	2340      	movs	r3, #64	; 0x40
 8006558:	1b40      	subs	r0, r0, r5
 800655a:	fa03 f000 	lsl.w	r0, r3, r0
 800655e:	9b04      	ldr	r3, [sp, #16]
 8006560:	f108 0801 	add.w	r8, r8, #1
 8006564:	4303      	orrs	r3, r0
 8006566:	9304      	str	r3, [sp, #16]
 8006568:	f898 1000 	ldrb.w	r1, [r8]
 800656c:	2206      	movs	r2, #6
 800656e:	482a      	ldr	r0, [pc, #168]	; (8006618 <_vfiprintf_r+0x220>)
 8006570:	f108 0701 	add.w	r7, r8, #1
 8006574:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006578:	f7ff f8fe 	bl	8005778 <memchr>
 800657c:	2800      	cmp	r0, #0
 800657e:	d037      	beq.n	80065f0 <_vfiprintf_r+0x1f8>
 8006580:	4b26      	ldr	r3, [pc, #152]	; (800661c <_vfiprintf_r+0x224>)
 8006582:	bb1b      	cbnz	r3, 80065cc <_vfiprintf_r+0x1d4>
 8006584:	9b03      	ldr	r3, [sp, #12]
 8006586:	3307      	adds	r3, #7
 8006588:	f023 0307 	bic.w	r3, r3, #7
 800658c:	3308      	adds	r3, #8
 800658e:	9303      	str	r3, [sp, #12]
 8006590:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006592:	444b      	add	r3, r9
 8006594:	9309      	str	r3, [sp, #36]	; 0x24
 8006596:	e750      	b.n	800643a <_vfiprintf_r+0x42>
 8006598:	fb05 3202 	mla	r2, r5, r2, r3
 800659c:	2001      	movs	r0, #1
 800659e:	4688      	mov	r8, r1
 80065a0:	e78a      	b.n	80064b8 <_vfiprintf_r+0xc0>
 80065a2:	2300      	movs	r3, #0
 80065a4:	250a      	movs	r5, #10
 80065a6:	4619      	mov	r1, r3
 80065a8:	f108 0801 	add.w	r8, r8, #1
 80065ac:	9305      	str	r3, [sp, #20]
 80065ae:	4640      	mov	r0, r8
 80065b0:	f810 2b01 	ldrb.w	r2, [r0], #1
 80065b4:	3a30      	subs	r2, #48	; 0x30
 80065b6:	2a09      	cmp	r2, #9
 80065b8:	d903      	bls.n	80065c2 <_vfiprintf_r+0x1ca>
 80065ba:	2b00      	cmp	r3, #0
 80065bc:	d0c3      	beq.n	8006546 <_vfiprintf_r+0x14e>
 80065be:	9105      	str	r1, [sp, #20]
 80065c0:	e7c1      	b.n	8006546 <_vfiprintf_r+0x14e>
 80065c2:	fb05 2101 	mla	r1, r5, r1, r2
 80065c6:	2301      	movs	r3, #1
 80065c8:	4680      	mov	r8, r0
 80065ca:	e7f0      	b.n	80065ae <_vfiprintf_r+0x1b6>
 80065cc:	ab03      	add	r3, sp, #12
 80065ce:	9300      	str	r3, [sp, #0]
 80065d0:	4622      	mov	r2, r4
 80065d2:	4b13      	ldr	r3, [pc, #76]	; (8006620 <_vfiprintf_r+0x228>)
 80065d4:	a904      	add	r1, sp, #16
 80065d6:	4630      	mov	r0, r6
 80065d8:	f7fb ff80 	bl	80024dc <_printf_float>
 80065dc:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80065e0:	4681      	mov	r9, r0
 80065e2:	d1d5      	bne.n	8006590 <_vfiprintf_r+0x198>
 80065e4:	89a3      	ldrh	r3, [r4, #12]
 80065e6:	065b      	lsls	r3, r3, #25
 80065e8:	f53f af7e 	bmi.w	80064e8 <_vfiprintf_r+0xf0>
 80065ec:	9809      	ldr	r0, [sp, #36]	; 0x24
 80065ee:	e77d      	b.n	80064ec <_vfiprintf_r+0xf4>
 80065f0:	ab03      	add	r3, sp, #12
 80065f2:	9300      	str	r3, [sp, #0]
 80065f4:	4622      	mov	r2, r4
 80065f6:	4b0a      	ldr	r3, [pc, #40]	; (8006620 <_vfiprintf_r+0x228>)
 80065f8:	a904      	add	r1, sp, #16
 80065fa:	4630      	mov	r0, r6
 80065fc:	f7fc fa1a 	bl	8002a34 <_printf_i>
 8006600:	e7ec      	b.n	80065dc <_vfiprintf_r+0x1e4>
 8006602:	bf00      	nop
 8006604:	08006db0 	.word	0x08006db0
 8006608:	08006efc 	.word	0x08006efc
 800660c:	08006dd0 	.word	0x08006dd0
 8006610:	08006d90 	.word	0x08006d90
 8006614:	08006f02 	.word	0x08006f02
 8006618:	08006f06 	.word	0x08006f06
 800661c:	080024dd 	.word	0x080024dd
 8006620:	080063d3 	.word	0x080063d3

08006624 <_sbrk_r>:
 8006624:	b538      	push	{r3, r4, r5, lr}
 8006626:	2300      	movs	r3, #0
 8006628:	4c05      	ldr	r4, [pc, #20]	; (8006640 <_sbrk_r+0x1c>)
 800662a:	4605      	mov	r5, r0
 800662c:	4608      	mov	r0, r1
 800662e:	6023      	str	r3, [r4, #0]
 8006630:	f000 f93c 	bl	80068ac <_sbrk>
 8006634:	1c43      	adds	r3, r0, #1
 8006636:	d102      	bne.n	800663e <_sbrk_r+0x1a>
 8006638:	6823      	ldr	r3, [r4, #0]
 800663a:	b103      	cbz	r3, 800663e <_sbrk_r+0x1a>
 800663c:	602b      	str	r3, [r5, #0]
 800663e:	bd38      	pop	{r3, r4, r5, pc}
 8006640:	20000718 	.word	0x20000718

08006644 <__sread>:
 8006644:	b510      	push	{r4, lr}
 8006646:	460c      	mov	r4, r1
 8006648:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800664c:	f000 f8f4 	bl	8006838 <_read_r>
 8006650:	2800      	cmp	r0, #0
 8006652:	bfab      	itete	ge
 8006654:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006656:	89a3      	ldrhlt	r3, [r4, #12]
 8006658:	181b      	addge	r3, r3, r0
 800665a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800665e:	bfac      	ite	ge
 8006660:	6563      	strge	r3, [r4, #84]	; 0x54
 8006662:	81a3      	strhlt	r3, [r4, #12]
 8006664:	bd10      	pop	{r4, pc}

08006666 <__swrite>:
 8006666:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800666a:	461f      	mov	r7, r3
 800666c:	898b      	ldrh	r3, [r1, #12]
 800666e:	4605      	mov	r5, r0
 8006670:	05db      	lsls	r3, r3, #23
 8006672:	460c      	mov	r4, r1
 8006674:	4616      	mov	r6, r2
 8006676:	d505      	bpl.n	8006684 <__swrite+0x1e>
 8006678:	2302      	movs	r3, #2
 800667a:	2200      	movs	r2, #0
 800667c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006680:	f000 f886 	bl	8006790 <_lseek_r>
 8006684:	89a3      	ldrh	r3, [r4, #12]
 8006686:	4632      	mov	r2, r6
 8006688:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800668c:	81a3      	strh	r3, [r4, #12]
 800668e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006692:	463b      	mov	r3, r7
 8006694:	4628      	mov	r0, r5
 8006696:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800669a:	f000 b835 	b.w	8006708 <_write_r>

0800669e <__sseek>:
 800669e:	b510      	push	{r4, lr}
 80066a0:	460c      	mov	r4, r1
 80066a2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80066a6:	f000 f873 	bl	8006790 <_lseek_r>
 80066aa:	1c43      	adds	r3, r0, #1
 80066ac:	89a3      	ldrh	r3, [r4, #12]
 80066ae:	bf15      	itete	ne
 80066b0:	6560      	strne	r0, [r4, #84]	; 0x54
 80066b2:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 80066b6:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 80066ba:	81a3      	strheq	r3, [r4, #12]
 80066bc:	bf18      	it	ne
 80066be:	81a3      	strhne	r3, [r4, #12]
 80066c0:	bd10      	pop	{r4, pc}

080066c2 <__sclose>:
 80066c2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80066c6:	f000 b831 	b.w	800672c <_close_r>

080066ca <strncmp>:
 80066ca:	b510      	push	{r4, lr}
 80066cc:	b16a      	cbz	r2, 80066ea <strncmp+0x20>
 80066ce:	3901      	subs	r1, #1
 80066d0:	1884      	adds	r4, r0, r2
 80066d2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80066d6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80066da:	4293      	cmp	r3, r2
 80066dc:	d103      	bne.n	80066e6 <strncmp+0x1c>
 80066de:	42a0      	cmp	r0, r4
 80066e0:	d001      	beq.n	80066e6 <strncmp+0x1c>
 80066e2:	2b00      	cmp	r3, #0
 80066e4:	d1f5      	bne.n	80066d2 <strncmp+0x8>
 80066e6:	1a98      	subs	r0, r3, r2
 80066e8:	bd10      	pop	{r4, pc}
 80066ea:	4610      	mov	r0, r2
 80066ec:	e7fc      	b.n	80066e8 <strncmp+0x1e>

080066ee <__ascii_wctomb>:
 80066ee:	b149      	cbz	r1, 8006704 <__ascii_wctomb+0x16>
 80066f0:	2aff      	cmp	r2, #255	; 0xff
 80066f2:	bf8b      	itete	hi
 80066f4:	238a      	movhi	r3, #138	; 0x8a
 80066f6:	700a      	strbls	r2, [r1, #0]
 80066f8:	6003      	strhi	r3, [r0, #0]
 80066fa:	2001      	movls	r0, #1
 80066fc:	bf88      	it	hi
 80066fe:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 8006702:	4770      	bx	lr
 8006704:	4608      	mov	r0, r1
 8006706:	4770      	bx	lr

08006708 <_write_r>:
 8006708:	b538      	push	{r3, r4, r5, lr}
 800670a:	4605      	mov	r5, r0
 800670c:	4608      	mov	r0, r1
 800670e:	4611      	mov	r1, r2
 8006710:	2200      	movs	r2, #0
 8006712:	4c05      	ldr	r4, [pc, #20]	; (8006728 <_write_r+0x20>)
 8006714:	6022      	str	r2, [r4, #0]
 8006716:	461a      	mov	r2, r3
 8006718:	f7fb fa38 	bl	8001b8c <_write>
 800671c:	1c43      	adds	r3, r0, #1
 800671e:	d102      	bne.n	8006726 <_write_r+0x1e>
 8006720:	6823      	ldr	r3, [r4, #0]
 8006722:	b103      	cbz	r3, 8006726 <_write_r+0x1e>
 8006724:	602b      	str	r3, [r5, #0]
 8006726:	bd38      	pop	{r3, r4, r5, pc}
 8006728:	20000718 	.word	0x20000718

0800672c <_close_r>:
 800672c:	b538      	push	{r3, r4, r5, lr}
 800672e:	2300      	movs	r3, #0
 8006730:	4c05      	ldr	r4, [pc, #20]	; (8006748 <_close_r+0x1c>)
 8006732:	4605      	mov	r5, r0
 8006734:	4608      	mov	r0, r1
 8006736:	6023      	str	r3, [r4, #0]
 8006738:	f7fb fa3e 	bl	8001bb8 <_close>
 800673c:	1c43      	adds	r3, r0, #1
 800673e:	d102      	bne.n	8006746 <_close_r+0x1a>
 8006740:	6823      	ldr	r3, [r4, #0]
 8006742:	b103      	cbz	r3, 8006746 <_close_r+0x1a>
 8006744:	602b      	str	r3, [r5, #0]
 8006746:	bd38      	pop	{r3, r4, r5, pc}
 8006748:	20000718 	.word	0x20000718

0800674c <_fstat_r>:
 800674c:	b538      	push	{r3, r4, r5, lr}
 800674e:	2300      	movs	r3, #0
 8006750:	4c06      	ldr	r4, [pc, #24]	; (800676c <_fstat_r+0x20>)
 8006752:	4605      	mov	r5, r0
 8006754:	4608      	mov	r0, r1
 8006756:	4611      	mov	r1, r2
 8006758:	6023      	str	r3, [r4, #0]
 800675a:	f000 f887 	bl	800686c <_fstat>
 800675e:	1c43      	adds	r3, r0, #1
 8006760:	d102      	bne.n	8006768 <_fstat_r+0x1c>
 8006762:	6823      	ldr	r3, [r4, #0]
 8006764:	b103      	cbz	r3, 8006768 <_fstat_r+0x1c>
 8006766:	602b      	str	r3, [r5, #0]
 8006768:	bd38      	pop	{r3, r4, r5, pc}
 800676a:	bf00      	nop
 800676c:	20000718 	.word	0x20000718

08006770 <_isatty_r>:
 8006770:	b538      	push	{r3, r4, r5, lr}
 8006772:	2300      	movs	r3, #0
 8006774:	4c05      	ldr	r4, [pc, #20]	; (800678c <_isatty_r+0x1c>)
 8006776:	4605      	mov	r5, r0
 8006778:	4608      	mov	r0, r1
 800677a:	6023      	str	r3, [r4, #0]
 800677c:	f000 f87e 	bl	800687c <_isatty>
 8006780:	1c43      	adds	r3, r0, #1
 8006782:	d102      	bne.n	800678a <_isatty_r+0x1a>
 8006784:	6823      	ldr	r3, [r4, #0]
 8006786:	b103      	cbz	r3, 800678a <_isatty_r+0x1a>
 8006788:	602b      	str	r3, [r5, #0]
 800678a:	bd38      	pop	{r3, r4, r5, pc}
 800678c:	20000718 	.word	0x20000718

08006790 <_lseek_r>:
 8006790:	b538      	push	{r3, r4, r5, lr}
 8006792:	4605      	mov	r5, r0
 8006794:	4608      	mov	r0, r1
 8006796:	4611      	mov	r1, r2
 8006798:	2200      	movs	r2, #0
 800679a:	4c05      	ldr	r4, [pc, #20]	; (80067b0 <_lseek_r+0x20>)
 800679c:	6022      	str	r2, [r4, #0]
 800679e:	461a      	mov	r2, r3
 80067a0:	f000 f874 	bl	800688c <_lseek>
 80067a4:	1c43      	adds	r3, r0, #1
 80067a6:	d102      	bne.n	80067ae <_lseek_r+0x1e>
 80067a8:	6823      	ldr	r3, [r4, #0]
 80067aa:	b103      	cbz	r3, 80067ae <_lseek_r+0x1e>
 80067ac:	602b      	str	r3, [r5, #0]
 80067ae:	bd38      	pop	{r3, r4, r5, pc}
 80067b0:	20000718 	.word	0x20000718

080067b4 <memmove>:
 80067b4:	4288      	cmp	r0, r1
 80067b6:	b510      	push	{r4, lr}
 80067b8:	eb01 0302 	add.w	r3, r1, r2
 80067bc:	d807      	bhi.n	80067ce <memmove+0x1a>
 80067be:	1e42      	subs	r2, r0, #1
 80067c0:	4299      	cmp	r1, r3
 80067c2:	d00a      	beq.n	80067da <memmove+0x26>
 80067c4:	f811 4b01 	ldrb.w	r4, [r1], #1
 80067c8:	f802 4f01 	strb.w	r4, [r2, #1]!
 80067cc:	e7f8      	b.n	80067c0 <memmove+0xc>
 80067ce:	4283      	cmp	r3, r0
 80067d0:	d9f5      	bls.n	80067be <memmove+0xa>
 80067d2:	1881      	adds	r1, r0, r2
 80067d4:	1ad2      	subs	r2, r2, r3
 80067d6:	42d3      	cmn	r3, r2
 80067d8:	d100      	bne.n	80067dc <memmove+0x28>
 80067da:	bd10      	pop	{r4, pc}
 80067dc:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80067e0:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80067e4:	e7f7      	b.n	80067d6 <memmove+0x22>

080067e6 <__malloc_lock>:
 80067e6:	4770      	bx	lr

080067e8 <__malloc_unlock>:
 80067e8:	4770      	bx	lr

080067ea <_realloc_r>:
 80067ea:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80067ec:	4607      	mov	r7, r0
 80067ee:	4614      	mov	r4, r2
 80067f0:	460e      	mov	r6, r1
 80067f2:	b921      	cbnz	r1, 80067fe <_realloc_r+0x14>
 80067f4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80067f8:	4611      	mov	r1, r2
 80067fa:	f7ff bc29 	b.w	8006050 <_malloc_r>
 80067fe:	b922      	cbnz	r2, 800680a <_realloc_r+0x20>
 8006800:	f7ff fbda 	bl	8005fb8 <_free_r>
 8006804:	4625      	mov	r5, r4
 8006806:	4628      	mov	r0, r5
 8006808:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800680a:	f000 f827 	bl	800685c <_malloc_usable_size_r>
 800680e:	42a0      	cmp	r0, r4
 8006810:	d20f      	bcs.n	8006832 <_realloc_r+0x48>
 8006812:	4621      	mov	r1, r4
 8006814:	4638      	mov	r0, r7
 8006816:	f7ff fc1b 	bl	8006050 <_malloc_r>
 800681a:	4605      	mov	r5, r0
 800681c:	2800      	cmp	r0, #0
 800681e:	d0f2      	beq.n	8006806 <_realloc_r+0x1c>
 8006820:	4631      	mov	r1, r6
 8006822:	4622      	mov	r2, r4
 8006824:	f7fe ffb6 	bl	8005794 <memcpy>
 8006828:	4631      	mov	r1, r6
 800682a:	4638      	mov	r0, r7
 800682c:	f7ff fbc4 	bl	8005fb8 <_free_r>
 8006830:	e7e9      	b.n	8006806 <_realloc_r+0x1c>
 8006832:	4635      	mov	r5, r6
 8006834:	e7e7      	b.n	8006806 <_realloc_r+0x1c>
	...

08006838 <_read_r>:
 8006838:	b538      	push	{r3, r4, r5, lr}
 800683a:	4605      	mov	r5, r0
 800683c:	4608      	mov	r0, r1
 800683e:	4611      	mov	r1, r2
 8006840:	2200      	movs	r2, #0
 8006842:	4c05      	ldr	r4, [pc, #20]	; (8006858 <_read_r+0x20>)
 8006844:	6022      	str	r2, [r4, #0]
 8006846:	461a      	mov	r2, r3
 8006848:	f000 f828 	bl	800689c <_read>
 800684c:	1c43      	adds	r3, r0, #1
 800684e:	d102      	bne.n	8006856 <_read_r+0x1e>
 8006850:	6823      	ldr	r3, [r4, #0]
 8006852:	b103      	cbz	r3, 8006856 <_read_r+0x1e>
 8006854:	602b      	str	r3, [r5, #0]
 8006856:	bd38      	pop	{r3, r4, r5, pc}
 8006858:	20000718 	.word	0x20000718

0800685c <_malloc_usable_size_r>:
 800685c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006860:	1f18      	subs	r0, r3, #4
 8006862:	2b00      	cmp	r3, #0
 8006864:	bfbc      	itt	lt
 8006866:	580b      	ldrlt	r3, [r1, r0]
 8006868:	18c0      	addlt	r0, r0, r3
 800686a:	4770      	bx	lr

0800686c <_fstat>:
 800686c:	2258      	movs	r2, #88	; 0x58
 800686e:	4b02      	ldr	r3, [pc, #8]	; (8006878 <_fstat+0xc>)
 8006870:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006874:	601a      	str	r2, [r3, #0]
 8006876:	4770      	bx	lr
 8006878:	20000718 	.word	0x20000718

0800687c <_isatty>:
 800687c:	2258      	movs	r2, #88	; 0x58
 800687e:	4b02      	ldr	r3, [pc, #8]	; (8006888 <_isatty+0xc>)
 8006880:	2000      	movs	r0, #0
 8006882:	601a      	str	r2, [r3, #0]
 8006884:	4770      	bx	lr
 8006886:	bf00      	nop
 8006888:	20000718 	.word	0x20000718

0800688c <_lseek>:
 800688c:	2258      	movs	r2, #88	; 0x58
 800688e:	4b02      	ldr	r3, [pc, #8]	; (8006898 <_lseek+0xc>)
 8006890:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006894:	601a      	str	r2, [r3, #0]
 8006896:	4770      	bx	lr
 8006898:	20000718 	.word	0x20000718

0800689c <_read>:
 800689c:	2258      	movs	r2, #88	; 0x58
 800689e:	4b02      	ldr	r3, [pc, #8]	; (80068a8 <_read+0xc>)
 80068a0:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80068a4:	601a      	str	r2, [r3, #0]
 80068a6:	4770      	bx	lr
 80068a8:	20000718 	.word	0x20000718

080068ac <_sbrk>:
 80068ac:	4a04      	ldr	r2, [pc, #16]	; (80068c0 <_sbrk+0x14>)
 80068ae:	4905      	ldr	r1, [pc, #20]	; (80068c4 <_sbrk+0x18>)
 80068b0:	6813      	ldr	r3, [r2, #0]
 80068b2:	2b00      	cmp	r3, #0
 80068b4:	bf08      	it	eq
 80068b6:	460b      	moveq	r3, r1
 80068b8:	4418      	add	r0, r3
 80068ba:	6010      	str	r0, [r2, #0]
 80068bc:	4618      	mov	r0, r3
 80068be:	4770      	bx	lr
 80068c0:	20000214 	.word	0x20000214
 80068c4:	20000720 	.word	0x20000720

080068c8 <_init>:
 80068c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80068ca:	bf00      	nop
 80068cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80068ce:	bc08      	pop	{r3}
 80068d0:	469e      	mov	lr, r3
 80068d2:	4770      	bx	lr

080068d4 <_fini>:
 80068d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80068d6:	bf00      	nop
 80068d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80068da:	bc08      	pop	{r3}
 80068dc:	469e      	mov	lr, r3
 80068de:	4770      	bx	lr
