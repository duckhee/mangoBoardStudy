
wifiTest.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   0000010c  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000069a0  08000110  08000110  00010110  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000780  08006ab0  08006ab0  00016ab0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .init_array   00000004  08007230  08007230  00017230  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .fini_array   00000004  08007234  08007234  00017234  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .data         000001e4  20000000  08007238  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          00000920  200001e4  0800741c  000201e4  2**2
                  ALLOC
  7 ._user_heap_stack 00000604  20000b04  0800741c  00020b04  2**0
                  ALLOC
  8 .ARM.attributes 00000029  00000000  00000000  000201e4  2**0
                  CONTENTS, READONLY
  9 .debug_info   0000ded2  00000000  00000000  0002020d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00001f76  00000000  00000000  0002e0df  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003b1e  00000000  00000000  00030055  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_aranges 00000750  00000000  00000000  00033b73  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000660  00000000  00000000  000342c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000392d  00000000  00000000  00034923  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00002b6c  00000000  00000000  00038250  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .comment      0000007f  00000000  00000000  0003adbc  2**0
                  CONTENTS, READONLY
 17 .debug_frame  00002618  00000000  00000000  0003ae3c  2**2
                  CONTENTS, READONLY, DEBUGGING
 18 .stab         0000006c  00000000  00000000  0003d454  2**2
                  CONTENTS, READONLY, DEBUGGING
 19 .stabstr      000000e1  00000000  00000000  0003d4c0  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000110 <__do_global_dtors_aux>:
 8000110:	b510      	push	{r4, lr}
 8000112:	4c05      	ldr	r4, [pc, #20]	; (8000128 <__do_global_dtors_aux+0x18>)
 8000114:	7823      	ldrb	r3, [r4, #0]
 8000116:	b933      	cbnz	r3, 8000126 <__do_global_dtors_aux+0x16>
 8000118:	4b04      	ldr	r3, [pc, #16]	; (800012c <__do_global_dtors_aux+0x1c>)
 800011a:	b113      	cbz	r3, 8000122 <__do_global_dtors_aux+0x12>
 800011c:	4804      	ldr	r0, [pc, #16]	; (8000130 <__do_global_dtors_aux+0x20>)
 800011e:	f3af 8000 	nop.w
 8000122:	2301      	movs	r3, #1
 8000124:	7023      	strb	r3, [r4, #0]
 8000126:	bd10      	pop	{r4, pc}
 8000128:	200001e4 	.word	0x200001e4
 800012c:	00000000 	.word	0x00000000
 8000130:	08006a98 	.word	0x08006a98

08000134 <frame_dummy>:
 8000134:	b508      	push	{r3, lr}
 8000136:	4b03      	ldr	r3, [pc, #12]	; (8000144 <frame_dummy+0x10>)
 8000138:	b11b      	cbz	r3, 8000142 <frame_dummy+0xe>
 800013a:	4903      	ldr	r1, [pc, #12]	; (8000148 <frame_dummy+0x14>)
 800013c:	4803      	ldr	r0, [pc, #12]	; (800014c <frame_dummy+0x18>)
 800013e:	f3af 8000 	nop.w
 8000142:	bd08      	pop	{r3, pc}
 8000144:	00000000 	.word	0x00000000
 8000148:	200001e8 	.word	0x200001e8
 800014c:	08006a98 	.word	0x08006a98

08000150 <strlen>:
 8000150:	4603      	mov	r3, r0
 8000152:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000156:	2a00      	cmp	r2, #0
 8000158:	d1fb      	bne.n	8000152 <strlen+0x2>
 800015a:	1a18      	subs	r0, r3, r0
 800015c:	3801      	subs	r0, #1
 800015e:	4770      	bx	lr

08000160 <__aeabi_drsub>:
 8000160:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000164:	e002      	b.n	800016c <__adddf3>
 8000166:	bf00      	nop

08000168 <__aeabi_dsub>:
 8000168:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800016c <__adddf3>:
 800016c:	b530      	push	{r4, r5, lr}
 800016e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000172:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000176:	ea94 0f05 	teq	r4, r5
 800017a:	bf08      	it	eq
 800017c:	ea90 0f02 	teqeq	r0, r2
 8000180:	bf1f      	itttt	ne
 8000182:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000186:	ea55 0c02 	orrsne.w	ip, r5, r2
 800018a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800018e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000192:	f000 80e2 	beq.w	800035a <__adddf3+0x1ee>
 8000196:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800019a:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 800019e:	bfb8      	it	lt
 80001a0:	426d      	neglt	r5, r5
 80001a2:	dd0c      	ble.n	80001be <__adddf3+0x52>
 80001a4:	442c      	add	r4, r5
 80001a6:	ea80 0202 	eor.w	r2, r0, r2
 80001aa:	ea81 0303 	eor.w	r3, r1, r3
 80001ae:	ea82 0000 	eor.w	r0, r2, r0
 80001b2:	ea83 0101 	eor.w	r1, r3, r1
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	2d36      	cmp	r5, #54	; 0x36
 80001c0:	bf88      	it	hi
 80001c2:	bd30      	pophi	{r4, r5, pc}
 80001c4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001c8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001cc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001d0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001d4:	d002      	beq.n	80001dc <__adddf3+0x70>
 80001d6:	4240      	negs	r0, r0
 80001d8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001dc:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001e0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001e4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001e8:	d002      	beq.n	80001f0 <__adddf3+0x84>
 80001ea:	4252      	negs	r2, r2
 80001ec:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80001f0:	ea94 0f05 	teq	r4, r5
 80001f4:	f000 80a7 	beq.w	8000346 <__adddf3+0x1da>
 80001f8:	f1a4 0401 	sub.w	r4, r4, #1
 80001fc:	f1d5 0e20 	rsbs	lr, r5, #32
 8000200:	db0d      	blt.n	800021e <__adddf3+0xb2>
 8000202:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000206:	fa22 f205 	lsr.w	r2, r2, r5
 800020a:	1880      	adds	r0, r0, r2
 800020c:	f141 0100 	adc.w	r1, r1, #0
 8000210:	fa03 f20e 	lsl.w	r2, r3, lr
 8000214:	1880      	adds	r0, r0, r2
 8000216:	fa43 f305 	asr.w	r3, r3, r5
 800021a:	4159      	adcs	r1, r3
 800021c:	e00e      	b.n	800023c <__adddf3+0xd0>
 800021e:	f1a5 0520 	sub.w	r5, r5, #32
 8000222:	f10e 0e20 	add.w	lr, lr, #32
 8000226:	2a01      	cmp	r2, #1
 8000228:	fa03 fc0e 	lsl.w	ip, r3, lr
 800022c:	bf28      	it	cs
 800022e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000232:	fa43 f305 	asr.w	r3, r3, r5
 8000236:	18c0      	adds	r0, r0, r3
 8000238:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800023c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000240:	d507      	bpl.n	8000252 <__adddf3+0xe6>
 8000242:	f04f 0e00 	mov.w	lr, #0
 8000246:	f1dc 0c00 	rsbs	ip, ip, #0
 800024a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800024e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000252:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000256:	d31b      	bcc.n	8000290 <__adddf3+0x124>
 8000258:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800025c:	d30c      	bcc.n	8000278 <__adddf3+0x10c>
 800025e:	0849      	lsrs	r1, r1, #1
 8000260:	ea5f 0030 	movs.w	r0, r0, rrx
 8000264:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000268:	f104 0401 	add.w	r4, r4, #1
 800026c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000270:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000274:	f080 809a 	bcs.w	80003ac <__adddf3+0x240>
 8000278:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800027c:	bf08      	it	eq
 800027e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000282:	f150 0000 	adcs.w	r0, r0, #0
 8000286:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800028a:	ea41 0105 	orr.w	r1, r1, r5
 800028e:	bd30      	pop	{r4, r5, pc}
 8000290:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000294:	4140      	adcs	r0, r0
 8000296:	eb41 0101 	adc.w	r1, r1, r1
 800029a:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800029e:	f1a4 0401 	sub.w	r4, r4, #1
 80002a2:	d1e9      	bne.n	8000278 <__adddf3+0x10c>
 80002a4:	f091 0f00 	teq	r1, #0
 80002a8:	bf04      	itt	eq
 80002aa:	4601      	moveq	r1, r0
 80002ac:	2000      	moveq	r0, #0
 80002ae:	fab1 f381 	clz	r3, r1
 80002b2:	bf08      	it	eq
 80002b4:	3320      	addeq	r3, #32
 80002b6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ba:	f1b3 0220 	subs.w	r2, r3, #32
 80002be:	da0c      	bge.n	80002da <__adddf3+0x16e>
 80002c0:	320c      	adds	r2, #12
 80002c2:	dd08      	ble.n	80002d6 <__adddf3+0x16a>
 80002c4:	f102 0c14 	add.w	ip, r2, #20
 80002c8:	f1c2 020c 	rsb	r2, r2, #12
 80002cc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002d0:	fa21 f102 	lsr.w	r1, r1, r2
 80002d4:	e00c      	b.n	80002f0 <__adddf3+0x184>
 80002d6:	f102 0214 	add.w	r2, r2, #20
 80002da:	bfd8      	it	le
 80002dc:	f1c2 0c20 	rsble	ip, r2, #32
 80002e0:	fa01 f102 	lsl.w	r1, r1, r2
 80002e4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002e8:	bfdc      	itt	le
 80002ea:	ea41 010c 	orrle.w	r1, r1, ip
 80002ee:	4090      	lslle	r0, r2
 80002f0:	1ae4      	subs	r4, r4, r3
 80002f2:	bfa2      	ittt	ge
 80002f4:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80002f8:	4329      	orrge	r1, r5
 80002fa:	bd30      	popge	{r4, r5, pc}
 80002fc:	ea6f 0404 	mvn.w	r4, r4
 8000300:	3c1f      	subs	r4, #31
 8000302:	da1c      	bge.n	800033e <__adddf3+0x1d2>
 8000304:	340c      	adds	r4, #12
 8000306:	dc0e      	bgt.n	8000326 <__adddf3+0x1ba>
 8000308:	f104 0414 	add.w	r4, r4, #20
 800030c:	f1c4 0220 	rsb	r2, r4, #32
 8000310:	fa20 f004 	lsr.w	r0, r0, r4
 8000314:	fa01 f302 	lsl.w	r3, r1, r2
 8000318:	ea40 0003 	orr.w	r0, r0, r3
 800031c:	fa21 f304 	lsr.w	r3, r1, r4
 8000320:	ea45 0103 	orr.w	r1, r5, r3
 8000324:	bd30      	pop	{r4, r5, pc}
 8000326:	f1c4 040c 	rsb	r4, r4, #12
 800032a:	f1c4 0220 	rsb	r2, r4, #32
 800032e:	fa20 f002 	lsr.w	r0, r0, r2
 8000332:	fa01 f304 	lsl.w	r3, r1, r4
 8000336:	ea40 0003 	orr.w	r0, r0, r3
 800033a:	4629      	mov	r1, r5
 800033c:	bd30      	pop	{r4, r5, pc}
 800033e:	fa21 f004 	lsr.w	r0, r1, r4
 8000342:	4629      	mov	r1, r5
 8000344:	bd30      	pop	{r4, r5, pc}
 8000346:	f094 0f00 	teq	r4, #0
 800034a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800034e:	bf06      	itte	eq
 8000350:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000354:	3401      	addeq	r4, #1
 8000356:	3d01      	subne	r5, #1
 8000358:	e74e      	b.n	80001f8 <__adddf3+0x8c>
 800035a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800035e:	bf18      	it	ne
 8000360:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000364:	d029      	beq.n	80003ba <__adddf3+0x24e>
 8000366:	ea94 0f05 	teq	r4, r5
 800036a:	bf08      	it	eq
 800036c:	ea90 0f02 	teqeq	r0, r2
 8000370:	d005      	beq.n	800037e <__adddf3+0x212>
 8000372:	ea54 0c00 	orrs.w	ip, r4, r0
 8000376:	bf04      	itt	eq
 8000378:	4619      	moveq	r1, r3
 800037a:	4610      	moveq	r0, r2
 800037c:	bd30      	pop	{r4, r5, pc}
 800037e:	ea91 0f03 	teq	r1, r3
 8000382:	bf1e      	ittt	ne
 8000384:	2100      	movne	r1, #0
 8000386:	2000      	movne	r0, #0
 8000388:	bd30      	popne	{r4, r5, pc}
 800038a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800038e:	d105      	bne.n	800039c <__adddf3+0x230>
 8000390:	0040      	lsls	r0, r0, #1
 8000392:	4149      	adcs	r1, r1
 8000394:	bf28      	it	cs
 8000396:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800039a:	bd30      	pop	{r4, r5, pc}
 800039c:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003a0:	bf3c      	itt	cc
 80003a2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003a6:	bd30      	popcc	{r4, r5, pc}
 80003a8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003ac:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003b0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003b4:	f04f 0000 	mov.w	r0, #0
 80003b8:	bd30      	pop	{r4, r5, pc}
 80003ba:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003be:	bf1a      	itte	ne
 80003c0:	4619      	movne	r1, r3
 80003c2:	4610      	movne	r0, r2
 80003c4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003c8:	bf1c      	itt	ne
 80003ca:	460b      	movne	r3, r1
 80003cc:	4602      	movne	r2, r0
 80003ce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003d2:	bf06      	itte	eq
 80003d4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003d8:	ea91 0f03 	teqeq	r1, r3
 80003dc:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003e0:	bd30      	pop	{r4, r5, pc}
 80003e2:	bf00      	nop

080003e4 <__aeabi_ui2d>:
 80003e4:	f090 0f00 	teq	r0, #0
 80003e8:	bf04      	itt	eq
 80003ea:	2100      	moveq	r1, #0
 80003ec:	4770      	bxeq	lr
 80003ee:	b530      	push	{r4, r5, lr}
 80003f0:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80003f4:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80003f8:	f04f 0500 	mov.w	r5, #0
 80003fc:	f04f 0100 	mov.w	r1, #0
 8000400:	e750      	b.n	80002a4 <__adddf3+0x138>
 8000402:	bf00      	nop

08000404 <__aeabi_i2d>:
 8000404:	f090 0f00 	teq	r0, #0
 8000408:	bf04      	itt	eq
 800040a:	2100      	moveq	r1, #0
 800040c:	4770      	bxeq	lr
 800040e:	b530      	push	{r4, r5, lr}
 8000410:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000414:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000418:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800041c:	bf48      	it	mi
 800041e:	4240      	negmi	r0, r0
 8000420:	f04f 0100 	mov.w	r1, #0
 8000424:	e73e      	b.n	80002a4 <__adddf3+0x138>
 8000426:	bf00      	nop

08000428 <__aeabi_f2d>:
 8000428:	0042      	lsls	r2, r0, #1
 800042a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800042e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000432:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000436:	bf1f      	itttt	ne
 8000438:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800043c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000440:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000444:	4770      	bxne	lr
 8000446:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800044a:	bf08      	it	eq
 800044c:	4770      	bxeq	lr
 800044e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000452:	bf04      	itt	eq
 8000454:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000458:	4770      	bxeq	lr
 800045a:	b530      	push	{r4, r5, lr}
 800045c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000460:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000464:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000468:	e71c      	b.n	80002a4 <__adddf3+0x138>
 800046a:	bf00      	nop

0800046c <__aeabi_ul2d>:
 800046c:	ea50 0201 	orrs.w	r2, r0, r1
 8000470:	bf08      	it	eq
 8000472:	4770      	bxeq	lr
 8000474:	b530      	push	{r4, r5, lr}
 8000476:	f04f 0500 	mov.w	r5, #0
 800047a:	e00a      	b.n	8000492 <__aeabi_l2d+0x16>

0800047c <__aeabi_l2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800048a:	d502      	bpl.n	8000492 <__aeabi_l2d+0x16>
 800048c:	4240      	negs	r0, r0
 800048e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000492:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000496:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800049a:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 800049e:	f43f aed8 	beq.w	8000252 <__adddf3+0xe6>
 80004a2:	f04f 0203 	mov.w	r2, #3
 80004a6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004aa:	bf18      	it	ne
 80004ac:	3203      	addne	r2, #3
 80004ae:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004b2:	bf18      	it	ne
 80004b4:	3203      	addne	r2, #3
 80004b6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ba:	f1c2 0320 	rsb	r3, r2, #32
 80004be:	fa00 fc03 	lsl.w	ip, r0, r3
 80004c2:	fa20 f002 	lsr.w	r0, r0, r2
 80004c6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004ca:	ea40 000e 	orr.w	r0, r0, lr
 80004ce:	fa21 f102 	lsr.w	r1, r1, r2
 80004d2:	4414      	add	r4, r2
 80004d4:	e6bd      	b.n	8000252 <__adddf3+0xe6>
 80004d6:	bf00      	nop

080004d8 <__aeabi_dmul>:
 80004d8:	b570      	push	{r4, r5, r6, lr}
 80004da:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004de:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004e2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004e6:	bf1d      	ittte	ne
 80004e8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004ec:	ea94 0f0c 	teqne	r4, ip
 80004f0:	ea95 0f0c 	teqne	r5, ip
 80004f4:	f000 f8de 	bleq	80006b4 <__aeabi_dmul+0x1dc>
 80004f8:	442c      	add	r4, r5
 80004fa:	ea81 0603 	eor.w	r6, r1, r3
 80004fe:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000502:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000506:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800050a:	bf18      	it	ne
 800050c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000510:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000514:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000518:	d038      	beq.n	800058c <__aeabi_dmul+0xb4>
 800051a:	fba0 ce02 	umull	ip, lr, r0, r2
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000526:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800052a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800052e:	f04f 0600 	mov.w	r6, #0
 8000532:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000536:	f09c 0f00 	teq	ip, #0
 800053a:	bf18      	it	ne
 800053c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000540:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000544:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000548:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800054c:	d204      	bcs.n	8000558 <__aeabi_dmul+0x80>
 800054e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000552:	416d      	adcs	r5, r5
 8000554:	eb46 0606 	adc.w	r6, r6, r6
 8000558:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800055c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000560:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000564:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000568:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800056c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000570:	bf88      	it	hi
 8000572:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000576:	d81e      	bhi.n	80005b6 <__aeabi_dmul+0xde>
 8000578:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800057c:	bf08      	it	eq
 800057e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000582:	f150 0000 	adcs.w	r0, r0, #0
 8000586:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800058a:	bd70      	pop	{r4, r5, r6, pc}
 800058c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000590:	ea46 0101 	orr.w	r1, r6, r1
 8000594:	ea40 0002 	orr.w	r0, r0, r2
 8000598:	ea81 0103 	eor.w	r1, r1, r3
 800059c:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005a0:	bfc2      	ittt	gt
 80005a2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005a6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005aa:	bd70      	popgt	{r4, r5, r6, pc}
 80005ac:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005b0:	f04f 0e00 	mov.w	lr, #0
 80005b4:	3c01      	subs	r4, #1
 80005b6:	f300 80ab 	bgt.w	8000710 <__aeabi_dmul+0x238>
 80005ba:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005be:	bfde      	ittt	le
 80005c0:	2000      	movle	r0, #0
 80005c2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005c6:	bd70      	pople	{r4, r5, r6, pc}
 80005c8:	f1c4 0400 	rsb	r4, r4, #0
 80005cc:	3c20      	subs	r4, #32
 80005ce:	da35      	bge.n	800063c <__aeabi_dmul+0x164>
 80005d0:	340c      	adds	r4, #12
 80005d2:	dc1b      	bgt.n	800060c <__aeabi_dmul+0x134>
 80005d4:	f104 0414 	add.w	r4, r4, #20
 80005d8:	f1c4 0520 	rsb	r5, r4, #32
 80005dc:	fa00 f305 	lsl.w	r3, r0, r5
 80005e0:	fa20 f004 	lsr.w	r0, r0, r4
 80005e4:	fa01 f205 	lsl.w	r2, r1, r5
 80005e8:	ea40 0002 	orr.w	r0, r0, r2
 80005ec:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80005f0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005f4:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80005f8:	fa21 f604 	lsr.w	r6, r1, r4
 80005fc:	eb42 0106 	adc.w	r1, r2, r6
 8000600:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000604:	bf08      	it	eq
 8000606:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800060a:	bd70      	pop	{r4, r5, r6, pc}
 800060c:	f1c4 040c 	rsb	r4, r4, #12
 8000610:	f1c4 0520 	rsb	r5, r4, #32
 8000614:	fa00 f304 	lsl.w	r3, r0, r4
 8000618:	fa20 f005 	lsr.w	r0, r0, r5
 800061c:	fa01 f204 	lsl.w	r2, r1, r4
 8000620:	ea40 0002 	orr.w	r0, r0, r2
 8000624:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000628:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800062c:	f141 0100 	adc.w	r1, r1, #0
 8000630:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000634:	bf08      	it	eq
 8000636:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800063a:	bd70      	pop	{r4, r5, r6, pc}
 800063c:	f1c4 0520 	rsb	r5, r4, #32
 8000640:	fa00 f205 	lsl.w	r2, r0, r5
 8000644:	ea4e 0e02 	orr.w	lr, lr, r2
 8000648:	fa20 f304 	lsr.w	r3, r0, r4
 800064c:	fa01 f205 	lsl.w	r2, r1, r5
 8000650:	ea43 0302 	orr.w	r3, r3, r2
 8000654:	fa21 f004 	lsr.w	r0, r1, r4
 8000658:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800065c:	fa21 f204 	lsr.w	r2, r1, r4
 8000660:	ea20 0002 	bic.w	r0, r0, r2
 8000664:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000668:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800066c:	bf08      	it	eq
 800066e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000672:	bd70      	pop	{r4, r5, r6, pc}
 8000674:	f094 0f00 	teq	r4, #0
 8000678:	d10f      	bne.n	800069a <__aeabi_dmul+0x1c2>
 800067a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800067e:	0040      	lsls	r0, r0, #1
 8000680:	eb41 0101 	adc.w	r1, r1, r1
 8000684:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000688:	bf08      	it	eq
 800068a:	3c01      	subeq	r4, #1
 800068c:	d0f7      	beq.n	800067e <__aeabi_dmul+0x1a6>
 800068e:	ea41 0106 	orr.w	r1, r1, r6
 8000692:	f095 0f00 	teq	r5, #0
 8000696:	bf18      	it	ne
 8000698:	4770      	bxne	lr
 800069a:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 800069e:	0052      	lsls	r2, r2, #1
 80006a0:	eb43 0303 	adc.w	r3, r3, r3
 80006a4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006a8:	bf08      	it	eq
 80006aa:	3d01      	subeq	r5, #1
 80006ac:	d0f7      	beq.n	800069e <__aeabi_dmul+0x1c6>
 80006ae:	ea43 0306 	orr.w	r3, r3, r6
 80006b2:	4770      	bx	lr
 80006b4:	ea94 0f0c 	teq	r4, ip
 80006b8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006bc:	bf18      	it	ne
 80006be:	ea95 0f0c 	teqne	r5, ip
 80006c2:	d00c      	beq.n	80006de <__aeabi_dmul+0x206>
 80006c4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006c8:	bf18      	it	ne
 80006ca:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ce:	d1d1      	bne.n	8000674 <__aeabi_dmul+0x19c>
 80006d0:	ea81 0103 	eor.w	r1, r1, r3
 80006d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006d8:	f04f 0000 	mov.w	r0, #0
 80006dc:	bd70      	pop	{r4, r5, r6, pc}
 80006de:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006e2:	bf06      	itte	eq
 80006e4:	4610      	moveq	r0, r2
 80006e6:	4619      	moveq	r1, r3
 80006e8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006ec:	d019      	beq.n	8000722 <__aeabi_dmul+0x24a>
 80006ee:	ea94 0f0c 	teq	r4, ip
 80006f2:	d102      	bne.n	80006fa <__aeabi_dmul+0x222>
 80006f4:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80006f8:	d113      	bne.n	8000722 <__aeabi_dmul+0x24a>
 80006fa:	ea95 0f0c 	teq	r5, ip
 80006fe:	d105      	bne.n	800070c <__aeabi_dmul+0x234>
 8000700:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000704:	bf1c      	itt	ne
 8000706:	4610      	movne	r0, r2
 8000708:	4619      	movne	r1, r3
 800070a:	d10a      	bne.n	8000722 <__aeabi_dmul+0x24a>
 800070c:	ea81 0103 	eor.w	r1, r1, r3
 8000710:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000714:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000718:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800071c:	f04f 0000 	mov.w	r0, #0
 8000720:	bd70      	pop	{r4, r5, r6, pc}
 8000722:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000726:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800072a:	bd70      	pop	{r4, r5, r6, pc}

0800072c <__aeabi_ddiv>:
 800072c:	b570      	push	{r4, r5, r6, lr}
 800072e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000732:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000736:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800073a:	bf1d      	ittte	ne
 800073c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000740:	ea94 0f0c 	teqne	r4, ip
 8000744:	ea95 0f0c 	teqne	r5, ip
 8000748:	f000 f8a7 	bleq	800089a <__aeabi_ddiv+0x16e>
 800074c:	eba4 0405 	sub.w	r4, r4, r5
 8000750:	ea81 0e03 	eor.w	lr, r1, r3
 8000754:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000758:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800075c:	f000 8088 	beq.w	8000870 <__aeabi_ddiv+0x144>
 8000760:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000764:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000768:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800076c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000770:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000774:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000778:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800077c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000780:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000784:	429d      	cmp	r5, r3
 8000786:	bf08      	it	eq
 8000788:	4296      	cmpeq	r6, r2
 800078a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800078e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000792:	d202      	bcs.n	800079a <__aeabi_ddiv+0x6e>
 8000794:	085b      	lsrs	r3, r3, #1
 8000796:	ea4f 0232 	mov.w	r2, r2, rrx
 800079a:	1ab6      	subs	r6, r6, r2
 800079c:	eb65 0503 	sbc.w	r5, r5, r3
 80007a0:	085b      	lsrs	r3, r3, #1
 80007a2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007a6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007aa:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007ae:	ebb6 0e02 	subs.w	lr, r6, r2
 80007b2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007b6:	bf22      	ittt	cs
 80007b8:	1ab6      	subcs	r6, r6, r2
 80007ba:	4675      	movcs	r5, lr
 80007bc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007c0:	085b      	lsrs	r3, r3, #1
 80007c2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007c6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007ca:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007ce:	bf22      	ittt	cs
 80007d0:	1ab6      	subcs	r6, r6, r2
 80007d2:	4675      	movcs	r5, lr
 80007d4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007d8:	085b      	lsrs	r3, r3, #1
 80007da:	ea4f 0232 	mov.w	r2, r2, rrx
 80007de:	ebb6 0e02 	subs.w	lr, r6, r2
 80007e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007e6:	bf22      	ittt	cs
 80007e8:	1ab6      	subcs	r6, r6, r2
 80007ea:	4675      	movcs	r5, lr
 80007ec:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80007f0:	085b      	lsrs	r3, r3, #1
 80007f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007fe:	bf22      	ittt	cs
 8000800:	1ab6      	subcs	r6, r6, r2
 8000802:	4675      	movcs	r5, lr
 8000804:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000808:	ea55 0e06 	orrs.w	lr, r5, r6
 800080c:	d018      	beq.n	8000840 <__aeabi_ddiv+0x114>
 800080e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000812:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000816:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800081a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800081e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000822:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000826:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800082a:	d1c0      	bne.n	80007ae <__aeabi_ddiv+0x82>
 800082c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000830:	d10b      	bne.n	800084a <__aeabi_ddiv+0x11e>
 8000832:	ea41 0100 	orr.w	r1, r1, r0
 8000836:	f04f 0000 	mov.w	r0, #0
 800083a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800083e:	e7b6      	b.n	80007ae <__aeabi_ddiv+0x82>
 8000840:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000844:	bf04      	itt	eq
 8000846:	4301      	orreq	r1, r0
 8000848:	2000      	moveq	r0, #0
 800084a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800084e:	bf88      	it	hi
 8000850:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000854:	f63f aeaf 	bhi.w	80005b6 <__aeabi_dmul+0xde>
 8000858:	ebb5 0c03 	subs.w	ip, r5, r3
 800085c:	bf04      	itt	eq
 800085e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000862:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000866:	f150 0000 	adcs.w	r0, r0, #0
 800086a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800086e:	bd70      	pop	{r4, r5, r6, pc}
 8000870:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000874:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000878:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800087c:	bfc2      	ittt	gt
 800087e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000882:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000886:	bd70      	popgt	{r4, r5, r6, pc}
 8000888:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800088c:	f04f 0e00 	mov.w	lr, #0
 8000890:	3c01      	subs	r4, #1
 8000892:	e690      	b.n	80005b6 <__aeabi_dmul+0xde>
 8000894:	ea45 0e06 	orr.w	lr, r5, r6
 8000898:	e68d      	b.n	80005b6 <__aeabi_dmul+0xde>
 800089a:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800089e:	ea94 0f0c 	teq	r4, ip
 80008a2:	bf08      	it	eq
 80008a4:	ea95 0f0c 	teqeq	r5, ip
 80008a8:	f43f af3b 	beq.w	8000722 <__aeabi_dmul+0x24a>
 80008ac:	ea94 0f0c 	teq	r4, ip
 80008b0:	d10a      	bne.n	80008c8 <__aeabi_ddiv+0x19c>
 80008b2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008b6:	f47f af34 	bne.w	8000722 <__aeabi_dmul+0x24a>
 80008ba:	ea95 0f0c 	teq	r5, ip
 80008be:	f47f af25 	bne.w	800070c <__aeabi_dmul+0x234>
 80008c2:	4610      	mov	r0, r2
 80008c4:	4619      	mov	r1, r3
 80008c6:	e72c      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008c8:	ea95 0f0c 	teq	r5, ip
 80008cc:	d106      	bne.n	80008dc <__aeabi_ddiv+0x1b0>
 80008ce:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008d2:	f43f aefd 	beq.w	80006d0 <__aeabi_dmul+0x1f8>
 80008d6:	4610      	mov	r0, r2
 80008d8:	4619      	mov	r1, r3
 80008da:	e722      	b.n	8000722 <__aeabi_dmul+0x24a>
 80008dc:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008e0:	bf18      	it	ne
 80008e2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008e6:	f47f aec5 	bne.w	8000674 <__aeabi_dmul+0x19c>
 80008ea:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008ee:	f47f af0d 	bne.w	800070c <__aeabi_dmul+0x234>
 80008f2:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80008f6:	f47f aeeb 	bne.w	80006d0 <__aeabi_dmul+0x1f8>
 80008fa:	e712      	b.n	8000722 <__aeabi_dmul+0x24a>

080008fc <__gedf2>:
 80008fc:	f04f 3cff 	mov.w	ip, #4294967295	; 0xffffffff
 8000900:	e006      	b.n	8000910 <__cmpdf2+0x4>
 8000902:	bf00      	nop

08000904 <__ledf2>:
 8000904:	f04f 0c01 	mov.w	ip, #1
 8000908:	e002      	b.n	8000910 <__cmpdf2+0x4>
 800090a:	bf00      	nop

0800090c <__cmpdf2>:
 800090c:	f04f 0c01 	mov.w	ip, #1
 8000910:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000914:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000918:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 800091c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000920:	bf18      	it	ne
 8000922:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000926:	d01b      	beq.n	8000960 <__cmpdf2+0x54>
 8000928:	b001      	add	sp, #4
 800092a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 800092e:	bf0c      	ite	eq
 8000930:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000934:	ea91 0f03 	teqne	r1, r3
 8000938:	bf02      	ittt	eq
 800093a:	ea90 0f02 	teqeq	r0, r2
 800093e:	2000      	moveq	r0, #0
 8000940:	4770      	bxeq	lr
 8000942:	f110 0f00 	cmn.w	r0, #0
 8000946:	ea91 0f03 	teq	r1, r3
 800094a:	bf58      	it	pl
 800094c:	4299      	cmppl	r1, r3
 800094e:	bf08      	it	eq
 8000950:	4290      	cmpeq	r0, r2
 8000952:	bf2c      	ite	cs
 8000954:	17d8      	asrcs	r0, r3, #31
 8000956:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 800095a:	f040 0001 	orr.w	r0, r0, #1
 800095e:	4770      	bx	lr
 8000960:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000964:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000968:	d102      	bne.n	8000970 <__cmpdf2+0x64>
 800096a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 800096e:	d107      	bne.n	8000980 <__cmpdf2+0x74>
 8000970:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000974:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000978:	d1d6      	bne.n	8000928 <__cmpdf2+0x1c>
 800097a:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 800097e:	d0d3      	beq.n	8000928 <__cmpdf2+0x1c>
 8000980:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000984:	4770      	bx	lr
 8000986:	bf00      	nop

08000988 <__aeabi_cdrcmple>:
 8000988:	4684      	mov	ip, r0
 800098a:	4610      	mov	r0, r2
 800098c:	4662      	mov	r2, ip
 800098e:	468c      	mov	ip, r1
 8000990:	4619      	mov	r1, r3
 8000992:	4663      	mov	r3, ip
 8000994:	e000      	b.n	8000998 <__aeabi_cdcmpeq>
 8000996:	bf00      	nop

08000998 <__aeabi_cdcmpeq>:
 8000998:	b501      	push	{r0, lr}
 800099a:	f7ff ffb7 	bl	800090c <__cmpdf2>
 800099e:	2800      	cmp	r0, #0
 80009a0:	bf48      	it	mi
 80009a2:	f110 0f00 	cmnmi.w	r0, #0
 80009a6:	bd01      	pop	{r0, pc}

080009a8 <__aeabi_dcmpeq>:
 80009a8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009ac:	f7ff fff4 	bl	8000998 <__aeabi_cdcmpeq>
 80009b0:	bf0c      	ite	eq
 80009b2:	2001      	moveq	r0, #1
 80009b4:	2000      	movne	r0, #0
 80009b6:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ba:	bf00      	nop

080009bc <__aeabi_dcmplt>:
 80009bc:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009c0:	f7ff ffea 	bl	8000998 <__aeabi_cdcmpeq>
 80009c4:	bf34      	ite	cc
 80009c6:	2001      	movcc	r0, #1
 80009c8:	2000      	movcs	r0, #0
 80009ca:	f85d fb08 	ldr.w	pc, [sp], #8
 80009ce:	bf00      	nop

080009d0 <__aeabi_dcmple>:
 80009d0:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009d4:	f7ff ffe0 	bl	8000998 <__aeabi_cdcmpeq>
 80009d8:	bf94      	ite	ls
 80009da:	2001      	movls	r0, #1
 80009dc:	2000      	movhi	r0, #0
 80009de:	f85d fb08 	ldr.w	pc, [sp], #8
 80009e2:	bf00      	nop

080009e4 <__aeabi_dcmpge>:
 80009e4:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009e8:	f7ff ffce 	bl	8000988 <__aeabi_cdrcmple>
 80009ec:	bf94      	ite	ls
 80009ee:	2001      	movls	r0, #1
 80009f0:	2000      	movhi	r0, #0
 80009f2:	f85d fb08 	ldr.w	pc, [sp], #8
 80009f6:	bf00      	nop

080009f8 <__aeabi_dcmpgt>:
 80009f8:	f84d ed08 	str.w	lr, [sp, #-8]!
 80009fc:	f7ff ffc4 	bl	8000988 <__aeabi_cdrcmple>
 8000a00:	bf34      	ite	cc
 8000a02:	2001      	movcc	r0, #1
 8000a04:	2000      	movcs	r0, #0
 8000a06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a0a:	bf00      	nop

08000a0c <__aeabi_dcmpun>:
 8000a0c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a10:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a14:	d102      	bne.n	8000a1c <__aeabi_dcmpun+0x10>
 8000a16:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a1a:	d10a      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a1c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a20:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a24:	d102      	bne.n	8000a2c <__aeabi_dcmpun+0x20>
 8000a26:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a2a:	d102      	bne.n	8000a32 <__aeabi_dcmpun+0x26>
 8000a2c:	f04f 0000 	mov.w	r0, #0
 8000a30:	4770      	bx	lr
 8000a32:	f04f 0001 	mov.w	r0, #1
 8000a36:	4770      	bx	lr

08000a38 <__aeabi_d2iz>:
 8000a38:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000a3c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a40:	d215      	bcs.n	8000a6e <__aeabi_d2iz+0x36>
 8000a42:	d511      	bpl.n	8000a68 <__aeabi_d2iz+0x30>
 8000a44:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a48:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a4c:	d912      	bls.n	8000a74 <__aeabi_d2iz+0x3c>
 8000a4e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a52:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000a56:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a5a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a5e:	fa23 f002 	lsr.w	r0, r3, r2
 8000a62:	bf18      	it	ne
 8000a64:	4240      	negne	r0, r0
 8000a66:	4770      	bx	lr
 8000a68:	f04f 0000 	mov.w	r0, #0
 8000a6c:	4770      	bx	lr
 8000a6e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a72:	d105      	bne.n	8000a80 <__aeabi_d2iz+0x48>
 8000a74:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000a78:	bf08      	it	eq
 8000a7a:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000a7e:	4770      	bx	lr
 8000a80:	f04f 0000 	mov.w	r0, #0
 8000a84:	4770      	bx	lr
 8000a86:	bf00      	nop

08000a88 <__aeabi_d2uiz>:
 8000a88:	004a      	lsls	r2, r1, #1
 8000a8a:	d211      	bcs.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a8c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000a90:	d211      	bcs.n	8000ab6 <__aeabi_d2uiz+0x2e>
 8000a92:	d50d      	bpl.n	8000ab0 <__aeabi_d2uiz+0x28>
 8000a94:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000a98:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a9c:	d40e      	bmi.n	8000abc <__aeabi_d2uiz+0x34>
 8000a9e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000aa2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000aa6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000aaa:	fa23 f002 	lsr.w	r0, r3, r2
 8000aae:	4770      	bx	lr
 8000ab0:	f04f 0000 	mov.w	r0, #0
 8000ab4:	4770      	bx	lr
 8000ab6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000aba:	d102      	bne.n	8000ac2 <__aeabi_d2uiz+0x3a>
 8000abc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8000ac0:	4770      	bx	lr
 8000ac2:	f04f 0000 	mov.w	r0, #0
 8000ac6:	4770      	bx	lr

08000ac8 <__aeabi_d2f>:
 8000ac8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000acc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000ad0:	bf24      	itt	cs
 8000ad2:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000ad6:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000ada:	d90d      	bls.n	8000af8 <__aeabi_d2f+0x30>
 8000adc:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ae0:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ae4:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000ae8:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000aec:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000af0:	bf08      	it	eq
 8000af2:	f020 0001 	biceq.w	r0, r0, #1
 8000af6:	4770      	bx	lr
 8000af8:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000afc:	d121      	bne.n	8000b42 <__aeabi_d2f+0x7a>
 8000afe:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000b02:	bfbc      	itt	lt
 8000b04:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000b08:	4770      	bxlt	lr
 8000b0a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000b0e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000b12:	f1c2 0218 	rsb	r2, r2, #24
 8000b16:	f1c2 0c20 	rsb	ip, r2, #32
 8000b1a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000b1e:	fa20 f002 	lsr.w	r0, r0, r2
 8000b22:	bf18      	it	ne
 8000b24:	f040 0001 	orrne.w	r0, r0, #1
 8000b28:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b2c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000b30:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000b34:	ea40 000c 	orr.w	r0, r0, ip
 8000b38:	fa23 f302 	lsr.w	r3, r3, r2
 8000b3c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000b40:	e7cc      	b.n	8000adc <__aeabi_d2f+0x14>
 8000b42:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000b46:	d107      	bne.n	8000b58 <__aeabi_d2f+0x90>
 8000b48:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000b4c:	bf1e      	ittt	ne
 8000b4e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000b52:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000b56:	4770      	bxne	lr
 8000b58:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000b5c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000b60:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b64:	4770      	bx	lr
 8000b66:	bf00      	nop

08000b68 <Reset_Handler>:
 8000b68:	2100      	movs	r1, #0
 8000b6a:	e003      	b.n	8000b74 <LoopCopyDataInit>

08000b6c <CopyDataInit>:
 8000b6c:	4b09      	ldr	r3, [pc, #36]	; (8000b94 <LoopFillZerobss+0xc>)
 8000b6e:	585b      	ldr	r3, [r3, r1]
 8000b70:	5043      	str	r3, [r0, r1]
 8000b72:	3104      	adds	r1, #4

08000b74 <LoopCopyDataInit>:
 8000b74:	4808      	ldr	r0, [pc, #32]	; (8000b98 <LoopFillZerobss+0x10>)
 8000b76:	4b09      	ldr	r3, [pc, #36]	; (8000b9c <LoopFillZerobss+0x14>)
 8000b78:	1842      	adds	r2, r0, r1
 8000b7a:	429a      	cmp	r2, r3
 8000b7c:	d3f6      	bcc.n	8000b6c <CopyDataInit>
 8000b7e:	4a08      	ldr	r2, [pc, #32]	; (8000ba0 <LoopFillZerobss+0x18>)
 8000b80:	e002      	b.n	8000b88 <LoopFillZerobss>

08000b82 <FillZerobss>:
 8000b82:	2300      	movs	r3, #0
 8000b84:	f842 3b04 	str.w	r3, [r2], #4

08000b88 <LoopFillZerobss>:
 8000b88:	4b06      	ldr	r3, [pc, #24]	; (8000ba4 <LoopFillZerobss+0x1c>)
 8000b8a:	429a      	cmp	r2, r3
 8000b8c:	d3f9      	bcc.n	8000b82 <FillZerobss>
 8000b8e:	f000 fd63 	bl	8001658 <main>
 8000b92:	4770      	bx	lr
 8000b94:	08007238 	.word	0x08007238
 8000b98:	20000000 	.word	0x20000000
 8000b9c:	200001e4 	.word	0x200001e4
 8000ba0:	200001e4 	.word	0x200001e4
 8000ba4:	20000b04 	.word	0x20000b04

08000ba8 <EXTI1_IRQHandler>:
 8000ba8:	e7fe      	b.n	8000ba8 <EXTI1_IRQHandler>
	...

08000bac <SetSysClockTo72>:
  * @note   This function should be used only after reset.
  * @param  None
  * @retval None
  */
static void SetSysClockTo72(void)
{
 8000bac:	b082      	sub	sp, #8
  __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 8000bae:	2300      	movs	r3, #0
 8000bb0:	9301      	str	r3, [sp, #4]
 8000bb2:	9300      	str	r3, [sp, #0]
  
  /* SYSCLK, HCLK, PCLK2 and PCLK1 configuration ---------------------------*/    
  /* Enable HSE */    
  RCC->CR |= ((uint32_t)RCC_CR_HSEON);
 8000bb4:	4a2e      	ldr	r2, [pc, #184]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000bb6:	6813      	ldr	r3, [r2, #0]
 8000bb8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8000bbc:	6013      	str	r3, [r2, #0]
 
  /* Wait till HSE is ready and if Time out is reached exit */
  do
  {
    HSEStatus = RCC->CR & RCC_CR_HSERDY;
 8000bbe:	4b2c      	ldr	r3, [pc, #176]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000bc0:	681b      	ldr	r3, [r3, #0]
 8000bc2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8000bc6:	9300      	str	r3, [sp, #0]
    StartUpCounter++;  
 8000bc8:	9b01      	ldr	r3, [sp, #4]
 8000bca:	3301      	adds	r3, #1
 8000bcc:	9301      	str	r3, [sp, #4]
  } while((HSEStatus == 0) && (StartUpCounter != HSEStartUp_TimeOut));
 8000bce:	9b00      	ldr	r3, [sp, #0]
 8000bd0:	b91b      	cbnz	r3, 8000bda <SetSysClockTo72+0x2e>
 8000bd2:	9b01      	ldr	r3, [sp, #4]
 8000bd4:	f5b3 6fa0 	cmp.w	r3, #1280	; 0x500
 8000bd8:	d1f1      	bne.n	8000bbe <SetSysClockTo72+0x12>

  if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 8000bda:	4b25      	ldr	r3, [pc, #148]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000bdc:	681b      	ldr	r3, [r3, #0]
 8000bde:	f413 3f00 	tst.w	r3, #131072	; 0x20000
 8000be2:	d041      	beq.n	8000c68 <SetSysClockTo72+0xbc>
  {
    HSEStatus = (uint32_t)0x01;
 8000be4:	2301      	movs	r3, #1
 8000be6:	9300      	str	r3, [sp, #0]
  else
  {
    HSEStatus = (uint32_t)0x00;
  }  

  if (HSEStatus == (uint32_t)0x01)
 8000be8:	9b00      	ldr	r3, [sp, #0]
 8000bea:	2b01      	cmp	r3, #1
 8000bec:	d13f      	bne.n	8000c6e <SetSysClockTo72+0xc2>
  {
    /* Enable Prefetch Buffer */
    FLASH->ACR |= FLASH_ACR_PRFTBE;
 8000bee:	4b21      	ldr	r3, [pc, #132]	; (8000c74 <SetSysClockTo72+0xc8>)
 8000bf0:	681a      	ldr	r2, [r3, #0]
 8000bf2:	f042 0210 	orr.w	r2, r2, #16
 8000bf6:	601a      	str	r2, [r3, #0]

    /* Flash 2 wait state */
    FLASH->ACR &= (uint32_t)((uint32_t)~FLASH_ACR_LATENCY);
 8000bf8:	681a      	ldr	r2, [r3, #0]
 8000bfa:	f022 0203 	bic.w	r2, r2, #3
 8000bfe:	601a      	str	r2, [r3, #0]
    FLASH->ACR |= (uint32_t)FLASH_ACR_LATENCY_2;    
 8000c00:	681a      	ldr	r2, [r3, #0]
 8000c02:	f042 0202 	orr.w	r2, r2, #2
 8000c06:	601a      	str	r2, [r3, #0]

 
    /* HCLK = SYSCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_HPRE_DIV1;
 8000c08:	f5a3 5380 	sub.w	r3, r3, #4096	; 0x1000
 8000c0c:	685a      	ldr	r2, [r3, #4]
 8000c0e:	605a      	str	r2, [r3, #4]
      
    /* PCLK2 = HCLK */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE2_DIV1;
 8000c10:	685a      	ldr	r2, [r3, #4]
 8000c12:	605a      	str	r2, [r3, #4]
    
    /* PCLK1 = HCLK/2 */
    RCC->CFGR |= (uint32_t)RCC_CFGR_PPRE1_DIV2;
 8000c14:	685a      	ldr	r2, [r3, #4]
 8000c16:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8000c1a:	605a      	str	r2, [r3, #4]

    /* ADCCLK = PCLK2/6 */
    RCC->CFGR |= (uint32_t)RCC_CFGR_ADCPRE_DIV6;
 8000c1c:	685a      	ldr	r2, [r3, #4]
 8000c1e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8000c22:	605a      	str	r2, [r3, #4]
    RCC->CFGR &= (uint32_t)~(RCC_CFGR_PLLXTPRE | RCC_CFGR_PLLSRC | RCC_CFGR_PLLMULL);
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLXTPRE_PREDIV1 | RCC_CFGR_PLLSRC_PREDIV1 | 
                            RCC_CFGR_PLLMULL9); 
#else    
    /*  PLL configuration: PLLCLK = HSE * 9 = 72 MHz */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_PLLSRC | RCC_CFGR_PLLXTPRE |
 8000c24:	685a      	ldr	r2, [r3, #4]
 8000c26:	f422 127c 	bic.w	r2, r2, #4128768	; 0x3f0000
 8000c2a:	605a      	str	r2, [r3, #4]
                                        RCC_CFGR_PLLMULL));
#ifdef EXT_CLOCK_SOURCE_12M
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL6);
 8000c2c:	685a      	ldr	r2, [r3, #4]
 8000c2e:	f442 1288 	orr.w	r2, r2, #1114112	; 0x110000
 8000c32:	605a      	str	r2, [r3, #4]
    RCC->CFGR |= (uint32_t)(RCC_CFGR_PLLSRC_HSE | RCC_CFGR_PLLMULL9);
#endif
#endif /* STM32F10X_CL */

    /* Enable PLL */
    RCC->CR |= RCC_CR_PLLON;
 8000c34:	681a      	ldr	r2, [r3, #0]
 8000c36:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8000c3a:	601a      	str	r2, [r3, #0]

    /* Wait till PLL is ready */
    while((RCC->CR & RCC_CR_PLLRDY) == 0)
 8000c3c:	4b0c      	ldr	r3, [pc, #48]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000c3e:	681b      	ldr	r3, [r3, #0]
 8000c40:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8000c44:	d0fa      	beq.n	8000c3c <SetSysClockTo72+0x90>
    {
    }
    
    /* Select PLL as system clock source */
    RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 8000c46:	4b0a      	ldr	r3, [pc, #40]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000c48:	685a      	ldr	r2, [r3, #4]
 8000c4a:	f022 0203 	bic.w	r2, r2, #3
 8000c4e:	605a      	str	r2, [r3, #4]
    RCC->CFGR |= (uint32_t)RCC_CFGR_SW_PLL;    
 8000c50:	685a      	ldr	r2, [r3, #4]
 8000c52:	f042 0202 	orr.w	r2, r2, #2
 8000c56:	605a      	str	r2, [r3, #4]

    /* Wait till PLL is used as system clock source */
    while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS) != (uint32_t)0x08)
 8000c58:	4b05      	ldr	r3, [pc, #20]	; (8000c70 <SetSysClockTo72+0xc4>)
 8000c5a:	685b      	ldr	r3, [r3, #4]
 8000c5c:	f003 030c 	and.w	r3, r3, #12
 8000c60:	2b08      	cmp	r3, #8
 8000c62:	d1f9      	bne.n	8000c58 <SetSysClockTo72+0xac>
    /* Go to infinite loop */
    while (1)
    {
    }
  }
}
 8000c64:	b002      	add	sp, #8
 8000c66:	4770      	bx	lr
    HSEStatus = (uint32_t)0x00;
 8000c68:	2300      	movs	r3, #0
 8000c6a:	9300      	str	r3, [sp, #0]
 8000c6c:	e7bc      	b.n	8000be8 <SetSysClockTo72+0x3c>
 8000c6e:	e7fe      	b.n	8000c6e <SetSysClockTo72+0xc2>
 8000c70:	40021000 	.word	0x40021000
 8000c74:	40022000 	.word	0x40022000

08000c78 <SetSysClock>:
{
 8000c78:	b508      	push	{r3, lr}
  SetSysClockTo72();
 8000c7a:	f7ff ff97 	bl	8000bac <SetSysClockTo72>
}
 8000c7e:	bd08      	pop	{r3, pc}

08000c80 <SystemInit>:
{
 8000c80:	b508      	push	{r3, lr}
  RCC->CR |= (uint32_t)0x00000001;
 8000c82:	4b0e      	ldr	r3, [pc, #56]	; (8000cbc <SystemInit+0x3c>)
 8000c84:	681a      	ldr	r2, [r3, #0]
 8000c86:	f042 0201 	orr.w	r2, r2, #1
 8000c8a:	601a      	str	r2, [r3, #0]
  RCC->CFGR &= (uint32_t)0xF8FF0000;
 8000c8c:	6859      	ldr	r1, [r3, #4]
 8000c8e:	4a0c      	ldr	r2, [pc, #48]	; (8000cc0 <SystemInit+0x40>)
 8000c90:	400a      	ands	r2, r1
 8000c92:	605a      	str	r2, [r3, #4]
  RCC->CR &= (uint32_t)0xFEF6FFFF;
 8000c94:	681a      	ldr	r2, [r3, #0]
 8000c96:	f022 7284 	bic.w	r2, r2, #17301504	; 0x1080000
 8000c9a:	f422 3280 	bic.w	r2, r2, #65536	; 0x10000
 8000c9e:	601a      	str	r2, [r3, #0]
  RCC->CR &= (uint32_t)0xFFFBFFFF;
 8000ca0:	681a      	ldr	r2, [r3, #0]
 8000ca2:	f422 2280 	bic.w	r2, r2, #262144	; 0x40000
 8000ca6:	601a      	str	r2, [r3, #0]
  RCC->CFGR &= (uint32_t)0xFF80FFFF;
 8000ca8:	685a      	ldr	r2, [r3, #4]
 8000caa:	f422 02fe 	bic.w	r2, r2, #8323072	; 0x7f0000
 8000cae:	605a      	str	r2, [r3, #4]
  RCC->CIR = 0x009F0000;
 8000cb0:	f44f 021f 	mov.w	r2, #10420224	; 0x9f0000
 8000cb4:	609a      	str	r2, [r3, #8]
  SetSysClock();
 8000cb6:	f7ff ffdf 	bl	8000c78 <SetSysClock>
}
 8000cba:	bd08      	pop	{r3, pc}
 8000cbc:	40021000 	.word	0x40021000
 8000cc0:	f8ff0000 	.word	0xf8ff0000

08000cc4 <NVIC_PriorityGroupConfig>:
  *     @arg NVIC_PriorityGroup_4: 4 bits for pre-emption priority
  *                                0 bits for subpriority
  * @retval None
  */
void NVIC_PriorityGroupConfig(uint32_t NVIC_PriorityGroup)
{
 8000cc4:	b510      	push	{r4, lr}
 8000cc6:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(NVIC_PriorityGroup));
 8000cc8:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8000ccc:	d00f      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000cce:	f5b0 6fc0 	cmp.w	r0, #1536	; 0x600
 8000cd2:	d00c      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000cd4:	f5b0 6fa0 	cmp.w	r0, #1280	; 0x500
 8000cd8:	d009      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000cda:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8000cde:	d006      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000ce0:	f5b0 7f40 	cmp.w	r0, #768	; 0x300
 8000ce4:	d003      	beq.n	8000cee <NVIC_PriorityGroupConfig+0x2a>
 8000ce6:	2162      	movs	r1, #98	; 0x62
 8000ce8:	4804      	ldr	r0, [pc, #16]	; (8000cfc <NVIC_PriorityGroupConfig+0x38>)
 8000cea:	f000 fcdf 	bl	80016ac <assert_failed>
  
  /* Set the PRIGROUP[10:8] bits according to NVIC_PriorityGroup value */
  SCB->AIRCR = AIRCR_VECTKEY_MASK | NVIC_PriorityGroup;
 8000cee:	f044 64bf 	orr.w	r4, r4, #100139008	; 0x5f80000
 8000cf2:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8000cf6:	4b02      	ldr	r3, [pc, #8]	; (8000d00 <NVIC_PriorityGroupConfig+0x3c>)
 8000cf8:	60dc      	str	r4, [r3, #12]
}
 8000cfa:	bd10      	pop	{r4, pc}
 8000cfc:	08006ab0 	.word	0x08006ab0
 8000d00:	e000ed00 	.word	0xe000ed00

08000d04 <NVIC_Init>:
  * @param  NVIC_InitStruct: pointer to a NVIC_InitTypeDef structure that contains
  *   the configuration information for the specified NVIC peripheral.
  * @retval None
  */
void NVIC_Init(NVIC_InitTypeDef* NVIC_InitStruct)
{
 8000d04:	b510      	push	{r4, lr}
 8000d06:	4604      	mov	r4, r0
  uint32_t tmppriority = 0x00, tmppre = 0x00, tmpsub = 0x0F;
  
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 8000d08:	78c3      	ldrb	r3, [r0, #3]
 8000d0a:	2b01      	cmp	r3, #1
 8000d0c:	d812      	bhi.n	8000d34 <NVIC_Init+0x30>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 8000d0e:	7863      	ldrb	r3, [r4, #1]
 8000d10:	2b0f      	cmp	r3, #15
 8000d12:	d814      	bhi.n	8000d3e <NVIC_Init+0x3a>
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 8000d14:	78a3      	ldrb	r3, [r4, #2]
 8000d16:	2b0f      	cmp	r3, #15
 8000d18:	d816      	bhi.n	8000d48 <NVIC_Init+0x44>
    
  if (NVIC_InitStruct->NVIC_IRQChannelCmd != DISABLE)
 8000d1a:	78e3      	ldrb	r3, [r4, #3]
 8000d1c:	b9cb      	cbnz	r3, 8000d52 <NVIC_Init+0x4e>
  }
  else
  {
    /* Disable the Selected IRQ Channels -------------------------------------*/
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 8000d1e:	7823      	ldrb	r3, [r4, #0]
 8000d20:	f003 011f 	and.w	r1, r3, #31
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8000d24:	095b      	lsrs	r3, r3, #5
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 8000d26:	2201      	movs	r2, #1
 8000d28:	408a      	lsls	r2, r1
    NVIC->ICER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8000d2a:	3320      	adds	r3, #32
 8000d2c:	4918      	ldr	r1, [pc, #96]	; (8000d90 <NVIC_Init+0x8c>)
 8000d2e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8000d32:	bd10      	pop	{r4, pc}
  assert_param(IS_FUNCTIONAL_STATE(NVIC_InitStruct->NVIC_IRQChannelCmd));
 8000d34:	2174      	movs	r1, #116	; 0x74
 8000d36:	4817      	ldr	r0, [pc, #92]	; (8000d94 <NVIC_Init+0x90>)
 8000d38:	f000 fcb8 	bl	80016ac <assert_failed>
 8000d3c:	e7e7      	b.n	8000d0e <NVIC_Init+0xa>
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority));  
 8000d3e:	2175      	movs	r1, #117	; 0x75
 8000d40:	4814      	ldr	r0, [pc, #80]	; (8000d94 <NVIC_Init+0x90>)
 8000d42:	f000 fcb3 	bl	80016ac <assert_failed>
 8000d46:	e7e5      	b.n	8000d14 <NVIC_Init+0x10>
  assert_param(IS_NVIC_SUB_PRIORITY(NVIC_InitStruct->NVIC_IRQChannelSubPriority));
 8000d48:	2176      	movs	r1, #118	; 0x76
 8000d4a:	4812      	ldr	r0, [pc, #72]	; (8000d94 <NVIC_Init+0x90>)
 8000d4c:	f000 fcae 	bl	80016ac <assert_failed>
 8000d50:	e7e3      	b.n	8000d1a <NVIC_Init+0x16>
    tmppriority = (0x700 - ((SCB->AIRCR) & (uint32_t)0x700))>> 0x08;
 8000d52:	4b11      	ldr	r3, [pc, #68]	; (8000d98 <NVIC_Init+0x94>)
 8000d54:	68da      	ldr	r2, [r3, #12]
 8000d56:	43d2      	mvns	r2, r2
 8000d58:	f3c2 2202 	ubfx	r2, r2, #8, #3
    tmppre = (0x4 - tmppriority);
 8000d5c:	f1c2 0004 	rsb	r0, r2, #4
    tmpsub = tmpsub >> tmppriority;
 8000d60:	230f      	movs	r3, #15
 8000d62:	fa23 f202 	lsr.w	r2, r3, r2
    tmppriority = (uint32_t)NVIC_InitStruct->NVIC_IRQChannelPreemptionPriority << tmppre;
 8000d66:	7861      	ldrb	r1, [r4, #1]
 8000d68:	4081      	lsls	r1, r0
    tmppriority |=  NVIC_InitStruct->NVIC_IRQChannelSubPriority & tmpsub;
 8000d6a:	78a3      	ldrb	r3, [r4, #2]
 8000d6c:	4013      	ands	r3, r2
 8000d6e:	430b      	orrs	r3, r1
    tmppriority = tmppriority << 0x04;
 8000d70:	011b      	lsls	r3, r3, #4
    NVIC->IP[NVIC_InitStruct->NVIC_IRQChannel] = tmppriority;
 8000d72:	7822      	ldrb	r2, [r4, #0]
 8000d74:	b2db      	uxtb	r3, r3
 8000d76:	4906      	ldr	r1, [pc, #24]	; (8000d90 <NVIC_Init+0x8c>)
 8000d78:	440a      	add	r2, r1
 8000d7a:	f882 3300 	strb.w	r3, [r2, #768]	; 0x300
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 8000d7e:	7823      	ldrb	r3, [r4, #0]
 8000d80:	f003 001f 	and.w	r0, r3, #31
    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8000d84:	095b      	lsrs	r3, r3, #5
      (uint32_t)0x01 << (NVIC_InitStruct->NVIC_IRQChannel & (uint8_t)0x1F);
 8000d86:	2201      	movs	r2, #1
 8000d88:	4082      	lsls	r2, r0
    NVIC->ISER[NVIC_InitStruct->NVIC_IRQChannel >> 0x05] =
 8000d8a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000d8e:	e7d0      	b.n	8000d32 <NVIC_Init+0x2e>
 8000d90:	e000e100 	.word	0xe000e100
 8000d94:	08006ab0 	.word	0x08006ab0
 8000d98:	e000ed00 	.word	0xe000ed00

08000d9c <EXTI_ClearITPendingBit>:
  * @param  EXTI_Line: specifies the EXTI lines to clear.
  *   This parameter can be any combination of EXTI_Linex where x can be (0..19).
  * @retval None
  */
void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
{
 8000d9c:	b510      	push	{r4, lr}
 8000d9e:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_EXTI_LINE(EXTI_Line));
 8000da0:	0d03      	lsrs	r3, r0, #20
 8000da2:	051b      	lsls	r3, r3, #20
 8000da4:	b903      	cbnz	r3, 8000da8 <EXTI_ClearITPendingBit+0xc>
 8000da6:	b918      	cbnz	r0, 8000db0 <EXTI_ClearITPendingBit+0x14>
 8000da8:	21fb      	movs	r1, #251	; 0xfb
 8000daa:	4803      	ldr	r0, [pc, #12]	; (8000db8 <EXTI_ClearITPendingBit+0x1c>)
 8000dac:	f000 fc7e 	bl	80016ac <assert_failed>
  
  EXTI->PR = EXTI_Line;
 8000db0:	4b02      	ldr	r3, [pc, #8]	; (8000dbc <EXTI_ClearITPendingBit+0x20>)
 8000db2:	615c      	str	r4, [r3, #20]
}
 8000db4:	bd10      	pop	{r4, pc}
 8000db6:	bf00      	nop
 8000db8:	08006ae0 	.word	0x08006ae0
 8000dbc:	40010400 	.word	0x40010400

08000dc0 <GPIO_Init>:
  * @param  GPIO_InitStruct: pointer to a GPIO_InitTypeDef structure that
  *   contains the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void GPIO_Init(GPIO_TypeDef* GPIOx, GPIO_InitTypeDef* GPIO_InitStruct)
{
 8000dc0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000dc2:	4605      	mov	r5, r0
 8000dc4:	460c      	mov	r4, r1
  uint32_t currentmode = 0x00, currentpin = 0x00, pinpos = 0x00, pos = 0x00;
  uint32_t tmpreg = 0x00, pinmask = 0x00;
  /* Check the parameters */
  assert_param(IS_GPIO_ALL_PERIPH(GPIOx));
 8000dc6:	4b49      	ldr	r3, [pc, #292]	; (8000eec <GPIO_Init+0x12c>)
 8000dc8:	4298      	cmp	r0, r3
 8000dca:	d01b      	beq.n	8000e04 <GPIO_Init+0x44>
 8000dcc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000dd0:	4298      	cmp	r0, r3
 8000dd2:	d017      	beq.n	8000e04 <GPIO_Init+0x44>
 8000dd4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000dd8:	4298      	cmp	r0, r3
 8000dda:	d013      	beq.n	8000e04 <GPIO_Init+0x44>
 8000ddc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000de0:	4298      	cmp	r0, r3
 8000de2:	d00f      	beq.n	8000e04 <GPIO_Init+0x44>
 8000de4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000de8:	4298      	cmp	r0, r3
 8000dea:	d00b      	beq.n	8000e04 <GPIO_Init+0x44>
 8000dec:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000df0:	4298      	cmp	r0, r3
 8000df2:	d007      	beq.n	8000e04 <GPIO_Init+0x44>
 8000df4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8000df8:	4298      	cmp	r0, r3
 8000dfa:	d003      	beq.n	8000e04 <GPIO_Init+0x44>
 8000dfc:	21b1      	movs	r1, #177	; 0xb1
 8000dfe:	483c      	ldr	r0, [pc, #240]	; (8000ef0 <GPIO_Init+0x130>)
 8000e00:	f000 fc54 	bl	80016ac <assert_failed>
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 8000e04:	78e3      	ldrb	r3, [r4, #3]
 8000e06:	b16b      	cbz	r3, 8000e24 <GPIO_Init+0x64>
 8000e08:	2b04      	cmp	r3, #4
 8000e0a:	d00b      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e0c:	2b28      	cmp	r3, #40	; 0x28
 8000e0e:	d009      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e10:	2b48      	cmp	r3, #72	; 0x48
 8000e12:	d007      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e14:	2b14      	cmp	r3, #20
 8000e16:	d005      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e18:	2b10      	cmp	r3, #16
 8000e1a:	d003      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e1c:	2b1c      	cmp	r3, #28
 8000e1e:	d001      	beq.n	8000e24 <GPIO_Init+0x64>
 8000e20:	2b18      	cmp	r3, #24
 8000e22:	d114      	bne.n	8000e4e <GPIO_Init+0x8e>
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
 8000e24:	8823      	ldrh	r3, [r4, #0]
 8000e26:	b1bb      	cbz	r3, 8000e58 <GPIO_Init+0x98>
  
/*---------------------------- GPIO Mode Configuration -----------------------*/
  currentmode = ((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x0F);
 8000e28:	78e3      	ldrb	r3, [r4, #3]
 8000e2a:	f003 060f 	and.w	r6, r3, #15
 8000e2e:	4630      	mov	r0, r6
  if ((((uint32_t)GPIO_InitStruct->GPIO_Mode) & ((uint32_t)0x10)) != 0x00)
 8000e30:	f013 0f10 	tst.w	r3, #16
 8000e34:	d006      	beq.n	8000e44 <GPIO_Init+0x84>
  { 
    /* Check the parameters */
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 8000e36:	78a3      	ldrb	r3, [r4, #2]
 8000e38:	3b01      	subs	r3, #1
 8000e3a:	b2db      	uxtb	r3, r3
 8000e3c:	2b02      	cmp	r3, #2
 8000e3e:	d810      	bhi.n	8000e62 <GPIO_Init+0xa2>
    /* Output mode */
    currentmode |= (uint32_t)GPIO_InitStruct->GPIO_Speed;
 8000e40:	78a0      	ldrb	r0, [r4, #2]
 8000e42:	4330      	orrs	r0, r6
  }
/*---------------------------- GPIO CRL Configuration ------------------------*/
  /* Configure the eight low port pins */
  if (((uint32_t)GPIO_InitStruct->GPIO_Pin & ((uint32_t)0x00FF)) != 0x00)
 8000e44:	7823      	ldrb	r3, [r4, #0]
 8000e46:	b35b      	cbz	r3, 8000ea0 <GPIO_Init+0xe0>
  {
    tmpreg = GPIOx->CRL;
 8000e48:	682e      	ldr	r6, [r5, #0]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000e4a:	2300      	movs	r3, #0
 8000e4c:	e010      	b.n	8000e70 <GPIO_Init+0xb0>
  assert_param(IS_GPIO_MODE(GPIO_InitStruct->GPIO_Mode));
 8000e4e:	21b2      	movs	r1, #178	; 0xb2
 8000e50:	4827      	ldr	r0, [pc, #156]	; (8000ef0 <GPIO_Init+0x130>)
 8000e52:	f000 fc2b 	bl	80016ac <assert_failed>
 8000e56:	e7e5      	b.n	8000e24 <GPIO_Init+0x64>
  assert_param(IS_GPIO_PIN(GPIO_InitStruct->GPIO_Pin));  
 8000e58:	21b3      	movs	r1, #179	; 0xb3
 8000e5a:	4825      	ldr	r0, [pc, #148]	; (8000ef0 <GPIO_Init+0x130>)
 8000e5c:	f000 fc26 	bl	80016ac <assert_failed>
 8000e60:	e7e2      	b.n	8000e28 <GPIO_Init+0x68>
    assert_param(IS_GPIO_SPEED(GPIO_InitStruct->GPIO_Speed));
 8000e62:	21ba      	movs	r1, #186	; 0xba
 8000e64:	4822      	ldr	r0, [pc, #136]	; (8000ef0 <GPIO_Init+0x130>)
 8000e66:	f000 fc21 	bl	80016ac <assert_failed>
 8000e6a:	e7e9      	b.n	8000e40 <GPIO_Init+0x80>
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
        {
          GPIOx->BRR = (((uint32_t)0x01) << pinpos);
 8000e6c:	616a      	str	r2, [r5, #20]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000e6e:	3301      	adds	r3, #1
 8000e70:	2b07      	cmp	r3, #7
 8000e72:	d814      	bhi.n	8000e9e <GPIO_Init+0xde>
      pos = ((uint32_t)0x01) << pinpos;
 8000e74:	2201      	movs	r2, #1
 8000e76:	409a      	lsls	r2, r3
      currentpin = (GPIO_InitStruct->GPIO_Pin) & pos;
 8000e78:	8821      	ldrh	r1, [r4, #0]
      if (currentpin == pos)
 8000e7a:	ea32 0101 	bics.w	r1, r2, r1
 8000e7e:	d1f6      	bne.n	8000e6e <GPIO_Init+0xae>
        pos = pinpos << 2;
 8000e80:	0099      	lsls	r1, r3, #2
        pinmask = ((uint32_t)0x0F) << pos;
 8000e82:	270f      	movs	r7, #15
 8000e84:	408f      	lsls	r7, r1
        tmpreg &= ~pinmask;
 8000e86:	ea26 0607 	bic.w	r6, r6, r7
        tmpreg |= (currentmode << pos);
 8000e8a:	fa00 f101 	lsl.w	r1, r0, r1
 8000e8e:	430e      	orrs	r6, r1
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8000e90:	78e1      	ldrb	r1, [r4, #3]
 8000e92:	2928      	cmp	r1, #40	; 0x28
 8000e94:	d0ea      	beq.n	8000e6c <GPIO_Init+0xac>
        }
        else
        {
          /* Set the corresponding ODR bit */
          if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 8000e96:	2948      	cmp	r1, #72	; 0x48
 8000e98:	d1e9      	bne.n	8000e6e <GPIO_Init+0xae>
          {
            GPIOx->BSRR = (((uint32_t)0x01) << pinpos);
 8000e9a:	612a      	str	r2, [r5, #16]
 8000e9c:	e7e7      	b.n	8000e6e <GPIO_Init+0xae>
          }
        }
      }
    }
    GPIOx->CRL = tmpreg;
 8000e9e:	602e      	str	r6, [r5, #0]
  }
/*---------------------------- GPIO CRH Configuration ------------------------*/
  /* Configure the eight high port pins */
  if (GPIO_InitStruct->GPIO_Pin > 0x00FF)
 8000ea0:	8823      	ldrh	r3, [r4, #0]
 8000ea2:	2bff      	cmp	r3, #255	; 0xff
 8000ea4:	d920      	bls.n	8000ee8 <GPIO_Init+0x128>
  {
    tmpreg = GPIOx->CRH;
 8000ea6:	686e      	ldr	r6, [r5, #4]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000ea8:	2300      	movs	r3, #0
 8000eaa:	e003      	b.n	8000eb4 <GPIO_Init+0xf4>
        /* Write the mode configuration in the corresponding bits */
        tmpreg |= (currentmode << pos);
        /* Reset the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
        {
          GPIOx->BRR = (((uint32_t)0x01) << (pinpos + 0x08));
 8000eac:	616a      	str	r2, [r5, #20]
 8000eae:	e016      	b.n	8000ede <GPIO_Init+0x11e>
        }
        /* Set the corresponding ODR bit */
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
        {
          GPIOx->BSRR = (((uint32_t)0x01) << (pinpos + 0x08));
 8000eb0:	612a      	str	r2, [r5, #16]
    for (pinpos = 0x00; pinpos < 0x08; pinpos++)
 8000eb2:	3301      	adds	r3, #1
 8000eb4:	2b07      	cmp	r3, #7
 8000eb6:	d816      	bhi.n	8000ee6 <GPIO_Init+0x126>
      pos = (((uint32_t)0x01) << (pinpos + 0x08));
 8000eb8:	f103 0108 	add.w	r1, r3, #8
 8000ebc:	2201      	movs	r2, #1
 8000ebe:	408a      	lsls	r2, r1
      currentpin = ((GPIO_InitStruct->GPIO_Pin) & pos);
 8000ec0:	8821      	ldrh	r1, [r4, #0]
      if (currentpin == pos)
 8000ec2:	ea32 0101 	bics.w	r1, r2, r1
 8000ec6:	d1f4      	bne.n	8000eb2 <GPIO_Init+0xf2>
        pos = pinpos << 2;
 8000ec8:	0099      	lsls	r1, r3, #2
        pinmask = ((uint32_t)0x0F) << pos;
 8000eca:	270f      	movs	r7, #15
 8000ecc:	408f      	lsls	r7, r1
        tmpreg &= ~pinmask;
 8000ece:	ea26 0607 	bic.w	r6, r6, r7
        tmpreg |= (currentmode << pos);
 8000ed2:	fa00 f101 	lsl.w	r1, r0, r1
 8000ed6:	430e      	orrs	r6, r1
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPD)
 8000ed8:	78e1      	ldrb	r1, [r4, #3]
 8000eda:	2928      	cmp	r1, #40	; 0x28
 8000edc:	d0e6      	beq.n	8000eac <GPIO_Init+0xec>
        if (GPIO_InitStruct->GPIO_Mode == GPIO_Mode_IPU)
 8000ede:	78e1      	ldrb	r1, [r4, #3]
 8000ee0:	2948      	cmp	r1, #72	; 0x48
 8000ee2:	d1e6      	bne.n	8000eb2 <GPIO_Init+0xf2>
 8000ee4:	e7e4      	b.n	8000eb0 <GPIO_Init+0xf0>
        }
      }
    }
    GPIOx->CRH = tmpreg;
 8000ee6:	606e      	str	r6, [r5, #4]
  }
}
 8000ee8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000eea:	bf00      	nop
 8000eec:	40010800 	.word	0x40010800
 8000ef0:	08006b18 	.word	0x08006b18

08000ef4 <RCC_GetClocksFreq>:
  * @param  RCC_Clocks: pointer to a RCC_ClocksTypeDef structure which will hold
  *   the clocks frequencies.
  * @retval None
  */
void RCC_GetClocksFreq(RCC_ClocksTypeDef* RCC_Clocks)
{
 8000ef4:	b410      	push	{r4}
#ifdef  STM32F10X_CL
  uint32_t prediv1source = 0, prediv1factor = 0, prediv2factor = 0, pll2mull = 0;
#endif /* STM32F10X_CL */
    
  /* Get SYSCLK source -------------------------------------------------------*/
  tmp = RCC->CFGR & CFGR_SWS_Mask;
 8000ef6:	4b29      	ldr	r3, [pc, #164]	; (8000f9c <RCC_GetClocksFreq+0xa8>)
 8000ef8:	685b      	ldr	r3, [r3, #4]
 8000efa:	f003 030c 	and.w	r3, r3, #12
  
  switch (tmp)
 8000efe:	2b04      	cmp	r3, #4
 8000f00:	d02b      	beq.n	8000f5a <RCC_GetClocksFreq+0x66>
 8000f02:	2b08      	cmp	r3, #8
 8000f04:	d02c      	beq.n	8000f60 <RCC_GetClocksFreq+0x6c>
 8000f06:	b113      	cbz	r3, 8000f0e <RCC_GetClocksFreq+0x1a>
      }
#endif /* STM32F10X_CL */ 
      break;

    default:
      RCC_Clocks->SYSCLK_Frequency = HSI_Value;
 8000f08:	4b25      	ldr	r3, [pc, #148]	; (8000fa0 <RCC_GetClocksFreq+0xac>)
 8000f0a:	6003      	str	r3, [r0, #0]
      break;
 8000f0c:	e001      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
      RCC_Clocks->SYSCLK_Frequency = HSI_Value;
 8000f0e:	4b24      	ldr	r3, [pc, #144]	; (8000fa0 <RCC_GetClocksFreq+0xac>)
 8000f10:	6003      	str	r3, [r0, #0]
  }

  /* Compute HCLK, PCLK1, PCLK2 and ADCCLK clocks frequencies ----------------*/
  /* Get HCLK prescaler */
  tmp = RCC->CFGR & CFGR_HPRE_Set_Mask;
 8000f12:	4922      	ldr	r1, [pc, #136]	; (8000f9c <RCC_GetClocksFreq+0xa8>)
 8000f14:	684b      	ldr	r3, [r1, #4]
  tmp = tmp >> 4;
 8000f16:	f3c3 1303 	ubfx	r3, r3, #4, #4
  presc = APBAHBPrescTable[tmp];
 8000f1a:	4c22      	ldr	r4, [pc, #136]	; (8000fa4 <RCC_GetClocksFreq+0xb0>)
 8000f1c:	5ce3      	ldrb	r3, [r4, r3]
 8000f1e:	b2da      	uxtb	r2, r3
  /* HCLK clock frequency */
  RCC_Clocks->HCLK_Frequency = RCC_Clocks->SYSCLK_Frequency >> presc;
 8000f20:	6803      	ldr	r3, [r0, #0]
 8000f22:	40d3      	lsrs	r3, r2
 8000f24:	6043      	str	r3, [r0, #4]
  /* Get PCLK1 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE1_Set_Mask;
 8000f26:	684a      	ldr	r2, [r1, #4]
  tmp = tmp >> 8;
 8000f28:	f3c2 2202 	ubfx	r2, r2, #8, #3
  presc = APBAHBPrescTable[tmp];
 8000f2c:	5ca2      	ldrb	r2, [r4, r2]
 8000f2e:	b2d2      	uxtb	r2, r2
  /* PCLK1 clock frequency */
  RCC_Clocks->PCLK1_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 8000f30:	fa23 f202 	lsr.w	r2, r3, r2
 8000f34:	6082      	str	r2, [r0, #8]
  /* Get PCLK2 prescaler */
  tmp = RCC->CFGR & CFGR_PPRE2_Set_Mask;
 8000f36:	684a      	ldr	r2, [r1, #4]
  tmp = tmp >> 11;
 8000f38:	f3c2 22c2 	ubfx	r2, r2, #11, #3
  presc = APBAHBPrescTable[tmp];
 8000f3c:	5ca2      	ldrb	r2, [r4, r2]
 8000f3e:	b2d2      	uxtb	r2, r2
  /* PCLK2 clock frequency */
  RCC_Clocks->PCLK2_Frequency = RCC_Clocks->HCLK_Frequency >> presc;
 8000f40:	40d3      	lsrs	r3, r2
 8000f42:	60c3      	str	r3, [r0, #12]
  /* Get ADCCLK prescaler */
  tmp = RCC->CFGR & CFGR_ADCPRE_Set_Mask;
 8000f44:	684a      	ldr	r2, [r1, #4]
  tmp = tmp >> 14;
 8000f46:	f3c2 3281 	ubfx	r2, r2, #14, #2
  presc = ADCPrescTable[tmp];
 8000f4a:	4917      	ldr	r1, [pc, #92]	; (8000fa8 <RCC_GetClocksFreq+0xb4>)
 8000f4c:	5c8a      	ldrb	r2, [r1, r2]
 8000f4e:	b2d2      	uxtb	r2, r2
  /* ADCCLK clock frequency */
  RCC_Clocks->ADCCLK_Frequency = RCC_Clocks->PCLK2_Frequency / presc;
 8000f50:	fbb3 f3f2 	udiv	r3, r3, r2
 8000f54:	6103      	str	r3, [r0, #16]
}
 8000f56:	bc10      	pop	{r4}
 8000f58:	4770      	bx	lr
      RCC_Clocks->SYSCLK_Frequency = HSE_Value;
 8000f5a:	4b14      	ldr	r3, [pc, #80]	; (8000fac <RCC_GetClocksFreq+0xb8>)
 8000f5c:	6003      	str	r3, [r0, #0]
      break;
 8000f5e:	e7d8      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
      pllmull = RCC->CFGR & CFGR_PLLMull_Mask;
 8000f60:	4a0e      	ldr	r2, [pc, #56]	; (8000f9c <RCC_GetClocksFreq+0xa8>)
 8000f62:	6853      	ldr	r3, [r2, #4]
      pllsource = RCC->CFGR & CFGR_PLLSRC_Mask;
 8000f64:	6852      	ldr	r2, [r2, #4]
      pllmull = ( pllmull >> 18) + 2;
 8000f66:	f3c3 4383 	ubfx	r3, r3, #18, #4
 8000f6a:	3302      	adds	r3, #2
      if (pllsource == 0x00)
 8000f6c:	f412 3f80 	tst.w	r2, #65536	; 0x10000
 8000f70:	d009      	beq.n	8000f86 <RCC_GetClocksFreq+0x92>
        if ((RCC->CFGR & CFGR_PLLXTPRE_Mask) != (uint32_t)RESET)
 8000f72:	4a0a      	ldr	r2, [pc, #40]	; (8000f9c <RCC_GetClocksFreq+0xa8>)
 8000f74:	6852      	ldr	r2, [r2, #4]
 8000f76:	f412 3f00 	tst.w	r2, #131072	; 0x20000
 8000f7a:	d009      	beq.n	8000f90 <RCC_GetClocksFreq+0x9c>
          RCC_Clocks->SYSCLK_Frequency = (HSE_Value >> 1) * pllmull;
 8000f7c:	4a0c      	ldr	r2, [pc, #48]	; (8000fb0 <RCC_GetClocksFreq+0xbc>)
 8000f7e:	fb02 f303 	mul.w	r3, r2, r3
 8000f82:	6003      	str	r3, [r0, #0]
 8000f84:	e7c5      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
        RCC_Clocks->SYSCLK_Frequency = (HSI_Value >> 1) * pllmull;
 8000f86:	4a0b      	ldr	r2, [pc, #44]	; (8000fb4 <RCC_GetClocksFreq+0xc0>)
 8000f88:	fb02 f303 	mul.w	r3, r2, r3
 8000f8c:	6003      	str	r3, [r0, #0]
 8000f8e:	e7c0      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
          RCC_Clocks->SYSCLK_Frequency = HSE_Value * pllmull;
 8000f90:	4a06      	ldr	r2, [pc, #24]	; (8000fac <RCC_GetClocksFreq+0xb8>)
 8000f92:	fb02 f303 	mul.w	r3, r2, r3
 8000f96:	6003      	str	r3, [r0, #0]
 8000f98:	e7bb      	b.n	8000f12 <RCC_GetClocksFreq+0x1e>
 8000f9a:	bf00      	nop
 8000f9c:	40021000 	.word	0x40021000
 8000fa0:	007a1200 	.word	0x007a1200
 8000fa4:	20000004 	.word	0x20000004
 8000fa8:	20000000 	.word	0x20000000
 8000fac:	00b71b00 	.word	0x00b71b00
 8000fb0:	005b8d80 	.word	0x005b8d80
 8000fb4:	003d0900 	.word	0x003d0900

08000fb8 <RCC_APB2PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB2PeriphClockCmd(uint32_t RCC_APB2Periph, FunctionalState NewState)
{
 8000fb8:	b538      	push	{r3, r4, r5, lr}
 8000fba:	4604      	mov	r4, r0
 8000fbc:	460d      	mov	r5, r1
  /* Check the parameters */
  assert_param(IS_RCC_APB2_PERIPH(RCC_APB2Periph));
 8000fbe:	f420 437f 	bic.w	r3, r0, #65280	; 0xff00
 8000fc2:	f023 03fd 	bic.w	r3, r3, #253	; 0xfd
 8000fc6:	b903      	cbnz	r3, 8000fca <RCC_APB2PeriphClockCmd+0x12>
 8000fc8:	b920      	cbnz	r0, 8000fd4 <RCC_APB2PeriphClockCmd+0x1c>
 8000fca:	f240 4137 	movw	r1, #1079	; 0x437
 8000fce:	480b      	ldr	r0, [pc, #44]	; (8000ffc <RCC_APB2PeriphClockCmd+0x44>)
 8000fd0:	f000 fb6c 	bl	80016ac <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 8000fd4:	2d01      	cmp	r5, #1
 8000fd6:	d806      	bhi.n	8000fe6 <RCC_APB2PeriphClockCmd+0x2e>
  if (NewState != DISABLE)
 8000fd8:	b95d      	cbnz	r5, 8000ff2 <RCC_APB2PeriphClockCmd+0x3a>
  {
    RCC->APB2ENR |= RCC_APB2Periph;
  }
  else
  {
    RCC->APB2ENR &= ~RCC_APB2Periph;
 8000fda:	4a09      	ldr	r2, [pc, #36]	; (8001000 <RCC_APB2PeriphClockCmd+0x48>)
 8000fdc:	6993      	ldr	r3, [r2, #24]
 8000fde:	ea23 0404 	bic.w	r4, r3, r4
 8000fe2:	6194      	str	r4, [r2, #24]
  }
}
 8000fe4:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 8000fe6:	f44f 6187 	mov.w	r1, #1080	; 0x438
 8000fea:	4804      	ldr	r0, [pc, #16]	; (8000ffc <RCC_APB2PeriphClockCmd+0x44>)
 8000fec:	f000 fb5e 	bl	80016ac <assert_failed>
 8000ff0:	e7f2      	b.n	8000fd8 <RCC_APB2PeriphClockCmd+0x20>
    RCC->APB2ENR |= RCC_APB2Periph;
 8000ff2:	4a03      	ldr	r2, [pc, #12]	; (8001000 <RCC_APB2PeriphClockCmd+0x48>)
 8000ff4:	6993      	ldr	r3, [r2, #24]
 8000ff6:	431c      	orrs	r4, r3
 8000ff8:	6194      	str	r4, [r2, #24]
 8000ffa:	e7f3      	b.n	8000fe4 <RCC_APB2PeriphClockCmd+0x2c>
 8000ffc:	08006b50 	.word	0x08006b50
 8001000:	40021000 	.word	0x40021000

08001004 <RCC_APB1PeriphClockCmd>:
  * @param  NewState: new state of the specified peripheral clock.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void RCC_APB1PeriphClockCmd(uint32_t RCC_APB1Periph, FunctionalState NewState)
{
 8001004:	b538      	push	{r3, r4, r5, lr}
 8001006:	4604      	mov	r4, r0
 8001008:	460d      	mov	r5, r1
  /* Check the parameters */
  assert_param(IS_RCC_APB1_PERIPH(RCC_APB1Periph));
 800100a:	4b0e      	ldr	r3, [pc, #56]	; (8001044 <RCC_APB1PeriphClockCmd+0x40>)
 800100c:	4003      	ands	r3, r0
 800100e:	b903      	cbnz	r3, 8001012 <RCC_APB1PeriphClockCmd+0xe>
 8001010:	b920      	cbnz	r0, 800101c <RCC_APB1PeriphClockCmd+0x18>
 8001012:	f240 4155 	movw	r1, #1109	; 0x455
 8001016:	480c      	ldr	r0, [pc, #48]	; (8001048 <RCC_APB1PeriphClockCmd+0x44>)
 8001018:	f000 fb48 	bl	80016ac <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 800101c:	2d01      	cmp	r5, #1
 800101e:	d806      	bhi.n	800102e <RCC_APB1PeriphClockCmd+0x2a>
  if (NewState != DISABLE)
 8001020:	b95d      	cbnz	r5, 800103a <RCC_APB1PeriphClockCmd+0x36>
  {
    RCC->APB1ENR |= RCC_APB1Periph;
  }
  else
  {
    RCC->APB1ENR &= ~RCC_APB1Periph;
 8001022:	4a0a      	ldr	r2, [pc, #40]	; (800104c <RCC_APB1PeriphClockCmd+0x48>)
 8001024:	69d3      	ldr	r3, [r2, #28]
 8001026:	ea23 0404 	bic.w	r4, r3, r4
 800102a:	61d4      	str	r4, [r2, #28]
  }
}
 800102c:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 800102e:	f240 4156 	movw	r1, #1110	; 0x456
 8001032:	4805      	ldr	r0, [pc, #20]	; (8001048 <RCC_APB1PeriphClockCmd+0x44>)
 8001034:	f000 fb3a 	bl	80016ac <assert_failed>
 8001038:	e7f2      	b.n	8001020 <RCC_APB1PeriphClockCmd+0x1c>
    RCC->APB1ENR |= RCC_APB1Periph;
 800103a:	4a04      	ldr	r2, [pc, #16]	; (800104c <RCC_APB1PeriphClockCmd+0x48>)
 800103c:	69d3      	ldr	r3, [r2, #28]
 800103e:	431c      	orrs	r4, r3
 8001040:	61d4      	str	r4, [r2, #28]
 8001042:	e7f3      	b.n	800102c <RCC_APB1PeriphClockCmd+0x28>
 8001044:	c10137c0 	.word	0xc10137c0
 8001048:	08006b50 	.word	0x08006b50
 800104c:	40021000 	.word	0x40021000

08001050 <USART_Init>:
  * @param  USART_InitStruct: pointer to a USART_InitTypeDef structure
  *   that contains the configuration information for the specified USART peripheral.
  * @retval None
  */
void USART_Init(USART_TypeDef* USARTx, USART_InitTypeDef* USART_InitStruct)
{
 8001050:	b530      	push	{r4, r5, lr}
 8001052:	b087      	sub	sp, #28
 8001054:	4604      	mov	r4, r0
 8001056:	460d      	mov	r5, r1
  uint32_t integerdivider = 0x00;
  uint32_t fractionaldivider = 0x00;
  uint32_t usartxbase = 0;
  RCC_ClocksTypeDef RCC_ClocksStatus;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 8001058:	4b58      	ldr	r3, [pc, #352]	; (80011bc <USART_Init+0x16c>)
 800105a:	4298      	cmp	r0, r3
 800105c:	d013      	beq.n	8001086 <USART_Init+0x36>
 800105e:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001062:	4298      	cmp	r0, r3
 8001064:	d00f      	beq.n	8001086 <USART_Init+0x36>
 8001066:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800106a:	4298      	cmp	r0, r3
 800106c:	d00b      	beq.n	8001086 <USART_Init+0x36>
 800106e:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001072:	4298      	cmp	r0, r3
 8001074:	d007      	beq.n	8001086 <USART_Init+0x36>
 8001076:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800107a:	4298      	cmp	r0, r3
 800107c:	d003      	beq.n	8001086 <USART_Init+0x36>
 800107e:	21ad      	movs	r1, #173	; 0xad
 8001080:	484f      	ldr	r0, [pc, #316]	; (80011c0 <USART_Init+0x170>)
 8001082:	f000 fb13 	bl	80016ac <assert_failed>
  assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
 8001086:	682b      	ldr	r3, [r5, #0]
 8001088:	3b01      	subs	r3, #1
 800108a:	4a4e      	ldr	r2, [pc, #312]	; (80011c4 <USART_Init+0x174>)
 800108c:	4293      	cmp	r3, r2
 800108e:	d87a      	bhi.n	8001186 <USART_Init+0x136>
  assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 8001090:	88ab      	ldrh	r3, [r5, #4]
 8001092:	b113      	cbz	r3, 800109a <USART_Init+0x4a>
 8001094:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001098:	d17a      	bne.n	8001190 <USART_Init+0x140>
  assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 800109a:	88eb      	ldrh	r3, [r5, #6]
 800109c:	b143      	cbz	r3, 80010b0 <USART_Init+0x60>
 800109e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80010a2:	d005      	beq.n	80010b0 <USART_Init+0x60>
 80010a4:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80010a8:	d002      	beq.n	80010b0 <USART_Init+0x60>
 80010aa:	f5b3 5f40 	cmp.w	r3, #12288	; 0x3000
 80010ae:	d174      	bne.n	800119a <USART_Init+0x14a>
  assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 80010b0:	892b      	ldrh	r3, [r5, #8]
 80010b2:	b12b      	cbz	r3, 80010c0 <USART_Init+0x70>
 80010b4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80010b8:	d002      	beq.n	80010c0 <USART_Init+0x70>
 80010ba:	f5b3 6fc0 	cmp.w	r3, #1536	; 0x600
 80010be:	d171      	bne.n	80011a4 <USART_Init+0x154>
  assert_param(IS_USART_MODE(USART_InitStruct->USART_Mode));
 80010c0:	896a      	ldrh	r2, [r5, #10]
 80010c2:	f022 030c 	bic.w	r3, r2, #12
 80010c6:	b29b      	uxth	r3, r3
 80010c8:	b903      	cbnz	r3, 80010cc <USART_Init+0x7c>
 80010ca:	b91a      	cbnz	r2, 80010d4 <USART_Init+0x84>
 80010cc:	21b2      	movs	r1, #178	; 0xb2
 80010ce:	483c      	ldr	r0, [pc, #240]	; (80011c0 <USART_Init+0x170>)
 80010d0:	f000 faec 	bl	80016ac <assert_failed>
  assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 80010d4:	89ab      	ldrh	r3, [r5, #12]
 80010d6:	b143      	cbz	r3, 80010ea <USART_Init+0x9a>
 80010d8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 80010dc:	d005      	beq.n	80010ea <USART_Init+0x9a>
 80010de:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80010e2:	d002      	beq.n	80010ea <USART_Init+0x9a>
 80010e4:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 80010e8:	d161      	bne.n	80011ae <USART_Init+0x15e>
  /* The hardware flow control is available only for USART1, USART2 and USART3 */
  if (USART_InitStruct->USART_HardwareFlowControl != USART_HardwareFlowControl_None)
 80010ea:	89ab      	ldrh	r3, [r5, #12]
 80010ec:	b173      	cbz	r3, 800110c <USART_Init+0xbc>
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
 80010ee:	4b33      	ldr	r3, [pc, #204]	; (80011bc <USART_Init+0x16c>)
 80010f0:	429c      	cmp	r4, r3
 80010f2:	d00b      	beq.n	800110c <USART_Init+0xbc>
 80010f4:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80010f8:	429c      	cmp	r4, r3
 80010fa:	d007      	beq.n	800110c <USART_Init+0xbc>
 80010fc:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001100:	429c      	cmp	r4, r3
 8001102:	d003      	beq.n	800110c <USART_Init+0xbc>
 8001104:	21b7      	movs	r1, #183	; 0xb7
 8001106:	482e      	ldr	r0, [pc, #184]	; (80011c0 <USART_Init+0x170>)
 8001108:	f000 fad0 	bl	80016ac <assert_failed>
  }

  usartxbase = (uint32_t)USARTx;

/*---------------------------- USART CR2 Configuration -----------------------*/
  tmpreg = USARTx->CR2;
 800110c:	8a23      	ldrh	r3, [r4, #16]
 800110e:	b29b      	uxth	r3, r3
  /* Clear STOP[13:12] bits */
  tmpreg &= CR2_STOP_CLEAR_Mask;
  /* Configure the USART Stop Bits, Clock, CPOL, CPHA and LastBit ------------*/
  /* Set STOP[13:12] bits according to USART_StopBits value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_StopBits;
 8001110:	88ea      	ldrh	r2, [r5, #6]
 8001112:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001116:	4313      	orrs	r3, r2
  
  /* Write to USART CR2 */
  USARTx->CR2 = (uint16_t)tmpreg;
 8001118:	8223      	strh	r3, [r4, #16]

/*---------------------------- USART CR1 Configuration -----------------------*/
  tmpreg = USARTx->CR1;
 800111a:	89a3      	ldrh	r3, [r4, #12]
 800111c:	b29b      	uxth	r3, r3
  tmpreg &= CR1_CLEAR_Mask;
  /* Configure the USART Word Length, Parity and mode ----------------------- */
  /* Set the M bits according to USART_WordLength value */
  /* Set PCE and PS bits according to USART_Parity value */
  /* Set TE and RE bits according to USART_Mode value */
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 800111e:	88a9      	ldrh	r1, [r5, #4]
 8001120:	8928      	ldrh	r0, [r5, #8]
            USART_InitStruct->USART_Mode;
 8001122:	896a      	ldrh	r2, [r5, #10]
  tmpreg |= (uint32_t)USART_InitStruct->USART_WordLength | USART_InitStruct->USART_Parity |
 8001124:	4301      	orrs	r1, r0
 8001126:	430a      	orrs	r2, r1
 8001128:	f423 53b0 	bic.w	r3, r3, #5632	; 0x1600
 800112c:	f023 030c 	bic.w	r3, r3, #12
 8001130:	4313      	orrs	r3, r2
  /* Write to USART CR1 */
  USARTx->CR1 = (uint16_t)tmpreg;
 8001132:	81a3      	strh	r3, [r4, #12]

/*---------------------------- USART CR3 Configuration -----------------------*/  
  tmpreg = USARTx->CR3;
 8001134:	8aa3      	ldrh	r3, [r4, #20]
 8001136:	b29b      	uxth	r3, r3
  /* Clear CTSE and RTSE bits */
  tmpreg &= CR3_CLEAR_Mask;
  /* Configure the USART HFC -------------------------------------------------*/
  /* Set CTSE and RTSE bits according to USART_HardwareFlowControl value */
  tmpreg |= USART_InitStruct->USART_HardwareFlowControl;
 8001138:	89aa      	ldrh	r2, [r5, #12]
 800113a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800113e:	4313      	orrs	r3, r2
  /* Write to USART CR3 */
  USARTx->CR3 = (uint16_t)tmpreg;
 8001140:	82a3      	strh	r3, [r4, #20]

/*---------------------------- USART BRR Configuration -----------------------*/
  /* Configure the USART Baud Rate -------------------------------------------*/
  RCC_GetClocksFreq(&RCC_ClocksStatus);
 8001142:	a801      	add	r0, sp, #4
 8001144:	f7ff fed6 	bl	8000ef4 <RCC_GetClocksFreq>
  if (usartxbase == USART1_BASE)
 8001148:	4b1c      	ldr	r3, [pc, #112]	; (80011bc <USART_Init+0x16c>)
 800114a:	429c      	cmp	r4, r3
 800114c:	d034      	beq.n	80011b8 <USART_Init+0x168>
  {
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
  }
  else
  {
    apbclock = RCC_ClocksStatus.PCLK1_Frequency;
 800114e:	9b03      	ldr	r3, [sp, #12]
  }
  /* Determine the integer part */
  integerdivider = ((0x19 * apbclock) / (0x04 * (USART_InitStruct->USART_BaudRate)));
 8001150:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001154:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 8001158:	682a      	ldr	r2, [r5, #0]
 800115a:	0092      	lsls	r2, r2, #2
 800115c:	fbb3 f2f2 	udiv	r2, r3, r2
  tmpreg = (integerdivider / 0x64) << 0x04;
 8001160:	4819      	ldr	r0, [pc, #100]	; (80011c8 <USART_Init+0x178>)
 8001162:	fba0 1302 	umull	r1, r3, r0, r2
 8001166:	0959      	lsrs	r1, r3, #5
  /* Determine the fractional part */
  fractionaldivider = integerdivider - (0x64 * (tmpreg >> 0x04));
 8001168:	2364      	movs	r3, #100	; 0x64
 800116a:	fb01 2313 	mls	r3, r1, r3, r2
  tmpreg |= ((((fractionaldivider * 0x10) + 0x32) / 0x64)) & ((uint8_t)0x0F);
 800116e:	011b      	lsls	r3, r3, #4
 8001170:	3332      	adds	r3, #50	; 0x32
 8001172:	fba0 2303 	umull	r2, r3, r0, r3
 8001176:	f3c3 1343 	ubfx	r3, r3, #5, #4
 800117a:	ea43 1301 	orr.w	r3, r3, r1, lsl #4
  /* Write to USART BRR */
  USARTx->BRR = (uint16_t)tmpreg;
 800117e:	b29b      	uxth	r3, r3
 8001180:	8123      	strh	r3, [r4, #8]
}
 8001182:	b007      	add	sp, #28
 8001184:	bd30      	pop	{r4, r5, pc}
  assert_param(IS_USART_BAUDRATE(USART_InitStruct->USART_BaudRate));  
 8001186:	21ae      	movs	r1, #174	; 0xae
 8001188:	480d      	ldr	r0, [pc, #52]	; (80011c0 <USART_Init+0x170>)
 800118a:	f000 fa8f 	bl	80016ac <assert_failed>
 800118e:	e77f      	b.n	8001090 <USART_Init+0x40>
  assert_param(IS_USART_WORD_LENGTH(USART_InitStruct->USART_WordLength));
 8001190:	21af      	movs	r1, #175	; 0xaf
 8001192:	480b      	ldr	r0, [pc, #44]	; (80011c0 <USART_Init+0x170>)
 8001194:	f000 fa8a 	bl	80016ac <assert_failed>
 8001198:	e77f      	b.n	800109a <USART_Init+0x4a>
  assert_param(IS_USART_STOPBITS(USART_InitStruct->USART_StopBits));
 800119a:	21b0      	movs	r1, #176	; 0xb0
 800119c:	4808      	ldr	r0, [pc, #32]	; (80011c0 <USART_Init+0x170>)
 800119e:	f000 fa85 	bl	80016ac <assert_failed>
 80011a2:	e785      	b.n	80010b0 <USART_Init+0x60>
  assert_param(IS_USART_PARITY(USART_InitStruct->USART_Parity));
 80011a4:	21b1      	movs	r1, #177	; 0xb1
 80011a6:	4806      	ldr	r0, [pc, #24]	; (80011c0 <USART_Init+0x170>)
 80011a8:	f000 fa80 	bl	80016ac <assert_failed>
 80011ac:	e788      	b.n	80010c0 <USART_Init+0x70>
  assert_param(IS_USART_HARDWARE_FLOW_CONTROL(USART_InitStruct->USART_HardwareFlowControl));
 80011ae:	21b3      	movs	r1, #179	; 0xb3
 80011b0:	4803      	ldr	r0, [pc, #12]	; (80011c0 <USART_Init+0x170>)
 80011b2:	f000 fa7b 	bl	80016ac <assert_failed>
 80011b6:	e798      	b.n	80010ea <USART_Init+0x9a>
    apbclock = RCC_ClocksStatus.PCLK2_Frequency;
 80011b8:	9b04      	ldr	r3, [sp, #16]
 80011ba:	e7c9      	b.n	8001150 <USART_Init+0x100>
 80011bc:	40013800 	.word	0x40013800
 80011c0:	08006b88 	.word	0x08006b88
 80011c4:	0044aa1f 	.word	0x0044aa1f
 80011c8:	51eb851f 	.word	0x51eb851f

080011cc <USART_Cmd>:
  * @param  NewState: new state of the USARTx peripheral.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_Cmd(USART_TypeDef* USARTx, FunctionalState NewState)
{
 80011cc:	b538      	push	{r3, r4, r5, lr}
 80011ce:	4604      	mov	r4, r0
 80011d0:	460d      	mov	r5, r1
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 80011d2:	4b16      	ldr	r3, [pc, #88]	; (800122c <USART_Cmd+0x60>)
 80011d4:	4298      	cmp	r0, r3
 80011d6:	d014      	beq.n	8001202 <USART_Cmd+0x36>
 80011d8:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80011dc:	4298      	cmp	r0, r3
 80011de:	d010      	beq.n	8001202 <USART_Cmd+0x36>
 80011e0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011e4:	4298      	cmp	r0, r3
 80011e6:	d00c      	beq.n	8001202 <USART_Cmd+0x36>
 80011e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011ec:	4298      	cmp	r0, r3
 80011ee:	d008      	beq.n	8001202 <USART_Cmd+0x36>
 80011f0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80011f4:	4298      	cmp	r0, r3
 80011f6:	d004      	beq.n	8001202 <USART_Cmd+0x36>
 80011f8:	f44f 71a1 	mov.w	r1, #322	; 0x142
 80011fc:	480c      	ldr	r0, [pc, #48]	; (8001230 <USART_Cmd+0x64>)
 80011fe:	f000 fa55 	bl	80016ac <assert_failed>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 8001202:	2d01      	cmp	r5, #1
 8001204:	d807      	bhi.n	8001216 <USART_Cmd+0x4a>
  
  if (NewState != DISABLE)
 8001206:	b965      	cbnz	r5, 8001222 <USART_Cmd+0x56>
    USARTx->CR1 |= CR1_UE_Set;
  }
  else
  {
    /* Disable the selected USART by clearing the UE bit in the CR1 register */
    USARTx->CR1 &= CR1_UE_Reset;
 8001208:	89a3      	ldrh	r3, [r4, #12]
 800120a:	b29b      	uxth	r3, r3
 800120c:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8001210:	b29b      	uxth	r3, r3
 8001212:	81a3      	strh	r3, [r4, #12]
  }
}
 8001214:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 8001216:	f240 1143 	movw	r1, #323	; 0x143
 800121a:	4805      	ldr	r0, [pc, #20]	; (8001230 <USART_Cmd+0x64>)
 800121c:	f000 fa46 	bl	80016ac <assert_failed>
 8001220:	e7f1      	b.n	8001206 <USART_Cmd+0x3a>
    USARTx->CR1 |= CR1_UE_Set;
 8001222:	89a3      	ldrh	r3, [r4, #12]
 8001224:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001228:	81a3      	strh	r3, [r4, #12]
 800122a:	e7f3      	b.n	8001214 <USART_Cmd+0x48>
 800122c:	40013800 	.word	0x40013800
 8001230:	08006b88 	.word	0x08006b88

08001234 <USART_ITConfig>:
  * @param  NewState: new state of the specified USARTx interrupts.
  *   This parameter can be: ENABLE or DISABLE.
  * @retval None
  */
void USART_ITConfig(USART_TypeDef* USARTx, uint16_t USART_IT, FunctionalState NewState)
{
 8001234:	b570      	push	{r4, r5, r6, lr}
 8001236:	4605      	mov	r5, r0
 8001238:	460c      	mov	r4, r1
 800123a:	4616      	mov	r6, r2
  uint32_t usartreg = 0x00, itpos = 0x00, itmask = 0x00;
  uint32_t usartxbase = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 800123c:	4b38      	ldr	r3, [pc, #224]	; (8001320 <USART_ITConfig+0xec>)
 800123e:	4298      	cmp	r0, r3
 8001240:	d014      	beq.n	800126c <USART_ITConfig+0x38>
 8001242:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001246:	4298      	cmp	r0, r3
 8001248:	d010      	beq.n	800126c <USART_ITConfig+0x38>
 800124a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800124e:	4298      	cmp	r0, r3
 8001250:	d00c      	beq.n	800126c <USART_ITConfig+0x38>
 8001252:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001256:	4298      	cmp	r0, r3
 8001258:	d008      	beq.n	800126c <USART_ITConfig+0x38>
 800125a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800125e:	4298      	cmp	r0, r3
 8001260:	d004      	beq.n	800126c <USART_ITConfig+0x38>
 8001262:	f240 1169 	movw	r1, #361	; 0x169
 8001266:	482f      	ldr	r0, [pc, #188]	; (8001324 <USART_ITConfig+0xf0>)
 8001268:	f000 fa20 	bl	80016ac <assert_failed>
  assert_param(IS_USART_CONFIG_IT(USART_IT));
 800126c:	2c28      	cmp	r4, #40	; 0x28
 800126e:	d019      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001270:	f240 7327 	movw	r3, #1831	; 0x727
 8001274:	429c      	cmp	r4, r3
 8001276:	d015      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001278:	f240 6326 	movw	r3, #1574	; 0x626
 800127c:	429c      	cmp	r4, r3
 800127e:	d011      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001280:	f240 5325 	movw	r3, #1317	; 0x525
 8001284:	429c      	cmp	r4, r3
 8001286:	d00d      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001288:	f240 4324 	movw	r3, #1060	; 0x424
 800128c:	429c      	cmp	r4, r3
 800128e:	d009      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001290:	f640 0346 	movw	r3, #2118	; 0x846
 8001294:	429c      	cmp	r4, r3
 8001296:	d005      	beq.n	80012a4 <USART_ITConfig+0x70>
 8001298:	f640 136a 	movw	r3, #2410	; 0x96a
 800129c:	429c      	cmp	r4, r3
 800129e:	d001      	beq.n	80012a4 <USART_ITConfig+0x70>
 80012a0:	2c60      	cmp	r4, #96	; 0x60
 80012a2:	d117      	bne.n	80012d4 <USART_ITConfig+0xa0>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 80012a4:	2e01      	cmp	r6, #1
 80012a6:	d81b      	bhi.n	80012e0 <USART_ITConfig+0xac>
  /* The CTS interrupt is not available for UART4 and UART5 */
  if (USART_IT == USART_IT_CTS)
 80012a8:	f640 136a 	movw	r3, #2410	; 0x96a
 80012ac:	429c      	cmp	r4, r3
 80012ae:	d01d      	beq.n	80012ec <USART_ITConfig+0xb8>
  }   
  
  usartxbase = (uint32_t)USARTx;

  /* Get the USART register index */
  usartreg = (((uint8_t)USART_IT) >> 0x05);
 80012b0:	f3c4 1242 	ubfx	r2, r4, #5, #3

  /* Get the interrupt position */
  itpos = USART_IT & IT_Mask;
 80012b4:	f004 041f 	and.w	r4, r4, #31
  itmask = (((uint32_t)0x01) << itpos);
 80012b8:	2301      	movs	r3, #1
 80012ba:	fa03 f404 	lsl.w	r4, r3, r4
    
  if (usartreg == 0x01) /* The IT is in CR1 register */
 80012be:	429a      	cmp	r2, r3
 80012c0:	d025      	beq.n	800130e <USART_ITConfig+0xda>
  {
    usartxbase += 0x0C;
  }
  else if (usartreg == 0x02) /* The IT is in CR2 register */
 80012c2:	2a02      	cmp	r2, #2
 80012c4:	d025      	beq.n	8001312 <USART_ITConfig+0xde>
  {
    usartxbase += 0x10;
  }
  else /* The IT is in CR3 register */
  {
    usartxbase += 0x14; 
 80012c6:	3514      	adds	r5, #20
  }
  if (NewState != DISABLE)
 80012c8:	bb2e      	cbnz	r6, 8001316 <USART_ITConfig+0xe2>
  {
    *(__IO uint32_t*)usartxbase  |= itmask;
  }
  else
  {
    *(__IO uint32_t*)usartxbase &= ~itmask;
 80012ca:	682b      	ldr	r3, [r5, #0]
 80012cc:	ea23 0404 	bic.w	r4, r3, r4
 80012d0:	602c      	str	r4, [r5, #0]
  }
}
 80012d2:	bd70      	pop	{r4, r5, r6, pc}
  assert_param(IS_USART_CONFIG_IT(USART_IT));
 80012d4:	f44f 71b5 	mov.w	r1, #362	; 0x16a
 80012d8:	4812      	ldr	r0, [pc, #72]	; (8001324 <USART_ITConfig+0xf0>)
 80012da:	f000 f9e7 	bl	80016ac <assert_failed>
 80012de:	e7e1      	b.n	80012a4 <USART_ITConfig+0x70>
  assert_param(IS_FUNCTIONAL_STATE(NewState));
 80012e0:	f240 116b 	movw	r1, #363	; 0x16b
 80012e4:	480f      	ldr	r0, [pc, #60]	; (8001324 <USART_ITConfig+0xf0>)
 80012e6:	f000 f9e1 	bl	80016ac <assert_failed>
 80012ea:	e7dd      	b.n	80012a8 <USART_ITConfig+0x74>
    assert_param(IS_USART_123_PERIPH(USARTx));
 80012ec:	4b0c      	ldr	r3, [pc, #48]	; (8001320 <USART_ITConfig+0xec>)
 80012ee:	429d      	cmp	r5, r3
 80012f0:	d0de      	beq.n	80012b0 <USART_ITConfig+0x7c>
 80012f2:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80012f6:	429d      	cmp	r5, r3
 80012f8:	d0da      	beq.n	80012b0 <USART_ITConfig+0x7c>
 80012fa:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80012fe:	429d      	cmp	r5, r3
 8001300:	d0d6      	beq.n	80012b0 <USART_ITConfig+0x7c>
 8001302:	f240 116f 	movw	r1, #367	; 0x16f
 8001306:	4807      	ldr	r0, [pc, #28]	; (8001324 <USART_ITConfig+0xf0>)
 8001308:	f000 f9d0 	bl	80016ac <assert_failed>
 800130c:	e7d0      	b.n	80012b0 <USART_ITConfig+0x7c>
    usartxbase += 0x0C;
 800130e:	350c      	adds	r5, #12
 8001310:	e7da      	b.n	80012c8 <USART_ITConfig+0x94>
    usartxbase += 0x10;
 8001312:	3510      	adds	r5, #16
 8001314:	e7d8      	b.n	80012c8 <USART_ITConfig+0x94>
    *(__IO uint32_t*)usartxbase  |= itmask;
 8001316:	682b      	ldr	r3, [r5, #0]
 8001318:	431c      	orrs	r4, r3
 800131a:	602c      	str	r4, [r5, #0]
 800131c:	e7d9      	b.n	80012d2 <USART_ITConfig+0x9e>
 800131e:	bf00      	nop
 8001320:	40013800 	.word	0x40013800
 8001324:	08006b88 	.word	0x08006b88

08001328 <USART_SendData>:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @param  Data: the data to transmit.
  * @retval None
  */
void USART_SendData(USART_TypeDef* USARTx, uint16_t Data)
{
 8001328:	b538      	push	{r3, r4, r5, lr}
 800132a:	4605      	mov	r5, r0
 800132c:	460c      	mov	r4, r1
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 800132e:	4b12      	ldr	r3, [pc, #72]	; (8001378 <USART_SendData+0x50>)
 8001330:	4298      	cmp	r0, r3
 8001332:	d014      	beq.n	800135e <USART_SendData+0x36>
 8001334:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001338:	4298      	cmp	r0, r3
 800133a:	d010      	beq.n	800135e <USART_SendData+0x36>
 800133c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001340:	4298      	cmp	r0, r3
 8001342:	d00c      	beq.n	800135e <USART_SendData+0x36>
 8001344:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001348:	4298      	cmp	r0, r3
 800134a:	d008      	beq.n	800135e <USART_SendData+0x36>
 800134c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001350:	4298      	cmp	r0, r3
 8001352:	d004      	beq.n	800135e <USART_SendData+0x36>
 8001354:	f240 2132 	movw	r1, #562	; 0x232
 8001358:	4808      	ldr	r0, [pc, #32]	; (800137c <USART_SendData+0x54>)
 800135a:	f000 f9a7 	bl	80016ac <assert_failed>
  assert_param(IS_USART_DATA(Data)); 
 800135e:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 8001362:	d203      	bcs.n	800136c <USART_SendData+0x44>
    
  /* Transmit Data */
  USARTx->DR = (Data & (uint16_t)0x01FF);
 8001364:	f3c4 0408 	ubfx	r4, r4, #0, #9
 8001368:	80ac      	strh	r4, [r5, #4]
}
 800136a:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_USART_DATA(Data)); 
 800136c:	f240 2133 	movw	r1, #563	; 0x233
 8001370:	4802      	ldr	r0, [pc, #8]	; (800137c <USART_SendData+0x54>)
 8001372:	f000 f99b 	bl	80016ac <assert_failed>
 8001376:	e7f5      	b.n	8001364 <USART_SendData+0x3c>
 8001378:	40013800 	.word	0x40013800
 800137c:	08006b88 	.word	0x08006b88

08001380 <USART_ReceiveData>:
  *   This parameter can be one of the following values:
  *   USART1, USART2, USART3, UART4 or UART5.
  * @retval The received data.
  */
uint16_t USART_ReceiveData(USART_TypeDef* USARTx)
{
 8001380:	b510      	push	{r4, lr}
 8001382:	4604      	mov	r4, r0
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 8001384:	4b0d      	ldr	r3, [pc, #52]	; (80013bc <USART_ReceiveData+0x3c>)
 8001386:	4298      	cmp	r0, r3
 8001388:	d014      	beq.n	80013b4 <USART_ReceiveData+0x34>
 800138a:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 800138e:	4298      	cmp	r0, r3
 8001390:	d010      	beq.n	80013b4 <USART_ReceiveData+0x34>
 8001392:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001396:	4298      	cmp	r0, r3
 8001398:	d00c      	beq.n	80013b4 <USART_ReceiveData+0x34>
 800139a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800139e:	4298      	cmp	r0, r3
 80013a0:	d008      	beq.n	80013b4 <USART_ReceiveData+0x34>
 80013a2:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013a6:	4298      	cmp	r0, r3
 80013a8:	d004      	beq.n	80013b4 <USART_ReceiveData+0x34>
 80013aa:	f240 2143 	movw	r1, #579	; 0x243
 80013ae:	4804      	ldr	r0, [pc, #16]	; (80013c0 <USART_ReceiveData+0x40>)
 80013b0:	f000 f97c 	bl	80016ac <assert_failed>
  
  /* Receive Data */
  return (uint16_t)(USARTx->DR & (uint16_t)0x01FF);
 80013b4:	88a0      	ldrh	r0, [r4, #4]
}
 80013b6:	f3c0 0008 	ubfx	r0, r0, #0, #9
 80013ba:	bd10      	pop	{r4, pc}
 80013bc:	40013800 	.word	0x40013800
 80013c0:	08006b88 	.word	0x08006b88

080013c4 <USART_GetFlagStatus>:
  *     @arg USART_FLAG_FE:   Framing Error flag
  *     @arg USART_FLAG_PE:   Parity Error flag
  * @retval The new state of USART_FLAG (SET or RESET).
  */
FlagStatus USART_GetFlagStatus(USART_TypeDef* USARTx, uint16_t USART_FLAG)
{
 80013c4:	b538      	push	{r3, r4, r5, lr}
 80013c6:	4605      	mov	r5, r0
 80013c8:	460c      	mov	r4, r1
  FlagStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 80013ca:	4b27      	ldr	r3, [pc, #156]	; (8001468 <USART_GetFlagStatus+0xa4>)
 80013cc:	4298      	cmp	r0, r3
 80013ce:	d014      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013d0:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80013d4:	4298      	cmp	r0, r3
 80013d6:	d010      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013d8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013dc:	4298      	cmp	r0, r3
 80013de:	d00c      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013e0:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013e4:	4298      	cmp	r0, r3
 80013e6:	d008      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013e8:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80013ec:	4298      	cmp	r0, r3
 80013ee:	d004      	beq.n	80013fa <USART_GetFlagStatus+0x36>
 80013f0:	f240 3113 	movw	r1, #787	; 0x313
 80013f4:	481d      	ldr	r0, [pc, #116]	; (800146c <USART_GetFlagStatus+0xa8>)
 80013f6:	f000 f959 	bl	80016ac <assert_failed>
  assert_param(IS_USART_FLAG(USART_FLAG));
 80013fa:	2c01      	cmp	r4, #1
 80013fc:	d013      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 80013fe:	2c80      	cmp	r4, #128	; 0x80
 8001400:	d011      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 8001402:	2c40      	cmp	r4, #64	; 0x40
 8001404:	d00f      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 8001406:	2c20      	cmp	r4, #32
 8001408:	d00d      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 800140a:	2c10      	cmp	r4, #16
 800140c:	d00b      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 800140e:	f5b4 7f80 	cmp.w	r4, #256	; 0x100
 8001412:	d008      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 8001414:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 8001418:	d005      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 800141a:	2c08      	cmp	r4, #8
 800141c:	d003      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 800141e:	2c04      	cmp	r4, #4
 8001420:	d001      	beq.n	8001426 <USART_GetFlagStatus+0x62>
 8001422:	2c02      	cmp	r4, #2
 8001424:	d107      	bne.n	8001436 <USART_GetFlagStatus+0x72>
  /* The CTS flag is not available for UART4 and UART5 */
  if (USART_FLAG == USART_FLAG_CTS)
 8001426:	f5b4 7f00 	cmp.w	r4, #512	; 0x200
 800142a:	d00a      	beq.n	8001442 <USART_GetFlagStatus+0x7e>
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }  
  
  if ((USARTx->SR & USART_FLAG) != (uint16_t)RESET)
 800142c:	882b      	ldrh	r3, [r5, #0]
 800142e:	421c      	tst	r4, r3
 8001430:	d118      	bne.n	8001464 <USART_GetFlagStatus+0xa0>
  {
    bitstatus = SET;
  }
  else
  {
    bitstatus = RESET;
 8001432:	2000      	movs	r0, #0
  }
  return bitstatus;
}
 8001434:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_USART_FLAG(USART_FLAG));
 8001436:	f44f 7145 	mov.w	r1, #788	; 0x314
 800143a:	480c      	ldr	r0, [pc, #48]	; (800146c <USART_GetFlagStatus+0xa8>)
 800143c:	f000 f936 	bl	80016ac <assert_failed>
 8001440:	e7f1      	b.n	8001426 <USART_GetFlagStatus+0x62>
    assert_param(IS_USART_123_PERIPH(USARTx));
 8001442:	4b09      	ldr	r3, [pc, #36]	; (8001468 <USART_GetFlagStatus+0xa4>)
 8001444:	429d      	cmp	r5, r3
 8001446:	d0f1      	beq.n	800142c <USART_GetFlagStatus+0x68>
 8001448:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 800144c:	429d      	cmp	r5, r3
 800144e:	d0ed      	beq.n	800142c <USART_GetFlagStatus+0x68>
 8001450:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001454:	429d      	cmp	r5, r3
 8001456:	d0e9      	beq.n	800142c <USART_GetFlagStatus+0x68>
 8001458:	f44f 7146 	mov.w	r1, #792	; 0x318
 800145c:	4803      	ldr	r0, [pc, #12]	; (800146c <USART_GetFlagStatus+0xa8>)
 800145e:	f000 f925 	bl	80016ac <assert_failed>
 8001462:	e7e3      	b.n	800142c <USART_GetFlagStatus+0x68>
    bitstatus = SET;
 8001464:	2001      	movs	r0, #1
 8001466:	e7e5      	b.n	8001434 <USART_GetFlagStatus+0x70>
 8001468:	40013800 	.word	0x40013800
 800146c:	08006b88 	.word	0x08006b88

08001470 <USART_GetITStatus>:
  *     @arg USART_IT_FE:   Framing Error interrupt
  *     @arg USART_IT_PE:   Parity Error interrupt
  * @retval The new state of USART_IT (SET or RESET).
  */
ITStatus USART_GetITStatus(USART_TypeDef* USARTx, uint16_t USART_IT)
{
 8001470:	b538      	push	{r3, r4, r5, lr}
 8001472:	4605      	mov	r5, r0
 8001474:	460c      	mov	r4, r1
  uint32_t bitpos = 0x00, itmask = 0x00, usartreg = 0x00;
  ITStatus bitstatus = RESET;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 8001476:	4b3b      	ldr	r3, [pc, #236]	; (8001564 <USART_GetITStatus+0xf4>)
 8001478:	4298      	cmp	r0, r3
 800147a:	d014      	beq.n	80014a6 <USART_GetITStatus+0x36>
 800147c:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001480:	4298      	cmp	r0, r3
 8001482:	d010      	beq.n	80014a6 <USART_GetITStatus+0x36>
 8001484:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001488:	4298      	cmp	r0, r3
 800148a:	d00c      	beq.n	80014a6 <USART_GetITStatus+0x36>
 800148c:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001490:	4298      	cmp	r0, r3
 8001492:	d008      	beq.n	80014a6 <USART_GetITStatus+0x36>
 8001494:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001498:	4298      	cmp	r0, r3
 800149a:	d004      	beq.n	80014a6 <USART_GetITStatus+0x36>
 800149c:	f240 3166 	movw	r1, #870	; 0x366
 80014a0:	4831      	ldr	r0, [pc, #196]	; (8001568 <USART_GetITStatus+0xf8>)
 80014a2:	f000 f903 	bl	80016ac <assert_failed>
  assert_param(IS_USART_GET_IT(USART_IT));
 80014a6:	2c28      	cmp	r4, #40	; 0x28
 80014a8:	d020      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014aa:	f240 7327 	movw	r3, #1831	; 0x727
 80014ae:	429c      	cmp	r4, r3
 80014b0:	d01c      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014b2:	f240 6326 	movw	r3, #1574	; 0x626
 80014b6:	429c      	cmp	r4, r3
 80014b8:	d018      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014ba:	f240 5325 	movw	r3, #1317	; 0x525
 80014be:	429c      	cmp	r4, r3
 80014c0:	d014      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014c2:	f240 4324 	movw	r3, #1060	; 0x424
 80014c6:	429c      	cmp	r4, r3
 80014c8:	d010      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014ca:	f640 0346 	movw	r3, #2118	; 0x846
 80014ce:	429c      	cmp	r4, r3
 80014d0:	d00c      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014d2:	f640 136a 	movw	r3, #2410	; 0x96a
 80014d6:	429c      	cmp	r4, r3
 80014d8:	d008      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014da:	f5b4 7f58 	cmp.w	r4, #864	; 0x360
 80014de:	d005      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014e0:	f5b4 7f18 	cmp.w	r4, #608	; 0x260
 80014e4:	d002      	beq.n	80014ec <USART_GetITStatus+0x7c>
 80014e6:	f5b4 7fb0 	cmp.w	r4, #352	; 0x160
 80014ea:	d119      	bne.n	8001520 <USART_GetITStatus+0xb0>
  /* The CTS interrupt is not available for UART4 and UART5 */ 
  if (USART_IT == USART_IT_CTS)
 80014ec:	f640 136a 	movw	r3, #2410	; 0x96a
 80014f0:	429c      	cmp	r4, r3
 80014f2:	d01b      	beq.n	800152c <USART_GetITStatus+0xbc>
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }   
  
  /* Get the USART register index */
  usartreg = (((uint8_t)USART_IT) >> 0x05);
 80014f4:	f3c4 1242 	ubfx	r2, r4, #5, #3
  /* Get the interrupt position */
  itmask = USART_IT & IT_Mask;
 80014f8:	f004 011f 	and.w	r1, r4, #31
  itmask = (uint32_t)0x01 << itmask;
 80014fc:	2301      	movs	r3, #1
 80014fe:	408b      	lsls	r3, r1
  
  if (usartreg == 0x01) /* The IT  is in CR1 register */
 8001500:	2a01      	cmp	r2, #1
 8001502:	d024      	beq.n	800154e <USART_GetITStatus+0xde>
  {
    itmask &= USARTx->CR1;
  }
  else if (usartreg == 0x02) /* The IT  is in CR2 register */
 8001504:	2a02      	cmp	r2, #2
 8001506:	d025      	beq.n	8001554 <USART_GetITStatus+0xe4>
  {
    itmask &= USARTx->CR2;
  }
  else /* The IT  is in CR3 register */
  {
    itmask &= USARTx->CR3;
 8001508:	8aaa      	ldrh	r2, [r5, #20]
 800150a:	4013      	ands	r3, r2
  }
  
  bitpos = USART_IT >> 0x08;
 800150c:	0a24      	lsrs	r4, r4, #8
  bitpos = (uint32_t)0x01 << bitpos;
 800150e:	2201      	movs	r2, #1
 8001510:	fa02 f404 	lsl.w	r4, r2, r4
  bitpos &= USARTx->SR;
 8001514:	882a      	ldrh	r2, [r5, #0]
 8001516:	4014      	ands	r4, r2
  if ((itmask != (uint16_t)RESET)&&(bitpos != (uint16_t)RESET))
 8001518:	b1fb      	cbz	r3, 800155a <USART_GetITStatus+0xea>
 800151a:	bb04      	cbnz	r4, 800155e <USART_GetITStatus+0xee>
  {
    bitstatus = SET;
  }
  else
  {
    bitstatus = RESET;
 800151c:	2000      	movs	r0, #0
 800151e:	e01d      	b.n	800155c <USART_GetITStatus+0xec>
  assert_param(IS_USART_GET_IT(USART_IT));
 8001520:	f240 3167 	movw	r1, #871	; 0x367
 8001524:	4810      	ldr	r0, [pc, #64]	; (8001568 <USART_GetITStatus+0xf8>)
 8001526:	f000 f8c1 	bl	80016ac <assert_failed>
 800152a:	e7df      	b.n	80014ec <USART_GetITStatus+0x7c>
    assert_param(IS_USART_123_PERIPH(USARTx));
 800152c:	4b0d      	ldr	r3, [pc, #52]	; (8001564 <USART_GetITStatus+0xf4>)
 800152e:	429d      	cmp	r5, r3
 8001530:	d0e0      	beq.n	80014f4 <USART_GetITStatus+0x84>
 8001532:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 8001536:	429d      	cmp	r5, r3
 8001538:	d0dc      	beq.n	80014f4 <USART_GetITStatus+0x84>
 800153a:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800153e:	429d      	cmp	r5, r3
 8001540:	d0d8      	beq.n	80014f4 <USART_GetITStatus+0x84>
 8001542:	f240 316b 	movw	r1, #875	; 0x36b
 8001546:	4808      	ldr	r0, [pc, #32]	; (8001568 <USART_GetITStatus+0xf8>)
 8001548:	f000 f8b0 	bl	80016ac <assert_failed>
 800154c:	e7d2      	b.n	80014f4 <USART_GetITStatus+0x84>
    itmask &= USARTx->CR1;
 800154e:	89aa      	ldrh	r2, [r5, #12]
 8001550:	4013      	ands	r3, r2
 8001552:	e7db      	b.n	800150c <USART_GetITStatus+0x9c>
    itmask &= USARTx->CR2;
 8001554:	8a2a      	ldrh	r2, [r5, #16]
 8001556:	4013      	ands	r3, r2
 8001558:	e7d8      	b.n	800150c <USART_GetITStatus+0x9c>
    bitstatus = RESET;
 800155a:	2000      	movs	r0, #0
  }
  
  return bitstatus;  
}
 800155c:	bd38      	pop	{r3, r4, r5, pc}
    bitstatus = SET;
 800155e:	2001      	movs	r0, #1
 8001560:	e7fc      	b.n	800155c <USART_GetITStatus+0xec>
 8001562:	bf00      	nop
 8001564:	40013800 	.word	0x40013800
 8001568:	08006b88 	.word	0x08006b88

0800156c <USART_ClearITPendingBit>:
  *   - TXE pending bit is cleared only by a write to the USART_DR register 
  *     (USART_SendData()).
  * @retval None
  */
void USART_ClearITPendingBit(USART_TypeDef* USARTx, uint16_t USART_IT)
{
 800156c:	b538      	push	{r3, r4, r5, lr}
 800156e:	4605      	mov	r5, r0
 8001570:	460c      	mov	r4, r1
  uint16_t bitpos = 0x00, itmask = 0x00;
  /* Check the parameters */
  assert_param(IS_USART_ALL_PERIPH(USARTx));
 8001572:	4b25      	ldr	r3, [pc, #148]	; (8001608 <USART_ClearITPendingBit+0x9c>)
 8001574:	4298      	cmp	r0, r3
 8001576:	d014      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001578:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 800157c:	4298      	cmp	r0, r3
 800157e:	d010      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001580:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001584:	4298      	cmp	r0, r3
 8001586:	d00c      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001588:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800158c:	4298      	cmp	r0, r3
 800158e:	d008      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001590:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8001594:	4298      	cmp	r0, r3
 8001596:	d004      	beq.n	80015a2 <USART_ClearITPendingBit+0x36>
 8001598:	f240 31af 	movw	r1, #943	; 0x3af
 800159c:	481b      	ldr	r0, [pc, #108]	; (800160c <USART_ClearITPendingBit+0xa0>)
 800159e:	f000 f885 	bl	80016ac <assert_failed>
  assert_param(IS_USART_CLEAR_IT(USART_IT));
 80015a2:	f240 6326 	movw	r3, #1574	; 0x626
 80015a6:	429c      	cmp	r4, r3
 80015a8:	d00b      	beq.n	80015c2 <USART_ClearITPendingBit+0x56>
 80015aa:	f240 5325 	movw	r3, #1317	; 0x525
 80015ae:	429c      	cmp	r4, r3
 80015b0:	d007      	beq.n	80015c2 <USART_ClearITPendingBit+0x56>
 80015b2:	f640 0346 	movw	r3, #2118	; 0x846
 80015b6:	429c      	cmp	r4, r3
 80015b8:	d003      	beq.n	80015c2 <USART_ClearITPendingBit+0x56>
 80015ba:	f640 136a 	movw	r3, #2410	; 0x96a
 80015be:	429c      	cmp	r4, r3
 80015c0:	d10b      	bne.n	80015da <USART_ClearITPendingBit+0x6e>
  /* The CTS interrupt is not available for UART4 and UART5 */
  if (USART_IT == USART_IT_CTS)
 80015c2:	f640 136a 	movw	r3, #2410	; 0x96a
 80015c6:	429c      	cmp	r4, r3
 80015c8:	d00d      	beq.n	80015e6 <USART_ClearITPendingBit+0x7a>
  {
    assert_param(IS_USART_123_PERIPH(USARTx));
  }   
  
  bitpos = USART_IT >> 0x08;
 80015ca:	0a24      	lsrs	r4, r4, #8
  itmask = ((uint16_t)0x01 << (uint16_t)bitpos);
 80015cc:	2301      	movs	r3, #1
 80015ce:	40a3      	lsls	r3, r4
 80015d0:	b29b      	uxth	r3, r3
  USARTx->SR = (uint16_t)~itmask;
 80015d2:	43db      	mvns	r3, r3
 80015d4:	b29b      	uxth	r3, r3
 80015d6:	802b      	strh	r3, [r5, #0]
}
 80015d8:	bd38      	pop	{r3, r4, r5, pc}
  assert_param(IS_USART_CLEAR_IT(USART_IT));
 80015da:	f44f 716c 	mov.w	r1, #944	; 0x3b0
 80015de:	480b      	ldr	r0, [pc, #44]	; (800160c <USART_ClearITPendingBit+0xa0>)
 80015e0:	f000 f864 	bl	80016ac <assert_failed>
 80015e4:	e7ed      	b.n	80015c2 <USART_ClearITPendingBit+0x56>
    assert_param(IS_USART_123_PERIPH(USARTx));
 80015e6:	4b08      	ldr	r3, [pc, #32]	; (8001608 <USART_ClearITPendingBit+0x9c>)
 80015e8:	429d      	cmp	r5, r3
 80015ea:	d0ee      	beq.n	80015ca <USART_ClearITPendingBit+0x5e>
 80015ec:	f5a3 4374 	sub.w	r3, r3, #62464	; 0xf400
 80015f0:	429d      	cmp	r5, r3
 80015f2:	d0ea      	beq.n	80015ca <USART_ClearITPendingBit+0x5e>
 80015f4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80015f8:	429d      	cmp	r5, r3
 80015fa:	d0e6      	beq.n	80015ca <USART_ClearITPendingBit+0x5e>
 80015fc:	f44f 716d 	mov.w	r1, #948	; 0x3b4
 8001600:	4802      	ldr	r0, [pc, #8]	; (800160c <USART_ClearITPendingBit+0xa0>)
 8001602:	f000 f853 	bl	80016ac <assert_failed>
 8001606:	e7e0      	b.n	80015ca <USART_ClearITPendingBit+0x5e>
 8001608:	40013800 	.word	0x40013800
 800160c:	08006b88 	.word	0x08006b88

08001610 <System_Information>:

bool g_TestProcessState = FALSE;
RCC_ClocksTypeDef rcc_clocks;

void System_Information()
{
 8001610:	b510      	push	{r4, lr}
    printf("SYSCLK_Frequency = %d\n",rcc_clocks.SYSCLK_Frequency );
 8001612:	4c0b      	ldr	r4, [pc, #44]	; (8001640 <System_Information+0x30>)
 8001614:	6821      	ldr	r1, [r4, #0]
 8001616:	480b      	ldr	r0, [pc, #44]	; (8001644 <System_Information+0x34>)
 8001618:	f001 fd88 	bl	800312c <iprintf>
    printf("HCLK_Frequency = %d\n",rcc_clocks.HCLK_Frequency );
 800161c:	6861      	ldr	r1, [r4, #4]
 800161e:	480a      	ldr	r0, [pc, #40]	; (8001648 <System_Information+0x38>)
 8001620:	f001 fd84 	bl	800312c <iprintf>
    printf("PCLK1_Frequency = %d\n",rcc_clocks.PCLK1_Frequency );
 8001624:	68a1      	ldr	r1, [r4, #8]
 8001626:	4809      	ldr	r0, [pc, #36]	; (800164c <System_Information+0x3c>)
 8001628:	f001 fd80 	bl	800312c <iprintf>
    printf("PCLK2_Frequency = %d\n",rcc_clocks.PCLK2_Frequency );
 800162c:	68e1      	ldr	r1, [r4, #12]
 800162e:	4808      	ldr	r0, [pc, #32]	; (8001650 <System_Information+0x40>)
 8001630:	f001 fd7c 	bl	800312c <iprintf>
    printf("ADCCLK_Frequency = %d\n",rcc_clocks.ADCCLK_Frequency );
 8001634:	6921      	ldr	r1, [r4, #16]
 8001636:	4807      	ldr	r0, [pc, #28]	; (8001654 <System_Information+0x44>)
 8001638:	f001 fd78 	bl	800312c <iprintf>
}
 800163c:	bd10      	pop	{r4, pc}
 800163e:	bf00      	nop
 8001640:	20000218 	.word	0x20000218
 8001644:	08006bc0 	.word	0x08006bc0
 8001648:	08006bd8 	.word	0x08006bd8
 800164c:	08006bf0 	.word	0x08006bf0
 8001650:	08006c08 	.word	0x08006c08
 8001654:	08006c20 	.word	0x08006c20

08001658 <main>:

int main(int argc, char **argv)
{
 8001658:	b508      	push	{r3, lr}
    RCC_Configuration();
 800165a:	f000 f88d 	bl	8001778 <RCC_Configuration>
    RCC_GetClocksFreq(&rcc_clocks);
 800165e:	4c0f      	ldr	r4, [pc, #60]	; (800169c <main+0x44>)
 8001660:	4620      	mov	r0, r4
 8001662:	f7ff fc47 	bl	8000ef4 <RCC_GetClocksFreq>
    USART1_Init();
 8001666:	f000 f867 	bl	8001738 <USART1_Init>
    debug();
 800166a:	f000 f8b3 	bl	80017d4 <debug>
    ESP_Init();
 800166e:	f000 fe08 	bl	8002282 <ESP_Init>
    if(SysTick_Config(rcc_clocks.SYSCLK_Frequency / 1000))
 8001672:	6823      	ldr	r3, [r4, #0]
 8001674:	4a0a      	ldr	r2, [pc, #40]	; (80016a0 <main+0x48>)
 8001676:	fba2 2303 	umull	r2, r3, r2, r3
 */
static __INLINE uint32_t SysTick_Config(uint32_t ticks)
{ 
  if (ticks > SYSTICK_MAXCOUNT)  return (1);                                             /* Reload value impossible */

  SysTick->LOAD  =  (ticks & SYSTICK_MAXCOUNT) - 1;                                      /* set reload register */
 800167a:	099b      	lsrs	r3, r3, #6
 800167c:	3b01      	subs	r3, #1
 800167e:	4a09      	ldr	r2, [pc, #36]	; (80016a4 <main+0x4c>)
 8001680:	6053      	str	r3, [r2, #4]
    SCB->SHP[((uint32_t)(IRQn) & 0xF)-4] = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for Cortex-M3 System Interrupts */
 8001682:	4b09      	ldr	r3, [pc, #36]	; (80016a8 <main+0x50>)
 8001684:	21f0      	movs	r1, #240	; 0xf0
 8001686:	f883 1023 	strb.w	r1, [r3, #35]	; 0x23
  NVIC_SetPriority (SysTick_IRQn, (1<<__NVIC_PRIO_BITS) - 1);                            /* set Priority for Cortex-M0 System Interrupts */
  SysTick->VAL   =  (0x00);                                                              /* Load the SysTick Counter Value */
 800168a:	2300      	movs	r3, #0
 800168c:	6093      	str	r3, [r2, #8]
  SysTick->CTRL = (1 << SYSTICK_CLKSOURCE) | (1<<SYSTICK_ENABLE) | (1<<SYSTICK_TICKINT); /* Enable SysTick IRQ and SysTick Timer */
 800168e:	2307      	movs	r3, #7
 8001690:	6013      	str	r3, [r2, #0]
    {
        while(1);
    }
    System_Information();
 8001692:	f7ff ffbd 	bl	8001610 <System_Information>

    while(1)
    {
        menu();
 8001696:	f000 fac7 	bl	8001c28 <menu>
 800169a:	e7fc      	b.n	8001696 <main+0x3e>
 800169c:	20000218 	.word	0x20000218
 80016a0:	10624dd3 	.word	0x10624dd3
 80016a4:	e000e010 	.word	0xe000e010
 80016a8:	e000ed00 	.word	0xe000ed00

080016ac <assert_failed>:
*                  - line: assert_param error line source number
* Output         : None
* Return         : None
*******************************************************************************/
void assert_failed(uint8_t* file, uint32_t line)
{ 
 80016ac:	b508      	push	{r3, lr}
  /* User can add his own implementation to report the file name and line number,
     ex: printf("Wrong parameters value: file %s on line %d\r\n", file, line) */
    printf("Wrong parameters value: file %s on line %d\r\n", file, line);
 80016ae:	460a      	mov	r2, r1
 80016b0:	4601      	mov	r1, r0
 80016b2:	4802      	ldr	r0, [pc, #8]	; (80016bc <assert_failed+0x10>)
 80016b4:	f001 fd3a 	bl	800312c <iprintf>
 80016b8:	e7fe      	b.n	80016b8 <assert_failed+0xc>
 80016ba:	bf00      	nop
 80016bc:	08006c38 	.word	0x08006c38

080016c0 <Delay>:
  * @brief  Inserts a delay time.
  * @param  nTime: specifies the delay time length, in milliseconds.
  * @retval None
  */
CONFIG_DEF void Delay(__IO uint32_t nTime)
{ 
 80016c0:	b082      	sub	sp, #8
 80016c2:	9001      	str	r0, [sp, #4]
  TimingDelay = nTime;
 80016c4:	9a01      	ldr	r2, [sp, #4]
 80016c6:	4b04      	ldr	r3, [pc, #16]	; (80016d8 <Delay+0x18>)
 80016c8:	601a      	str	r2, [r3, #0]

  while(TimingDelay != 0);
 80016ca:	4b03      	ldr	r3, [pc, #12]	; (80016d8 <Delay+0x18>)
 80016cc:	681b      	ldr	r3, [r3, #0]
 80016ce:	2b00      	cmp	r3, #0
 80016d0:	d1fb      	bne.n	80016ca <Delay+0xa>
}
 80016d2:	b002      	add	sp, #8
 80016d4:	4770      	bx	lr
 80016d6:	bf00      	nop
 80016d8:	20000200 	.word	0x20000200

080016dc <TimingDelay_Decrement>:
  * @param  None
  * @retval None
  */
CONFIG_DEF void TimingDelay_Decrement(void)
{
  if (TimingDelay != 0x00)
 80016dc:	4b03      	ldr	r3, [pc, #12]	; (80016ec <TimingDelay_Decrement+0x10>)
 80016de:	681b      	ldr	r3, [r3, #0]
 80016e0:	b11b      	cbz	r3, 80016ea <TimingDelay_Decrement+0xe>
  { 
    TimingDelay--;
 80016e2:	4a02      	ldr	r2, [pc, #8]	; (80016ec <TimingDelay_Decrement+0x10>)
 80016e4:	6813      	ldr	r3, [r2, #0]
 80016e6:	3b01      	subs	r3, #1
 80016e8:	6013      	str	r3, [r2, #0]
  }
}
 80016ea:	4770      	bx	lr
 80016ec:	20000200 	.word	0x20000200

080016f0 <USART1_GPIOConfiguration>:
{
    Delay(100);
}

CONFIG_DEF void USART1_GPIOConfiguration(void)
{
 80016f0:	b530      	push	{r4, r5, lr}
 80016f2:	b083      	sub	sp, #12
    /* Configure USARTx_Tx as alternate function push-pull */
    GPIO_InitTypeDef GPIO_InitStructure;
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Tx_Pin;
 80016f4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80016f8:	f8ad 3004 	strh.w	r3, [sp, #4]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80016fc:	2503      	movs	r5, #3
 80016fe:	f88d 5006 	strb.w	r5, [sp, #6]
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 8001702:	2318      	movs	r3, #24
 8001704:	f88d 3007 	strb.w	r3, [sp, #7]
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);
 8001708:	4c0a      	ldr	r4, [pc, #40]	; (8001734 <USART1_GPIOConfiguration+0x44>)
 800170a:	a901      	add	r1, sp, #4
 800170c:	4620      	mov	r0, r4
 800170e:	f7ff fb57 	bl	8000dc0 <GPIO_Init>

    /* Configure USARTx_Rx as input floating */
    GPIO_InitStructure.GPIO_Pin = GPIO_USART_Rx_Pin;
 8001712:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8001716:	f8ad 3004 	strh.w	r3, [sp, #4]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800171a:	f88d 5006 	strb.w	r5, [sp, #6]
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 800171e:	2304      	movs	r3, #4
 8001720:	f88d 3007 	strb.w	r3, [sp, #7]
    GPIO_Init(GPIO_USART, &GPIO_InitStructure);
 8001724:	eb0d 0103 	add.w	r1, sp, r3
 8001728:	4620      	mov	r0, r4
 800172a:	f7ff fb49 	bl	8000dc0 <GPIO_Init>

}
 800172e:	b003      	add	sp, #12
 8001730:	bd30      	pop	{r4, r5, pc}
 8001732:	bf00      	nop
 8001734:	40010800 	.word	0x40010800

08001738 <USART1_Init>:

CONFIG_DEF void USART1_Init(void)
{
 8001738:	b510      	push	{r4, lr}
 800173a:	b084      	sub	sp, #16
    USART1_GPIOConfiguration();
 800173c:	f7ff ffd8 	bl	80016f0 <USART1_GPIOConfiguration>
     - One Stop Bit
     - No parity
     - Hardware flow control disabled (RTS and CTS signals)
     - Receive and transmit enabled
     */
    USART_InitStructure.USART_BaudRate = 115200;
 8001740:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8001744:	9300      	str	r3, [sp, #0]
    USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 8001746:	2300      	movs	r3, #0
 8001748:	f8ad 3004 	strh.w	r3, [sp, #4]
    USART_InitStructure.USART_StopBits = USART_StopBits_1;
 800174c:	f8ad 3006 	strh.w	r3, [sp, #6]
    USART_InitStructure.USART_Parity = USART_Parity_No;
 8001750:	f8ad 3008 	strh.w	r3, [sp, #8]
    USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8001754:	f8ad 300c 	strh.w	r3, [sp, #12]
    USART_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 8001758:	230c      	movs	r3, #12
 800175a:	f8ad 300a 	strh.w	r3, [sp, #10]

    USART_Init(USART1, &USART_InitStructure);
 800175e:	4c05      	ldr	r4, [pc, #20]	; (8001774 <USART1_Init+0x3c>)
 8001760:	4669      	mov	r1, sp
 8001762:	4620      	mov	r0, r4
 8001764:	f7ff fc74 	bl	8001050 <USART_Init>
    USART_Cmd(USART1, ENABLE);
 8001768:	2101      	movs	r1, #1
 800176a:	4620      	mov	r0, r4
 800176c:	f7ff fd2e 	bl	80011cc <USART_Cmd>
}
 8001770:	b004      	add	sp, #16
 8001772:	bd10      	pop	{r4, pc}
 8001774:	40013800 	.word	0x40013800

08001778 <RCC_Configuration>:

CONFIG_DEF void RCC_Configuration(void)
{
 8001778:	b508      	push	{r3, lr}
    
    SystemInit();
 800177a:	f7ff fa81 	bl	8000c80 <SystemInit>

    /* Enable GPIOA clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA, ENABLE);
 800177e:	2101      	movs	r1, #1
 8001780:	2004      	movs	r0, #4
 8001782:	f7ff fc19 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable GPIOB clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);
 8001786:	2101      	movs	r1, #1
 8001788:	2008      	movs	r0, #8
 800178a:	f7ff fc15 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable GPIOC clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOC, ENABLE);
 800178e:	2101      	movs	r1, #1
 8001790:	2010      	movs	r0, #16
 8001792:	f7ff fc11 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable GPIOD clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOD, ENABLE);
 8001796:	2101      	movs	r1, #1
 8001798:	2020      	movs	r0, #32
 800179a:	f7ff fc0d 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable USART1 clocks */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1, ENABLE);
 800179e:	2101      	movs	r1, #1
 80017a0:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80017a4:	f7ff fc08 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* Enable AFIO clock */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE);
 80017a8:	2101      	movs	r1, #1
 80017aa:	4608      	mov	r0, r1
 80017ac:	f7ff fc04 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

}
 80017b0:	bd08      	pop	{r3, pc}

080017b2 <USART_GetCharacter>:
    if( data == '\r' )  return (int)('\n');
    else                return(data);
}

CONFIG_DEF uint8_t USART_GetCharacter(USART_TypeDef *  usart_p)
{
 80017b2:	b510      	push	{r4, lr}
 80017b4:	4604      	mov	r4, r0
    uint8_t data;

    /* Loop until the end of transmission */
    while(USART_GetFlagStatus(usart_p, USART_FLAG_RXNE) == RESET);
 80017b6:	2120      	movs	r1, #32
 80017b8:	4620      	mov	r0, r4
 80017ba:	f7ff fe03 	bl	80013c4 <USART_GetFlagStatus>
 80017be:	2800      	cmp	r0, #0
 80017c0:	d0f9      	beq.n	80017b6 <USART_GetCharacter+0x4>

    /* Write a character to the USART */
    data = USART_ReceiveData(usart_p);
 80017c2:	4620      	mov	r0, r4
 80017c4:	f7ff fddc 	bl	8001380 <USART_ReceiveData>
 80017c8:	b2c0      	uxtb	r0, r0

    if( data == '\r' )  return (int)('\r\n');
 80017ca:	280d      	cmp	r0, #13
 80017cc:	d000      	beq.n	80017d0 <USART_GetCharacter+0x1e>
    else                return(data);
}
 80017ce:	bd10      	pop	{r4, pc}
    if( data == '\r' )  return (int)('\r\n');
 80017d0:	200a      	movs	r0, #10
 80017d2:	e7fc      	b.n	80017ce <USART_GetCharacter+0x1c>

080017d4 <debug>:
  * @retval None
  */
void debug(void)
{
/************************************* ADC ************************************/
  ADC1_DBG = (ADC_TypeDef *)  ADC1_BASE;
 80017d4:	4b77      	ldr	r3, [pc, #476]	; (80019b4 <debug+0x1e0>)
 80017d6:	4a78      	ldr	r2, [pc, #480]	; (80019b8 <debug+0x1e4>)
 80017d8:	601a      	str	r2, [r3, #0]

  ADC2_DBG = (ADC_TypeDef *)  ADC2_BASE;
 80017da:	4b78      	ldr	r3, [pc, #480]	; (80019bc <debug+0x1e8>)
 80017dc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80017e0:	601a      	str	r2, [r3, #0]

  ADC3_DBG = (ADC_TypeDef *)  ADC3_BASE;
 80017e2:	4b77      	ldr	r3, [pc, #476]	; (80019c0 <debug+0x1ec>)
 80017e4:	f502 52a0 	add.w	r2, r2, #5120	; 0x1400
 80017e8:	601a      	str	r2, [r3, #0]

/************************************* BKP ************************************/
  BKP_DBG = (BKP_TypeDef *)  BKP_BASE;
 80017ea:	4b76      	ldr	r3, [pc, #472]	; (80019c4 <debug+0x1f0>)
 80017ec:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 80017f0:	601a      	str	r2, [r3, #0]

/************************************* CAN ************************************/			
  CAN1_DBG = (CAN_TypeDef *)  CAN1_BASE;			
 80017f2:	4b75      	ldr	r3, [pc, #468]	; (80019c8 <debug+0x1f4>)
 80017f4:	f5a2 6200 	sub.w	r2, r2, #2048	; 0x800
 80017f8:	601a      	str	r2, [r3, #0]

/************************************* CRC ************************************/
  CRC_DBG = (CRC_TypeDef *)  CRC_BASE;
 80017fa:	4b74      	ldr	r3, [pc, #464]	; (80019cc <debug+0x1f8>)
 80017fc:	f502 32e6 	add.w	r2, r2, #117760	; 0x1cc00
 8001800:	601a      	str	r2, [r3, #0]

/************************************* DAC ************************************/
  DAC_DBG = (DAC_TypeDef *)  DAC_BASE;
 8001802:	4b73      	ldr	r3, [pc, #460]	; (80019d0 <debug+0x1fc>)
 8001804:	f5a2 32de 	sub.w	r2, r2, #113664	; 0x1bc00
 8001808:	601a      	str	r2, [r3, #0]

/************************************* DBGMCU**********************************/
  DBGMCU_DBG = (DBGMCU_TypeDef *)  DBGMCU_BASE;
 800180a:	4b72      	ldr	r3, [pc, #456]	; (80019d4 <debug+0x200>)
 800180c:	4a72      	ldr	r2, [pc, #456]	; (80019d8 <debug+0x204>)
 800180e:	601a      	str	r2, [r3, #0]


/************************************* DMA ************************************/
  DMA1_DBG = (DMA_TypeDef *)  DMA1_BASE;
 8001810:	4b72      	ldr	r3, [pc, #456]	; (80019dc <debug+0x208>)
 8001812:	4a73      	ldr	r2, [pc, #460]	; (80019e0 <debug+0x20c>)
 8001814:	601a      	str	r2, [r3, #0]
  DMA2_DBG = (DMA_TypeDef *)  DMA2_BASE;
 8001816:	4b73      	ldr	r3, [pc, #460]	; (80019e4 <debug+0x210>)
 8001818:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800181c:	601a      	str	r2, [r3, #0]

  DMA1_Channel1_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel1_BASE;
 800181e:	4b72      	ldr	r3, [pc, #456]	; (80019e8 <debug+0x214>)
 8001820:	f5a2 727e 	sub.w	r2, r2, #1016	; 0x3f8
 8001824:	601a      	str	r2, [r3, #0]

  DMA1_Channel2_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel2_BASE;
 8001826:	4b71      	ldr	r3, [pc, #452]	; (80019ec <debug+0x218>)
 8001828:	3214      	adds	r2, #20
 800182a:	601a      	str	r2, [r3, #0]

  DMA1_Channel3_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel3_BASE;
 800182c:	4b70      	ldr	r3, [pc, #448]	; (80019f0 <debug+0x21c>)
 800182e:	3214      	adds	r2, #20
 8001830:	601a      	str	r2, [r3, #0]

  DMA1_Channel4_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel4_BASE;
 8001832:	4b70      	ldr	r3, [pc, #448]	; (80019f4 <debug+0x220>)
 8001834:	3214      	adds	r2, #20
 8001836:	601a      	str	r2, [r3, #0]

  DMA1_Channel5_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel5_BASE;
 8001838:	4b6f      	ldr	r3, [pc, #444]	; (80019f8 <debug+0x224>)
 800183a:	3214      	adds	r2, #20
 800183c:	601a      	str	r2, [r3, #0]

  DMA1_Channel6_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel6_BASE;
 800183e:	4b6f      	ldr	r3, [pc, #444]	; (80019fc <debug+0x228>)
 8001840:	3214      	adds	r2, #20
 8001842:	601a      	str	r2, [r3, #0]

  DMA1_Channel7_DBG = (DMA_Channel_TypeDef *)  DMA1_Channel7_BASE;
 8001844:	4b6e      	ldr	r3, [pc, #440]	; (8001a00 <debug+0x22c>)
 8001846:	3214      	adds	r2, #20
 8001848:	601a      	str	r2, [r3, #0]

  DMA2_Channel1_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel1_BASE;
 800184a:	4b6e      	ldr	r3, [pc, #440]	; (8001a04 <debug+0x230>)
 800184c:	f502 7262 	add.w	r2, r2, #904	; 0x388
 8001850:	601a      	str	r2, [r3, #0]

  DMA2_Channel2_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel2_BASE;
 8001852:	4b6d      	ldr	r3, [pc, #436]	; (8001a08 <debug+0x234>)
 8001854:	3214      	adds	r2, #20
 8001856:	601a      	str	r2, [r3, #0]

  DMA2_Channel3_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel3_BASE;
 8001858:	4b6c      	ldr	r3, [pc, #432]	; (8001a0c <debug+0x238>)
 800185a:	3214      	adds	r2, #20
 800185c:	601a      	str	r2, [r3, #0]

  DMA2_Channel4_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel4_BASE;
 800185e:	4b6c      	ldr	r3, [pc, #432]	; (8001a10 <debug+0x23c>)
 8001860:	3214      	adds	r2, #20
 8001862:	601a      	str	r2, [r3, #0]

  DMA2_Channel5_DBG = (DMA_Channel_TypeDef *)  DMA2_Channel5_BASE;
 8001864:	4b6b      	ldr	r3, [pc, #428]	; (8001a14 <debug+0x240>)
 8001866:	3214      	adds	r2, #20
 8001868:	601a      	str	r2, [r3, #0]

/************************************* EXTI ***********************************/
  EXTI_DBG = (EXTI_TypeDef *)  EXTI_BASE;
 800186a:	4b6b      	ldr	r3, [pc, #428]	; (8001a18 <debug+0x244>)
 800186c:	f5a2 3280 	sub.w	r2, r2, #65536	; 0x10000
 8001870:	3a58      	subs	r2, #88	; 0x58
 8001872:	601a      	str	r2, [r3, #0]

/************************************* FLASH and Option Bytes *****************/
  FLASH_DBG = (FLASH_TypeDef *)  FLASH_R_BASE;
 8001874:	4b69      	ldr	r3, [pc, #420]	; (8001a1c <debug+0x248>)
 8001876:	f502 328e 	add.w	r2, r2, #72704	; 0x11c00
 800187a:	601a      	str	r2, [r3, #0]
  OB_DBG = (OB_TypeDef *)        OB_BASE;
 800187c:	4b68      	ldr	r3, [pc, #416]	; (8001a20 <debug+0x24c>)
 800187e:	4a69      	ldr	r2, [pc, #420]	; (8001a24 <debug+0x250>)
 8001880:	601a      	str	r2, [r3, #0]

/************************************* FSMC ***********************************/
  FSMC_Bank1_DBG = (FSMC_Bank1_TypeDef *)    FSMC_Bank1_R_BASE;
 8001882:	4b69      	ldr	r3, [pc, #420]	; (8001a28 <debug+0x254>)
 8001884:	f04f 4220 	mov.w	r2, #2684354560	; 0xa0000000
 8001888:	601a      	str	r2, [r3, #0]
  FSMC_Bank1E_DBG = (FSMC_Bank1E_TypeDef *)  FSMC_Bank1E_R_BASE;  
 800188a:	4b68      	ldr	r3, [pc, #416]	; (8001a2c <debug+0x258>)
 800188c:	f502 7282 	add.w	r2, r2, #260	; 0x104
 8001890:	601a      	str	r2, [r3, #0]
  FSMC_Bank2_DBG = (FSMC_Bank2_TypeDef *)    FSMC_Bank2_R_BASE; 
 8001892:	4b67      	ldr	r3, [pc, #412]	; (8001a30 <debug+0x25c>)
 8001894:	3aa4      	subs	r2, #164	; 0xa4
 8001896:	601a      	str	r2, [r3, #0]
  FSMC_Bank3_DBG = (FSMC_Bank3_TypeDef *)    FSMC_Bank3_R_BASE;
 8001898:	4b66      	ldr	r3, [pc, #408]	; (8001a34 <debug+0x260>)
 800189a:	3220      	adds	r2, #32
 800189c:	601a      	str	r2, [r3, #0]
  FSMC_Bank4_DBG = (FSMC_Bank4_TypeDef *)    FSMC_Bank4_R_BASE;
 800189e:	4b66      	ldr	r3, [pc, #408]	; (8001a38 <debug+0x264>)
 80018a0:	3220      	adds	r2, #32
 80018a2:	601a      	str	r2, [r3, #0]

/************************************* GPIO ***********************************/
  GPIOA_DBG = (GPIO_TypeDef *)  GPIOA_BASE;
 80018a4:	4b65      	ldr	r3, [pc, #404]	; (8001a3c <debug+0x268>)
 80018a6:	4a66      	ldr	r2, [pc, #408]	; (8001a40 <debug+0x26c>)
 80018a8:	601a      	str	r2, [r3, #0]

  GPIOB_DBG = (GPIO_TypeDef *)  GPIOB_BASE;
 80018aa:	4b66      	ldr	r3, [pc, #408]	; (8001a44 <debug+0x270>)
 80018ac:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018b0:	601a      	str	r2, [r3, #0]

  GPIOC_DBG = (GPIO_TypeDef *)  GPIOC_BASE;
 80018b2:	4b65      	ldr	r3, [pc, #404]	; (8001a48 <debug+0x274>)
 80018b4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018b8:	601a      	str	r2, [r3, #0]

  GPIOD_DBG = (GPIO_TypeDef *)  GPIOD_BASE;
 80018ba:	4b64      	ldr	r3, [pc, #400]	; (8001a4c <debug+0x278>)
 80018bc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018c0:	601a      	str	r2, [r3, #0]

  GPIOE_DBG = (GPIO_TypeDef *)  GPIOE_BASE;
 80018c2:	4b63      	ldr	r3, [pc, #396]	; (8001a50 <debug+0x27c>)
 80018c4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018c8:	601a      	str	r2, [r3, #0]

  GPIOF_DBG = (GPIO_TypeDef *)  GPIOF_BASE;
 80018ca:	4b62      	ldr	r3, [pc, #392]	; (8001a54 <debug+0x280>)
 80018cc:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018d0:	601a      	str	r2, [r3, #0]

  GPIOG_DBG = (GPIO_TypeDef *)  GPIOG_BASE;
 80018d2:	4b61      	ldr	r3, [pc, #388]	; (8001a58 <debug+0x284>)
 80018d4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018d8:	601a      	str	r2, [r3, #0]
  
  AFIO_DBG = (AFIO_TypeDef *)  AFIO_BASE;
 80018da:	4b60      	ldr	r3, [pc, #384]	; (8001a5c <debug+0x288>)
 80018dc:	f5a2 5200 	sub.w	r2, r2, #8192	; 0x2000
 80018e0:	601a      	str	r2, [r3, #0]

/************************************* I2C ************************************/
  I2C1_DBG = (I2C_TypeDef *)  I2C1_BASE;
 80018e2:	4b5f      	ldr	r3, [pc, #380]	; (8001a60 <debug+0x28c>)
 80018e4:	f5a2 422c 	sub.w	r2, r2, #44032	; 0xac00
 80018e8:	601a      	str	r2, [r3, #0]

  I2C2_DBG = (I2C_TypeDef *)  I2C2_BASE;
 80018ea:	4b5e      	ldr	r3, [pc, #376]	; (8001a64 <debug+0x290>)
 80018ec:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80018f0:	601a      	str	r2, [r3, #0]

/************************************* IWDG ***********************************/
  IWDG_DBG = (IWDG_TypeDef *) IWDG_BASE;
 80018f2:	4b5d      	ldr	r3, [pc, #372]	; (8001a68 <debug+0x294>)
 80018f4:	f5a2 5220 	sub.w	r2, r2, #10240	; 0x2800
 80018f8:	601a      	str	r2, [r3, #0]

/************************************* NVIC ***********************************/
  NVIC_DBG = (NVIC_Type *)  NVIC_BASE;
 80018fa:	4b5c      	ldr	r3, [pc, #368]	; (8001a6c <debug+0x298>)
 80018fc:	4a5c      	ldr	r2, [pc, #368]	; (8001a70 <debug+0x29c>)
 80018fe:	601a      	str	r2, [r3, #0]
  SCB_DBG = (SCB_Type *)  SCB_BASE;
 8001900:	4b5c      	ldr	r3, [pc, #368]	; (8001a74 <debug+0x2a0>)
 8001902:	f502 6240 	add.w	r2, r2, #3072	; 0xc00
 8001906:	601a      	str	r2, [r3, #0]

/************************************* PWR ************************************/
  PWR_DBG = (PWR_TypeDef *)  PWR_BASE;
 8001908:	4b5b      	ldr	r3, [pc, #364]	; (8001a78 <debug+0x2a4>)
 800190a:	4a5c      	ldr	r2, [pc, #368]	; (8001a7c <debug+0x2a8>)
 800190c:	601a      	str	r2, [r3, #0]

/************************************* RCC ************************************/
  RCC_DBG = (RCC_TypeDef *)  RCC_BASE;
 800190e:	4b5c      	ldr	r3, [pc, #368]	; (8001a80 <debug+0x2ac>)
 8001910:	f502 32d0 	add.w	r2, r2, #106496	; 0x1a000
 8001914:	601a      	str	r2, [r3, #0]

/************************************* RTC ************************************/
  RTC_DBG = (RTC_TypeDef *)  RTC_BASE;
 8001916:	4b5b      	ldr	r3, [pc, #364]	; (8001a84 <debug+0x2b0>)
 8001918:	f5a2 32f4 	sub.w	r2, r2, #124928	; 0x1e800
 800191c:	601a      	str	r2, [r3, #0]

/************************************* SDIO ***********************************/
  SDIO_DBG = (SDIO_TypeDef *)  SDIO_BASE;
 800191e:	4b5a      	ldr	r3, [pc, #360]	; (8001a88 <debug+0x2b4>)
 8001920:	f502 32ac 	add.w	r2, r2, #88064	; 0x15800
 8001924:	601a      	str	r2, [r3, #0]

/************************************* SPI ************************************/
  SPI1_DBG = (SPI_TypeDef *)  SPI1_BASE;
 8001926:	4b59      	ldr	r3, [pc, #356]	; (8001a8c <debug+0x2b8>)
 8001928:	f5a2 42a0 	sub.w	r2, r2, #20480	; 0x5000
 800192c:	601a      	str	r2, [r3, #0]

  SPI2_DBG = (SPI_TypeDef *)  SPI2_BASE;
 800192e:	4b58      	ldr	r3, [pc, #352]	; (8001a90 <debug+0x2bc>)
 8001930:	f5a2 4278 	sub.w	r2, r2, #63488	; 0xf800
 8001934:	601a      	str	r2, [r3, #0]

  SPI3_DBG = (SPI_TypeDef *)  SPI3_BASE;
 8001936:	4b57      	ldr	r3, [pc, #348]	; (8001a94 <debug+0x2c0>)
 8001938:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800193c:	601a      	str	r2, [r3, #0]

/************************************* SysTick ********************************/
  SysTick_DBG = (SysTick_Type *)  SysTick_BASE;
 800193e:	4b56      	ldr	r3, [pc, #344]	; (8001a98 <debug+0x2c4>)
 8001940:	4a56      	ldr	r2, [pc, #344]	; (8001a9c <debug+0x2c8>)
 8001942:	601a      	str	r2, [r3, #0]

/************************************* TIM ************************************/
  TIM1_DBG = (TIM_TypeDef *)  TIM1_BASE;
 8001944:	4b56      	ldr	r3, [pc, #344]	; (8001aa0 <debug+0x2cc>)
 8001946:	4a57      	ldr	r2, [pc, #348]	; (8001aa4 <debug+0x2d0>)
 8001948:	601a      	str	r2, [r3, #0]

  TIM2_DBG = (TIM_TypeDef *)  TIM2_BASE;
 800194a:	4b57      	ldr	r3, [pc, #348]	; (8001aa8 <debug+0x2d4>)
 800194c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001950:	601a      	str	r2, [r3, #0]

  TIM3_DBG = (TIM_TypeDef *)  TIM3_BASE;
 8001952:	4b56      	ldr	r3, [pc, #344]	; (8001aac <debug+0x2d8>)
 8001954:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001958:	601a      	str	r2, [r3, #0]

  TIM4_DBG = (TIM_TypeDef *)  TIM4_BASE;
 800195a:	4b55      	ldr	r3, [pc, #340]	; (8001ab0 <debug+0x2dc>)
 800195c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001960:	601a      	str	r2, [r3, #0]

  TIM5_DBG = (TIM_TypeDef *)  TIM5_BASE;
 8001962:	4b54      	ldr	r3, [pc, #336]	; (8001ab4 <debug+0x2e0>)
 8001964:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001968:	601a      	str	r2, [r3, #0]

  TIM6_DBG = (TIM_TypeDef *)  TIM6_BASE;
 800196a:	4b53      	ldr	r3, [pc, #332]	; (8001ab8 <debug+0x2e4>)
 800196c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001970:	601a      	str	r2, [r3, #0]

  TIM7_DBG = (TIM_TypeDef *)  TIM7_BASE;
 8001972:	4b52      	ldr	r3, [pc, #328]	; (8001abc <debug+0x2e8>)
 8001974:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001978:	601a      	str	r2, [r3, #0]

  TIM8_DBG = (TIM_TypeDef *)  TIM8_BASE;
 800197a:	4b51      	ldr	r3, [pc, #324]	; (8001ac0 <debug+0x2ec>)
 800197c:	f502 3290 	add.w	r2, r2, #73728	; 0x12000
 8001980:	601a      	str	r2, [r3, #0]

/************************************* USART **********************************/
  USART1_DBG = (USART_TypeDef *) USART1_BASE;
 8001982:	4b50      	ldr	r3, [pc, #320]	; (8001ac4 <debug+0x2f0>)
 8001984:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001988:	601a      	str	r2, [r3, #0]

  USART2_DBG = (USART_TypeDef *) USART2_BASE;
 800198a:	4b4f      	ldr	r3, [pc, #316]	; (8001ac8 <debug+0x2f4>)
 800198c:	f5a2 4274 	sub.w	r2, r2, #62464	; 0xf400
 8001990:	601a      	str	r2, [r3, #0]

  USART3_DBG = (USART_TypeDef *) USART3_BASE;
 8001992:	4b4e      	ldr	r3, [pc, #312]	; (8001acc <debug+0x2f8>)
 8001994:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8001998:	601a      	str	r2, [r3, #0]

  UART4_DBG = (USART_TypeDef *) UART4_BASE;
 800199a:	4b4d      	ldr	r3, [pc, #308]	; (8001ad0 <debug+0x2fc>)
 800199c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80019a0:	601a      	str	r2, [r3, #0]

  UART5_DBG = (USART_TypeDef *) UART5_BASE;
 80019a2:	4b4c      	ldr	r3, [pc, #304]	; (8001ad4 <debug+0x300>)
 80019a4:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80019a8:	601a      	str	r2, [r3, #0]

/************************************* WWDG ***********************************/
  WWDG_DBG = (WWDG_TypeDef *)  WWDG_BASE;
 80019aa:	4b4b      	ldr	r3, [pc, #300]	; (8001ad8 <debug+0x304>)
 80019ac:	f5a2 5210 	sub.w	r2, r2, #9216	; 0x2400
 80019b0:	601a      	str	r2, [r3, #0]
}
 80019b2:	4770      	bx	lr
 80019b4:	200002dc 	.word	0x200002dc
 80019b8:	40012400 	.word	0x40012400
 80019bc:	20000288 	.word	0x20000288
 80019c0:	20000270 	.word	0x20000270
 80019c4:	2000032c 	.word	0x2000032c
 80019c8:	200002c8 	.word	0x200002c8
 80019cc:	2000029c 	.word	0x2000029c
 80019d0:	200002fc 	.word	0x200002fc
 80019d4:	200002cc 	.word	0x200002cc
 80019d8:	e0042000 	.word	0xe0042000
 80019dc:	2000030c 	.word	0x2000030c
 80019e0:	40020000 	.word	0x40020000
 80019e4:	20000268 	.word	0x20000268
 80019e8:	200002b0 	.word	0x200002b0
 80019ec:	20000328 	.word	0x20000328
 80019f0:	20000284 	.word	0x20000284
 80019f4:	200002ac 	.word	0x200002ac
 80019f8:	200002e8 	.word	0x200002e8
 80019fc:	20000264 	.word	0x20000264
 8001a00:	20000280 	.word	0x20000280
 8001a04:	20000258 	.word	0x20000258
 8001a08:	200002a4 	.word	0x200002a4
 8001a0c:	200002f0 	.word	0x200002f0
 8001a10:	20000324 	.word	0x20000324
 8001a14:	20000314 	.word	0x20000314
 8001a18:	2000022c 	.word	0x2000022c
 8001a1c:	2000025c 	.word	0x2000025c
 8001a20:	200002e0 	.word	0x200002e0
 8001a24:	1ffff800 	.word	0x1ffff800
 8001a28:	20000254 	.word	0x20000254
 8001a2c:	200002a0 	.word	0x200002a0
 8001a30:	200002f8 	.word	0x200002f8
 8001a34:	2000031c 	.word	0x2000031c
 8001a38:	2000023c 	.word	0x2000023c
 8001a3c:	200002d4 	.word	0x200002d4
 8001a40:	40010800 	.word	0x40010800
 8001a44:	20000234 	.word	0x20000234
 8001a48:	200002b8 	.word	0x200002b8
 8001a4c:	200002b4 	.word	0x200002b4
 8001a50:	200002e4 	.word	0x200002e4
 8001a54:	2000026c 	.word	0x2000026c
 8001a58:	2000028c 	.word	0x2000028c
 8001a5c:	200002d0 	.word	0x200002d0
 8001a60:	20000248 	.word	0x20000248
 8001a64:	20000260 	.word	0x20000260
 8001a68:	20000310 	.word	0x20000310
 8001a6c:	200002f4 	.word	0x200002f4
 8001a70:	e000e100 	.word	0xe000e100
 8001a74:	20000230 	.word	0x20000230
 8001a78:	20000298 	.word	0x20000298
 8001a7c:	40007000 	.word	0x40007000
 8001a80:	20000318 	.word	0x20000318
 8001a84:	200002a8 	.word	0x200002a8
 8001a88:	20000294 	.word	0x20000294
 8001a8c:	200002ec 	.word	0x200002ec
 8001a90:	20000240 	.word	0x20000240
 8001a94:	200002c0 	.word	0x200002c0
 8001a98:	20000320 	.word	0x20000320
 8001a9c:	e000e010 	.word	0xe000e010
 8001aa0:	200002c4 	.word	0x200002c4
 8001aa4:	40012c00 	.word	0x40012c00
 8001aa8:	20000304 	.word	0x20000304
 8001aac:	2000024c 	.word	0x2000024c
 8001ab0:	2000027c 	.word	0x2000027c
 8001ab4:	200002d8 	.word	0x200002d8
 8001ab8:	200002bc 	.word	0x200002bc
 8001abc:	20000300 	.word	0x20000300
 8001ac0:	20000278 	.word	0x20000278
 8001ac4:	20000308 	.word	0x20000308
 8001ac8:	20000238 	.word	0x20000238
 8001acc:	20000274 	.word	0x20000274
 8001ad0:	20000250 	.word	0x20000250
 8001ad4:	20000290 	.word	0x20000290
 8001ad8:	20000244 	.word	0x20000244

08001adc <NMI_Handler>:
  * @param  None
  * @retval None
  */
void NMI_Handler(void)
{
}
 8001adc:	4770      	bx	lr

08001ade <HardFault_Handler>:
  * @brief  This function handles Hard Fault exception.
  * @param  None
  * @retval None
  */
void HardFault_Handler(void)
{
 8001ade:	e7fe      	b.n	8001ade <HardFault_Handler>

08001ae0 <MemManage_Handler>:
  * @brief  This function handles Memory Manage exception.
  * @param  None
  * @retval None
  */
void MemManage_Handler(void)
{
 8001ae0:	e7fe      	b.n	8001ae0 <MemManage_Handler>

08001ae2 <BusFault_Handler>:
  * @brief  This function handles Bus Fault exception.
  * @param  None
  * @retval None
  */
void BusFault_Handler(void)
{
 8001ae2:	e7fe      	b.n	8001ae2 <BusFault_Handler>

08001ae4 <UsageFault_Handler>:
  * @brief  This function handles Usage Fault exception.
  * @param  None
  * @retval None
  */
void UsageFault_Handler(void)
{
 8001ae4:	e7fe      	b.n	8001ae4 <UsageFault_Handler>

08001ae6 <SVC_Handler>:


#else
void SVC_Handler(void)
{
}
 8001ae6:	4770      	bx	lr

08001ae8 <DebugMon_Handler>:
  * @param  None
  * @retval None
  */
void DebugMon_Handler(void)
{
}
 8001ae8:	4770      	bx	lr

08001aea <PendSV_Handler>:
#ifdef FREE_RTOS

#else
void PendSV_Handler(void)
{
}
 8001aea:	4770      	bx	lr

08001aec <SysTick_Handler>:
  */
#ifdef FREE_RTOS
    
#else
void SysTick_Handler(void)
{   
 8001aec:	b508      	push	{r3, lr}
    TimingDelay_Decrement();
 8001aee:	f7ff fdf5 	bl	80016dc <TimingDelay_Decrement>
}
 8001af2:	bd08      	pop	{r3, pc}

08001af4 <WWDG_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void WWDG_IRQHandler(void)
{
}
 8001af4:	4770      	bx	lr

08001af6 <PVD_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void PVD_IRQHandler(void)
{
}
 8001af6:	4770      	bx	lr

08001af8 <TAMPER_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TAMPER_IRQHandler(void)
{
}
 8001af8:	4770      	bx	lr

08001afa <RTC_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void RTC_IRQHandler(void)
{
}
 8001afa:	4770      	bx	lr

08001afc <FLASH_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void FLASH_IRQHandler(void)
{
}
 8001afc:	4770      	bx	lr

08001afe <RCC_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void RCC_IRQHandler(void)
{
}
 8001afe:	4770      	bx	lr

08001b00 <EXTI0_IRQHandler>:
static bool toggle_data_key1 = FALSE;

void EXTI0_IRQHandler(void)
{

}
 8001b00:	4770      	bx	lr

08001b02 <EXTI2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI2_IRQHandler(void)
{
}
 8001b02:	4770      	bx	lr

08001b04 <EXTI3_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI3_IRQHandler(void)
{
}
 8001b04:	4770      	bx	lr

08001b06 <EXTI4_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI4_IRQHandler(void)
{
}
 8001b06:	4770      	bx	lr

08001b08 <DMA1_Channel1_IRQHandler>:
* Return         : None
*******************************************************************************/
void DMA1_Channel1_IRQHandler(void)
{

}
 8001b08:	4770      	bx	lr

08001b0a <DMA1_Channel2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel2_IRQHandler(void)
{
}
 8001b0a:	4770      	bx	lr

08001b0c <DMA1_Channel3_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel3_IRQHandler(void)
{
}
 8001b0c:	4770      	bx	lr

08001b0e <DMA1_Channel4_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel4_IRQHandler(void)
{
}
 8001b0e:	4770      	bx	lr

08001b10 <DMA1_Channel5_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel5_IRQHandler(void)
{
}
 8001b10:	4770      	bx	lr

08001b12 <DMA1_Channel6_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel6_IRQHandler(void)
{
}
 8001b12:	4770      	bx	lr

08001b14 <DMA1_Channel7_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void DMA1_Channel7_IRQHandler(void)
{
}
 8001b14:	4770      	bx	lr

08001b16 <ADC1_2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void ADC1_2_IRQHandler(void)
{
}
 8001b16:	4770      	bx	lr

08001b18 <USB_HP_CAN1_TX_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void USB_HP_CAN1_TX_IRQHandler(void)
{
}
 8001b18:	4770      	bx	lr

08001b1a <USB_LP_CAN1_RX0_IRQHandler>:
* Return         : None
*******************************************************************************/
void USB_LP_CAN1_RX0_IRQHandler(void)
{

}
 8001b1a:	4770      	bx	lr

08001b1c <CAN1_RX1_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void CAN1_RX1_IRQHandler(void)
{
}
 8001b1c:	4770      	bx	lr

08001b1e <CAN1_SCE_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void CAN1_SCE_IRQHandler(void)
{
}
 8001b1e:	4770      	bx	lr

08001b20 <EXTI9_5_IRQHandler>:
    {
        basicRfRxFrmDoneIsr();
        EXTI_ClearITPendingBit(GPIO_EXTI_Line_RF_GPIO0);
    }
#endif
}
 8001b20:	4770      	bx	lr

08001b22 <TIM1_BRK_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_BRK_IRQHandler(void)
{
}
 8001b22:	4770      	bx	lr

08001b24 <TIM1_UP_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_UP_IRQHandler(void)
{
}
 8001b24:	4770      	bx	lr

08001b26 <TIM1_TRG_COM_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_TRG_COM_IRQHandler(void)
{
}
 8001b26:	4770      	bx	lr

08001b28 <TIM1_CC_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM1_CC_IRQHandler(void)
{
}
 8001b28:	4770      	bx	lr

08001b2a <TIM2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM2_IRQHandler(void)
{
}
 8001b2a:	4770      	bx	lr

08001b2c <TIM3_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM3_IRQHandler(void)
{
}
 8001b2c:	4770      	bx	lr

08001b2e <TIM4_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void TIM4_IRQHandler(void)
{
}
 8001b2e:	4770      	bx	lr

08001b30 <I2C1_EV_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void I2C1_EV_IRQHandler(void)
{
}
 8001b30:	4770      	bx	lr

08001b32 <I2C1_ER_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void I2C1_ER_IRQHandler(void)
{
}
 8001b32:	4770      	bx	lr

08001b34 <I2C2_EV_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void I2C2_EV_IRQHandler(void)
{
}
 8001b34:	4770      	bx	lr

08001b36 <I2C2_ER_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void I2C2_ER_IRQHandler(void)
{
}
 8001b36:	4770      	bx	lr

08001b38 <SPI1_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void SPI1_IRQHandler(void)
{
}
 8001b38:	4770      	bx	lr

08001b3a <SPI2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void SPI2_IRQHandler(void)
{
}
 8001b3a:	4770      	bx	lr

08001b3c <USART1_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void USART1_IRQHandler(void)
{
}
 8001b3c:	4770      	bx	lr

08001b3e <USART2_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void USART2_IRQHandler(void)
{
}
 8001b3e:	4770      	bx	lr

08001b40 <USART3_IRQHandler>:
* Description    : This function handles USART3 global interrupt request.
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USART3_IRQHandler(void){
 8001b40:	b510      	push	{r4, lr}
    if(USART_GetITStatus(USART3, USART_IT_RXNE) != RESET)
 8001b42:	f240 5125 	movw	r1, #1317	; 0x525
 8001b46:	480c      	ldr	r0, [pc, #48]	; (8001b78 <USART3_IRQHandler+0x38>)
 8001b48:	f7ff fc92 	bl	8001470 <USART_GetITStatus>
 8001b4c:	b900      	cbnz	r0, 8001b50 <USART3_IRQHandler+0x10>
        //esp buffer insert data buffer
        //
        while(USART_GetFlagStatus(USART3, USART_FLAG_TXE) == RESET);
        //U_EnQueue(USART_ReceiveData(USART3));
    }
  }
 8001b4e:	bd10      	pop	{r4, pc}
        USART_ClearITPendingBit(USART3, USART_IT_RXNE);
 8001b50:	4c09      	ldr	r4, [pc, #36]	; (8001b78 <USART3_IRQHandler+0x38>)
 8001b52:	f240 5125 	movw	r1, #1317	; 0x525
 8001b56:	4620      	mov	r0, r4
 8001b58:	f7ff fd08 	bl	800156c <USART_ClearITPendingBit>
        ESP_EnQueue(USART_ReceiveData(USART3));
 8001b5c:	4620      	mov	r0, r4
 8001b5e:	f7ff fc0f 	bl	8001380 <USART_ReceiveData>
 8001b62:	b2c0      	uxtb	r0, r0
 8001b64:	f000 fc84 	bl	8002470 <ESP_EnQueue>
        while(USART_GetFlagStatus(USART3, USART_FLAG_TXE) == RESET);
 8001b68:	2180      	movs	r1, #128	; 0x80
 8001b6a:	4803      	ldr	r0, [pc, #12]	; (8001b78 <USART3_IRQHandler+0x38>)
 8001b6c:	f7ff fc2a 	bl	80013c4 <USART_GetFlagStatus>
 8001b70:	2800      	cmp	r0, #0
 8001b72:	d0f9      	beq.n	8001b68 <USART3_IRQHandler+0x28>
 8001b74:	e7eb      	b.n	8001b4e <USART3_IRQHandler+0xe>
 8001b76:	bf00      	nop
 8001b78:	40004800 	.word	0x40004800

08001b7c <EXTI15_10_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void EXTI15_10_IRQHandler(void)
{
}
 8001b7c:	4770      	bx	lr

08001b7e <RTCAlarm_IRQHandler>:
* Output         : None
* Return         : None
*******************************************************************************/
void RTCAlarm_IRQHandler(void)
{
}
 8001b7e:	4770      	bx	lr

08001b80 <USBWakeUp_IRQHandler>:
* Input          : None
* Output         : None
* Return         : None
*******************************************************************************/
void USBWakeUp_IRQHandler(void)
{
 8001b80:	b508      	push	{r3, lr}
#if 1
    EXTI_ClearITPendingBit(EXTI_Line18);
 8001b82:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 8001b86:	f7ff f909 	bl	8000d9c <EXTI_ClearITPendingBit>
#endif
}
 8001b8a:	bd08      	pop	{r3, pc}

08001b8c <_write>:

#define  U1_BUFFER_SIZE  100

//retargetting _write
__attribute__ ((used)) int _write(int fd, char *ptr, int len)
{
 8001b8c:	b570      	push	{r4, r5, r6, lr}
 8001b8e:	460e      	mov	r6, r1
 8001b90:	4615      	mov	r5, r2
    /* Write "len" of char from "ptr" to file id "fd"
   * Return number of char written.
   * Need implementing with UART here. */
    size_t i;
    for(i = 0; i < len; i++)
 8001b92:	2400      	movs	r4, #0
 8001b94:	e00a      	b.n	8001bac <_write+0x20>
    {
        USART_SendData(USART1, ptr[i]);
 8001b96:	5d31      	ldrb	r1, [r6, r4]
 8001b98:	4806      	ldr	r0, [pc, #24]	; (8001bb4 <_write+0x28>)
 8001b9a:	f7ff fbc5 	bl	8001328 <USART_SendData>
        while(USART_GetFlagStatus(USART1, USART_FLAG_TXE) == RESET);
 8001b9e:	2180      	movs	r1, #128	; 0x80
 8001ba0:	4804      	ldr	r0, [pc, #16]	; (8001bb4 <_write+0x28>)
 8001ba2:	f7ff fc0f 	bl	80013c4 <USART_GetFlagStatus>
 8001ba6:	2800      	cmp	r0, #0
 8001ba8:	d0f9      	beq.n	8001b9e <_write+0x12>
    for(i = 0; i < len; i++)
 8001baa:	3401      	adds	r4, #1
 8001bac:	42a5      	cmp	r5, r4
 8001bae:	d8f2      	bhi.n	8001b96 <_write+0xa>
    }
    return len;
}
 8001bb0:	4628      	mov	r0, r5
 8001bb2:	bd70      	pop	{r4, r5, r6, pc}
 8001bb4:	40013800 	.word	0x40013800

08001bb8 <_close>:
*/

__attribute__ ((used)) int _close(int file)
{
    return -1;
}
 8001bb8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8001bbc:	4770      	bx	lr
	...

08001bc0 <main_menu>:
    return 0;
    
}

MENU_DEF int main_menu()
{
 8001bc0:	b510      	push	{r4, lr}
    int key;
    
    printf("\r\n\r\n");
 8001bc2:	4811      	ldr	r0, [pc, #68]	; (8001c08 <main_menu+0x48>)
 8001bc4:	f001 fb26 	bl	8003214 <puts>
    printf("-------------------------------------------------\r\n");
 8001bc8:	4c10      	ldr	r4, [pc, #64]	; (8001c0c <main_menu+0x4c>)
 8001bca:	4620      	mov	r0, r4
 8001bcc:	f001 fb22 	bl	8003214 <puts>
    printf("                  menu select \r\n");
 8001bd0:	480f      	ldr	r0, [pc, #60]	; (8001c10 <main_menu+0x50>)
 8001bd2:	f001 fb1f 	bl	8003214 <puts>
    printf("-------------------------------------------------\r\n");
 8001bd6:	4620      	mov	r0, r4
 8001bd8:	f001 fb1c 	bl	8003214 <puts>
    printf(" 1. at command test menu\r\n");
 8001bdc:	480d      	ldr	r0, [pc, #52]	; (8001c14 <main_menu+0x54>)
 8001bde:	f001 fb19 	bl	8003214 <puts>
    printf(" 2. \r\n");
 8001be2:	480d      	ldr	r0, [pc, #52]	; (8001c18 <main_menu+0x58>)
 8001be4:	f001 fb16 	bl	8003214 <puts>
    printf(" 3. \r\n");
 8001be8:	480c      	ldr	r0, [pc, #48]	; (8001c1c <main_menu+0x5c>)
 8001bea:	f001 fb13 	bl	8003214 <puts>
    printf("-------------------------------------------------\r\n");
 8001bee:	4620      	mov	r0, r4
 8001bf0:	f001 fb10 	bl	8003214 <puts>
    printf(" q. Menu Quit\r\n");
 8001bf4:	480a      	ldr	r0, [pc, #40]	; (8001c20 <main_menu+0x60>)
 8001bf6:	f001 fb0d 	bl	8003214 <puts>
    printf("-------------------------------------------------\r\n");
 8001bfa:	4620      	mov	r0, r4
 8001bfc:	f001 fb0a 	bl	8003214 <puts>
    
    key = USART_GetCharacter(USART1);
 8001c00:	4808      	ldr	r0, [pc, #32]	; (8001c24 <main_menu+0x64>)
 8001c02:	f7ff fdd6 	bl	80017b2 <USART_GetCharacter>

    return key;
 8001c06:	bd10      	pop	{r4, pc}
 8001c08:	08006c68 	.word	0x08006c68
 8001c0c:	08006c6c 	.word	0x08006c6c
 8001c10:	08006ca0 	.word	0x08006ca0
 8001c14:	08006cc0 	.word	0x08006cc0
 8001c18:	08006cdc 	.word	0x08006cdc
 8001c1c:	08006ce4 	.word	0x08006ce4
 8001c20:	08006cec 	.word	0x08006cec
 8001c24:	40013800 	.word	0x40013800

08001c28 <menu>:
{
 8001c28:	b508      	push	{r3, lr}
    while((key = main_menu()) != 0)
 8001c2a:	f7ff ffc9 	bl	8001bc0 <main_menu>
 8001c2e:	4603      	mov	r3, r0
 8001c30:	2800      	cmp	r0, #0
 8001c32:	f000 80e1 	beq.w	8001df8 <menu+0x1d0>
        switch(key)
 8001c36:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8001c3a:	2841      	cmp	r0, #65	; 0x41
 8001c3c:	d8f5      	bhi.n	8001c2a <menu+0x2>
 8001c3e:	a301      	add	r3, pc, #4	; (adr r3, 8001c44 <menu+0x1c>)
 8001c40:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
 8001c44:	08001d99 	.word	0x08001d99
 8001c48:	08001d4d 	.word	0x08001d4d
 8001c4c:	08001d59 	.word	0x08001d59
 8001c50:	08001d61 	.word	0x08001d61
 8001c54:	08001d69 	.word	0x08001d69
 8001c58:	08001d71 	.word	0x08001d71
 8001c5c:	08001d79 	.word	0x08001d79
 8001c60:	08001d81 	.word	0x08001d81
 8001c64:	08001d89 	.word	0x08001d89
 8001c68:	08001d91 	.word	0x08001d91
 8001c6c:	08001c2b 	.word	0x08001c2b
 8001c70:	08001c2b 	.word	0x08001c2b
 8001c74:	08001c2b 	.word	0x08001c2b
 8001c78:	08001c2b 	.word	0x08001c2b
 8001c7c:	08001c2b 	.word	0x08001c2b
 8001c80:	08001c2b 	.word	0x08001c2b
 8001c84:	08001c2b 	.word	0x08001c2b
 8001c88:	08001c2b 	.word	0x08001c2b
 8001c8c:	08001c2b 	.word	0x08001c2b
 8001c90:	08001c2b 	.word	0x08001c2b
 8001c94:	08001c2b 	.word	0x08001c2b
 8001c98:	08001c2b 	.word	0x08001c2b
 8001c9c:	08001c2b 	.word	0x08001c2b
 8001ca0:	08001c2b 	.word	0x08001c2b
 8001ca4:	08001c2b 	.word	0x08001c2b
 8001ca8:	08001c2b 	.word	0x08001c2b
 8001cac:	08001c2b 	.word	0x08001c2b
 8001cb0:	08001c2b 	.word	0x08001c2b
 8001cb4:	08001c2b 	.word	0x08001c2b
 8001cb8:	08001c2b 	.word	0x08001c2b
 8001cbc:	08001c2b 	.word	0x08001c2b
 8001cc0:	08001c2b 	.word	0x08001c2b
 8001cc4:	08001c2b 	.word	0x08001c2b
 8001cc8:	08001c2b 	.word	0x08001c2b
 8001ccc:	08001c2b 	.word	0x08001c2b
 8001cd0:	08001c2b 	.word	0x08001c2b
 8001cd4:	08001c2b 	.word	0x08001c2b
 8001cd8:	08001c2b 	.word	0x08001c2b
 8001cdc:	08001c2b 	.word	0x08001c2b
 8001ce0:	08001c2b 	.word	0x08001c2b
 8001ce4:	08001c2b 	.word	0x08001c2b
 8001ce8:	08001c2b 	.word	0x08001c2b
 8001cec:	08001c2b 	.word	0x08001c2b
 8001cf0:	08001c2b 	.word	0x08001c2b
 8001cf4:	08001c2b 	.word	0x08001c2b
 8001cf8:	08001c2b 	.word	0x08001c2b
 8001cfc:	08001c2b 	.word	0x08001c2b
 8001d00:	08001c2b 	.word	0x08001c2b
 8001d04:	08001c2b 	.word	0x08001c2b
 8001d08:	08001da1 	.word	0x08001da1
 8001d0c:	08001da9 	.word	0x08001da9
 8001d10:	08001db1 	.word	0x08001db1
 8001d14:	08001db9 	.word	0x08001db9
 8001d18:	08001dc1 	.word	0x08001dc1
 8001d1c:	08001dc9 	.word	0x08001dc9
 8001d20:	08001dd1 	.word	0x08001dd1
 8001d24:	08001dd9 	.word	0x08001dd9
 8001d28:	08001de1 	.word	0x08001de1
 8001d2c:	08001de9 	.word	0x08001de9
 8001d30:	08001df1 	.word	0x08001df1
 8001d34:	08001c2b 	.word	0x08001c2b
 8001d38:	08001c2b 	.word	0x08001c2b
 8001d3c:	08001c2b 	.word	0x08001c2b
 8001d40:	08001c2b 	.word	0x08001c2b
 8001d44:	08001c2b 	.word	0x08001c2b
 8001d48:	08001df9 	.word	0x08001df9
                printf("\r\nNo.1\n");
 8001d4c:	482b      	ldr	r0, [pc, #172]	; (8001dfc <menu+0x1d4>)
 8001d4e:	f001 fa61 	bl	8003214 <puts>
                at_menu();
 8001d52:	f000 f8bb 	bl	8001ecc <at_menu>
            break;
 8001d56:	e768      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.2\n");
 8001d58:	4829      	ldr	r0, [pc, #164]	; (8001e00 <menu+0x1d8>)
 8001d5a:	f001 fa5b 	bl	8003214 <puts>
            break;
 8001d5e:	e764      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.3\n");
 8001d60:	4828      	ldr	r0, [pc, #160]	; (8001e04 <menu+0x1dc>)
 8001d62:	f001 fa57 	bl	8003214 <puts>
            break;
 8001d66:	e760      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.4\n");
 8001d68:	4827      	ldr	r0, [pc, #156]	; (8001e08 <menu+0x1e0>)
 8001d6a:	f001 fa53 	bl	8003214 <puts>
            break;
 8001d6e:	e75c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.5\n");
 8001d70:	4826      	ldr	r0, [pc, #152]	; (8001e0c <menu+0x1e4>)
 8001d72:	f001 fa4f 	bl	8003214 <puts>
            break;
 8001d76:	e758      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.6\n");
 8001d78:	4825      	ldr	r0, [pc, #148]	; (8001e10 <menu+0x1e8>)
 8001d7a:	f001 fa4b 	bl	8003214 <puts>
            break;
 8001d7e:	e754      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.7\n");
 8001d80:	4824      	ldr	r0, [pc, #144]	; (8001e14 <menu+0x1ec>)
 8001d82:	f001 fa47 	bl	8003214 <puts>
            break;
 8001d86:	e750      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.8\n");
 8001d88:	4823      	ldr	r0, [pc, #140]	; (8001e18 <menu+0x1f0>)
 8001d8a:	f001 fa43 	bl	8003214 <puts>
            break;
 8001d8e:	e74c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.9\n");
 8001d90:	4822      	ldr	r0, [pc, #136]	; (8001e1c <menu+0x1f4>)
 8001d92:	f001 fa3f 	bl	8003214 <puts>
            break;
 8001d96:	e748      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.0\n");
 8001d98:	4821      	ldr	r0, [pc, #132]	; (8001e20 <menu+0x1f8>)
 8001d9a:	f001 fa3b 	bl	8003214 <puts>
            break;
 8001d9e:	e744      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.a\n");
 8001da0:	4820      	ldr	r0, [pc, #128]	; (8001e24 <menu+0x1fc>)
 8001da2:	f001 fa37 	bl	8003214 <puts>
            break;
 8001da6:	e740      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.b\n");
 8001da8:	481f      	ldr	r0, [pc, #124]	; (8001e28 <menu+0x200>)
 8001daa:	f001 fa33 	bl	8003214 <puts>
            break;
 8001dae:	e73c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.c\n");
 8001db0:	481e      	ldr	r0, [pc, #120]	; (8001e2c <menu+0x204>)
 8001db2:	f001 fa2f 	bl	8003214 <puts>
            break;
 8001db6:	e738      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.d\n");
 8001db8:	481d      	ldr	r0, [pc, #116]	; (8001e30 <menu+0x208>)
 8001dba:	f001 fa2b 	bl	8003214 <puts>
            break;
 8001dbe:	e734      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.e\n");
 8001dc0:	481c      	ldr	r0, [pc, #112]	; (8001e34 <menu+0x20c>)
 8001dc2:	f001 fa27 	bl	8003214 <puts>
            break;
 8001dc6:	e730      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.f\n");
 8001dc8:	481b      	ldr	r0, [pc, #108]	; (8001e38 <menu+0x210>)
 8001dca:	f001 fa23 	bl	8003214 <puts>
            break;
 8001dce:	e72c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.g\n");
 8001dd0:	481a      	ldr	r0, [pc, #104]	; (8001e3c <menu+0x214>)
 8001dd2:	f001 fa1f 	bl	8003214 <puts>
            break;
 8001dd6:	e728      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.h\n");
 8001dd8:	4819      	ldr	r0, [pc, #100]	; (8001e40 <menu+0x218>)
 8001dda:	f001 fa1b 	bl	8003214 <puts>
            break;
 8001dde:	e724      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.i\n");
 8001de0:	4818      	ldr	r0, [pc, #96]	; (8001e44 <menu+0x21c>)
 8001de2:	f001 fa17 	bl	8003214 <puts>
            break;
 8001de6:	e720      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.j\n");
 8001de8:	4817      	ldr	r0, [pc, #92]	; (8001e48 <menu+0x220>)
 8001dea:	f001 fa13 	bl	8003214 <puts>
            break;
 8001dee:	e71c      	b.n	8001c2a <menu+0x2>
                printf("\r\nNo.k\n");
 8001df0:	4816      	ldr	r0, [pc, #88]	; (8001e4c <menu+0x224>)
 8001df2:	f001 fa0f 	bl	8003214 <puts>
            break;
 8001df6:	e718      	b.n	8001c2a <menu+0x2>
}
 8001df8:	2000      	movs	r0, #0
 8001dfa:	bd08      	pop	{r3, pc}
 8001dfc:	08006cfc 	.word	0x08006cfc
 8001e00:	08006d04 	.word	0x08006d04
 8001e04:	08006d0c 	.word	0x08006d0c
 8001e08:	08006d14 	.word	0x08006d14
 8001e0c:	08006d1c 	.word	0x08006d1c
 8001e10:	08006d24 	.word	0x08006d24
 8001e14:	08006d2c 	.word	0x08006d2c
 8001e18:	08006d34 	.word	0x08006d34
 8001e1c:	08006d3c 	.word	0x08006d3c
 8001e20:	08006d44 	.word	0x08006d44
 8001e24:	08006d4c 	.word	0x08006d4c
 8001e28:	08006d54 	.word	0x08006d54
 8001e2c:	08006d5c 	.word	0x08006d5c
 8001e30:	08006d64 	.word	0x08006d64
 8001e34:	08006d6c 	.word	0x08006d6c
 8001e38:	08006d74 	.word	0x08006d74
 8001e3c:	08006d7c 	.word	0x08006d7c
 8001e40:	08006d84 	.word	0x08006d84
 8001e44:	08006d8c 	.word	0x08006d8c
 8001e48:	08006d94 	.word	0x08006d94
 8001e4c:	08006d9c 	.word	0x08006d9c

08001e50 <at_main_menu>:
    return 0;
    
}

AT_MENU_DEF int at_main_menu()
{
 8001e50:	b510      	push	{r4, lr}
    int key;
    
    printf("\r\n\r\n");
 8001e52:	4814      	ldr	r0, [pc, #80]	; (8001ea4 <at_main_menu+0x54>)
 8001e54:	f001 f9de 	bl	8003214 <puts>
    printf("-------------------------------------------------\r\n");
 8001e58:	4c13      	ldr	r4, [pc, #76]	; (8001ea8 <at_main_menu+0x58>)
 8001e5a:	4620      	mov	r0, r4
 8001e5c:	f001 f9da 	bl	8003214 <puts>
    printf("                  at menu select \r\n");
 8001e60:	4812      	ldr	r0, [pc, #72]	; (8001eac <at_main_menu+0x5c>)
 8001e62:	f001 f9d7 	bl	8003214 <puts>
    printf("-------------------------------------------------\r\n");
 8001e66:	4620      	mov	r0, r4
 8001e68:	f001 f9d4 	bl	8003214 <puts>
    printf(" 1. AT TEST\r\n");
 8001e6c:	4810      	ldr	r0, [pc, #64]	; (8001eb0 <at_main_menu+0x60>)
 8001e6e:	f001 f9d1 	bl	8003214 <puts>
    printf(" 2. AT MODE\r\n");
 8001e72:	4810      	ldr	r0, [pc, #64]	; (8001eb4 <at_main_menu+0x64>)
 8001e74:	f001 f9ce 	bl	8003214 <puts>
    printf(" 3. AT LIST\r\n");
 8001e78:	480f      	ldr	r0, [pc, #60]	; (8001eb8 <at_main_menu+0x68>)
 8001e7a:	f001 f9cb 	bl	8003214 <puts>
    printf(" 4. Factory RESET\r\n");
 8001e7e:	480f      	ldr	r0, [pc, #60]	; (8001ebc <at_main_menu+0x6c>)
 8001e80:	f001 f9c8 	bl	8003214 <puts>
    printf(" 5. AT RESET \r\n");
 8001e84:	480e      	ldr	r0, [pc, #56]	; (8001ec0 <at_main_menu+0x70>)
 8001e86:	f001 f9c5 	bl	8003214 <puts>
    printf("-------------------------------------------------\r\n");
 8001e8a:	4620      	mov	r0, r4
 8001e8c:	f001 f9c2 	bl	8003214 <puts>
    printf(" q. Menu Quit\r\n");
 8001e90:	480c      	ldr	r0, [pc, #48]	; (8001ec4 <at_main_menu+0x74>)
 8001e92:	f001 f9bf 	bl	8003214 <puts>
    printf("-------------------------------------------------\r\n");
 8001e96:	4620      	mov	r0, r4
 8001e98:	f001 f9bc 	bl	8003214 <puts>
    
    key = USART_GetCharacter(USART1);
 8001e9c:	480a      	ldr	r0, [pc, #40]	; (8001ec8 <at_main_menu+0x78>)
 8001e9e:	f7ff fc88 	bl	80017b2 <USART_GetCharacter>

    return key;
 8001ea2:	bd10      	pop	{r4, pc}
 8001ea4:	08006c68 	.word	0x08006c68
 8001ea8:	08006c6c 	.word	0x08006c6c
 8001eac:	08006da4 	.word	0x08006da4
 8001eb0:	08006dc8 	.word	0x08006dc8
 8001eb4:	08006dd8 	.word	0x08006dd8
 8001eb8:	08006de8 	.word	0x08006de8
 8001ebc:	08006df8 	.word	0x08006df8
 8001ec0:	08006e0c 	.word	0x08006e0c
 8001ec4:	08006cec 	.word	0x08006cec
 8001ec8:	40013800 	.word	0x40013800

08001ecc <at_menu>:
{
 8001ecc:	b538      	push	{r3, r4, r5, lr}
    while((key = at_main_menu()) != 0)
 8001ece:	f7ff ffbf 	bl	8001e50 <at_main_menu>
 8001ed2:	4603      	mov	r3, r0
 8001ed4:	2800      	cmp	r0, #0
 8001ed6:	f000 8131 	beq.w	800213c <at_menu+0x270>
        switch(key)
 8001eda:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
 8001ede:	2841      	cmp	r0, #65	; 0x41
 8001ee0:	d8f5      	bhi.n	8001ece <at_menu+0x2>
 8001ee2:	a301      	add	r3, pc, #4	; (adr r3, 8001ee8 <at_menu+0x1c>)
 8001ee4:	f853 f020 	ldr.w	pc, [r3, r0, lsl #2]
 8001ee8:	080020dd 	.word	0x080020dd
 8001eec:	08001ff1 	.word	0x08001ff1
 8001ef0:	08002011 	.word	0x08002011
 8001ef4:	08002033 	.word	0x08002033
 8001ef8:	0800207d 	.word	0x0800207d
 8001efc:	0800209d 	.word	0x0800209d
 8001f00:	080020bd 	.word	0x080020bd
 8001f04:	080020c5 	.word	0x080020c5
 8001f08:	080020cd 	.word	0x080020cd
 8001f0c:	080020d5 	.word	0x080020d5
 8001f10:	08001ecf 	.word	0x08001ecf
 8001f14:	08001ecf 	.word	0x08001ecf
 8001f18:	08001ecf 	.word	0x08001ecf
 8001f1c:	08001ecf 	.word	0x08001ecf
 8001f20:	08001ecf 	.word	0x08001ecf
 8001f24:	08001ecf 	.word	0x08001ecf
 8001f28:	08001ecf 	.word	0x08001ecf
 8001f2c:	08001ecf 	.word	0x08001ecf
 8001f30:	08001ecf 	.word	0x08001ecf
 8001f34:	08001ecf 	.word	0x08001ecf
 8001f38:	08001ecf 	.word	0x08001ecf
 8001f3c:	08001ecf 	.word	0x08001ecf
 8001f40:	08001ecf 	.word	0x08001ecf
 8001f44:	08001ecf 	.word	0x08001ecf
 8001f48:	08001ecf 	.word	0x08001ecf
 8001f4c:	08001ecf 	.word	0x08001ecf
 8001f50:	08001ecf 	.word	0x08001ecf
 8001f54:	08001ecf 	.word	0x08001ecf
 8001f58:	08001ecf 	.word	0x08001ecf
 8001f5c:	08001ecf 	.word	0x08001ecf
 8001f60:	08001ecf 	.word	0x08001ecf
 8001f64:	08001ecf 	.word	0x08001ecf
 8001f68:	08001ecf 	.word	0x08001ecf
 8001f6c:	08001ecf 	.word	0x08001ecf
 8001f70:	08001ecf 	.word	0x08001ecf
 8001f74:	08001ecf 	.word	0x08001ecf
 8001f78:	08001ecf 	.word	0x08001ecf
 8001f7c:	08001ecf 	.word	0x08001ecf
 8001f80:	08001ecf 	.word	0x08001ecf
 8001f84:	08001ecf 	.word	0x08001ecf
 8001f88:	08001ecf 	.word	0x08001ecf
 8001f8c:	08001ecf 	.word	0x08001ecf
 8001f90:	08001ecf 	.word	0x08001ecf
 8001f94:	08001ecf 	.word	0x08001ecf
 8001f98:	08001ecf 	.word	0x08001ecf
 8001f9c:	08001ecf 	.word	0x08001ecf
 8001fa0:	08001ecf 	.word	0x08001ecf
 8001fa4:	08001ecf 	.word	0x08001ecf
 8001fa8:	08001ecf 	.word	0x08001ecf
 8001fac:	080020e5 	.word	0x080020e5
 8001fb0:	080020ed 	.word	0x080020ed
 8001fb4:	080020f5 	.word	0x080020f5
 8001fb8:	080020fd 	.word	0x080020fd
 8001fbc:	08002105 	.word	0x08002105
 8001fc0:	0800210d 	.word	0x0800210d
 8001fc4:	08002115 	.word	0x08002115
 8001fc8:	0800211d 	.word	0x0800211d
 8001fcc:	08002125 	.word	0x08002125
 8001fd0:	0800212d 	.word	0x0800212d
 8001fd4:	08002135 	.word	0x08002135
 8001fd8:	08001ecf 	.word	0x08001ecf
 8001fdc:	08001ecf 	.word	0x08001ecf
 8001fe0:	08001ecf 	.word	0x08001ecf
 8001fe4:	08001ecf 	.word	0x08001ecf
 8001fe8:	08001ecf 	.word	0x08001ecf
 8001fec:	0800213d 	.word	0x0800213d
                printf("\r\nNo.1\n");
 8001ff0:	4853      	ldr	r0, [pc, #332]	; (8002140 <at_menu+0x274>)
 8001ff2:	f001 f90f 	bl	8003214 <puts>
                ESP_ResponseDataClean();
 8001ff6:	f000 fa49 	bl	800248c <ESP_ResponseDataClean>
                if(AT_Test())
 8001ffa:	f000 f9bf 	bl	800237c <AT_Test>
 8001ffe:	b118      	cbz	r0, 8002008 <at_menu+0x13c>
                    printf("testing success\r\n");
 8002000:	4850      	ldr	r0, [pc, #320]	; (8002144 <at_menu+0x278>)
 8002002:	f001 f907 	bl	8003214 <puts>
 8002006:	e762      	b.n	8001ece <at_menu+0x2>
                    printf("testing failed\r\n");
 8002008:	484f      	ldr	r0, [pc, #316]	; (8002148 <at_menu+0x27c>)
 800200a:	f001 f903 	bl	8003214 <puts>
 800200e:	e75e      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.2\n");
 8002010:	484e      	ldr	r0, [pc, #312]	; (800214c <at_menu+0x280>)
 8002012:	f001 f8ff 	bl	8003214 <puts>
                ESP_ResponseDataClean();
 8002016:	f000 fa39 	bl	800248c <ESP_ResponseDataClean>
                if(ESP_ModeSet(ESP8266_MODE_AP_STATION))
 800201a:	2003      	movs	r0, #3
 800201c:	f000 f9ea 	bl	80023f4 <ESP_ModeSet>
 8002020:	b118      	cbz	r0, 800202a <at_menu+0x15e>
                    printf("mode setting success\r\n");
 8002022:	484b      	ldr	r0, [pc, #300]	; (8002150 <at_menu+0x284>)
 8002024:	f001 f8f6 	bl	8003214 <puts>
 8002028:	e751      	b.n	8001ece <at_menu+0x2>
                    printf("mode setting failed\r\n");
 800202a:	484a      	ldr	r0, [pc, #296]	; (8002154 <at_menu+0x288>)
 800202c:	f001 f8f2 	bl	8003214 <puts>
 8002030:	e74d      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.3\n");
 8002032:	4849      	ldr	r0, [pc, #292]	; (8002158 <at_menu+0x28c>)
 8002034:	f001 f8ee 	bl	8003214 <puts>
                ESP_ResponseDataClean();
 8002038:	f000 fa28 	bl	800248c <ESP_ResponseDataClean>
                if(ESP_StationList())
 800203c:	f000 f9fa 	bl	8002434 <ESP_StationList>
 8002040:	b1c0      	cbz	r0, 8002074 <at_menu+0x1a8>
                    bzero(list, sizeof(list));
 8002042:	4c46      	ldr	r4, [pc, #280]	; (800215c <at_menu+0x290>)
 8002044:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8002048:	2100      	movs	r1, #0
 800204a:	4620      	mov	r0, r4
 800204c:	f000 fa36 	bl	80024bc <memset>
                    uint8_t *getData = ESP_ResponseData();
 8002050:	f000 fa30 	bl	80024b4 <ESP_ResponseData>
 8002054:	4605      	mov	r5, r0
                    printf(getData);
 8002056:	f001 f869 	bl	800312c <iprintf>
                    uint8_t *Name = StationNames(getData, list);
 800205a:	4621      	mov	r1, r4
 800205c:	4628      	mov	r0, r5
 800205e:	f000 f917 	bl	8002290 <StationNames>
                    printf(Name);
 8002062:	f001 f863 	bl	800312c <iprintf>
                    printf("testing\r\n");
 8002066:	483e      	ldr	r0, [pc, #248]	; (8002160 <at_menu+0x294>)
 8002068:	f001 f8d4 	bl	8003214 <puts>
                    printf(list);
 800206c:	4620      	mov	r0, r4
 800206e:	f001 f85d 	bl	800312c <iprintf>
 8002072:	e72c      	b.n	8001ece <at_menu+0x2>
                    printf("list get failed\r\n");
 8002074:	483b      	ldr	r0, [pc, #236]	; (8002164 <at_menu+0x298>)
 8002076:	f001 f8cd 	bl	8003214 <puts>
 800207a:	e728      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.4\n");
 800207c:	483a      	ldr	r0, [pc, #232]	; (8002168 <at_menu+0x29c>)
 800207e:	f001 f8c9 	bl	8003214 <puts>
                ESP_ResponseDataClean();
 8002082:	f000 fa03 	bl	800248c <ESP_ResponseDataClean>
                if(ESP_FactoryReset()){
 8002086:	f000 f9a1 	bl	80023cc <ESP_FactoryReset>
 800208a:	b118      	cbz	r0, 8002094 <at_menu+0x1c8>
                    printf("factory reset success\r\n");
 800208c:	4837      	ldr	r0, [pc, #220]	; (800216c <at_menu+0x2a0>)
 800208e:	f001 f8c1 	bl	8003214 <puts>
 8002092:	e71c      	b.n	8001ece <at_menu+0x2>
                    printf("factory reset failed\r\n");
 8002094:	4836      	ldr	r0, [pc, #216]	; (8002170 <at_menu+0x2a4>)
 8002096:	f001 f8bd 	bl	8003214 <puts>
 800209a:	e718      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.5\n");
 800209c:	4835      	ldr	r0, [pc, #212]	; (8002174 <at_menu+0x2a8>)
 800209e:	f001 f8b9 	bl	8003214 <puts>
                ESP_ResponseDataClean();
 80020a2:	f000 f9f3 	bl	800248c <ESP_ResponseDataClean>
                if(ESP_Reset())
 80020a6:	f000 f97d 	bl	80023a4 <ESP_Reset>
 80020aa:	b118      	cbz	r0, 80020b4 <at_menu+0x1e8>
                    printf("reset success\r\n");
 80020ac:	4832      	ldr	r0, [pc, #200]	; (8002178 <at_menu+0x2ac>)
 80020ae:	f001 f8b1 	bl	8003214 <puts>
 80020b2:	e70c      	b.n	8001ece <at_menu+0x2>
                    printf("reset failed\r\n");
 80020b4:	4831      	ldr	r0, [pc, #196]	; (800217c <at_menu+0x2b0>)
 80020b6:	f001 f8ad 	bl	8003214 <puts>
 80020ba:	e708      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.6\n");
 80020bc:	4830      	ldr	r0, [pc, #192]	; (8002180 <at_menu+0x2b4>)
 80020be:	f001 f8a9 	bl	8003214 <puts>
            break;
 80020c2:	e704      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.7\n");
 80020c4:	482f      	ldr	r0, [pc, #188]	; (8002184 <at_menu+0x2b8>)
 80020c6:	f001 f8a5 	bl	8003214 <puts>
            break;
 80020ca:	e700      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.8\n");
 80020cc:	482e      	ldr	r0, [pc, #184]	; (8002188 <at_menu+0x2bc>)
 80020ce:	f001 f8a1 	bl	8003214 <puts>
            break;
 80020d2:	e6fc      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.9\n");
 80020d4:	482d      	ldr	r0, [pc, #180]	; (800218c <at_menu+0x2c0>)
 80020d6:	f001 f89d 	bl	8003214 <puts>
            break;
 80020da:	e6f8      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.0\n");
 80020dc:	482c      	ldr	r0, [pc, #176]	; (8002190 <at_menu+0x2c4>)
 80020de:	f001 f899 	bl	8003214 <puts>
            break;
 80020e2:	e6f4      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.a\n");
 80020e4:	482b      	ldr	r0, [pc, #172]	; (8002194 <at_menu+0x2c8>)
 80020e6:	f001 f895 	bl	8003214 <puts>
            break;
 80020ea:	e6f0      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.b\n");
 80020ec:	482a      	ldr	r0, [pc, #168]	; (8002198 <at_menu+0x2cc>)
 80020ee:	f001 f891 	bl	8003214 <puts>
            break;
 80020f2:	e6ec      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.c\n");
 80020f4:	4829      	ldr	r0, [pc, #164]	; (800219c <at_menu+0x2d0>)
 80020f6:	f001 f88d 	bl	8003214 <puts>
            break;
 80020fa:	e6e8      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.d\n");
 80020fc:	4828      	ldr	r0, [pc, #160]	; (80021a0 <at_menu+0x2d4>)
 80020fe:	f001 f889 	bl	8003214 <puts>
            break;
 8002102:	e6e4      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.e\n");
 8002104:	4827      	ldr	r0, [pc, #156]	; (80021a4 <at_menu+0x2d8>)
 8002106:	f001 f885 	bl	8003214 <puts>
            break;
 800210a:	e6e0      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.f\n");
 800210c:	4826      	ldr	r0, [pc, #152]	; (80021a8 <at_menu+0x2dc>)
 800210e:	f001 f881 	bl	8003214 <puts>
            break;
 8002112:	e6dc      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.g\n");
 8002114:	4825      	ldr	r0, [pc, #148]	; (80021ac <at_menu+0x2e0>)
 8002116:	f001 f87d 	bl	8003214 <puts>
            break;
 800211a:	e6d8      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.h\n");
 800211c:	4824      	ldr	r0, [pc, #144]	; (80021b0 <at_menu+0x2e4>)
 800211e:	f001 f879 	bl	8003214 <puts>
            break;
 8002122:	e6d4      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.i\n");
 8002124:	4823      	ldr	r0, [pc, #140]	; (80021b4 <at_menu+0x2e8>)
 8002126:	f001 f875 	bl	8003214 <puts>
            break;
 800212a:	e6d0      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.j\n");
 800212c:	4822      	ldr	r0, [pc, #136]	; (80021b8 <at_menu+0x2ec>)
 800212e:	f001 f871 	bl	8003214 <puts>
            break;
 8002132:	e6cc      	b.n	8001ece <at_menu+0x2>
                printf("\r\nNo.k\n");
 8002134:	4821      	ldr	r0, [pc, #132]	; (80021bc <at_menu+0x2f0>)
 8002136:	f001 f86d 	bl	8003214 <puts>
            break;
 800213a:	e6c8      	b.n	8001ece <at_menu+0x2>
}
 800213c:	2000      	movs	r0, #0
 800213e:	bd38      	pop	{r3, r4, r5, pc}
 8002140:	08006cfc 	.word	0x08006cfc
 8002144:	08006e1c 	.word	0x08006e1c
 8002148:	08006e30 	.word	0x08006e30
 800214c:	08006d04 	.word	0x08006d04
 8002150:	08006e40 	.word	0x08006e40
 8002154:	08006e58 	.word	0x08006e58
 8002158:	08006d0c 	.word	0x08006d0c
 800215c:	20000330 	.word	0x20000330
 8002160:	08006e70 	.word	0x08006e70
 8002164:	08006e7c 	.word	0x08006e7c
 8002168:	08006d14 	.word	0x08006d14
 800216c:	08006e90 	.word	0x08006e90
 8002170:	08006ea8 	.word	0x08006ea8
 8002174:	08006d1c 	.word	0x08006d1c
 8002178:	08006e98 	.word	0x08006e98
 800217c:	08006eb0 	.word	0x08006eb0
 8002180:	08006d24 	.word	0x08006d24
 8002184:	08006d2c 	.word	0x08006d2c
 8002188:	08006d34 	.word	0x08006d34
 800218c:	08006d3c 	.word	0x08006d3c
 8002190:	08006d44 	.word	0x08006d44
 8002194:	08006d4c 	.word	0x08006d4c
 8002198:	08006d54 	.word	0x08006d54
 800219c:	08006d5c 	.word	0x08006d5c
 80021a0:	08006d64 	.word	0x08006d64
 80021a4:	08006d6c 	.word	0x08006d6c
 80021a8:	08006d74 	.word	0x08006d74
 80021ac:	08006d7c 	.word	0x08006d7c
 80021b0:	08006d84 	.word	0x08006d84
 80021b4:	08006d8c 	.word	0x08006d8c
 80021b8:	08006d94 	.word	0x08006d94
 80021bc:	08006d9c 	.word	0x08006d9c

080021c0 <ESP_Configuration>:
uint32_t esp_rx_point_header = 0;
uint32_t esp_rx_point_tail = 0;


ESP8266_DEF void ESP_Configuration(void)
{
 80021c0:	b530      	push	{r4, r5, lr}
 80021c2:	b087      	sub	sp, #28
    /* GPIOA port */
    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB , ENABLE);
 80021c4:	2101      	movs	r1, #1
 80021c6:	2008      	movs	r0, #8
 80021c8:	f7fe fef6 	bl	8000fb8 <RCC_APB2PeriphClockCmd>

    /* USART3 enable */
    RCC_APB1PeriphClockCmd(RCC_APB1Periph_USART3, ENABLE);
 80021cc:	2101      	movs	r1, #1
 80021ce:	f44f 2080 	mov.w	r0, #262144	; 0x40000
 80021d2:	f7fe ff17 	bl	8001004 <RCC_APB1PeriphClockCmd>

    /* GPIO_Init */
    /* GPIO_Init ESP Rx */
    GPIO_InitTypeDef GPIO_InitStructure;
    GPIO_InitStructure.GPIO_Pin = ESP_Tx_pin;
 80021d6:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80021da:	f8ad 3014 	strh.w	r3, [sp, #20]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80021de:	2503      	movs	r5, #3
 80021e0:	f88d 5016 	strb.w	r5, [sp, #22]
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;
 80021e4:	2318      	movs	r3, #24
 80021e6:	f88d 3017 	strb.w	r3, [sp, #23]
    GPIO_Init(ESPPORT, &GPIO_InitStructure);
 80021ea:	4c19      	ldr	r4, [pc, #100]	; (8002250 <ESP_Configuration+0x90>)
 80021ec:	a905      	add	r1, sp, #20
 80021ee:	4620      	mov	r0, r4
 80021f0:	f7fe fde6 	bl	8000dc0 <GPIO_Init>

    /* GPIO_Init ESP Tx */
    GPIO_InitStructure.GPIO_Pin = ESP_Rx_pin;
 80021f4:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80021f8:	f8ad 3014 	strh.w	r3, [sp, #20]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80021fc:	f88d 5016 	strb.w	r5, [sp, #22]
    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN_FLOATING;
 8002200:	2304      	movs	r3, #4
 8002202:	f88d 3017 	strb.w	r3, [sp, #23]
    GPIO_Init(ESPPORT, &GPIO_InitStructure);
 8002206:	a905      	add	r1, sp, #20
 8002208:	4620      	mov	r0, r4
 800220a:	f7fe fdd9 	bl	8000dc0 <GPIO_Init>

    /* USART Init */
    USART_InitTypeDef ESP_InitStructure;
    ESP_InitStructure.USART_BaudRate = 115200;
 800220e:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 8002212:	9301      	str	r3, [sp, #4]
    ESP_InitStructure.USART_WordLength = USART_WordLength_8b;
 8002214:	2300      	movs	r3, #0
 8002216:	f8ad 3008 	strh.w	r3, [sp, #8]
    ESP_InitStructure.USART_StopBits = USART_StopBits_1;
 800221a:	f8ad 300a 	strh.w	r3, [sp, #10]
    ESP_InitStructure.USART_Parity = USART_Parity_No;
 800221e:	f8ad 300c 	strh.w	r3, [sp, #12]
    ESP_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8002222:	f8ad 3010 	strh.w	r3, [sp, #16]
    ESP_InitStructure.USART_Mode = USART_Mode_Rx | USART_Mode_Tx;
 8002226:	230c      	movs	r3, #12
 8002228:	f8ad 300e 	strh.w	r3, [sp, #14]

    /* usart3 set */
    USART_Init(ESPUSART, &ESP_InitStructure);
 800222c:	f5a4 4444 	sub.w	r4, r4, #50176	; 0xc400
 8002230:	a901      	add	r1, sp, #4
 8002232:	4620      	mov	r0, r4
 8002234:	f7fe ff0c 	bl	8001050 <USART_Init>
    USART_ITConfig(ESPUSART, USART_IT_RXNE, ENABLE);
 8002238:	2201      	movs	r2, #1
 800223a:	f240 5125 	movw	r1, #1317	; 0x525
 800223e:	4620      	mov	r0, r4
 8002240:	f7fe fff8 	bl	8001234 <USART_ITConfig>
    /* usart3 start */
    USART_Cmd(ESPUSART, ENABLE);
 8002244:	2101      	movs	r1, #1
 8002246:	4620      	mov	r0, r4
 8002248:	f7fe ffc0 	bl	80011cc <USART_Cmd>
}
 800224c:	b007      	add	sp, #28
 800224e:	bd30      	pop	{r4, r5, pc}
 8002250:	40010c00 	.word	0x40010c00

08002254 <esp_interrupt_configuration>:

ESP8266_DEF void esp_interrupt_configuration()
{
 8002254:	b500      	push	{lr}
 8002256:	b083      	sub	sp, #12
    NVIC_InitTypeDef NVIC_InitStructure;

    NVIC_PriorityGroupConfig(NVIC_PriorityGroup_0);
 8002258:	f44f 60e0 	mov.w	r0, #1792	; 0x700
 800225c:	f7fe fd32 	bl	8000cc4 <NVIC_PriorityGroupConfig>
    NVIC_InitStructure.NVIC_IRQChannel = USART3_IRQn;
 8002260:	2327      	movs	r3, #39	; 0x27
 8002262:	f88d 3004 	strb.w	r3, [sp, #4]
    NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 8002266:	2300      	movs	r3, #0
 8002268:	f88d 3005 	strb.w	r3, [sp, #5]
    NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 800226c:	f88d 3006 	strb.w	r3, [sp, #6]
    NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 8002270:	2301      	movs	r3, #1
 8002272:	f88d 3007 	strb.w	r3, [sp, #7]
    NVIC_Init(&NVIC_InitStructure);
 8002276:	a801      	add	r0, sp, #4
 8002278:	f7fe fd44 	bl	8000d04 <NVIC_Init>
}
 800227c:	b003      	add	sp, #12
 800227e:	f85d fb04 	ldr.w	pc, [sp], #4

08002282 <ESP_Init>:


ESP8266_DEF void ESP_Init(void)
{
 8002282:	b508      	push	{r3, lr}
    
    ESP_Configuration();
 8002284:	f7ff ff9c 	bl	80021c0 <ESP_Configuration>
    esp_interrupt_configuration();
 8002288:	f7ff ffe4 	bl	8002254 <esp_interrupt_configuration>

    //ESP_Test();
}
 800228c:	bd08      	pop	{r3, pc}
	...

08002290 <StationNames>:
        return FALSE;
    }
}

ESP8266_DEF uint8_t *StationNames(uint8_t *list, uint8_t *NameList)
{
 8002290:	b570      	push	{r4, r5, r6, lr}
 8002292:	f5ad 7d7a 	sub.w	sp, sp, #1000	; 0x3e8
 8002296:	4604      	mov	r4, r0
 8002298:	460e      	mov	r6, r1
    uint8_t count = 0, index = 0;
    uint8_t temp[ESPBUF_MAXSIZE];
    memset(temp, '\0',sizeof(temp));
 800229a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800229e:	2100      	movs	r1, #0
 80022a0:	4668      	mov	r0, sp
 80022a2:	f000 f90b 	bl	80024bc <memset>
        //TODO need to check
        char *ptr = strtok(list, "()");
 80022a6:	490f      	ldr	r1, [pc, #60]	; (80022e4 <StationNames+0x54>)
 80022a8:	4620      	mov	r0, r4
 80022aa:	f001 fe35 	bl	8003f18 <strtok>
    uint8_t count = 0, index = 0;
 80022ae:	2500      	movs	r5, #0
 80022b0:	462c      	mov	r4, r5
        while(ptr != NULL)
 80022b2:	e003      	b.n	80022bc <StationNames+0x2c>
            if(count % 2 == 0)
            {
                temp[index] = ptr;
                index++;
            }
            ptr = strtok(NULL, "()");
 80022b4:	490b      	ldr	r1, [pc, #44]	; (80022e4 <StationNames+0x54>)
 80022b6:	2000      	movs	r0, #0
 80022b8:	f001 fe2e 	bl	8003f18 <strtok>
        while(ptr != NULL)
 80022bc:	b148      	cbz	r0, 80022d2 <StationNames+0x42>
            count++;
 80022be:	3401      	adds	r4, #1
 80022c0:	b2e4      	uxtb	r4, r4
            if(count % 2 == 0)
 80022c2:	f014 0f01 	tst.w	r4, #1
 80022c6:	d1f5      	bne.n	80022b4 <StationNames+0x24>
                temp[index] = ptr;
 80022c8:	f80d 0005 	strb.w	r0, [sp, r5]
                index++;
 80022cc:	3501      	adds	r5, #1
 80022ce:	b2ed      	uxtb	r5, r5
 80022d0:	e7f0      	b.n	80022b4 <StationNames+0x24>
        }
        strcpy(NameList, *temp);
 80022d2:	f89d 1000 	ldrb.w	r1, [sp]
 80022d6:	4630      	mov	r0, r6
 80022d8:	f000 ffc8 	bl	800326c <strcpy>
    return NameList;
}
 80022dc:	4630      	mov	r0, r6
 80022de:	f50d 7d7a 	add.w	sp, sp, #1000	; 0x3e8
 80022e2:	bd70      	pop	{r4, r5, r6, pc}
 80022e4:	08006f0c 	.word	0x08006f0c

080022e8 <ESP_SendCommand>:

ESP8266_DEF void ESP_SendCommand(char *command)
{
 80022e8:	b570      	push	{r4, r5, r6, lr}
 80022ea:	4605      	mov	r5, r0
    uint16_t i, length = strlen((char *)command);
 80022ec:	f7fd ff30 	bl	8000150 <strlen>
 80022f0:	b286      	uxth	r6, r0
    for(i = 0; i < length; i++)
 80022f2:	2400      	movs	r4, #0
 80022f4:	e00c      	b.n	8002310 <ESP_SendCommand+0x28>
    {
        USART_SendData(ESPUSART, *command);
 80022f6:	7829      	ldrb	r1, [r5, #0]
 80022f8:	4807      	ldr	r0, [pc, #28]	; (8002318 <ESP_SendCommand+0x30>)
 80022fa:	f7ff f815 	bl	8001328 <USART_SendData>
        while(USART_GetFlagStatus(ESPUSART, USART_FLAG_TXE) == RESET);
 80022fe:	2180      	movs	r1, #128	; 0x80
 8002300:	4805      	ldr	r0, [pc, #20]	; (8002318 <ESP_SendCommand+0x30>)
 8002302:	f7ff f85f 	bl	80013c4 <USART_GetFlagStatus>
 8002306:	2800      	cmp	r0, #0
 8002308:	d0f9      	beq.n	80022fe <ESP_SendCommand+0x16>
        *command++;
 800230a:	3501      	adds	r5, #1
    for(i = 0; i < length; i++)
 800230c:	3401      	adds	r4, #1
 800230e:	b2a4      	uxth	r4, r4
 8002310:	42b4      	cmp	r4, r6
 8002312:	d3f0      	bcc.n	80022f6 <ESP_SendCommand+0xe>
    }
    
}
 8002314:	bd70      	pop	{r4, r5, r6, pc}
 8002316:	bf00      	nop
 8002318:	40004800 	.word	0x40004800

0800231c <esp8266RxBufferAvailable>:
    return FALSE;
}

ESP8266_DEF bool esp8266RxBufferAvailable()
{
    return (esp_rx_point_header > 0) ? TRUE : FALSE;
 800231c:	4b02      	ldr	r3, [pc, #8]	; (8002328 <esp8266RxBufferAvailable+0xc>)
 800231e:	6818      	ldr	r0, [r3, #0]
}
 8002320:	3000      	adds	r0, #0
 8002322:	bf18      	it	ne
 8002324:	2001      	movne	r0, #1
 8002326:	4770      	bx	lr
 8002328:	20000204 	.word	0x20000204

0800232c <esp8266SearchBuffer>:

ESP8266_DEF bool esp8266SearchBuffer(const char * test)
{
 800232c:	b510      	push	{r4, lr}
 800232e:	4604      	mov	r4, r0
    int i = 0;
    int bufferlen = strlen((const char *)ESP_BUFFER);
 8002330:	4808      	ldr	r0, [pc, #32]	; (8002354 <esp8266SearchBuffer+0x28>)
 8002332:	f7fd ff0d 	bl	8000150 <strlen>
    if(bufferlen < ESPBUF_MAXSIZE)
 8002336:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 800233a:	da06      	bge.n	800234a <esp8266SearchBuffer+0x1e>
    {
        if(strstr((const char *)ESP_BUFFER, test))
 800233c:	4621      	mov	r1, r4
 800233e:	4805      	ldr	r0, [pc, #20]	; (8002354 <esp8266SearchBuffer+0x28>)
 8002340:	f000 ff9c 	bl	800327c <strstr>
 8002344:	b118      	cbz	r0, 800234e <esp8266SearchBuffer+0x22>
        {
            return TRUE;
 8002346:	2001      	movs	r0, #1
 8002348:	e000      	b.n	800234c <esp8266SearchBuffer+0x20>
        }else{
            return FALSE;
        }
    }else{
        return FALSE;
 800234a:	2000      	movs	r0, #0
    }
}
 800234c:	bd10      	pop	{r4, pc}
            return FALSE;
 800234e:	2000      	movs	r0, #0
 8002350:	e7fc      	b.n	800234c <esp8266SearchBuffer+0x20>
 8002352:	bf00      	nop
 8002354:	20000718 	.word	0x20000718

08002358 <esp8266ReadForResponse>:
{
 8002358:	b510      	push	{r4, lr}
 800235a:	4604      	mov	r4, r0
        Delay(timeout);
 800235c:	4608      	mov	r0, r1
 800235e:	f7ff f9af 	bl	80016c0 <Delay>
        if(esp8266RxBufferAvailable())
 8002362:	f7ff ffdb 	bl	800231c <esp8266RxBufferAvailable>
 8002366:	4603      	mov	r3, r0
 8002368:	b120      	cbz	r0, 8002374 <esp8266ReadForResponse+0x1c>
            if(esp8266SearchBuffer(rsp))
 800236a:	4620      	mov	r0, r4
 800236c:	f7ff ffde 	bl	800232c <esp8266SearchBuffer>
 8002370:	4603      	mov	r3, r0
 8002372:	b908      	cbnz	r0, 8002378 <esp8266ReadForResponse+0x20>
}
 8002374:	4618      	mov	r0, r3
 8002376:	bd10      	pop	{r4, pc}
                return TRUE;
 8002378:	2301      	movs	r3, #1
 800237a:	e7fb      	b.n	8002374 <esp8266ReadForResponse+0x1c>

0800237c <AT_Test>:
{
 800237c:	b508      	push	{r3, lr}
    ESP_SendCommand("AT\r\n");
 800237e:	4807      	ldr	r0, [pc, #28]	; (800239c <AT_Test+0x20>)
 8002380:	f7ff ffb2 	bl	80022e8 <ESP_SendCommand>
    if(esp8266ReadForResponse("OK", COMMAND_RESPONSE_TIMEOUT))
 8002384:	f242 7110 	movw	r1, #10000	; 0x2710
 8002388:	4805      	ldr	r0, [pc, #20]	; (80023a0 <AT_Test+0x24>)
 800238a:	f7ff ffe5 	bl	8002358 <esp8266ReadForResponse>
 800238e:	4603      	mov	r3, r0
 8002390:	b908      	cbnz	r0, 8002396 <AT_Test+0x1a>
}
 8002392:	4618      	mov	r0, r3
 8002394:	bd08      	pop	{r3, pc}
        return TRUE;
 8002396:	2301      	movs	r3, #1
 8002398:	e7fb      	b.n	8002392 <AT_Test+0x16>
 800239a:	bf00      	nop
 800239c:	08006ec0 	.word	0x08006ec0
 80023a0:	08006ec8 	.word	0x08006ec8

080023a4 <ESP_Reset>:
{
 80023a4:	b508      	push	{r3, lr}
    ESP_SendCommand("AT+RST\r\n");
 80023a6:	4807      	ldr	r0, [pc, #28]	; (80023c4 <ESP_Reset+0x20>)
 80023a8:	f7ff ff9e 	bl	80022e8 <ESP_SendCommand>
    if(esp8266ReadForResponse("OK\r\n", COMMAND_RESPONSE_TIMEOUT))
 80023ac:	f242 7110 	movw	r1, #10000	; 0x2710
 80023b0:	4805      	ldr	r0, [pc, #20]	; (80023c8 <ESP_Reset+0x24>)
 80023b2:	f7ff ffd1 	bl	8002358 <esp8266ReadForResponse>
 80023b6:	4603      	mov	r3, r0
 80023b8:	b908      	cbnz	r0, 80023be <ESP_Reset+0x1a>
}
 80023ba:	4618      	mov	r0, r3
 80023bc:	bd08      	pop	{r3, pc}
        return TRUE;
 80023be:	2301      	movs	r3, #1
 80023c0:	e7fb      	b.n	80023ba <ESP_Reset+0x16>
 80023c2:	bf00      	nop
 80023c4:	08006eec 	.word	0x08006eec
 80023c8:	08006ef8 	.word	0x08006ef8

080023cc <ESP_FactoryReset>:
{
 80023cc:	b508      	push	{r3, lr}
    ESP_SendCommand("AT+RESTORE\r\n");
 80023ce:	4807      	ldr	r0, [pc, #28]	; (80023ec <ESP_FactoryReset+0x20>)
 80023d0:	f7ff ff8a 	bl	80022e8 <ESP_SendCommand>
    if(esp8266ReadForResponse("OK\r\n", COMMAND_RESPONSE_TIMEOUT))
 80023d4:	f242 7110 	movw	r1, #10000	; 0x2710
 80023d8:	4805      	ldr	r0, [pc, #20]	; (80023f0 <ESP_FactoryReset+0x24>)
 80023da:	f7ff ffbd 	bl	8002358 <esp8266ReadForResponse>
 80023de:	4603      	mov	r3, r0
 80023e0:	b908      	cbnz	r0, 80023e6 <ESP_FactoryReset+0x1a>
}
 80023e2:	4618      	mov	r0, r3
 80023e4:	bd08      	pop	{r3, pc}
        return TRUE;
 80023e6:	2301      	movs	r3, #1
 80023e8:	e7fb      	b.n	80023e2 <ESP_FactoryReset+0x16>
 80023ea:	bf00      	nop
 80023ec:	08006ecc 	.word	0x08006ecc
 80023f0:	08006ef8 	.word	0x08006ef8

080023f4 <ESP_ModeSet>:
{
 80023f4:	b500      	push	{lr}
 80023f6:	f5ad 7d7b 	sub.w	sp, sp, #1004	; 0x3ec
    sprintf(Command, "AT+CWMODE=%d\r\n", mode);
 80023fa:	4602      	mov	r2, r0
 80023fc:	490b      	ldr	r1, [pc, #44]	; (800242c <ESP_ModeSet+0x38>)
 80023fe:	4668      	mov	r0, sp
 8002400:	f000 ff14 	bl	800322c <siprintf>
    ESP_SendCommand(Command);
 8002404:	4668      	mov	r0, sp
 8002406:	f7ff ff6f 	bl	80022e8 <ESP_SendCommand>
    printf(Command);
 800240a:	4668      	mov	r0, sp
 800240c:	f000 fe8e 	bl	800312c <iprintf>
    if(esp8266ReadForResponse("OK\r\n", COMMAND_RESPONSE_TIMEOUT))
 8002410:	f242 7110 	movw	r1, #10000	; 0x2710
 8002414:	4806      	ldr	r0, [pc, #24]	; (8002430 <ESP_ModeSet+0x3c>)
 8002416:	f7ff ff9f 	bl	8002358 <esp8266ReadForResponse>
 800241a:	4603      	mov	r3, r0
 800241c:	b920      	cbnz	r0, 8002428 <ESP_ModeSet+0x34>
}
 800241e:	4618      	mov	r0, r3
 8002420:	f50d 7d7b 	add.w	sp, sp, #1004	; 0x3ec
 8002424:	f85d fb04 	ldr.w	pc, [sp], #4
        return TRUE;
 8002428:	2301      	movs	r3, #1
 800242a:	e7f8      	b.n	800241e <ESP_ModeSet+0x2a>
 800242c:	08006edc 	.word	0x08006edc
 8002430:	08006ef8 	.word	0x08006ef8

08002434 <ESP_StationList>:
{
 8002434:	b508      	push	{r3, lr}
    ESP_SendCommand("AT+CWLAP\r\n");
 8002436:	4807      	ldr	r0, [pc, #28]	; (8002454 <ESP_StationList+0x20>)
 8002438:	f7ff ff56 	bl	80022e8 <ESP_SendCommand>
    if(esp8266ReadForResponse("OK\r\n", COMMAND_RESPONSE_TIMEOUT))
 800243c:	f242 7110 	movw	r1, #10000	; 0x2710
 8002440:	4805      	ldr	r0, [pc, #20]	; (8002458 <ESP_StationList+0x24>)
 8002442:	f7ff ff89 	bl	8002358 <esp8266ReadForResponse>
 8002446:	4603      	mov	r3, r0
 8002448:	b908      	cbnz	r0, 800244e <ESP_StationList+0x1a>
}
 800244a:	4618      	mov	r0, r3
 800244c:	bd08      	pop	{r3, pc}
        return TRUE;
 800244e:	2301      	movs	r3, #1
 8002450:	e7fb      	b.n	800244a <ESP_StationList+0x16>
 8002452:	bf00      	nop
 8002454:	08006f00 	.word	0x08006f00
 8002458:	08006ef8 	.word	0x08006ef8

0800245c <ESP_Increase_point_value>:
    ESP_Increase_point_value(&esp_rx_point_header);
}

ESP8266_DEF void ESP_Increase_point_value(uint32_t *data_p)
{
    (*data_p)++;
 800245c:	6803      	ldr	r3, [r0, #0]
 800245e:	3301      	adds	r3, #1
 8002460:	6003      	str	r3, [r0, #0]
    if(ESPBUF_MAXSIZE == (*data_p))
 8002462:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8002466:	d000      	beq.n	800246a <ESP_Increase_point_value+0xe>
    {
        (*data_p) = 0;
    }
}
 8002468:	4770      	bx	lr
        (*data_p) = 0;
 800246a:	2300      	movs	r3, #0
 800246c:	6003      	str	r3, [r0, #0]
}
 800246e:	e7fb      	b.n	8002468 <ESP_Increase_point_value+0xc>

08002470 <ESP_EnQueue>:
{
 8002470:	b508      	push	{r3, lr}
    ESP_BUFFER[esp_rx_point_header] = data;
 8002472:	4b04      	ldr	r3, [pc, #16]	; (8002484 <ESP_EnQueue+0x14>)
 8002474:	681a      	ldr	r2, [r3, #0]
 8002476:	4904      	ldr	r1, [pc, #16]	; (8002488 <ESP_EnQueue+0x18>)
 8002478:	5488      	strb	r0, [r1, r2]
    ESP_Increase_point_value(&esp_rx_point_header);
 800247a:	4618      	mov	r0, r3
 800247c:	f7ff ffee 	bl	800245c <ESP_Increase_point_value>
}
 8002480:	bd08      	pop	{r3, pc}
 8002482:	bf00      	nop
 8002484:	20000204 	.word	0x20000204
 8002488:	20000718 	.word	0x20000718

0800248c <ESP_ResponseDataClean>:
        return FALSE;
    }
}

ESP8266_DEF void ESP_ResponseDataClean(void)
{
 800248c:	b508      	push	{r3, lr}
    memset(ESP_BUFFER,'\0', ESPBUF_MAXSIZE);
 800248e:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8002492:	2100      	movs	r1, #0
 8002494:	4804      	ldr	r0, [pc, #16]	; (80024a8 <ESP_ResponseDataClean+0x1c>)
 8002496:	f000 f811 	bl	80024bc <memset>
    esp_rx_point_header = esp_rx_point_tail = 0;
 800249a:	2300      	movs	r3, #0
 800249c:	4a03      	ldr	r2, [pc, #12]	; (80024ac <ESP_ResponseDataClean+0x20>)
 800249e:	6013      	str	r3, [r2, #0]
 80024a0:	4a03      	ldr	r2, [pc, #12]	; (80024b0 <ESP_ResponseDataClean+0x24>)
 80024a2:	6013      	str	r3, [r2, #0]
}
 80024a4:	bd08      	pop	{r3, pc}
 80024a6:	bf00      	nop
 80024a8:	20000718 	.word	0x20000718
 80024ac:	20000208 	.word	0x20000208
 80024b0:	20000204 	.word	0x20000204

080024b4 <ESP_ResponseData>:

ESP8266_DEF uint8_t *ESP_ResponseData(void)
{
    return ESP_BUFFER;
}
 80024b4:	4800      	ldr	r0, [pc, #0]	; (80024b8 <ESP_ResponseData+0x4>)
 80024b6:	4770      	bx	lr
 80024b8:	20000718 	.word	0x20000718

080024bc <memset>:
 80024bc:	4603      	mov	r3, r0
 80024be:	4402      	add	r2, r0
 80024c0:	4293      	cmp	r3, r2
 80024c2:	d100      	bne.n	80024c6 <memset+0xa>
 80024c4:	4770      	bx	lr
 80024c6:	f803 1b01 	strb.w	r1, [r3], #1
 80024ca:	e7f9      	b.n	80024c0 <memset+0x4>

080024cc <__cvt>:
 80024cc:	2b00      	cmp	r3, #0
 80024ce:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80024d2:	461e      	mov	r6, r3
 80024d4:	bfbb      	ittet	lt
 80024d6:	f103 4300 	addlt.w	r3, r3, #2147483648	; 0x80000000
 80024da:	461e      	movlt	r6, r3
 80024dc:	2300      	movge	r3, #0
 80024de:	232d      	movlt	r3, #45	; 0x2d
 80024e0:	b088      	sub	sp, #32
 80024e2:	9f14      	ldr	r7, [sp, #80]	; 0x50
 80024e4:	e9dd 1a12 	ldrd	r1, sl, [sp, #72]	; 0x48
 80024e8:	f027 0720 	bic.w	r7, r7, #32
 80024ec:	2f46      	cmp	r7, #70	; 0x46
 80024ee:	4614      	mov	r4, r2
 80024f0:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80024f2:	700b      	strb	r3, [r1, #0]
 80024f4:	d004      	beq.n	8002500 <__cvt+0x34>
 80024f6:	2f45      	cmp	r7, #69	; 0x45
 80024f8:	d100      	bne.n	80024fc <__cvt+0x30>
 80024fa:	3501      	adds	r5, #1
 80024fc:	2302      	movs	r3, #2
 80024fe:	e000      	b.n	8002502 <__cvt+0x36>
 8002500:	2303      	movs	r3, #3
 8002502:	aa07      	add	r2, sp, #28
 8002504:	9204      	str	r2, [sp, #16]
 8002506:	aa06      	add	r2, sp, #24
 8002508:	e9cd a202 	strd	sl, r2, [sp, #8]
 800250c:	e9cd 3500 	strd	r3, r5, [sp]
 8002510:	4622      	mov	r2, r4
 8002512:	4633      	mov	r3, r6
 8002514:	f001 ff30 	bl	8004378 <_dtoa_r>
 8002518:	2f47      	cmp	r7, #71	; 0x47
 800251a:	4680      	mov	r8, r0
 800251c:	d102      	bne.n	8002524 <__cvt+0x58>
 800251e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8002520:	07db      	lsls	r3, r3, #31
 8002522:	d526      	bpl.n	8002572 <__cvt+0xa6>
 8002524:	2f46      	cmp	r7, #70	; 0x46
 8002526:	eb08 0905 	add.w	r9, r8, r5
 800252a:	d111      	bne.n	8002550 <__cvt+0x84>
 800252c:	f898 3000 	ldrb.w	r3, [r8]
 8002530:	2b30      	cmp	r3, #48	; 0x30
 8002532:	d10a      	bne.n	800254a <__cvt+0x7e>
 8002534:	2200      	movs	r2, #0
 8002536:	2300      	movs	r3, #0
 8002538:	4620      	mov	r0, r4
 800253a:	4631      	mov	r1, r6
 800253c:	f7fe fa34 	bl	80009a8 <__aeabi_dcmpeq>
 8002540:	b918      	cbnz	r0, 800254a <__cvt+0x7e>
 8002542:	f1c5 0501 	rsb	r5, r5, #1
 8002546:	f8ca 5000 	str.w	r5, [sl]
 800254a:	f8da 3000 	ldr.w	r3, [sl]
 800254e:	4499      	add	r9, r3
 8002550:	2200      	movs	r2, #0
 8002552:	2300      	movs	r3, #0
 8002554:	4620      	mov	r0, r4
 8002556:	4631      	mov	r1, r6
 8002558:	f7fe fa26 	bl	80009a8 <__aeabi_dcmpeq>
 800255c:	b938      	cbnz	r0, 800256e <__cvt+0xa2>
 800255e:	2230      	movs	r2, #48	; 0x30
 8002560:	9b07      	ldr	r3, [sp, #28]
 8002562:	454b      	cmp	r3, r9
 8002564:	d205      	bcs.n	8002572 <__cvt+0xa6>
 8002566:	1c59      	adds	r1, r3, #1
 8002568:	9107      	str	r1, [sp, #28]
 800256a:	701a      	strb	r2, [r3, #0]
 800256c:	e7f8      	b.n	8002560 <__cvt+0x94>
 800256e:	f8cd 901c 	str.w	r9, [sp, #28]
 8002572:	4640      	mov	r0, r8
 8002574:	9b07      	ldr	r3, [sp, #28]
 8002576:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8002578:	eba3 0308 	sub.w	r3, r3, r8
 800257c:	6013      	str	r3, [r2, #0]
 800257e:	b008      	add	sp, #32
 8002580:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08002584 <__exponent>:
 8002584:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8002586:	2900      	cmp	r1, #0
 8002588:	bfb4      	ite	lt
 800258a:	232d      	movlt	r3, #45	; 0x2d
 800258c:	232b      	movge	r3, #43	; 0x2b
 800258e:	4604      	mov	r4, r0
 8002590:	bfb8      	it	lt
 8002592:	4249      	neglt	r1, r1
 8002594:	2909      	cmp	r1, #9
 8002596:	f804 2b02 	strb.w	r2, [r4], #2
 800259a:	7043      	strb	r3, [r0, #1]
 800259c:	dd21      	ble.n	80025e2 <__exponent+0x5e>
 800259e:	f10d 0307 	add.w	r3, sp, #7
 80025a2:	461f      	mov	r7, r3
 80025a4:	260a      	movs	r6, #10
 80025a6:	fb91 f5f6 	sdiv	r5, r1, r6
 80025aa:	fb06 1115 	mls	r1, r6, r5, r1
 80025ae:	2d09      	cmp	r5, #9
 80025b0:	f101 0130 	add.w	r1, r1, #48	; 0x30
 80025b4:	f803 1c01 	strb.w	r1, [r3, #-1]
 80025b8:	f103 32ff 	add.w	r2, r3, #4294967295	; 0xffffffff
 80025bc:	4629      	mov	r1, r5
 80025be:	dc09      	bgt.n	80025d4 <__exponent+0x50>
 80025c0:	3130      	adds	r1, #48	; 0x30
 80025c2:	3b02      	subs	r3, #2
 80025c4:	f802 1c01 	strb.w	r1, [r2, #-1]
 80025c8:	42bb      	cmp	r3, r7
 80025ca:	4622      	mov	r2, r4
 80025cc:	d304      	bcc.n	80025d8 <__exponent+0x54>
 80025ce:	1a10      	subs	r0, r2, r0
 80025d0:	b003      	add	sp, #12
 80025d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80025d4:	4613      	mov	r3, r2
 80025d6:	e7e6      	b.n	80025a6 <__exponent+0x22>
 80025d8:	f813 2b01 	ldrb.w	r2, [r3], #1
 80025dc:	f804 2b01 	strb.w	r2, [r4], #1
 80025e0:	e7f2      	b.n	80025c8 <__exponent+0x44>
 80025e2:	2330      	movs	r3, #48	; 0x30
 80025e4:	4419      	add	r1, r3
 80025e6:	7083      	strb	r3, [r0, #2]
 80025e8:	1d02      	adds	r2, r0, #4
 80025ea:	70c1      	strb	r1, [r0, #3]
 80025ec:	e7ef      	b.n	80025ce <__exponent+0x4a>
	...

080025f0 <_printf_float>:
 80025f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80025f4:	b091      	sub	sp, #68	; 0x44
 80025f6:	460c      	mov	r4, r1
 80025f8:	9f1a      	ldr	r7, [sp, #104]	; 0x68
 80025fa:	4693      	mov	fp, r2
 80025fc:	461e      	mov	r6, r3
 80025fe:	4605      	mov	r5, r0
 8002600:	f003 f916 	bl	8005830 <_localeconv_r>
 8002604:	6803      	ldr	r3, [r0, #0]
 8002606:	4618      	mov	r0, r3
 8002608:	9309      	str	r3, [sp, #36]	; 0x24
 800260a:	f7fd fda1 	bl	8000150 <strlen>
 800260e:	2300      	movs	r3, #0
 8002610:	930e      	str	r3, [sp, #56]	; 0x38
 8002612:	683b      	ldr	r3, [r7, #0]
 8002614:	900a      	str	r0, [sp, #40]	; 0x28
 8002616:	3307      	adds	r3, #7
 8002618:	f023 0307 	bic.w	r3, r3, #7
 800261c:	f103 0208 	add.w	r2, r3, #8
 8002620:	f894 8018 	ldrb.w	r8, [r4, #24]
 8002624:	f8d4 a000 	ldr.w	sl, [r4]
 8002628:	603a      	str	r2, [r7, #0]
 800262a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800262e:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 8002632:	e9d4 7912 	ldrd	r7, r9, [r4, #72]	; 0x48
 8002636:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800263a:	930b      	str	r3, [sp, #44]	; 0x2c
 800263c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002640:	4ba6      	ldr	r3, [pc, #664]	; (80028dc <_printf_float+0x2ec>)
 8002642:	4638      	mov	r0, r7
 8002644:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002646:	f7fe f9e1 	bl	8000a0c <__aeabi_dcmpun>
 800264a:	bb68      	cbnz	r0, 80026a8 <_printf_float+0xb8>
 800264c:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8002650:	4ba2      	ldr	r3, [pc, #648]	; (80028dc <_printf_float+0x2ec>)
 8002652:	4638      	mov	r0, r7
 8002654:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8002656:	f7fe f9bb 	bl	80009d0 <__aeabi_dcmple>
 800265a:	bb28      	cbnz	r0, 80026a8 <_printf_float+0xb8>
 800265c:	2200      	movs	r2, #0
 800265e:	2300      	movs	r3, #0
 8002660:	4638      	mov	r0, r7
 8002662:	4649      	mov	r1, r9
 8002664:	f7fe f9aa 	bl	80009bc <__aeabi_dcmplt>
 8002668:	b110      	cbz	r0, 8002670 <_printf_float+0x80>
 800266a:	232d      	movs	r3, #45	; 0x2d
 800266c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002670:	4f9b      	ldr	r7, [pc, #620]	; (80028e0 <_printf_float+0x2f0>)
 8002672:	4b9c      	ldr	r3, [pc, #624]	; (80028e4 <_printf_float+0x2f4>)
 8002674:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8002678:	bf98      	it	ls
 800267a:	461f      	movls	r7, r3
 800267c:	2303      	movs	r3, #3
 800267e:	f04f 0900 	mov.w	r9, #0
 8002682:	6123      	str	r3, [r4, #16]
 8002684:	f02a 0304 	bic.w	r3, sl, #4
 8002688:	6023      	str	r3, [r4, #0]
 800268a:	9600      	str	r6, [sp, #0]
 800268c:	465b      	mov	r3, fp
 800268e:	aa0f      	add	r2, sp, #60	; 0x3c
 8002690:	4621      	mov	r1, r4
 8002692:	4628      	mov	r0, r5
 8002694:	f000 f9e2 	bl	8002a5c <_printf_common>
 8002698:	3001      	adds	r0, #1
 800269a:	f040 8090 	bne.w	80027be <_printf_float+0x1ce>
 800269e:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80026a2:	b011      	add	sp, #68	; 0x44
 80026a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80026a8:	463a      	mov	r2, r7
 80026aa:	464b      	mov	r3, r9
 80026ac:	4638      	mov	r0, r7
 80026ae:	4649      	mov	r1, r9
 80026b0:	f7fe f9ac 	bl	8000a0c <__aeabi_dcmpun>
 80026b4:	b110      	cbz	r0, 80026bc <_printf_float+0xcc>
 80026b6:	4f8c      	ldr	r7, [pc, #560]	; (80028e8 <_printf_float+0x2f8>)
 80026b8:	4b8c      	ldr	r3, [pc, #560]	; (80028ec <_printf_float+0x2fc>)
 80026ba:	e7db      	b.n	8002674 <_printf_float+0x84>
 80026bc:	6863      	ldr	r3, [r4, #4]
 80026be:	f44a 6280 	orr.w	r2, sl, #1024	; 0x400
 80026c2:	1c59      	adds	r1, r3, #1
 80026c4:	a80d      	add	r0, sp, #52	; 0x34
 80026c6:	a90e      	add	r1, sp, #56	; 0x38
 80026c8:	d140      	bne.n	800274c <_printf_float+0x15c>
 80026ca:	2306      	movs	r3, #6
 80026cc:	6063      	str	r3, [r4, #4]
 80026ce:	f04f 0c00 	mov.w	ip, #0
 80026d2:	f10d 0333 	add.w	r3, sp, #51	; 0x33
 80026d6:	e9cd 2301 	strd	r2, r3, [sp, #4]
 80026da:	6863      	ldr	r3, [r4, #4]
 80026dc:	6022      	str	r2, [r4, #0]
 80026de:	e9cd 0803 	strd	r0, r8, [sp, #12]
 80026e2:	9300      	str	r3, [sp, #0]
 80026e4:	463a      	mov	r2, r7
 80026e6:	464b      	mov	r3, r9
 80026e8:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 80026ec:	4628      	mov	r0, r5
 80026ee:	f7ff feed 	bl	80024cc <__cvt>
 80026f2:	f008 03df 	and.w	r3, r8, #223	; 0xdf
 80026f6:	2b47      	cmp	r3, #71	; 0x47
 80026f8:	4607      	mov	r7, r0
 80026fa:	d109      	bne.n	8002710 <_printf_float+0x120>
 80026fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80026fe:	1cd8      	adds	r0, r3, #3
 8002700:	db02      	blt.n	8002708 <_printf_float+0x118>
 8002702:	6862      	ldr	r2, [r4, #4]
 8002704:	4293      	cmp	r3, r2
 8002706:	dd47      	ble.n	8002798 <_printf_float+0x1a8>
 8002708:	f1a8 0802 	sub.w	r8, r8, #2
 800270c:	fa5f f888 	uxtb.w	r8, r8
 8002710:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 8002714:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002716:	d824      	bhi.n	8002762 <_printf_float+0x172>
 8002718:	3901      	subs	r1, #1
 800271a:	4642      	mov	r2, r8
 800271c:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8002720:	910d      	str	r1, [sp, #52]	; 0x34
 8002722:	f7ff ff2f 	bl	8002584 <__exponent>
 8002726:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8002728:	4681      	mov	r9, r0
 800272a:	1813      	adds	r3, r2, r0
 800272c:	2a01      	cmp	r2, #1
 800272e:	6123      	str	r3, [r4, #16]
 8002730:	dc02      	bgt.n	8002738 <_printf_float+0x148>
 8002732:	6822      	ldr	r2, [r4, #0]
 8002734:	07d1      	lsls	r1, r2, #31
 8002736:	d501      	bpl.n	800273c <_printf_float+0x14c>
 8002738:	3301      	adds	r3, #1
 800273a:	6123      	str	r3, [r4, #16]
 800273c:	f89d 3033 	ldrb.w	r3, [sp, #51]	; 0x33
 8002740:	2b00      	cmp	r3, #0
 8002742:	d0a2      	beq.n	800268a <_printf_float+0x9a>
 8002744:	232d      	movs	r3, #45	; 0x2d
 8002746:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800274a:	e79e      	b.n	800268a <_printf_float+0x9a>
 800274c:	f1b8 0f67 	cmp.w	r8, #103	; 0x67
 8002750:	f000 816e 	beq.w	8002a30 <_printf_float+0x440>
 8002754:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 8002758:	d1b9      	bne.n	80026ce <_printf_float+0xde>
 800275a:	2b00      	cmp	r3, #0
 800275c:	d1b7      	bne.n	80026ce <_printf_float+0xde>
 800275e:	2301      	movs	r3, #1
 8002760:	e7b4      	b.n	80026cc <_printf_float+0xdc>
 8002762:	f1b8 0f66 	cmp.w	r8, #102	; 0x66
 8002766:	d119      	bne.n	800279c <_printf_float+0x1ac>
 8002768:	2900      	cmp	r1, #0
 800276a:	6863      	ldr	r3, [r4, #4]
 800276c:	dd0c      	ble.n	8002788 <_printf_float+0x198>
 800276e:	6121      	str	r1, [r4, #16]
 8002770:	b913      	cbnz	r3, 8002778 <_printf_float+0x188>
 8002772:	6822      	ldr	r2, [r4, #0]
 8002774:	07d2      	lsls	r2, r2, #31
 8002776:	d502      	bpl.n	800277e <_printf_float+0x18e>
 8002778:	3301      	adds	r3, #1
 800277a:	440b      	add	r3, r1
 800277c:	6123      	str	r3, [r4, #16]
 800277e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002780:	f04f 0900 	mov.w	r9, #0
 8002784:	65a3      	str	r3, [r4, #88]	; 0x58
 8002786:	e7d9      	b.n	800273c <_printf_float+0x14c>
 8002788:	b913      	cbnz	r3, 8002790 <_printf_float+0x1a0>
 800278a:	6822      	ldr	r2, [r4, #0]
 800278c:	07d0      	lsls	r0, r2, #31
 800278e:	d501      	bpl.n	8002794 <_printf_float+0x1a4>
 8002790:	3302      	adds	r3, #2
 8002792:	e7f3      	b.n	800277c <_printf_float+0x18c>
 8002794:	2301      	movs	r3, #1
 8002796:	e7f1      	b.n	800277c <_printf_float+0x18c>
 8002798:	f04f 0867 	mov.w	r8, #103	; 0x67
 800279c:	e9dd 320d 	ldrd	r3, r2, [sp, #52]	; 0x34
 80027a0:	4293      	cmp	r3, r2
 80027a2:	db05      	blt.n	80027b0 <_printf_float+0x1c0>
 80027a4:	6822      	ldr	r2, [r4, #0]
 80027a6:	6123      	str	r3, [r4, #16]
 80027a8:	07d1      	lsls	r1, r2, #31
 80027aa:	d5e8      	bpl.n	800277e <_printf_float+0x18e>
 80027ac:	3301      	adds	r3, #1
 80027ae:	e7e5      	b.n	800277c <_printf_float+0x18c>
 80027b0:	2b00      	cmp	r3, #0
 80027b2:	bfcc      	ite	gt
 80027b4:	2301      	movgt	r3, #1
 80027b6:	f1c3 0302 	rsble	r3, r3, #2
 80027ba:	4413      	add	r3, r2
 80027bc:	e7de      	b.n	800277c <_printf_float+0x18c>
 80027be:	6823      	ldr	r3, [r4, #0]
 80027c0:	055a      	lsls	r2, r3, #21
 80027c2:	d407      	bmi.n	80027d4 <_printf_float+0x1e4>
 80027c4:	6923      	ldr	r3, [r4, #16]
 80027c6:	463a      	mov	r2, r7
 80027c8:	4659      	mov	r1, fp
 80027ca:	4628      	mov	r0, r5
 80027cc:	47b0      	blx	r6
 80027ce:	3001      	adds	r0, #1
 80027d0:	d129      	bne.n	8002826 <_printf_float+0x236>
 80027d2:	e764      	b.n	800269e <_printf_float+0xae>
 80027d4:	f1b8 0f65 	cmp.w	r8, #101	; 0x65
 80027d8:	f240 80d7 	bls.w	800298a <_printf_float+0x39a>
 80027dc:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80027e0:	2200      	movs	r2, #0
 80027e2:	2300      	movs	r3, #0
 80027e4:	f7fe f8e0 	bl	80009a8 <__aeabi_dcmpeq>
 80027e8:	b388      	cbz	r0, 800284e <_printf_float+0x25e>
 80027ea:	2301      	movs	r3, #1
 80027ec:	4a40      	ldr	r2, [pc, #256]	; (80028f0 <_printf_float+0x300>)
 80027ee:	4659      	mov	r1, fp
 80027f0:	4628      	mov	r0, r5
 80027f2:	47b0      	blx	r6
 80027f4:	3001      	adds	r0, #1
 80027f6:	f43f af52 	beq.w	800269e <_printf_float+0xae>
 80027fa:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 80027fe:	429a      	cmp	r2, r3
 8002800:	db02      	blt.n	8002808 <_printf_float+0x218>
 8002802:	6823      	ldr	r3, [r4, #0]
 8002804:	07d8      	lsls	r0, r3, #31
 8002806:	d50e      	bpl.n	8002826 <_printf_float+0x236>
 8002808:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800280c:	4659      	mov	r1, fp
 800280e:	4628      	mov	r0, r5
 8002810:	47b0      	blx	r6
 8002812:	3001      	adds	r0, #1
 8002814:	f43f af43 	beq.w	800269e <_printf_float+0xae>
 8002818:	2700      	movs	r7, #0
 800281a:	f104 081a 	add.w	r8, r4, #26
 800281e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002820:	3b01      	subs	r3, #1
 8002822:	42bb      	cmp	r3, r7
 8002824:	dc09      	bgt.n	800283a <_printf_float+0x24a>
 8002826:	6823      	ldr	r3, [r4, #0]
 8002828:	079f      	lsls	r7, r3, #30
 800282a:	f100 80fd 	bmi.w	8002a28 <_printf_float+0x438>
 800282e:	68e0      	ldr	r0, [r4, #12]
 8002830:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8002832:	4298      	cmp	r0, r3
 8002834:	bfb8      	it	lt
 8002836:	4618      	movlt	r0, r3
 8002838:	e733      	b.n	80026a2 <_printf_float+0xb2>
 800283a:	2301      	movs	r3, #1
 800283c:	4642      	mov	r2, r8
 800283e:	4659      	mov	r1, fp
 8002840:	4628      	mov	r0, r5
 8002842:	47b0      	blx	r6
 8002844:	3001      	adds	r0, #1
 8002846:	f43f af2a 	beq.w	800269e <_printf_float+0xae>
 800284a:	3701      	adds	r7, #1
 800284c:	e7e7      	b.n	800281e <_printf_float+0x22e>
 800284e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002850:	2b00      	cmp	r3, #0
 8002852:	dc2b      	bgt.n	80028ac <_printf_float+0x2bc>
 8002854:	2301      	movs	r3, #1
 8002856:	4a26      	ldr	r2, [pc, #152]	; (80028f0 <_printf_float+0x300>)
 8002858:	4659      	mov	r1, fp
 800285a:	4628      	mov	r0, r5
 800285c:	47b0      	blx	r6
 800285e:	3001      	adds	r0, #1
 8002860:	f43f af1d 	beq.w	800269e <_printf_float+0xae>
 8002864:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8002866:	b923      	cbnz	r3, 8002872 <_printf_float+0x282>
 8002868:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800286a:	b913      	cbnz	r3, 8002872 <_printf_float+0x282>
 800286c:	6823      	ldr	r3, [r4, #0]
 800286e:	07d9      	lsls	r1, r3, #31
 8002870:	d5d9      	bpl.n	8002826 <_printf_float+0x236>
 8002872:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8002876:	4659      	mov	r1, fp
 8002878:	4628      	mov	r0, r5
 800287a:	47b0      	blx	r6
 800287c:	3001      	adds	r0, #1
 800287e:	f43f af0e 	beq.w	800269e <_printf_float+0xae>
 8002882:	f04f 0800 	mov.w	r8, #0
 8002886:	f104 091a 	add.w	r9, r4, #26
 800288a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800288c:	425b      	negs	r3, r3
 800288e:	4543      	cmp	r3, r8
 8002890:	dc01      	bgt.n	8002896 <_printf_float+0x2a6>
 8002892:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002894:	e797      	b.n	80027c6 <_printf_float+0x1d6>
 8002896:	2301      	movs	r3, #1
 8002898:	464a      	mov	r2, r9
 800289a:	4659      	mov	r1, fp
 800289c:	4628      	mov	r0, r5
 800289e:	47b0      	blx	r6
 80028a0:	3001      	adds	r0, #1
 80028a2:	f43f aefc 	beq.w	800269e <_printf_float+0xae>
 80028a6:	f108 0801 	add.w	r8, r8, #1
 80028aa:	e7ee      	b.n	800288a <_printf_float+0x29a>
 80028ac:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80028ae:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80028b0:	429a      	cmp	r2, r3
 80028b2:	bfa8      	it	ge
 80028b4:	461a      	movge	r2, r3
 80028b6:	2a00      	cmp	r2, #0
 80028b8:	4690      	mov	r8, r2
 80028ba:	dd07      	ble.n	80028cc <_printf_float+0x2dc>
 80028bc:	4613      	mov	r3, r2
 80028be:	4659      	mov	r1, fp
 80028c0:	463a      	mov	r2, r7
 80028c2:	4628      	mov	r0, r5
 80028c4:	47b0      	blx	r6
 80028c6:	3001      	adds	r0, #1
 80028c8:	f43f aee9 	beq.w	800269e <_printf_float+0xae>
 80028cc:	f104 031a 	add.w	r3, r4, #26
 80028d0:	f04f 0a00 	mov.w	sl, #0
 80028d4:	ea28 78e8 	bic.w	r8, r8, r8, asr #31
 80028d8:	930b      	str	r3, [sp, #44]	; 0x2c
 80028da:	e015      	b.n	8002908 <_printf_float+0x318>
 80028dc:	7fefffff 	.word	0x7fefffff
 80028e0:	08006f18 	.word	0x08006f18
 80028e4:	08006f14 	.word	0x08006f14
 80028e8:	08006f20 	.word	0x08006f20
 80028ec:	08006f1c 	.word	0x08006f1c
 80028f0:	08006f24 	.word	0x08006f24
 80028f4:	2301      	movs	r3, #1
 80028f6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80028f8:	4659      	mov	r1, fp
 80028fa:	4628      	mov	r0, r5
 80028fc:	47b0      	blx	r6
 80028fe:	3001      	adds	r0, #1
 8002900:	f43f aecd 	beq.w	800269e <_printf_float+0xae>
 8002904:	f10a 0a01 	add.w	sl, sl, #1
 8002908:	f8d4 9058 	ldr.w	r9, [r4, #88]	; 0x58
 800290c:	eba9 0308 	sub.w	r3, r9, r8
 8002910:	4553      	cmp	r3, sl
 8002912:	dcef      	bgt.n	80028f4 <_printf_float+0x304>
 8002914:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 8002918:	429a      	cmp	r2, r3
 800291a:	444f      	add	r7, r9
 800291c:	db14      	blt.n	8002948 <_printf_float+0x358>
 800291e:	6823      	ldr	r3, [r4, #0]
 8002920:	07da      	lsls	r2, r3, #31
 8002922:	d411      	bmi.n	8002948 <_printf_float+0x358>
 8002924:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8002926:	990d      	ldr	r1, [sp, #52]	; 0x34
 8002928:	eba3 0209 	sub.w	r2, r3, r9
 800292c:	eba3 0901 	sub.w	r9, r3, r1
 8002930:	4591      	cmp	r9, r2
 8002932:	bfa8      	it	ge
 8002934:	4691      	movge	r9, r2
 8002936:	f1b9 0f00 	cmp.w	r9, #0
 800293a:	dc0d      	bgt.n	8002958 <_printf_float+0x368>
 800293c:	2700      	movs	r7, #0
 800293e:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 8002942:	f104 081a 	add.w	r8, r4, #26
 8002946:	e018      	b.n	800297a <_printf_float+0x38a>
 8002948:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800294c:	4659      	mov	r1, fp
 800294e:	4628      	mov	r0, r5
 8002950:	47b0      	blx	r6
 8002952:	3001      	adds	r0, #1
 8002954:	d1e6      	bne.n	8002924 <_printf_float+0x334>
 8002956:	e6a2      	b.n	800269e <_printf_float+0xae>
 8002958:	464b      	mov	r3, r9
 800295a:	463a      	mov	r2, r7
 800295c:	4659      	mov	r1, fp
 800295e:	4628      	mov	r0, r5
 8002960:	47b0      	blx	r6
 8002962:	3001      	adds	r0, #1
 8002964:	d1ea      	bne.n	800293c <_printf_float+0x34c>
 8002966:	e69a      	b.n	800269e <_printf_float+0xae>
 8002968:	2301      	movs	r3, #1
 800296a:	4642      	mov	r2, r8
 800296c:	4659      	mov	r1, fp
 800296e:	4628      	mov	r0, r5
 8002970:	47b0      	blx	r6
 8002972:	3001      	adds	r0, #1
 8002974:	f43f ae93 	beq.w	800269e <_printf_float+0xae>
 8002978:	3701      	adds	r7, #1
 800297a:	e9dd 230d 	ldrd	r2, r3, [sp, #52]	; 0x34
 800297e:	1a9b      	subs	r3, r3, r2
 8002980:	eba3 0309 	sub.w	r3, r3, r9
 8002984:	42bb      	cmp	r3, r7
 8002986:	dcef      	bgt.n	8002968 <_printf_float+0x378>
 8002988:	e74d      	b.n	8002826 <_printf_float+0x236>
 800298a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800298c:	2a01      	cmp	r2, #1
 800298e:	dc01      	bgt.n	8002994 <_printf_float+0x3a4>
 8002990:	07db      	lsls	r3, r3, #31
 8002992:	d538      	bpl.n	8002a06 <_printf_float+0x416>
 8002994:	2301      	movs	r3, #1
 8002996:	463a      	mov	r2, r7
 8002998:	4659      	mov	r1, fp
 800299a:	4628      	mov	r0, r5
 800299c:	47b0      	blx	r6
 800299e:	3001      	adds	r0, #1
 80029a0:	f43f ae7d 	beq.w	800269e <_printf_float+0xae>
 80029a4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80029a8:	4659      	mov	r1, fp
 80029aa:	4628      	mov	r0, r5
 80029ac:	47b0      	blx	r6
 80029ae:	3001      	adds	r0, #1
 80029b0:	f107 0701 	add.w	r7, r7, #1
 80029b4:	f43f ae73 	beq.w	800269e <_printf_float+0xae>
 80029b8:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80029bc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80029be:	2200      	movs	r2, #0
 80029c0:	f103 38ff 	add.w	r8, r3, #4294967295	; 0xffffffff
 80029c4:	2300      	movs	r3, #0
 80029c6:	f7fd ffef 	bl	80009a8 <__aeabi_dcmpeq>
 80029ca:	b9c0      	cbnz	r0, 80029fe <_printf_float+0x40e>
 80029cc:	4643      	mov	r3, r8
 80029ce:	463a      	mov	r2, r7
 80029d0:	4659      	mov	r1, fp
 80029d2:	4628      	mov	r0, r5
 80029d4:	47b0      	blx	r6
 80029d6:	3001      	adds	r0, #1
 80029d8:	d10d      	bne.n	80029f6 <_printf_float+0x406>
 80029da:	e660      	b.n	800269e <_printf_float+0xae>
 80029dc:	2301      	movs	r3, #1
 80029de:	4642      	mov	r2, r8
 80029e0:	4659      	mov	r1, fp
 80029e2:	4628      	mov	r0, r5
 80029e4:	47b0      	blx	r6
 80029e6:	3001      	adds	r0, #1
 80029e8:	f43f ae59 	beq.w	800269e <_printf_float+0xae>
 80029ec:	3701      	adds	r7, #1
 80029ee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80029f0:	3b01      	subs	r3, #1
 80029f2:	42bb      	cmp	r3, r7
 80029f4:	dcf2      	bgt.n	80029dc <_printf_float+0x3ec>
 80029f6:	464b      	mov	r3, r9
 80029f8:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80029fc:	e6e4      	b.n	80027c8 <_printf_float+0x1d8>
 80029fe:	2700      	movs	r7, #0
 8002a00:	f104 081a 	add.w	r8, r4, #26
 8002a04:	e7f3      	b.n	80029ee <_printf_float+0x3fe>
 8002a06:	2301      	movs	r3, #1
 8002a08:	e7e1      	b.n	80029ce <_printf_float+0x3de>
 8002a0a:	2301      	movs	r3, #1
 8002a0c:	4642      	mov	r2, r8
 8002a0e:	4659      	mov	r1, fp
 8002a10:	4628      	mov	r0, r5
 8002a12:	47b0      	blx	r6
 8002a14:	3001      	adds	r0, #1
 8002a16:	f43f ae42 	beq.w	800269e <_printf_float+0xae>
 8002a1a:	3701      	adds	r7, #1
 8002a1c:	68e3      	ldr	r3, [r4, #12]
 8002a1e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8002a20:	1a9b      	subs	r3, r3, r2
 8002a22:	42bb      	cmp	r3, r7
 8002a24:	dcf1      	bgt.n	8002a0a <_printf_float+0x41a>
 8002a26:	e702      	b.n	800282e <_printf_float+0x23e>
 8002a28:	2700      	movs	r7, #0
 8002a2a:	f104 0819 	add.w	r8, r4, #25
 8002a2e:	e7f5      	b.n	8002a1c <_printf_float+0x42c>
 8002a30:	2b00      	cmp	r3, #0
 8002a32:	f43f ae94 	beq.w	800275e <_printf_float+0x16e>
 8002a36:	f04f 0c00 	mov.w	ip, #0
 8002a3a:	e9cd 1c05 	strd	r1, ip, [sp, #20]
 8002a3e:	f10d 0133 	add.w	r1, sp, #51	; 0x33
 8002a42:	6022      	str	r2, [r4, #0]
 8002a44:	e9cd 0803 	strd	r0, r8, [sp, #12]
 8002a48:	e9cd 2101 	strd	r2, r1, [sp, #4]
 8002a4c:	9300      	str	r3, [sp, #0]
 8002a4e:	463a      	mov	r2, r7
 8002a50:	464b      	mov	r3, r9
 8002a52:	4628      	mov	r0, r5
 8002a54:	f7ff fd3a 	bl	80024cc <__cvt>
 8002a58:	4607      	mov	r7, r0
 8002a5a:	e64f      	b.n	80026fc <_printf_float+0x10c>

08002a5c <_printf_common>:
 8002a5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8002a60:	4691      	mov	r9, r2
 8002a62:	461f      	mov	r7, r3
 8002a64:	688a      	ldr	r2, [r1, #8]
 8002a66:	690b      	ldr	r3, [r1, #16]
 8002a68:	4606      	mov	r6, r0
 8002a6a:	4293      	cmp	r3, r2
 8002a6c:	bfb8      	it	lt
 8002a6e:	4613      	movlt	r3, r2
 8002a70:	f8c9 3000 	str.w	r3, [r9]
 8002a74:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8002a78:	460c      	mov	r4, r1
 8002a7a:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8002a7e:	b112      	cbz	r2, 8002a86 <_printf_common+0x2a>
 8002a80:	3301      	adds	r3, #1
 8002a82:	f8c9 3000 	str.w	r3, [r9]
 8002a86:	6823      	ldr	r3, [r4, #0]
 8002a88:	0699      	lsls	r1, r3, #26
 8002a8a:	bf42      	ittt	mi
 8002a8c:	f8d9 3000 	ldrmi.w	r3, [r9]
 8002a90:	3302      	addmi	r3, #2
 8002a92:	f8c9 3000 	strmi.w	r3, [r9]
 8002a96:	6825      	ldr	r5, [r4, #0]
 8002a98:	f015 0506 	ands.w	r5, r5, #6
 8002a9c:	d107      	bne.n	8002aae <_printf_common+0x52>
 8002a9e:	f104 0a19 	add.w	sl, r4, #25
 8002aa2:	68e3      	ldr	r3, [r4, #12]
 8002aa4:	f8d9 2000 	ldr.w	r2, [r9]
 8002aa8:	1a9b      	subs	r3, r3, r2
 8002aaa:	42ab      	cmp	r3, r5
 8002aac:	dc29      	bgt.n	8002b02 <_printf_common+0xa6>
 8002aae:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 8002ab2:	6822      	ldr	r2, [r4, #0]
 8002ab4:	3300      	adds	r3, #0
 8002ab6:	bf18      	it	ne
 8002ab8:	2301      	movne	r3, #1
 8002aba:	0692      	lsls	r2, r2, #26
 8002abc:	d42e      	bmi.n	8002b1c <_printf_common+0xc0>
 8002abe:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8002ac2:	4639      	mov	r1, r7
 8002ac4:	4630      	mov	r0, r6
 8002ac6:	47c0      	blx	r8
 8002ac8:	3001      	adds	r0, #1
 8002aca:	d021      	beq.n	8002b10 <_printf_common+0xb4>
 8002acc:	6823      	ldr	r3, [r4, #0]
 8002ace:	68e5      	ldr	r5, [r4, #12]
 8002ad0:	f003 0306 	and.w	r3, r3, #6
 8002ad4:	2b04      	cmp	r3, #4
 8002ad6:	bf18      	it	ne
 8002ad8:	2500      	movne	r5, #0
 8002ada:	f8d9 2000 	ldr.w	r2, [r9]
 8002ade:	f04f 0900 	mov.w	r9, #0
 8002ae2:	bf08      	it	eq
 8002ae4:	1aad      	subeq	r5, r5, r2
 8002ae6:	68a3      	ldr	r3, [r4, #8]
 8002ae8:	6922      	ldr	r2, [r4, #16]
 8002aea:	bf08      	it	eq
 8002aec:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8002af0:	4293      	cmp	r3, r2
 8002af2:	bfc4      	itt	gt
 8002af4:	1a9b      	subgt	r3, r3, r2
 8002af6:	18ed      	addgt	r5, r5, r3
 8002af8:	341a      	adds	r4, #26
 8002afa:	454d      	cmp	r5, r9
 8002afc:	d11a      	bne.n	8002b34 <_printf_common+0xd8>
 8002afe:	2000      	movs	r0, #0
 8002b00:	e008      	b.n	8002b14 <_printf_common+0xb8>
 8002b02:	2301      	movs	r3, #1
 8002b04:	4652      	mov	r2, sl
 8002b06:	4639      	mov	r1, r7
 8002b08:	4630      	mov	r0, r6
 8002b0a:	47c0      	blx	r8
 8002b0c:	3001      	adds	r0, #1
 8002b0e:	d103      	bne.n	8002b18 <_printf_common+0xbc>
 8002b10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002b14:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8002b18:	3501      	adds	r5, #1
 8002b1a:	e7c2      	b.n	8002aa2 <_printf_common+0x46>
 8002b1c:	2030      	movs	r0, #48	; 0x30
 8002b1e:	18e1      	adds	r1, r4, r3
 8002b20:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8002b24:	1c5a      	adds	r2, r3, #1
 8002b26:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8002b2a:	4422      	add	r2, r4
 8002b2c:	3302      	adds	r3, #2
 8002b2e:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8002b32:	e7c4      	b.n	8002abe <_printf_common+0x62>
 8002b34:	2301      	movs	r3, #1
 8002b36:	4622      	mov	r2, r4
 8002b38:	4639      	mov	r1, r7
 8002b3a:	4630      	mov	r0, r6
 8002b3c:	47c0      	blx	r8
 8002b3e:	3001      	adds	r0, #1
 8002b40:	d0e6      	beq.n	8002b10 <_printf_common+0xb4>
 8002b42:	f109 0901 	add.w	r9, r9, #1
 8002b46:	e7d8      	b.n	8002afa <_printf_common+0x9e>

08002b48 <_printf_i>:
 8002b48:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002b4c:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 8002b50:	460c      	mov	r4, r1
 8002b52:	7e09      	ldrb	r1, [r1, #24]
 8002b54:	b085      	sub	sp, #20
 8002b56:	296e      	cmp	r1, #110	; 0x6e
 8002b58:	4617      	mov	r7, r2
 8002b5a:	4606      	mov	r6, r0
 8002b5c:	4698      	mov	r8, r3
 8002b5e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8002b60:	f000 80b3 	beq.w	8002cca <_printf_i+0x182>
 8002b64:	d822      	bhi.n	8002bac <_printf_i+0x64>
 8002b66:	2963      	cmp	r1, #99	; 0x63
 8002b68:	d036      	beq.n	8002bd8 <_printf_i+0x90>
 8002b6a:	d80a      	bhi.n	8002b82 <_printf_i+0x3a>
 8002b6c:	2900      	cmp	r1, #0
 8002b6e:	f000 80b9 	beq.w	8002ce4 <_printf_i+0x19c>
 8002b72:	2958      	cmp	r1, #88	; 0x58
 8002b74:	f000 8083 	beq.w	8002c7e <_printf_i+0x136>
 8002b78:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002b7c:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 8002b80:	e032      	b.n	8002be8 <_printf_i+0xa0>
 8002b82:	2964      	cmp	r1, #100	; 0x64
 8002b84:	d001      	beq.n	8002b8a <_printf_i+0x42>
 8002b86:	2969      	cmp	r1, #105	; 0x69
 8002b88:	d1f6      	bne.n	8002b78 <_printf_i+0x30>
 8002b8a:	6820      	ldr	r0, [r4, #0]
 8002b8c:	6813      	ldr	r3, [r2, #0]
 8002b8e:	0605      	lsls	r5, r0, #24
 8002b90:	f103 0104 	add.w	r1, r3, #4
 8002b94:	d52a      	bpl.n	8002bec <_printf_i+0xa4>
 8002b96:	681b      	ldr	r3, [r3, #0]
 8002b98:	6011      	str	r1, [r2, #0]
 8002b9a:	2b00      	cmp	r3, #0
 8002b9c:	da03      	bge.n	8002ba6 <_printf_i+0x5e>
 8002b9e:	222d      	movs	r2, #45	; 0x2d
 8002ba0:	425b      	negs	r3, r3
 8002ba2:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 8002ba6:	486f      	ldr	r0, [pc, #444]	; (8002d64 <_printf_i+0x21c>)
 8002ba8:	220a      	movs	r2, #10
 8002baa:	e039      	b.n	8002c20 <_printf_i+0xd8>
 8002bac:	2973      	cmp	r1, #115	; 0x73
 8002bae:	f000 809d 	beq.w	8002cec <_printf_i+0x1a4>
 8002bb2:	d808      	bhi.n	8002bc6 <_printf_i+0x7e>
 8002bb4:	296f      	cmp	r1, #111	; 0x6f
 8002bb6:	d020      	beq.n	8002bfa <_printf_i+0xb2>
 8002bb8:	2970      	cmp	r1, #112	; 0x70
 8002bba:	d1dd      	bne.n	8002b78 <_printf_i+0x30>
 8002bbc:	6823      	ldr	r3, [r4, #0]
 8002bbe:	f043 0320 	orr.w	r3, r3, #32
 8002bc2:	6023      	str	r3, [r4, #0]
 8002bc4:	e003      	b.n	8002bce <_printf_i+0x86>
 8002bc6:	2975      	cmp	r1, #117	; 0x75
 8002bc8:	d017      	beq.n	8002bfa <_printf_i+0xb2>
 8002bca:	2978      	cmp	r1, #120	; 0x78
 8002bcc:	d1d4      	bne.n	8002b78 <_printf_i+0x30>
 8002bce:	2378      	movs	r3, #120	; 0x78
 8002bd0:	4865      	ldr	r0, [pc, #404]	; (8002d68 <_printf_i+0x220>)
 8002bd2:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8002bd6:	e055      	b.n	8002c84 <_printf_i+0x13c>
 8002bd8:	6813      	ldr	r3, [r2, #0]
 8002bda:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002bde:	1d19      	adds	r1, r3, #4
 8002be0:	681b      	ldr	r3, [r3, #0]
 8002be2:	6011      	str	r1, [r2, #0]
 8002be4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002be8:	2301      	movs	r3, #1
 8002bea:	e08c      	b.n	8002d06 <_printf_i+0x1be>
 8002bec:	681b      	ldr	r3, [r3, #0]
 8002bee:	f010 0f40 	tst.w	r0, #64	; 0x40
 8002bf2:	6011      	str	r1, [r2, #0]
 8002bf4:	bf18      	it	ne
 8002bf6:	b21b      	sxthne	r3, r3
 8002bf8:	e7cf      	b.n	8002b9a <_printf_i+0x52>
 8002bfa:	6813      	ldr	r3, [r2, #0]
 8002bfc:	6825      	ldr	r5, [r4, #0]
 8002bfe:	1d18      	adds	r0, r3, #4
 8002c00:	6010      	str	r0, [r2, #0]
 8002c02:	0628      	lsls	r0, r5, #24
 8002c04:	d501      	bpl.n	8002c0a <_printf_i+0xc2>
 8002c06:	681b      	ldr	r3, [r3, #0]
 8002c08:	e002      	b.n	8002c10 <_printf_i+0xc8>
 8002c0a:	0668      	lsls	r0, r5, #25
 8002c0c:	d5fb      	bpl.n	8002c06 <_printf_i+0xbe>
 8002c0e:	881b      	ldrh	r3, [r3, #0]
 8002c10:	296f      	cmp	r1, #111	; 0x6f
 8002c12:	bf14      	ite	ne
 8002c14:	220a      	movne	r2, #10
 8002c16:	2208      	moveq	r2, #8
 8002c18:	4852      	ldr	r0, [pc, #328]	; (8002d64 <_printf_i+0x21c>)
 8002c1a:	2100      	movs	r1, #0
 8002c1c:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8002c20:	6865      	ldr	r5, [r4, #4]
 8002c22:	2d00      	cmp	r5, #0
 8002c24:	60a5      	str	r5, [r4, #8]
 8002c26:	f2c0 8095 	blt.w	8002d54 <_printf_i+0x20c>
 8002c2a:	6821      	ldr	r1, [r4, #0]
 8002c2c:	f021 0104 	bic.w	r1, r1, #4
 8002c30:	6021      	str	r1, [r4, #0]
 8002c32:	2b00      	cmp	r3, #0
 8002c34:	d13d      	bne.n	8002cb2 <_printf_i+0x16a>
 8002c36:	2d00      	cmp	r5, #0
 8002c38:	f040 808e 	bne.w	8002d58 <_printf_i+0x210>
 8002c3c:	4665      	mov	r5, ip
 8002c3e:	2a08      	cmp	r2, #8
 8002c40:	d10b      	bne.n	8002c5a <_printf_i+0x112>
 8002c42:	6823      	ldr	r3, [r4, #0]
 8002c44:	07db      	lsls	r3, r3, #31
 8002c46:	d508      	bpl.n	8002c5a <_printf_i+0x112>
 8002c48:	6923      	ldr	r3, [r4, #16]
 8002c4a:	6862      	ldr	r2, [r4, #4]
 8002c4c:	429a      	cmp	r2, r3
 8002c4e:	bfde      	ittt	le
 8002c50:	2330      	movle	r3, #48	; 0x30
 8002c52:	f805 3c01 	strble.w	r3, [r5, #-1]
 8002c56:	f105 35ff 	addle.w	r5, r5, #4294967295	; 0xffffffff
 8002c5a:	ebac 0305 	sub.w	r3, ip, r5
 8002c5e:	6123      	str	r3, [r4, #16]
 8002c60:	f8cd 8000 	str.w	r8, [sp]
 8002c64:	463b      	mov	r3, r7
 8002c66:	aa03      	add	r2, sp, #12
 8002c68:	4621      	mov	r1, r4
 8002c6a:	4630      	mov	r0, r6
 8002c6c:	f7ff fef6 	bl	8002a5c <_printf_common>
 8002c70:	3001      	adds	r0, #1
 8002c72:	d14d      	bne.n	8002d10 <_printf_i+0x1c8>
 8002c74:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8002c78:	b005      	add	sp, #20
 8002c7a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002c7e:	4839      	ldr	r0, [pc, #228]	; (8002d64 <_printf_i+0x21c>)
 8002c80:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 8002c84:	6813      	ldr	r3, [r2, #0]
 8002c86:	6821      	ldr	r1, [r4, #0]
 8002c88:	1d1d      	adds	r5, r3, #4
 8002c8a:	681b      	ldr	r3, [r3, #0]
 8002c8c:	6015      	str	r5, [r2, #0]
 8002c8e:	060a      	lsls	r2, r1, #24
 8002c90:	d50b      	bpl.n	8002caa <_printf_i+0x162>
 8002c92:	07ca      	lsls	r2, r1, #31
 8002c94:	bf44      	itt	mi
 8002c96:	f041 0120 	orrmi.w	r1, r1, #32
 8002c9a:	6021      	strmi	r1, [r4, #0]
 8002c9c:	b91b      	cbnz	r3, 8002ca6 <_printf_i+0x15e>
 8002c9e:	6822      	ldr	r2, [r4, #0]
 8002ca0:	f022 0220 	bic.w	r2, r2, #32
 8002ca4:	6022      	str	r2, [r4, #0]
 8002ca6:	2210      	movs	r2, #16
 8002ca8:	e7b7      	b.n	8002c1a <_printf_i+0xd2>
 8002caa:	064d      	lsls	r5, r1, #25
 8002cac:	bf48      	it	mi
 8002cae:	b29b      	uxthmi	r3, r3
 8002cb0:	e7ef      	b.n	8002c92 <_printf_i+0x14a>
 8002cb2:	4665      	mov	r5, ip
 8002cb4:	fbb3 f1f2 	udiv	r1, r3, r2
 8002cb8:	fb02 3311 	mls	r3, r2, r1, r3
 8002cbc:	5cc3      	ldrb	r3, [r0, r3]
 8002cbe:	f805 3d01 	strb.w	r3, [r5, #-1]!
 8002cc2:	460b      	mov	r3, r1
 8002cc4:	2900      	cmp	r1, #0
 8002cc6:	d1f5      	bne.n	8002cb4 <_printf_i+0x16c>
 8002cc8:	e7b9      	b.n	8002c3e <_printf_i+0xf6>
 8002cca:	6813      	ldr	r3, [r2, #0]
 8002ccc:	6825      	ldr	r5, [r4, #0]
 8002cce:	1d18      	adds	r0, r3, #4
 8002cd0:	6961      	ldr	r1, [r4, #20]
 8002cd2:	6010      	str	r0, [r2, #0]
 8002cd4:	0628      	lsls	r0, r5, #24
 8002cd6:	681b      	ldr	r3, [r3, #0]
 8002cd8:	d501      	bpl.n	8002cde <_printf_i+0x196>
 8002cda:	6019      	str	r1, [r3, #0]
 8002cdc:	e002      	b.n	8002ce4 <_printf_i+0x19c>
 8002cde:	066a      	lsls	r2, r5, #25
 8002ce0:	d5fb      	bpl.n	8002cda <_printf_i+0x192>
 8002ce2:	8019      	strh	r1, [r3, #0]
 8002ce4:	2300      	movs	r3, #0
 8002ce6:	4665      	mov	r5, ip
 8002ce8:	6123      	str	r3, [r4, #16]
 8002cea:	e7b9      	b.n	8002c60 <_printf_i+0x118>
 8002cec:	6813      	ldr	r3, [r2, #0]
 8002cee:	1d19      	adds	r1, r3, #4
 8002cf0:	6011      	str	r1, [r2, #0]
 8002cf2:	681d      	ldr	r5, [r3, #0]
 8002cf4:	6862      	ldr	r2, [r4, #4]
 8002cf6:	2100      	movs	r1, #0
 8002cf8:	4628      	mov	r0, r5
 8002cfa:	f002 fe25 	bl	8005948 <memchr>
 8002cfe:	b108      	cbz	r0, 8002d04 <_printf_i+0x1bc>
 8002d00:	1b40      	subs	r0, r0, r5
 8002d02:	6060      	str	r0, [r4, #4]
 8002d04:	6863      	ldr	r3, [r4, #4]
 8002d06:	6123      	str	r3, [r4, #16]
 8002d08:	2300      	movs	r3, #0
 8002d0a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8002d0e:	e7a7      	b.n	8002c60 <_printf_i+0x118>
 8002d10:	6923      	ldr	r3, [r4, #16]
 8002d12:	462a      	mov	r2, r5
 8002d14:	4639      	mov	r1, r7
 8002d16:	4630      	mov	r0, r6
 8002d18:	47c0      	blx	r8
 8002d1a:	3001      	adds	r0, #1
 8002d1c:	d0aa      	beq.n	8002c74 <_printf_i+0x12c>
 8002d1e:	6823      	ldr	r3, [r4, #0]
 8002d20:	079b      	lsls	r3, r3, #30
 8002d22:	d413      	bmi.n	8002d4c <_printf_i+0x204>
 8002d24:	68e0      	ldr	r0, [r4, #12]
 8002d26:	9b03      	ldr	r3, [sp, #12]
 8002d28:	4298      	cmp	r0, r3
 8002d2a:	bfb8      	it	lt
 8002d2c:	4618      	movlt	r0, r3
 8002d2e:	e7a3      	b.n	8002c78 <_printf_i+0x130>
 8002d30:	2301      	movs	r3, #1
 8002d32:	464a      	mov	r2, r9
 8002d34:	4639      	mov	r1, r7
 8002d36:	4630      	mov	r0, r6
 8002d38:	47c0      	blx	r8
 8002d3a:	3001      	adds	r0, #1
 8002d3c:	d09a      	beq.n	8002c74 <_printf_i+0x12c>
 8002d3e:	3501      	adds	r5, #1
 8002d40:	68e3      	ldr	r3, [r4, #12]
 8002d42:	9a03      	ldr	r2, [sp, #12]
 8002d44:	1a9b      	subs	r3, r3, r2
 8002d46:	42ab      	cmp	r3, r5
 8002d48:	dcf2      	bgt.n	8002d30 <_printf_i+0x1e8>
 8002d4a:	e7eb      	b.n	8002d24 <_printf_i+0x1dc>
 8002d4c:	2500      	movs	r5, #0
 8002d4e:	f104 0919 	add.w	r9, r4, #25
 8002d52:	e7f5      	b.n	8002d40 <_printf_i+0x1f8>
 8002d54:	2b00      	cmp	r3, #0
 8002d56:	d1ac      	bne.n	8002cb2 <_printf_i+0x16a>
 8002d58:	7803      	ldrb	r3, [r0, #0]
 8002d5a:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8002d5e:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8002d62:	e76c      	b.n	8002c3e <_printf_i+0xf6>
 8002d64:	08006f26 	.word	0x08006f26
 8002d68:	08006f37 	.word	0x08006f37

08002d6c <_scanf_float>:
 8002d6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8002d70:	469a      	mov	sl, r3
 8002d72:	688b      	ldr	r3, [r1, #8]
 8002d74:	4616      	mov	r6, r2
 8002d76:	1e5a      	subs	r2, r3, #1
 8002d78:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8002d7c:	bf88      	it	hi
 8002d7e:	f46f 72ae 	mvnhi.w	r2, #348	; 0x15c
 8002d82:	b087      	sub	sp, #28
 8002d84:	bf85      	ittet	hi
 8002d86:	189b      	addhi	r3, r3, r2
 8002d88:	9301      	strhi	r3, [sp, #4]
 8002d8a:	2300      	movls	r3, #0
 8002d8c:	f240 135d 	movwhi	r3, #349	; 0x15d
 8002d90:	4688      	mov	r8, r1
 8002d92:	f04f 0b00 	mov.w	fp, #0
 8002d96:	bf8c      	ite	hi
 8002d98:	608b      	strhi	r3, [r1, #8]
 8002d9a:	9301      	strls	r3, [sp, #4]
 8002d9c:	680b      	ldr	r3, [r1, #0]
 8002d9e:	4607      	mov	r7, r0
 8002da0:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8002da4:	f848 3b1c 	str.w	r3, [r8], #28
 8002da8:	460c      	mov	r4, r1
 8002daa:	4645      	mov	r5, r8
 8002dac:	465a      	mov	r2, fp
 8002dae:	46d9      	mov	r9, fp
 8002db0:	e9cd bb03 	strd	fp, fp, [sp, #12]
 8002db4:	f8cd b008 	str.w	fp, [sp, #8]
 8002db8:	68a1      	ldr	r1, [r4, #8]
 8002dba:	b181      	cbz	r1, 8002dde <_scanf_float+0x72>
 8002dbc:	6833      	ldr	r3, [r6, #0]
 8002dbe:	781b      	ldrb	r3, [r3, #0]
 8002dc0:	2b49      	cmp	r3, #73	; 0x49
 8002dc2:	d071      	beq.n	8002ea8 <_scanf_float+0x13c>
 8002dc4:	d84d      	bhi.n	8002e62 <_scanf_float+0xf6>
 8002dc6:	2b39      	cmp	r3, #57	; 0x39
 8002dc8:	d840      	bhi.n	8002e4c <_scanf_float+0xe0>
 8002dca:	2b31      	cmp	r3, #49	; 0x31
 8002dcc:	f080 8088 	bcs.w	8002ee0 <_scanf_float+0x174>
 8002dd0:	2b2d      	cmp	r3, #45	; 0x2d
 8002dd2:	f000 8090 	beq.w	8002ef6 <_scanf_float+0x18a>
 8002dd6:	d815      	bhi.n	8002e04 <_scanf_float+0x98>
 8002dd8:	2b2b      	cmp	r3, #43	; 0x2b
 8002dda:	f000 808c 	beq.w	8002ef6 <_scanf_float+0x18a>
 8002dde:	f1b9 0f00 	cmp.w	r9, #0
 8002de2:	d003      	beq.n	8002dec <_scanf_float+0x80>
 8002de4:	6823      	ldr	r3, [r4, #0]
 8002de6:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8002dea:	6023      	str	r3, [r4, #0]
 8002dec:	3a01      	subs	r2, #1
 8002dee:	2a01      	cmp	r2, #1
 8002df0:	f200 80ea 	bhi.w	8002fc8 <_scanf_float+0x25c>
 8002df4:	4545      	cmp	r5, r8
 8002df6:	f200 80dc 	bhi.w	8002fb2 <_scanf_float+0x246>
 8002dfa:	2601      	movs	r6, #1
 8002dfc:	4630      	mov	r0, r6
 8002dfe:	b007      	add	sp, #28
 8002e00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8002e04:	2b2e      	cmp	r3, #46	; 0x2e
 8002e06:	f000 809f 	beq.w	8002f48 <_scanf_float+0x1dc>
 8002e0a:	2b30      	cmp	r3, #48	; 0x30
 8002e0c:	d1e7      	bne.n	8002dde <_scanf_float+0x72>
 8002e0e:	6820      	ldr	r0, [r4, #0]
 8002e10:	f410 7f80 	tst.w	r0, #256	; 0x100
 8002e14:	d064      	beq.n	8002ee0 <_scanf_float+0x174>
 8002e16:	9b01      	ldr	r3, [sp, #4]
 8002e18:	f020 0080 	bic.w	r0, r0, #128	; 0x80
 8002e1c:	6020      	str	r0, [r4, #0]
 8002e1e:	f109 0901 	add.w	r9, r9, #1
 8002e22:	b11b      	cbz	r3, 8002e2c <_scanf_float+0xc0>
 8002e24:	3b01      	subs	r3, #1
 8002e26:	3101      	adds	r1, #1
 8002e28:	9301      	str	r3, [sp, #4]
 8002e2a:	60a1      	str	r1, [r4, #8]
 8002e2c:	68a3      	ldr	r3, [r4, #8]
 8002e2e:	3b01      	subs	r3, #1
 8002e30:	60a3      	str	r3, [r4, #8]
 8002e32:	6923      	ldr	r3, [r4, #16]
 8002e34:	3301      	adds	r3, #1
 8002e36:	6123      	str	r3, [r4, #16]
 8002e38:	6873      	ldr	r3, [r6, #4]
 8002e3a:	3b01      	subs	r3, #1
 8002e3c:	2b00      	cmp	r3, #0
 8002e3e:	6073      	str	r3, [r6, #4]
 8002e40:	f340 80ac 	ble.w	8002f9c <_scanf_float+0x230>
 8002e44:	6833      	ldr	r3, [r6, #0]
 8002e46:	3301      	adds	r3, #1
 8002e48:	6033      	str	r3, [r6, #0]
 8002e4a:	e7b5      	b.n	8002db8 <_scanf_float+0x4c>
 8002e4c:	2b45      	cmp	r3, #69	; 0x45
 8002e4e:	f000 8085 	beq.w	8002f5c <_scanf_float+0x1f0>
 8002e52:	2b46      	cmp	r3, #70	; 0x46
 8002e54:	d06a      	beq.n	8002f2c <_scanf_float+0x1c0>
 8002e56:	2b41      	cmp	r3, #65	; 0x41
 8002e58:	d1c1      	bne.n	8002dde <_scanf_float+0x72>
 8002e5a:	2a01      	cmp	r2, #1
 8002e5c:	d1bf      	bne.n	8002dde <_scanf_float+0x72>
 8002e5e:	2202      	movs	r2, #2
 8002e60:	e046      	b.n	8002ef0 <_scanf_float+0x184>
 8002e62:	2b65      	cmp	r3, #101	; 0x65
 8002e64:	d07a      	beq.n	8002f5c <_scanf_float+0x1f0>
 8002e66:	d818      	bhi.n	8002e9a <_scanf_float+0x12e>
 8002e68:	2b54      	cmp	r3, #84	; 0x54
 8002e6a:	d066      	beq.n	8002f3a <_scanf_float+0x1ce>
 8002e6c:	d811      	bhi.n	8002e92 <_scanf_float+0x126>
 8002e6e:	2b4e      	cmp	r3, #78	; 0x4e
 8002e70:	d1b5      	bne.n	8002dde <_scanf_float+0x72>
 8002e72:	2a00      	cmp	r2, #0
 8002e74:	d146      	bne.n	8002f04 <_scanf_float+0x198>
 8002e76:	f1b9 0f00 	cmp.w	r9, #0
 8002e7a:	d145      	bne.n	8002f08 <_scanf_float+0x19c>
 8002e7c:	6821      	ldr	r1, [r4, #0]
 8002e7e:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 8002e82:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8002e86:	d13f      	bne.n	8002f08 <_scanf_float+0x19c>
 8002e88:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002e8c:	6021      	str	r1, [r4, #0]
 8002e8e:	2201      	movs	r2, #1
 8002e90:	e02e      	b.n	8002ef0 <_scanf_float+0x184>
 8002e92:	2b59      	cmp	r3, #89	; 0x59
 8002e94:	d01e      	beq.n	8002ed4 <_scanf_float+0x168>
 8002e96:	2b61      	cmp	r3, #97	; 0x61
 8002e98:	e7de      	b.n	8002e58 <_scanf_float+0xec>
 8002e9a:	2b6e      	cmp	r3, #110	; 0x6e
 8002e9c:	d0e9      	beq.n	8002e72 <_scanf_float+0x106>
 8002e9e:	d815      	bhi.n	8002ecc <_scanf_float+0x160>
 8002ea0:	2b66      	cmp	r3, #102	; 0x66
 8002ea2:	d043      	beq.n	8002f2c <_scanf_float+0x1c0>
 8002ea4:	2b69      	cmp	r3, #105	; 0x69
 8002ea6:	d19a      	bne.n	8002dde <_scanf_float+0x72>
 8002ea8:	f1bb 0f00 	cmp.w	fp, #0
 8002eac:	d138      	bne.n	8002f20 <_scanf_float+0x1b4>
 8002eae:	f1b9 0f00 	cmp.w	r9, #0
 8002eb2:	d197      	bne.n	8002de4 <_scanf_float+0x78>
 8002eb4:	6821      	ldr	r1, [r4, #0]
 8002eb6:	f401 60e0 	and.w	r0, r1, #1792	; 0x700
 8002eba:	f5b0 6fe0 	cmp.w	r0, #1792	; 0x700
 8002ebe:	d195      	bne.n	8002dec <_scanf_float+0x80>
 8002ec0:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002ec4:	6021      	str	r1, [r4, #0]
 8002ec6:	f04f 0b01 	mov.w	fp, #1
 8002eca:	e011      	b.n	8002ef0 <_scanf_float+0x184>
 8002ecc:	2b74      	cmp	r3, #116	; 0x74
 8002ece:	d034      	beq.n	8002f3a <_scanf_float+0x1ce>
 8002ed0:	2b79      	cmp	r3, #121	; 0x79
 8002ed2:	d184      	bne.n	8002dde <_scanf_float+0x72>
 8002ed4:	f1bb 0f07 	cmp.w	fp, #7
 8002ed8:	d181      	bne.n	8002dde <_scanf_float+0x72>
 8002eda:	f04f 0b08 	mov.w	fp, #8
 8002ede:	e007      	b.n	8002ef0 <_scanf_float+0x184>
 8002ee0:	eb12 0f0b 	cmn.w	r2, fp
 8002ee4:	f47f af7b 	bne.w	8002dde <_scanf_float+0x72>
 8002ee8:	6821      	ldr	r1, [r4, #0]
 8002eea:	f421 71c0 	bic.w	r1, r1, #384	; 0x180
 8002eee:	6021      	str	r1, [r4, #0]
 8002ef0:	702b      	strb	r3, [r5, #0]
 8002ef2:	3501      	adds	r5, #1
 8002ef4:	e79a      	b.n	8002e2c <_scanf_float+0xc0>
 8002ef6:	6821      	ldr	r1, [r4, #0]
 8002ef8:	0608      	lsls	r0, r1, #24
 8002efa:	f57f af70 	bpl.w	8002dde <_scanf_float+0x72>
 8002efe:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8002f02:	e7f4      	b.n	8002eee <_scanf_float+0x182>
 8002f04:	2a02      	cmp	r2, #2
 8002f06:	d047      	beq.n	8002f98 <_scanf_float+0x22c>
 8002f08:	f1bb 0f01 	cmp.w	fp, #1
 8002f0c:	d003      	beq.n	8002f16 <_scanf_float+0x1aa>
 8002f0e:	f1bb 0f04 	cmp.w	fp, #4
 8002f12:	f47f af64 	bne.w	8002dde <_scanf_float+0x72>
 8002f16:	f10b 0b01 	add.w	fp, fp, #1
 8002f1a:	fa5f fb8b 	uxtb.w	fp, fp
 8002f1e:	e7e7      	b.n	8002ef0 <_scanf_float+0x184>
 8002f20:	f1bb 0f03 	cmp.w	fp, #3
 8002f24:	d0f7      	beq.n	8002f16 <_scanf_float+0x1aa>
 8002f26:	f1bb 0f05 	cmp.w	fp, #5
 8002f2a:	e7f2      	b.n	8002f12 <_scanf_float+0x1a6>
 8002f2c:	f1bb 0f02 	cmp.w	fp, #2
 8002f30:	f47f af55 	bne.w	8002dde <_scanf_float+0x72>
 8002f34:	f04f 0b03 	mov.w	fp, #3
 8002f38:	e7da      	b.n	8002ef0 <_scanf_float+0x184>
 8002f3a:	f1bb 0f06 	cmp.w	fp, #6
 8002f3e:	f47f af4e 	bne.w	8002dde <_scanf_float+0x72>
 8002f42:	f04f 0b07 	mov.w	fp, #7
 8002f46:	e7d3      	b.n	8002ef0 <_scanf_float+0x184>
 8002f48:	6821      	ldr	r1, [r4, #0]
 8002f4a:	0588      	lsls	r0, r1, #22
 8002f4c:	f57f af47 	bpl.w	8002dde <_scanf_float+0x72>
 8002f50:	f421 7120 	bic.w	r1, r1, #640	; 0x280
 8002f54:	6021      	str	r1, [r4, #0]
 8002f56:	f8cd 9008 	str.w	r9, [sp, #8]
 8002f5a:	e7c9      	b.n	8002ef0 <_scanf_float+0x184>
 8002f5c:	6821      	ldr	r1, [r4, #0]
 8002f5e:	f401 60a0 	and.w	r0, r1, #1280	; 0x500
 8002f62:	f5b0 6f80 	cmp.w	r0, #1024	; 0x400
 8002f66:	d006      	beq.n	8002f76 <_scanf_float+0x20a>
 8002f68:	0548      	lsls	r0, r1, #21
 8002f6a:	f57f af38 	bpl.w	8002dde <_scanf_float+0x72>
 8002f6e:	f1b9 0f00 	cmp.w	r9, #0
 8002f72:	f43f af3b 	beq.w	8002dec <_scanf_float+0x80>
 8002f76:	0588      	lsls	r0, r1, #22
 8002f78:	bf58      	it	pl
 8002f7a:	9802      	ldrpl	r0, [sp, #8]
 8002f7c:	f421 61f0 	bic.w	r1, r1, #1920	; 0x780
 8002f80:	bf58      	it	pl
 8002f82:	eba9 0000 	subpl.w	r0, r9, r0
 8002f86:	f441 71c0 	orr.w	r1, r1, #384	; 0x180
 8002f8a:	bf58      	it	pl
 8002f8c:	e9cd 0503 	strdpl	r0, r5, [sp, #12]
 8002f90:	6021      	str	r1, [r4, #0]
 8002f92:	f04f 0900 	mov.w	r9, #0
 8002f96:	e7ab      	b.n	8002ef0 <_scanf_float+0x184>
 8002f98:	2203      	movs	r2, #3
 8002f9a:	e7a9      	b.n	8002ef0 <_scanf_float+0x184>
 8002f9c:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8002fa0:	4631      	mov	r1, r6
 8002fa2:	4638      	mov	r0, r7
 8002fa4:	9205      	str	r2, [sp, #20]
 8002fa6:	4798      	blx	r3
 8002fa8:	9a05      	ldr	r2, [sp, #20]
 8002faa:	2800      	cmp	r0, #0
 8002fac:	f43f af04 	beq.w	8002db8 <_scanf_float+0x4c>
 8002fb0:	e715      	b.n	8002dde <_scanf_float+0x72>
 8002fb2:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8002fb6:	4632      	mov	r2, r6
 8002fb8:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8002fbc:	4638      	mov	r0, r7
 8002fbe:	4798      	blx	r3
 8002fc0:	6923      	ldr	r3, [r4, #16]
 8002fc2:	3b01      	subs	r3, #1
 8002fc4:	6123      	str	r3, [r4, #16]
 8002fc6:	e715      	b.n	8002df4 <_scanf_float+0x88>
 8002fc8:	f10b 33ff 	add.w	r3, fp, #4294967295	; 0xffffffff
 8002fcc:	2b06      	cmp	r3, #6
 8002fce:	d80a      	bhi.n	8002fe6 <_scanf_float+0x27a>
 8002fd0:	f1bb 0f02 	cmp.w	fp, #2
 8002fd4:	d967      	bls.n	80030a6 <_scanf_float+0x33a>
 8002fd6:	f1ab 0b03 	sub.w	fp, fp, #3
 8002fda:	fa5f fb8b 	uxtb.w	fp, fp
 8002fde:	eba5 0b0b 	sub.w	fp, r5, fp
 8002fe2:	455d      	cmp	r5, fp
 8002fe4:	d14a      	bne.n	800307c <_scanf_float+0x310>
 8002fe6:	6823      	ldr	r3, [r4, #0]
 8002fe8:	05da      	lsls	r2, r3, #23
 8002fea:	d51f      	bpl.n	800302c <_scanf_float+0x2c0>
 8002fec:	055b      	lsls	r3, r3, #21
 8002fee:	d467      	bmi.n	80030c0 <_scanf_float+0x354>
 8002ff0:	f815 1c01 	ldrb.w	r1, [r5, #-1]
 8002ff4:	6923      	ldr	r3, [r4, #16]
 8002ff6:	2965      	cmp	r1, #101	; 0x65
 8002ff8:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
 8002ffc:	f105 3bff 	add.w	fp, r5, #4294967295	; 0xffffffff
 8003000:	6123      	str	r3, [r4, #16]
 8003002:	d00d      	beq.n	8003020 <_scanf_float+0x2b4>
 8003004:	2945      	cmp	r1, #69	; 0x45
 8003006:	d00b      	beq.n	8003020 <_scanf_float+0x2b4>
 8003008:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 800300c:	4632      	mov	r2, r6
 800300e:	4638      	mov	r0, r7
 8003010:	4798      	blx	r3
 8003012:	6923      	ldr	r3, [r4, #16]
 8003014:	f815 1c02 	ldrb.w	r1, [r5, #-2]
 8003018:	3b01      	subs	r3, #1
 800301a:	f1a5 0b02 	sub.w	fp, r5, #2
 800301e:	6123      	str	r3, [r4, #16]
 8003020:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003024:	4632      	mov	r2, r6
 8003026:	4638      	mov	r0, r7
 8003028:	4798      	blx	r3
 800302a:	465d      	mov	r5, fp
 800302c:	6826      	ldr	r6, [r4, #0]
 800302e:	f016 0610 	ands.w	r6, r6, #16
 8003032:	d176      	bne.n	8003122 <_scanf_float+0x3b6>
 8003034:	702e      	strb	r6, [r5, #0]
 8003036:	6823      	ldr	r3, [r4, #0]
 8003038:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 800303c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8003040:	d141      	bne.n	80030c6 <_scanf_float+0x35a>
 8003042:	9b02      	ldr	r3, [sp, #8]
 8003044:	eba9 0303 	sub.w	r3, r9, r3
 8003048:	425a      	negs	r2, r3
 800304a:	2b00      	cmp	r3, #0
 800304c:	d148      	bne.n	80030e0 <_scanf_float+0x374>
 800304e:	4641      	mov	r1, r8
 8003050:	2200      	movs	r2, #0
 8003052:	4638      	mov	r0, r7
 8003054:	f000 ff50 	bl	8003ef8 <_strtod_r>
 8003058:	6825      	ldr	r5, [r4, #0]
 800305a:	4680      	mov	r8, r0
 800305c:	f015 0f02 	tst.w	r5, #2
 8003060:	4689      	mov	r9, r1
 8003062:	f8da 3000 	ldr.w	r3, [sl]
 8003066:	d046      	beq.n	80030f6 <_scanf_float+0x38a>
 8003068:	1d1a      	adds	r2, r3, #4
 800306a:	f8ca 2000 	str.w	r2, [sl]
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	e9c3 8900 	strd	r8, r9, [r3]
 8003074:	68e3      	ldr	r3, [r4, #12]
 8003076:	3301      	adds	r3, #1
 8003078:	60e3      	str	r3, [r4, #12]
 800307a:	e6bf      	b.n	8002dfc <_scanf_float+0x90>
 800307c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003080:	4632      	mov	r2, r6
 8003082:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 8003086:	4638      	mov	r0, r7
 8003088:	4798      	blx	r3
 800308a:	6923      	ldr	r3, [r4, #16]
 800308c:	3b01      	subs	r3, #1
 800308e:	6123      	str	r3, [r4, #16]
 8003090:	e7a7      	b.n	8002fe2 <_scanf_float+0x276>
 8003092:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8003096:	4632      	mov	r2, r6
 8003098:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 800309c:	4638      	mov	r0, r7
 800309e:	4798      	blx	r3
 80030a0:	6923      	ldr	r3, [r4, #16]
 80030a2:	3b01      	subs	r3, #1
 80030a4:	6123      	str	r3, [r4, #16]
 80030a6:	4545      	cmp	r5, r8
 80030a8:	d8f3      	bhi.n	8003092 <_scanf_float+0x326>
 80030aa:	e6a6      	b.n	8002dfa <_scanf_float+0x8e>
 80030ac:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 80030b0:	4632      	mov	r2, r6
 80030b2:	f815 1d01 	ldrb.w	r1, [r5, #-1]!
 80030b6:	4638      	mov	r0, r7
 80030b8:	4798      	blx	r3
 80030ba:	6923      	ldr	r3, [r4, #16]
 80030bc:	3b01      	subs	r3, #1
 80030be:	6123      	str	r3, [r4, #16]
 80030c0:	4545      	cmp	r5, r8
 80030c2:	d8f3      	bhi.n	80030ac <_scanf_float+0x340>
 80030c4:	e699      	b.n	8002dfa <_scanf_float+0x8e>
 80030c6:	9b03      	ldr	r3, [sp, #12]
 80030c8:	2b00      	cmp	r3, #0
 80030ca:	d0c0      	beq.n	800304e <_scanf_float+0x2e2>
 80030cc:	9904      	ldr	r1, [sp, #16]
 80030ce:	230a      	movs	r3, #10
 80030d0:	4632      	mov	r2, r6
 80030d2:	3101      	adds	r1, #1
 80030d4:	4638      	mov	r0, r7
 80030d6:	f000 ffef 	bl	80040b8 <_strtol_r>
 80030da:	9b03      	ldr	r3, [sp, #12]
 80030dc:	9d04      	ldr	r5, [sp, #16]
 80030de:	1ac2      	subs	r2, r0, r3
 80030e0:	f204 136f 	addw	r3, r4, #367	; 0x16f
 80030e4:	429d      	cmp	r5, r3
 80030e6:	bf28      	it	cs
 80030e8:	f504 75b7 	addcs.w	r5, r4, #366	; 0x16e
 80030ec:	490e      	ldr	r1, [pc, #56]	; (8003128 <_scanf_float+0x3bc>)
 80030ee:	4628      	mov	r0, r5
 80030f0:	f000 f89c 	bl	800322c <siprintf>
 80030f4:	e7ab      	b.n	800304e <_scanf_float+0x2e2>
 80030f6:	1d1f      	adds	r7, r3, #4
 80030f8:	f015 0504 	ands.w	r5, r5, #4
 80030fc:	f8ca 7000 	str.w	r7, [sl]
 8003100:	d1b5      	bne.n	800306e <_scanf_float+0x302>
 8003102:	681f      	ldr	r7, [r3, #0]
 8003104:	4602      	mov	r2, r0
 8003106:	460b      	mov	r3, r1
 8003108:	f7fd fc80 	bl	8000a0c <__aeabi_dcmpun>
 800310c:	b120      	cbz	r0, 8003118 <_scanf_float+0x3ac>
 800310e:	4628      	mov	r0, r5
 8003110:	f000 f888 	bl	8003224 <nanf>
 8003114:	6038      	str	r0, [r7, #0]
 8003116:	e7ad      	b.n	8003074 <_scanf_float+0x308>
 8003118:	4640      	mov	r0, r8
 800311a:	4649      	mov	r1, r9
 800311c:	f7fd fcd4 	bl	8000ac8 <__aeabi_d2f>
 8003120:	e7f8      	b.n	8003114 <_scanf_float+0x3a8>
 8003122:	2600      	movs	r6, #0
 8003124:	e66a      	b.n	8002dfc <_scanf_float+0x90>
 8003126:	bf00      	nop
 8003128:	08006f48 	.word	0x08006f48

0800312c <iprintf>:
 800312c:	b40f      	push	{r0, r1, r2, r3}
 800312e:	4b0a      	ldr	r3, [pc, #40]	; (8003158 <iprintf+0x2c>)
 8003130:	b513      	push	{r0, r1, r4, lr}
 8003132:	681c      	ldr	r4, [r3, #0]
 8003134:	b124      	cbz	r4, 8003140 <iprintf+0x14>
 8003136:	69a3      	ldr	r3, [r4, #24]
 8003138:	b913      	cbnz	r3, 8003140 <iprintf+0x14>
 800313a:	4620      	mov	r0, r4
 800313c:	f001 ffc0 	bl	80050c0 <__sinit>
 8003140:	ab05      	add	r3, sp, #20
 8003142:	9a04      	ldr	r2, [sp, #16]
 8003144:	68a1      	ldr	r1, [r4, #8]
 8003146:	4620      	mov	r0, r4
 8003148:	9301      	str	r3, [sp, #4]
 800314a:	f003 fa3d 	bl	80065c8 <_vfiprintf_r>
 800314e:	b002      	add	sp, #8
 8003150:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8003154:	b004      	add	sp, #16
 8003156:	4770      	bx	lr
 8003158:	20000014 	.word	0x20000014

0800315c <_puts_r>:
 800315c:	b570      	push	{r4, r5, r6, lr}
 800315e:	460e      	mov	r6, r1
 8003160:	4605      	mov	r5, r0
 8003162:	b118      	cbz	r0, 800316c <_puts_r+0x10>
 8003164:	6983      	ldr	r3, [r0, #24]
 8003166:	b90b      	cbnz	r3, 800316c <_puts_r+0x10>
 8003168:	f001 ffaa 	bl	80050c0 <__sinit>
 800316c:	69ab      	ldr	r3, [r5, #24]
 800316e:	68ac      	ldr	r4, [r5, #8]
 8003170:	b913      	cbnz	r3, 8003178 <_puts_r+0x1c>
 8003172:	4628      	mov	r0, r5
 8003174:	f001 ffa4 	bl	80050c0 <__sinit>
 8003178:	4b23      	ldr	r3, [pc, #140]	; (8003208 <_puts_r+0xac>)
 800317a:	429c      	cmp	r4, r3
 800317c:	d117      	bne.n	80031ae <_puts_r+0x52>
 800317e:	686c      	ldr	r4, [r5, #4]
 8003180:	89a3      	ldrh	r3, [r4, #12]
 8003182:	071b      	lsls	r3, r3, #28
 8003184:	d51d      	bpl.n	80031c2 <_puts_r+0x66>
 8003186:	6923      	ldr	r3, [r4, #16]
 8003188:	b1db      	cbz	r3, 80031c2 <_puts_r+0x66>
 800318a:	3e01      	subs	r6, #1
 800318c:	68a3      	ldr	r3, [r4, #8]
 800318e:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8003192:	3b01      	subs	r3, #1
 8003194:	60a3      	str	r3, [r4, #8]
 8003196:	b9e9      	cbnz	r1, 80031d4 <_puts_r+0x78>
 8003198:	2b00      	cmp	r3, #0
 800319a:	da2e      	bge.n	80031fa <_puts_r+0x9e>
 800319c:	4622      	mov	r2, r4
 800319e:	210a      	movs	r1, #10
 80031a0:	4628      	mov	r0, r5
 80031a2:	f000 ff9b 	bl	80040dc <__swbuf_r>
 80031a6:	3001      	adds	r0, #1
 80031a8:	d011      	beq.n	80031ce <_puts_r+0x72>
 80031aa:	200a      	movs	r0, #10
 80031ac:	e011      	b.n	80031d2 <_puts_r+0x76>
 80031ae:	4b17      	ldr	r3, [pc, #92]	; (800320c <_puts_r+0xb0>)
 80031b0:	429c      	cmp	r4, r3
 80031b2:	d101      	bne.n	80031b8 <_puts_r+0x5c>
 80031b4:	68ac      	ldr	r4, [r5, #8]
 80031b6:	e7e3      	b.n	8003180 <_puts_r+0x24>
 80031b8:	4b15      	ldr	r3, [pc, #84]	; (8003210 <_puts_r+0xb4>)
 80031ba:	429c      	cmp	r4, r3
 80031bc:	bf08      	it	eq
 80031be:	68ec      	ldreq	r4, [r5, #12]
 80031c0:	e7de      	b.n	8003180 <_puts_r+0x24>
 80031c2:	4621      	mov	r1, r4
 80031c4:	4628      	mov	r0, r5
 80031c6:	f000 ffdb 	bl	8004180 <__swsetup_r>
 80031ca:	2800      	cmp	r0, #0
 80031cc:	d0dd      	beq.n	800318a <_puts_r+0x2e>
 80031ce:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80031d2:	bd70      	pop	{r4, r5, r6, pc}
 80031d4:	2b00      	cmp	r3, #0
 80031d6:	da04      	bge.n	80031e2 <_puts_r+0x86>
 80031d8:	69a2      	ldr	r2, [r4, #24]
 80031da:	429a      	cmp	r2, r3
 80031dc:	dc06      	bgt.n	80031ec <_puts_r+0x90>
 80031de:	290a      	cmp	r1, #10
 80031e0:	d004      	beq.n	80031ec <_puts_r+0x90>
 80031e2:	6823      	ldr	r3, [r4, #0]
 80031e4:	1c5a      	adds	r2, r3, #1
 80031e6:	6022      	str	r2, [r4, #0]
 80031e8:	7019      	strb	r1, [r3, #0]
 80031ea:	e7cf      	b.n	800318c <_puts_r+0x30>
 80031ec:	4622      	mov	r2, r4
 80031ee:	4628      	mov	r0, r5
 80031f0:	f000 ff74 	bl	80040dc <__swbuf_r>
 80031f4:	3001      	adds	r0, #1
 80031f6:	d1c9      	bne.n	800318c <_puts_r+0x30>
 80031f8:	e7e9      	b.n	80031ce <_puts_r+0x72>
 80031fa:	200a      	movs	r0, #10
 80031fc:	6823      	ldr	r3, [r4, #0]
 80031fe:	1c5a      	adds	r2, r3, #1
 8003200:	6022      	str	r2, [r4, #0]
 8003202:	7018      	strb	r0, [r3, #0]
 8003204:	e7e5      	b.n	80031d2 <_puts_r+0x76>
 8003206:	bf00      	nop
 8003208:	08006fd0 	.word	0x08006fd0
 800320c:	08006ff0 	.word	0x08006ff0
 8003210:	08006fb0 	.word	0x08006fb0

08003214 <puts>:
 8003214:	4b02      	ldr	r3, [pc, #8]	; (8003220 <puts+0xc>)
 8003216:	4601      	mov	r1, r0
 8003218:	6818      	ldr	r0, [r3, #0]
 800321a:	f7ff bf9f 	b.w	800315c <_puts_r>
 800321e:	bf00      	nop
 8003220:	20000014 	.word	0x20000014

08003224 <nanf>:
 8003224:	4800      	ldr	r0, [pc, #0]	; (8003228 <nanf+0x4>)
 8003226:	4770      	bx	lr
 8003228:	7fc00000 	.word	0x7fc00000

0800322c <siprintf>:
 800322c:	b40e      	push	{r1, r2, r3}
 800322e:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003232:	b500      	push	{lr}
 8003234:	b09c      	sub	sp, #112	; 0x70
 8003236:	ab1d      	add	r3, sp, #116	; 0x74
 8003238:	9002      	str	r0, [sp, #8]
 800323a:	9006      	str	r0, [sp, #24]
 800323c:	9107      	str	r1, [sp, #28]
 800323e:	9104      	str	r1, [sp, #16]
 8003240:	4808      	ldr	r0, [pc, #32]	; (8003264 <siprintf+0x38>)
 8003242:	4909      	ldr	r1, [pc, #36]	; (8003268 <siprintf+0x3c>)
 8003244:	f853 2b04 	ldr.w	r2, [r3], #4
 8003248:	9105      	str	r1, [sp, #20]
 800324a:	6800      	ldr	r0, [r0, #0]
 800324c:	a902      	add	r1, sp, #8
 800324e:	9301      	str	r3, [sp, #4]
 8003250:	f003 f89a 	bl	8006388 <_svfiprintf_r>
 8003254:	2200      	movs	r2, #0
 8003256:	9b02      	ldr	r3, [sp, #8]
 8003258:	701a      	strb	r2, [r3, #0]
 800325a:	b01c      	add	sp, #112	; 0x70
 800325c:	f85d eb04 	ldr.w	lr, [sp], #4
 8003260:	b003      	add	sp, #12
 8003262:	4770      	bx	lr
 8003264:	20000014 	.word	0x20000014
 8003268:	ffff0208 	.word	0xffff0208

0800326c <strcpy>:
 800326c:	4603      	mov	r3, r0
 800326e:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003272:	f803 2b01 	strb.w	r2, [r3], #1
 8003276:	2a00      	cmp	r2, #0
 8003278:	d1f9      	bne.n	800326e <strcpy+0x2>
 800327a:	4770      	bx	lr

0800327c <strstr>:
 800327c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800327e:	7803      	ldrb	r3, [r0, #0]
 8003280:	b17b      	cbz	r3, 80032a2 <strstr+0x26>
 8003282:	4604      	mov	r4, r0
 8003284:	7823      	ldrb	r3, [r4, #0]
 8003286:	4620      	mov	r0, r4
 8003288:	1c66      	adds	r6, r4, #1
 800328a:	b17b      	cbz	r3, 80032ac <strstr+0x30>
 800328c:	1e4a      	subs	r2, r1, #1
 800328e:	1e63      	subs	r3, r4, #1
 8003290:	f812 5f01 	ldrb.w	r5, [r2, #1]!
 8003294:	b14d      	cbz	r5, 80032aa <strstr+0x2e>
 8003296:	f813 7f01 	ldrb.w	r7, [r3, #1]!
 800329a:	4634      	mov	r4, r6
 800329c:	42af      	cmp	r7, r5
 800329e:	d0f7      	beq.n	8003290 <strstr+0x14>
 80032a0:	e7f0      	b.n	8003284 <strstr+0x8>
 80032a2:	780b      	ldrb	r3, [r1, #0]
 80032a4:	2b00      	cmp	r3, #0
 80032a6:	bf18      	it	ne
 80032a8:	2000      	movne	r0, #0
 80032aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80032ac:	4618      	mov	r0, r3
 80032ae:	e7fc      	b.n	80032aa <strstr+0x2e>

080032b0 <sulp>:
 80032b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80032b4:	460f      	mov	r7, r1
 80032b6:	4690      	mov	r8, r2
 80032b8:	f002 fe2a 	bl	8005f10 <__ulp>
 80032bc:	4604      	mov	r4, r0
 80032be:	460d      	mov	r5, r1
 80032c0:	f1b8 0f00 	cmp.w	r8, #0
 80032c4:	d011      	beq.n	80032ea <sulp+0x3a>
 80032c6:	f3c7 530a 	ubfx	r3, r7, #20, #11
 80032ca:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80032ce:	2b00      	cmp	r3, #0
 80032d0:	dd0b      	ble.n	80032ea <sulp+0x3a>
 80032d2:	2400      	movs	r4, #0
 80032d4:	051b      	lsls	r3, r3, #20
 80032d6:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80032da:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80032de:	4622      	mov	r2, r4
 80032e0:	462b      	mov	r3, r5
 80032e2:	f7fd f8f9 	bl	80004d8 <__aeabi_dmul>
 80032e6:	4604      	mov	r4, r0
 80032e8:	460d      	mov	r5, r1
 80032ea:	4620      	mov	r0, r4
 80032ec:	4629      	mov	r1, r5
 80032ee:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80032f2:	0000      	movs	r0, r0
 80032f4:	0000      	movs	r0, r0
	...

080032f8 <_strtod_l>:
 80032f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80032fc:	461f      	mov	r7, r3
 80032fe:	2300      	movs	r3, #0
 8003300:	b0a1      	sub	sp, #132	; 0x84
 8003302:	4683      	mov	fp, r0
 8003304:	4638      	mov	r0, r7
 8003306:	460e      	mov	r6, r1
 8003308:	9217      	str	r2, [sp, #92]	; 0x5c
 800330a:	931c      	str	r3, [sp, #112]	; 0x70
 800330c:	f002 fa8d 	bl	800582a <__localeconv_l>
 8003310:	4680      	mov	r8, r0
 8003312:	6800      	ldr	r0, [r0, #0]
 8003314:	f7fc ff1c 	bl	8000150 <strlen>
 8003318:	f04f 0900 	mov.w	r9, #0
 800331c:	4604      	mov	r4, r0
 800331e:	f04f 0a00 	mov.w	sl, #0
 8003322:	961b      	str	r6, [sp, #108]	; 0x6c
 8003324:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003326:	781a      	ldrb	r2, [r3, #0]
 8003328:	2a0d      	cmp	r2, #13
 800332a:	d832      	bhi.n	8003392 <_strtod_l+0x9a>
 800332c:	2a09      	cmp	r2, #9
 800332e:	d236      	bcs.n	800339e <_strtod_l+0xa6>
 8003330:	2a00      	cmp	r2, #0
 8003332:	d03e      	beq.n	80033b2 <_strtod_l+0xba>
 8003334:	2300      	movs	r3, #0
 8003336:	930d      	str	r3, [sp, #52]	; 0x34
 8003338:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 800333a:	782b      	ldrb	r3, [r5, #0]
 800333c:	2b30      	cmp	r3, #48	; 0x30
 800333e:	f040 80ac 	bne.w	800349a <_strtod_l+0x1a2>
 8003342:	786b      	ldrb	r3, [r5, #1]
 8003344:	2b58      	cmp	r3, #88	; 0x58
 8003346:	d001      	beq.n	800334c <_strtod_l+0x54>
 8003348:	2b78      	cmp	r3, #120	; 0x78
 800334a:	d167      	bne.n	800341c <_strtod_l+0x124>
 800334c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800334e:	9702      	str	r7, [sp, #8]
 8003350:	9301      	str	r3, [sp, #4]
 8003352:	ab1c      	add	r3, sp, #112	; 0x70
 8003354:	9300      	str	r3, [sp, #0]
 8003356:	4a89      	ldr	r2, [pc, #548]	; (800357c <_strtod_l+0x284>)
 8003358:	ab1d      	add	r3, sp, #116	; 0x74
 800335a:	a91b      	add	r1, sp, #108	; 0x6c
 800335c:	4658      	mov	r0, fp
 800335e:	f001 ff89 	bl	8005274 <__gethex>
 8003362:	f010 0407 	ands.w	r4, r0, #7
 8003366:	4606      	mov	r6, r0
 8003368:	d005      	beq.n	8003376 <_strtod_l+0x7e>
 800336a:	2c06      	cmp	r4, #6
 800336c:	d12b      	bne.n	80033c6 <_strtod_l+0xce>
 800336e:	2300      	movs	r3, #0
 8003370:	3501      	adds	r5, #1
 8003372:	951b      	str	r5, [sp, #108]	; 0x6c
 8003374:	930d      	str	r3, [sp, #52]	; 0x34
 8003376:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8003378:	2b00      	cmp	r3, #0
 800337a:	f040 85a6 	bne.w	8003eca <_strtod_l+0xbd2>
 800337e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003380:	b1e3      	cbz	r3, 80033bc <_strtod_l+0xc4>
 8003382:	464a      	mov	r2, r9
 8003384:	f10a 4300 	add.w	r3, sl, #2147483648	; 0x80000000
 8003388:	4610      	mov	r0, r2
 800338a:	4619      	mov	r1, r3
 800338c:	b021      	add	sp, #132	; 0x84
 800338e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003392:	2a2b      	cmp	r2, #43	; 0x2b
 8003394:	d015      	beq.n	80033c2 <_strtod_l+0xca>
 8003396:	2a2d      	cmp	r2, #45	; 0x2d
 8003398:	d004      	beq.n	80033a4 <_strtod_l+0xac>
 800339a:	2a20      	cmp	r2, #32
 800339c:	d1ca      	bne.n	8003334 <_strtod_l+0x3c>
 800339e:	3301      	adds	r3, #1
 80033a0:	931b      	str	r3, [sp, #108]	; 0x6c
 80033a2:	e7bf      	b.n	8003324 <_strtod_l+0x2c>
 80033a4:	2201      	movs	r2, #1
 80033a6:	920d      	str	r2, [sp, #52]	; 0x34
 80033a8:	1c5a      	adds	r2, r3, #1
 80033aa:	921b      	str	r2, [sp, #108]	; 0x6c
 80033ac:	785b      	ldrb	r3, [r3, #1]
 80033ae:	2b00      	cmp	r3, #0
 80033b0:	d1c2      	bne.n	8003338 <_strtod_l+0x40>
 80033b2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80033b4:	961b      	str	r6, [sp, #108]	; 0x6c
 80033b6:	2b00      	cmp	r3, #0
 80033b8:	f040 8585 	bne.w	8003ec6 <_strtod_l+0xbce>
 80033bc:	464a      	mov	r2, r9
 80033be:	4653      	mov	r3, sl
 80033c0:	e7e2      	b.n	8003388 <_strtod_l+0x90>
 80033c2:	2200      	movs	r2, #0
 80033c4:	e7ef      	b.n	80033a6 <_strtod_l+0xae>
 80033c6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80033c8:	b13a      	cbz	r2, 80033da <_strtod_l+0xe2>
 80033ca:	2135      	movs	r1, #53	; 0x35
 80033cc:	a81e      	add	r0, sp, #120	; 0x78
 80033ce:	f002 fe92 	bl	80060f6 <__copybits>
 80033d2:	991c      	ldr	r1, [sp, #112]	; 0x70
 80033d4:	4658      	mov	r0, fp
 80033d6:	f002 fb04 	bl	80059e2 <_Bfree>
 80033da:	3c01      	subs	r4, #1
 80033dc:	2c04      	cmp	r4, #4
 80033de:	d806      	bhi.n	80033ee <_strtod_l+0xf6>
 80033e0:	e8df f004 	tbb	[pc, r4]
 80033e4:	1714030a 	.word	0x1714030a
 80033e8:	0a          	.byte	0x0a
 80033e9:	00          	.byte	0x00
 80033ea:	e9dd 9a1e 	ldrd	r9, sl, [sp, #120]	; 0x78
 80033ee:	0731      	lsls	r1, r6, #28
 80033f0:	d5c1      	bpl.n	8003376 <_strtod_l+0x7e>
 80033f2:	f04a 4a00 	orr.w	sl, sl, #2147483648	; 0x80000000
 80033f6:	e7be      	b.n	8003376 <_strtod_l+0x7e>
 80033f8:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80033fa:	e9dd 931e 	ldrd	r9, r3, [sp, #120]	; 0x78
 80033fe:	f202 4233 	addw	r2, r2, #1075	; 0x433
 8003402:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 8003406:	ea43 5a02 	orr.w	sl, r3, r2, lsl #20
 800340a:	e7f0      	b.n	80033ee <_strtod_l+0xf6>
 800340c:	f8df a170 	ldr.w	sl, [pc, #368]	; 8003580 <_strtod_l+0x288>
 8003410:	e7ed      	b.n	80033ee <_strtod_l+0xf6>
 8003412:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8003416:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 800341a:	e7e8      	b.n	80033ee <_strtod_l+0xf6>
 800341c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800341e:	1c5a      	adds	r2, r3, #1
 8003420:	921b      	str	r2, [sp, #108]	; 0x6c
 8003422:	785b      	ldrb	r3, [r3, #1]
 8003424:	2b30      	cmp	r3, #48	; 0x30
 8003426:	d0f9      	beq.n	800341c <_strtod_l+0x124>
 8003428:	2b00      	cmp	r3, #0
 800342a:	d0a4      	beq.n	8003376 <_strtod_l+0x7e>
 800342c:	2301      	movs	r3, #1
 800342e:	2500      	movs	r5, #0
 8003430:	220a      	movs	r2, #10
 8003432:	9307      	str	r3, [sp, #28]
 8003434:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003436:	9506      	str	r5, [sp, #24]
 8003438:	9308      	str	r3, [sp, #32]
 800343a:	9504      	str	r5, [sp, #16]
 800343c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 800343e:	7807      	ldrb	r7, [r0, #0]
 8003440:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 8003444:	b2d9      	uxtb	r1, r3
 8003446:	2909      	cmp	r1, #9
 8003448:	d929      	bls.n	800349e <_strtod_l+0x1a6>
 800344a:	4622      	mov	r2, r4
 800344c:	f8d8 1000 	ldr.w	r1, [r8]
 8003450:	f003 fa23 	bl	800689a <strncmp>
 8003454:	2800      	cmp	r0, #0
 8003456:	d031      	beq.n	80034bc <_strtod_l+0x1c4>
 8003458:	2000      	movs	r0, #0
 800345a:	463b      	mov	r3, r7
 800345c:	4602      	mov	r2, r0
 800345e:	9c04      	ldr	r4, [sp, #16]
 8003460:	9005      	str	r0, [sp, #20]
 8003462:	2b65      	cmp	r3, #101	; 0x65
 8003464:	d001      	beq.n	800346a <_strtod_l+0x172>
 8003466:	2b45      	cmp	r3, #69	; 0x45
 8003468:	d114      	bne.n	8003494 <_strtod_l+0x19c>
 800346a:	b924      	cbnz	r4, 8003476 <_strtod_l+0x17e>
 800346c:	b910      	cbnz	r0, 8003474 <_strtod_l+0x17c>
 800346e:	9b07      	ldr	r3, [sp, #28]
 8003470:	2b00      	cmp	r3, #0
 8003472:	d09e      	beq.n	80033b2 <_strtod_l+0xba>
 8003474:	2400      	movs	r4, #0
 8003476:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8003478:	1c73      	adds	r3, r6, #1
 800347a:	931b      	str	r3, [sp, #108]	; 0x6c
 800347c:	7873      	ldrb	r3, [r6, #1]
 800347e:	2b2b      	cmp	r3, #43	; 0x2b
 8003480:	d078      	beq.n	8003574 <_strtod_l+0x27c>
 8003482:	2b2d      	cmp	r3, #45	; 0x2d
 8003484:	d070      	beq.n	8003568 <_strtod_l+0x270>
 8003486:	f04f 0c00 	mov.w	ip, #0
 800348a:	f1a3 0730 	sub.w	r7, r3, #48	; 0x30
 800348e:	2f09      	cmp	r7, #9
 8003490:	d97c      	bls.n	800358c <_strtod_l+0x294>
 8003492:	961b      	str	r6, [sp, #108]	; 0x6c
 8003494:	f04f 0e00 	mov.w	lr, #0
 8003498:	e09a      	b.n	80035d0 <_strtod_l+0x2d8>
 800349a:	2300      	movs	r3, #0
 800349c:	e7c7      	b.n	800342e <_strtod_l+0x136>
 800349e:	9904      	ldr	r1, [sp, #16]
 80034a0:	3001      	adds	r0, #1
 80034a2:	2908      	cmp	r1, #8
 80034a4:	bfd7      	itett	le
 80034a6:	9906      	ldrle	r1, [sp, #24]
 80034a8:	fb02 3505 	mlagt	r5, r2, r5, r3
 80034ac:	fb02 3301 	mlale	r3, r2, r1, r3
 80034b0:	9306      	strle	r3, [sp, #24]
 80034b2:	9b04      	ldr	r3, [sp, #16]
 80034b4:	901b      	str	r0, [sp, #108]	; 0x6c
 80034b6:	3301      	adds	r3, #1
 80034b8:	9304      	str	r3, [sp, #16]
 80034ba:	e7bf      	b.n	800343c <_strtod_l+0x144>
 80034bc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80034be:	191a      	adds	r2, r3, r4
 80034c0:	921b      	str	r2, [sp, #108]	; 0x6c
 80034c2:	9a04      	ldr	r2, [sp, #16]
 80034c4:	5d1b      	ldrb	r3, [r3, r4]
 80034c6:	2a00      	cmp	r2, #0
 80034c8:	d037      	beq.n	800353a <_strtod_l+0x242>
 80034ca:	4602      	mov	r2, r0
 80034cc:	9c04      	ldr	r4, [sp, #16]
 80034ce:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80034d2:	2909      	cmp	r1, #9
 80034d4:	d913      	bls.n	80034fe <_strtod_l+0x206>
 80034d6:	2101      	movs	r1, #1
 80034d8:	9105      	str	r1, [sp, #20]
 80034da:	e7c2      	b.n	8003462 <_strtod_l+0x16a>
 80034dc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80034de:	3001      	adds	r0, #1
 80034e0:	1c5a      	adds	r2, r3, #1
 80034e2:	921b      	str	r2, [sp, #108]	; 0x6c
 80034e4:	785b      	ldrb	r3, [r3, #1]
 80034e6:	2b30      	cmp	r3, #48	; 0x30
 80034e8:	d0f8      	beq.n	80034dc <_strtod_l+0x1e4>
 80034ea:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 80034ee:	2a08      	cmp	r2, #8
 80034f0:	f200 84f0 	bhi.w	8003ed4 <_strtod_l+0xbdc>
 80034f4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80034f6:	9208      	str	r2, [sp, #32]
 80034f8:	4602      	mov	r2, r0
 80034fa:	2000      	movs	r0, #0
 80034fc:	4604      	mov	r4, r0
 80034fe:	f1b3 0e30 	subs.w	lr, r3, #48	; 0x30
 8003502:	f100 0101 	add.w	r1, r0, #1
 8003506:	d012      	beq.n	800352e <_strtod_l+0x236>
 8003508:	440a      	add	r2, r1
 800350a:	270a      	movs	r7, #10
 800350c:	4621      	mov	r1, r4
 800350e:	eb00 0c04 	add.w	ip, r0, r4
 8003512:	458c      	cmp	ip, r1
 8003514:	d113      	bne.n	800353e <_strtod_l+0x246>
 8003516:	1821      	adds	r1, r4, r0
 8003518:	2908      	cmp	r1, #8
 800351a:	f104 0401 	add.w	r4, r4, #1
 800351e:	4404      	add	r4, r0
 8003520:	dc19      	bgt.n	8003556 <_strtod_l+0x25e>
 8003522:	210a      	movs	r1, #10
 8003524:	9b06      	ldr	r3, [sp, #24]
 8003526:	fb01 e303 	mla	r3, r1, r3, lr
 800352a:	9306      	str	r3, [sp, #24]
 800352c:	2100      	movs	r1, #0
 800352e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003530:	1c58      	adds	r0, r3, #1
 8003532:	901b      	str	r0, [sp, #108]	; 0x6c
 8003534:	785b      	ldrb	r3, [r3, #1]
 8003536:	4608      	mov	r0, r1
 8003538:	e7c9      	b.n	80034ce <_strtod_l+0x1d6>
 800353a:	9804      	ldr	r0, [sp, #16]
 800353c:	e7d3      	b.n	80034e6 <_strtod_l+0x1ee>
 800353e:	2908      	cmp	r1, #8
 8003540:	f101 0101 	add.w	r1, r1, #1
 8003544:	dc03      	bgt.n	800354e <_strtod_l+0x256>
 8003546:	9b06      	ldr	r3, [sp, #24]
 8003548:	437b      	muls	r3, r7
 800354a:	9306      	str	r3, [sp, #24]
 800354c:	e7e1      	b.n	8003512 <_strtod_l+0x21a>
 800354e:	2910      	cmp	r1, #16
 8003550:	bfd8      	it	le
 8003552:	437d      	mulle	r5, r7
 8003554:	e7dd      	b.n	8003512 <_strtod_l+0x21a>
 8003556:	2c10      	cmp	r4, #16
 8003558:	bfdc      	itt	le
 800355a:	210a      	movle	r1, #10
 800355c:	fb01 e505 	mlale	r5, r1, r5, lr
 8003560:	e7e4      	b.n	800352c <_strtod_l+0x234>
 8003562:	2301      	movs	r3, #1
 8003564:	9305      	str	r3, [sp, #20]
 8003566:	e781      	b.n	800346c <_strtod_l+0x174>
 8003568:	f04f 0c01 	mov.w	ip, #1
 800356c:	1cb3      	adds	r3, r6, #2
 800356e:	931b      	str	r3, [sp, #108]	; 0x6c
 8003570:	78b3      	ldrb	r3, [r6, #2]
 8003572:	e78a      	b.n	800348a <_strtod_l+0x192>
 8003574:	f04f 0c00 	mov.w	ip, #0
 8003578:	e7f8      	b.n	800356c <_strtod_l+0x274>
 800357a:	bf00      	nop
 800357c:	08006f50 	.word	0x08006f50
 8003580:	7ff00000 	.word	0x7ff00000
 8003584:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003586:	1c5f      	adds	r7, r3, #1
 8003588:	971b      	str	r7, [sp, #108]	; 0x6c
 800358a:	785b      	ldrb	r3, [r3, #1]
 800358c:	2b30      	cmp	r3, #48	; 0x30
 800358e:	d0f9      	beq.n	8003584 <_strtod_l+0x28c>
 8003590:	f1a3 0731 	sub.w	r7, r3, #49	; 0x31
 8003594:	2f08      	cmp	r7, #8
 8003596:	f63f af7d 	bhi.w	8003494 <_strtod_l+0x19c>
 800359a:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 800359e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80035a0:	9309      	str	r3, [sp, #36]	; 0x24
 80035a2:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80035a4:	1c5f      	adds	r7, r3, #1
 80035a6:	971b      	str	r7, [sp, #108]	; 0x6c
 80035a8:	785b      	ldrb	r3, [r3, #1]
 80035aa:	f1a3 0830 	sub.w	r8, r3, #48	; 0x30
 80035ae:	f1b8 0f09 	cmp.w	r8, #9
 80035b2:	d937      	bls.n	8003624 <_strtod_l+0x32c>
 80035b4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80035b6:	1a7f      	subs	r7, r7, r1
 80035b8:	2f08      	cmp	r7, #8
 80035ba:	f644 671f 	movw	r7, #19999	; 0x4e1f
 80035be:	dc37      	bgt.n	8003630 <_strtod_l+0x338>
 80035c0:	45be      	cmp	lr, r7
 80035c2:	bfa8      	it	ge
 80035c4:	46be      	movge	lr, r7
 80035c6:	f1bc 0f00 	cmp.w	ip, #0
 80035ca:	d001      	beq.n	80035d0 <_strtod_l+0x2d8>
 80035cc:	f1ce 0e00 	rsb	lr, lr, #0
 80035d0:	2c00      	cmp	r4, #0
 80035d2:	d151      	bne.n	8003678 <_strtod_l+0x380>
 80035d4:	2800      	cmp	r0, #0
 80035d6:	f47f aece 	bne.w	8003376 <_strtod_l+0x7e>
 80035da:	9a07      	ldr	r2, [sp, #28]
 80035dc:	2a00      	cmp	r2, #0
 80035de:	f47f aeca 	bne.w	8003376 <_strtod_l+0x7e>
 80035e2:	9a05      	ldr	r2, [sp, #20]
 80035e4:	2a00      	cmp	r2, #0
 80035e6:	f47f aee4 	bne.w	80033b2 <_strtod_l+0xba>
 80035ea:	2b4e      	cmp	r3, #78	; 0x4e
 80035ec:	d027      	beq.n	800363e <_strtod_l+0x346>
 80035ee:	dc21      	bgt.n	8003634 <_strtod_l+0x33c>
 80035f0:	2b49      	cmp	r3, #73	; 0x49
 80035f2:	f47f aede 	bne.w	80033b2 <_strtod_l+0xba>
 80035f6:	49a4      	ldr	r1, [pc, #656]	; (8003888 <_strtod_l+0x590>)
 80035f8:	a81b      	add	r0, sp, #108	; 0x6c
 80035fa:	f002 f86f 	bl	80056dc <__match>
 80035fe:	2800      	cmp	r0, #0
 8003600:	f43f aed7 	beq.w	80033b2 <_strtod_l+0xba>
 8003604:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003606:	49a1      	ldr	r1, [pc, #644]	; (800388c <_strtod_l+0x594>)
 8003608:	3b01      	subs	r3, #1
 800360a:	a81b      	add	r0, sp, #108	; 0x6c
 800360c:	931b      	str	r3, [sp, #108]	; 0x6c
 800360e:	f002 f865 	bl	80056dc <__match>
 8003612:	b910      	cbnz	r0, 800361a <_strtod_l+0x322>
 8003614:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003616:	3301      	adds	r3, #1
 8003618:	931b      	str	r3, [sp, #108]	; 0x6c
 800361a:	f8df a284 	ldr.w	sl, [pc, #644]	; 80038a0 <_strtod_l+0x5a8>
 800361e:	f04f 0900 	mov.w	r9, #0
 8003622:	e6a8      	b.n	8003376 <_strtod_l+0x7e>
 8003624:	210a      	movs	r1, #10
 8003626:	fb01 3e0e 	mla	lr, r1, lr, r3
 800362a:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 800362e:	e7b8      	b.n	80035a2 <_strtod_l+0x2aa>
 8003630:	46be      	mov	lr, r7
 8003632:	e7c8      	b.n	80035c6 <_strtod_l+0x2ce>
 8003634:	2b69      	cmp	r3, #105	; 0x69
 8003636:	d0de      	beq.n	80035f6 <_strtod_l+0x2fe>
 8003638:	2b6e      	cmp	r3, #110	; 0x6e
 800363a:	f47f aeba 	bne.w	80033b2 <_strtod_l+0xba>
 800363e:	4994      	ldr	r1, [pc, #592]	; (8003890 <_strtod_l+0x598>)
 8003640:	a81b      	add	r0, sp, #108	; 0x6c
 8003642:	f002 f84b 	bl	80056dc <__match>
 8003646:	2800      	cmp	r0, #0
 8003648:	f43f aeb3 	beq.w	80033b2 <_strtod_l+0xba>
 800364c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 800364e:	781b      	ldrb	r3, [r3, #0]
 8003650:	2b28      	cmp	r3, #40	; 0x28
 8003652:	d10e      	bne.n	8003672 <_strtod_l+0x37a>
 8003654:	aa1e      	add	r2, sp, #120	; 0x78
 8003656:	498f      	ldr	r1, [pc, #572]	; (8003894 <_strtod_l+0x59c>)
 8003658:	a81b      	add	r0, sp, #108	; 0x6c
 800365a:	f002 f853 	bl	8005704 <__hexnan>
 800365e:	2805      	cmp	r0, #5
 8003660:	d107      	bne.n	8003672 <_strtod_l+0x37a>
 8003662:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8003664:	f8dd 9078 	ldr.w	r9, [sp, #120]	; 0x78
 8003668:	f043 4aff 	orr.w	sl, r3, #2139095040	; 0x7f800000
 800366c:	f44a 0ae0 	orr.w	sl, sl, #7340032	; 0x700000
 8003670:	e681      	b.n	8003376 <_strtod_l+0x7e>
 8003672:	f8df a234 	ldr.w	sl, [pc, #564]	; 80038a8 <_strtod_l+0x5b0>
 8003676:	e7d2      	b.n	800361e <_strtod_l+0x326>
 8003678:	ebae 0302 	sub.w	r3, lr, r2
 800367c:	9307      	str	r3, [sp, #28]
 800367e:	9b04      	ldr	r3, [sp, #16]
 8003680:	9806      	ldr	r0, [sp, #24]
 8003682:	2b00      	cmp	r3, #0
 8003684:	bf08      	it	eq
 8003686:	4623      	moveq	r3, r4
 8003688:	2c10      	cmp	r4, #16
 800368a:	9304      	str	r3, [sp, #16]
 800368c:	46a0      	mov	r8, r4
 800368e:	bfa8      	it	ge
 8003690:	f04f 0810 	movge.w	r8, #16
 8003694:	f7fc fea6 	bl	80003e4 <__aeabi_ui2d>
 8003698:	2c09      	cmp	r4, #9
 800369a:	4681      	mov	r9, r0
 800369c:	468a      	mov	sl, r1
 800369e:	dc13      	bgt.n	80036c8 <_strtod_l+0x3d0>
 80036a0:	9b07      	ldr	r3, [sp, #28]
 80036a2:	2b00      	cmp	r3, #0
 80036a4:	f43f ae67 	beq.w	8003376 <_strtod_l+0x7e>
 80036a8:	9b07      	ldr	r3, [sp, #28]
 80036aa:	dd7e      	ble.n	80037aa <_strtod_l+0x4b2>
 80036ac:	2b16      	cmp	r3, #22
 80036ae:	dc65      	bgt.n	800377c <_strtod_l+0x484>
 80036b0:	4a79      	ldr	r2, [pc, #484]	; (8003898 <_strtod_l+0x5a0>)
 80036b2:	eb02 0ec3 	add.w	lr, r2, r3, lsl #3
 80036b6:	464a      	mov	r2, r9
 80036b8:	e9de 0100 	ldrd	r0, r1, [lr]
 80036bc:	4653      	mov	r3, sl
 80036be:	f7fc ff0b 	bl	80004d8 <__aeabi_dmul>
 80036c2:	4681      	mov	r9, r0
 80036c4:	468a      	mov	sl, r1
 80036c6:	e656      	b.n	8003376 <_strtod_l+0x7e>
 80036c8:	4b73      	ldr	r3, [pc, #460]	; (8003898 <_strtod_l+0x5a0>)
 80036ca:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 80036ce:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 80036d2:	f7fc ff01 	bl	80004d8 <__aeabi_dmul>
 80036d6:	4606      	mov	r6, r0
 80036d8:	4628      	mov	r0, r5
 80036da:	460f      	mov	r7, r1
 80036dc:	f7fc fe82 	bl	80003e4 <__aeabi_ui2d>
 80036e0:	4602      	mov	r2, r0
 80036e2:	460b      	mov	r3, r1
 80036e4:	4630      	mov	r0, r6
 80036e6:	4639      	mov	r1, r7
 80036e8:	f7fc fd40 	bl	800016c <__adddf3>
 80036ec:	2c0f      	cmp	r4, #15
 80036ee:	4681      	mov	r9, r0
 80036f0:	468a      	mov	sl, r1
 80036f2:	ddd5      	ble.n	80036a0 <_strtod_l+0x3a8>
 80036f4:	9b07      	ldr	r3, [sp, #28]
 80036f6:	eba4 0808 	sub.w	r8, r4, r8
 80036fa:	4498      	add	r8, r3
 80036fc:	f1b8 0f00 	cmp.w	r8, #0
 8003700:	f340 809a 	ble.w	8003838 <_strtod_l+0x540>
 8003704:	f018 030f 	ands.w	r3, r8, #15
 8003708:	d00a      	beq.n	8003720 <_strtod_l+0x428>
 800370a:	4963      	ldr	r1, [pc, #396]	; (8003898 <_strtod_l+0x5a0>)
 800370c:	464a      	mov	r2, r9
 800370e:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8003712:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003716:	4653      	mov	r3, sl
 8003718:	f7fc fede 	bl	80004d8 <__aeabi_dmul>
 800371c:	4681      	mov	r9, r0
 800371e:	468a      	mov	sl, r1
 8003720:	f038 080f 	bics.w	r8, r8, #15
 8003724:	d077      	beq.n	8003816 <_strtod_l+0x51e>
 8003726:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 800372a:	dd4b      	ble.n	80037c4 <_strtod_l+0x4cc>
 800372c:	f04f 0800 	mov.w	r8, #0
 8003730:	f8cd 8010 	str.w	r8, [sp, #16]
 8003734:	f8cd 8020 	str.w	r8, [sp, #32]
 8003738:	f8cd 8018 	str.w	r8, [sp, #24]
 800373c:	2322      	movs	r3, #34	; 0x22
 800373e:	f04f 0900 	mov.w	r9, #0
 8003742:	f8df a15c 	ldr.w	sl, [pc, #348]	; 80038a0 <_strtod_l+0x5a8>
 8003746:	f8cb 3000 	str.w	r3, [fp]
 800374a:	9b08      	ldr	r3, [sp, #32]
 800374c:	2b00      	cmp	r3, #0
 800374e:	f43f ae12 	beq.w	8003376 <_strtod_l+0x7e>
 8003752:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003754:	4658      	mov	r0, fp
 8003756:	f002 f944 	bl	80059e2 <_Bfree>
 800375a:	9906      	ldr	r1, [sp, #24]
 800375c:	4658      	mov	r0, fp
 800375e:	f002 f940 	bl	80059e2 <_Bfree>
 8003762:	9904      	ldr	r1, [sp, #16]
 8003764:	4658      	mov	r0, fp
 8003766:	f002 f93c 	bl	80059e2 <_Bfree>
 800376a:	9908      	ldr	r1, [sp, #32]
 800376c:	4658      	mov	r0, fp
 800376e:	f002 f938 	bl	80059e2 <_Bfree>
 8003772:	4641      	mov	r1, r8
 8003774:	4658      	mov	r0, fp
 8003776:	f002 f934 	bl	80059e2 <_Bfree>
 800377a:	e5fc      	b.n	8003376 <_strtod_l+0x7e>
 800377c:	9a07      	ldr	r2, [sp, #28]
 800377e:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8003782:	4293      	cmp	r3, r2
 8003784:	dbb6      	blt.n	80036f4 <_strtod_l+0x3fc>
 8003786:	4d44      	ldr	r5, [pc, #272]	; (8003898 <_strtod_l+0x5a0>)
 8003788:	f1c4 040f 	rsb	r4, r4, #15
 800378c:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8003790:	464a      	mov	r2, r9
 8003792:	e9d1 0100 	ldrd	r0, r1, [r1]
 8003796:	4653      	mov	r3, sl
 8003798:	f7fc fe9e 	bl	80004d8 <__aeabi_dmul>
 800379c:	9b07      	ldr	r3, [sp, #28]
 800379e:	1b1c      	subs	r4, r3, r4
 80037a0:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 80037a4:	e9d5 2300 	ldrd	r2, r3, [r5]
 80037a8:	e789      	b.n	80036be <_strtod_l+0x3c6>
 80037aa:	f113 0f16 	cmn.w	r3, #22
 80037ae:	dba1      	blt.n	80036f4 <_strtod_l+0x3fc>
 80037b0:	4a39      	ldr	r2, [pc, #228]	; (8003898 <_strtod_l+0x5a0>)
 80037b2:	4648      	mov	r0, r9
 80037b4:	eba2 02c3 	sub.w	r2, r2, r3, lsl #3
 80037b8:	e9d2 2300 	ldrd	r2, r3, [r2]
 80037bc:	4651      	mov	r1, sl
 80037be:	f7fc ffb5 	bl	800072c <__aeabi_ddiv>
 80037c2:	e77e      	b.n	80036c2 <_strtod_l+0x3ca>
 80037c4:	2300      	movs	r3, #0
 80037c6:	4648      	mov	r0, r9
 80037c8:	4651      	mov	r1, sl
 80037ca:	461d      	mov	r5, r3
 80037cc:	4e33      	ldr	r6, [pc, #204]	; (800389c <_strtod_l+0x5a4>)
 80037ce:	ea4f 1828 	mov.w	r8, r8, asr #4
 80037d2:	f1b8 0f01 	cmp.w	r8, #1
 80037d6:	dc21      	bgt.n	800381c <_strtod_l+0x524>
 80037d8:	b10b      	cbz	r3, 80037de <_strtod_l+0x4e6>
 80037da:	4681      	mov	r9, r0
 80037dc:	468a      	mov	sl, r1
 80037de:	4b2f      	ldr	r3, [pc, #188]	; (800389c <_strtod_l+0x5a4>)
 80037e0:	f1aa 7a54 	sub.w	sl, sl, #55574528	; 0x3500000
 80037e4:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 80037e8:	464a      	mov	r2, r9
 80037ea:	e9d5 0100 	ldrd	r0, r1, [r5]
 80037ee:	4653      	mov	r3, sl
 80037f0:	f7fc fe72 	bl	80004d8 <__aeabi_dmul>
 80037f4:	4b2a      	ldr	r3, [pc, #168]	; (80038a0 <_strtod_l+0x5a8>)
 80037f6:	460a      	mov	r2, r1
 80037f8:	400b      	ands	r3, r1
 80037fa:	492a      	ldr	r1, [pc, #168]	; (80038a4 <_strtod_l+0x5ac>)
 80037fc:	4681      	mov	r9, r0
 80037fe:	428b      	cmp	r3, r1
 8003800:	d894      	bhi.n	800372c <_strtod_l+0x434>
 8003802:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8003806:	428b      	cmp	r3, r1
 8003808:	bf86      	itte	hi
 800380a:	f04f 39ff 	movhi.w	r9, #4294967295	; 0xffffffff
 800380e:	f8df a09c 	ldrhi.w	sl, [pc, #156]	; 80038ac <_strtod_l+0x5b4>
 8003812:	f102 7a54 	addls.w	sl, r2, #55574528	; 0x3500000
 8003816:	2300      	movs	r3, #0
 8003818:	9305      	str	r3, [sp, #20]
 800381a:	e07b      	b.n	8003914 <_strtod_l+0x61c>
 800381c:	f018 0f01 	tst.w	r8, #1
 8003820:	d006      	beq.n	8003830 <_strtod_l+0x538>
 8003822:	eb06 03c5 	add.w	r3, r6, r5, lsl #3
 8003826:	e9d3 2300 	ldrd	r2, r3, [r3]
 800382a:	f7fc fe55 	bl	80004d8 <__aeabi_dmul>
 800382e:	2301      	movs	r3, #1
 8003830:	3501      	adds	r5, #1
 8003832:	ea4f 0868 	mov.w	r8, r8, asr #1
 8003836:	e7cc      	b.n	80037d2 <_strtod_l+0x4da>
 8003838:	d0ed      	beq.n	8003816 <_strtod_l+0x51e>
 800383a:	f1c8 0800 	rsb	r8, r8, #0
 800383e:	f018 020f 	ands.w	r2, r8, #15
 8003842:	d00a      	beq.n	800385a <_strtod_l+0x562>
 8003844:	4b14      	ldr	r3, [pc, #80]	; (8003898 <_strtod_l+0x5a0>)
 8003846:	4648      	mov	r0, r9
 8003848:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800384c:	4651      	mov	r1, sl
 800384e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003852:	f7fc ff6b 	bl	800072c <__aeabi_ddiv>
 8003856:	4681      	mov	r9, r0
 8003858:	468a      	mov	sl, r1
 800385a:	ea5f 1828 	movs.w	r8, r8, asr #4
 800385e:	d0da      	beq.n	8003816 <_strtod_l+0x51e>
 8003860:	f1b8 0f1f 	cmp.w	r8, #31
 8003864:	dd24      	ble.n	80038b0 <_strtod_l+0x5b8>
 8003866:	f04f 0800 	mov.w	r8, #0
 800386a:	f8cd 8010 	str.w	r8, [sp, #16]
 800386e:	f8cd 8020 	str.w	r8, [sp, #32]
 8003872:	f8cd 8018 	str.w	r8, [sp, #24]
 8003876:	2322      	movs	r3, #34	; 0x22
 8003878:	f04f 0900 	mov.w	r9, #0
 800387c:	f04f 0a00 	mov.w	sl, #0
 8003880:	f8cb 3000 	str.w	r3, [fp]
 8003884:	e761      	b.n	800374a <_strtod_l+0x452>
 8003886:	bf00      	nop
 8003888:	08006f19 	.word	0x08006f19
 800388c:	08006fa3 	.word	0x08006fa3
 8003890:	08006f21 	.word	0x08006f21
 8003894:	08006f64 	.word	0x08006f64
 8003898:	08007048 	.word	0x08007048
 800389c:	08007020 	.word	0x08007020
 80038a0:	7ff00000 	.word	0x7ff00000
 80038a4:	7ca00000 	.word	0x7ca00000
 80038a8:	fff80000 	.word	0xfff80000
 80038ac:	7fefffff 	.word	0x7fefffff
 80038b0:	f018 0310 	ands.w	r3, r8, #16
 80038b4:	bf18      	it	ne
 80038b6:	236a      	movne	r3, #106	; 0x6a
 80038b8:	4648      	mov	r0, r9
 80038ba:	9305      	str	r3, [sp, #20]
 80038bc:	4651      	mov	r1, sl
 80038be:	2300      	movs	r3, #0
 80038c0:	4da1      	ldr	r5, [pc, #644]	; (8003b48 <_strtod_l+0x850>)
 80038c2:	f1b8 0f00 	cmp.w	r8, #0
 80038c6:	f300 8113 	bgt.w	8003af0 <_strtod_l+0x7f8>
 80038ca:	b10b      	cbz	r3, 80038d0 <_strtod_l+0x5d8>
 80038cc:	4681      	mov	r9, r0
 80038ce:	468a      	mov	sl, r1
 80038d0:	9b05      	ldr	r3, [sp, #20]
 80038d2:	b1bb      	cbz	r3, 8003904 <_strtod_l+0x60c>
 80038d4:	f3ca 530a 	ubfx	r3, sl, #20, #11
 80038d8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80038dc:	2b00      	cmp	r3, #0
 80038de:	4651      	mov	r1, sl
 80038e0:	dd10      	ble.n	8003904 <_strtod_l+0x60c>
 80038e2:	2b1f      	cmp	r3, #31
 80038e4:	f340 8110 	ble.w	8003b08 <_strtod_l+0x810>
 80038e8:	2b34      	cmp	r3, #52	; 0x34
 80038ea:	bfd8      	it	le
 80038ec:	f04f 32ff 	movle.w	r2, #4294967295	; 0xffffffff
 80038f0:	f04f 0900 	mov.w	r9, #0
 80038f4:	bfcf      	iteee	gt
 80038f6:	f04f 7a5c 	movgt.w	sl, #57671680	; 0x3700000
 80038fa:	3b20      	suble	r3, #32
 80038fc:	fa02 f303 	lslle.w	r3, r2, r3
 8003900:	ea03 0a01 	andle.w	sl, r3, r1
 8003904:	2200      	movs	r2, #0
 8003906:	2300      	movs	r3, #0
 8003908:	4648      	mov	r0, r9
 800390a:	4651      	mov	r1, sl
 800390c:	f7fd f84c 	bl	80009a8 <__aeabi_dcmpeq>
 8003910:	2800      	cmp	r0, #0
 8003912:	d1a8      	bne.n	8003866 <_strtod_l+0x56e>
 8003914:	9b06      	ldr	r3, [sp, #24]
 8003916:	9a04      	ldr	r2, [sp, #16]
 8003918:	9300      	str	r3, [sp, #0]
 800391a:	9908      	ldr	r1, [sp, #32]
 800391c:	4623      	mov	r3, r4
 800391e:	4658      	mov	r0, fp
 8003920:	f002 f8b1 	bl	8005a86 <__s2b>
 8003924:	9008      	str	r0, [sp, #32]
 8003926:	2800      	cmp	r0, #0
 8003928:	f43f af00 	beq.w	800372c <_strtod_l+0x434>
 800392c:	9a07      	ldr	r2, [sp, #28]
 800392e:	9b07      	ldr	r3, [sp, #28]
 8003930:	2a00      	cmp	r2, #0
 8003932:	f1c3 0300 	rsb	r3, r3, #0
 8003936:	bfa8      	it	ge
 8003938:	2300      	movge	r3, #0
 800393a:	f04f 0800 	mov.w	r8, #0
 800393e:	930e      	str	r3, [sp, #56]	; 0x38
 8003940:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8003944:	9316      	str	r3, [sp, #88]	; 0x58
 8003946:	f8cd 8010 	str.w	r8, [sp, #16]
 800394a:	9b08      	ldr	r3, [sp, #32]
 800394c:	4658      	mov	r0, fp
 800394e:	6859      	ldr	r1, [r3, #4]
 8003950:	f002 f813 	bl	800597a <_Balloc>
 8003954:	9006      	str	r0, [sp, #24]
 8003956:	2800      	cmp	r0, #0
 8003958:	f43f aef0 	beq.w	800373c <_strtod_l+0x444>
 800395c:	9b08      	ldr	r3, [sp, #32]
 800395e:	300c      	adds	r0, #12
 8003960:	691a      	ldr	r2, [r3, #16]
 8003962:	f103 010c 	add.w	r1, r3, #12
 8003966:	3202      	adds	r2, #2
 8003968:	0092      	lsls	r2, r2, #2
 800396a:	f001 fffb 	bl	8005964 <memcpy>
 800396e:	ab1e      	add	r3, sp, #120	; 0x78
 8003970:	9301      	str	r3, [sp, #4]
 8003972:	ab1d      	add	r3, sp, #116	; 0x74
 8003974:	9300      	str	r3, [sp, #0]
 8003976:	464a      	mov	r2, r9
 8003978:	4653      	mov	r3, sl
 800397a:	4658      	mov	r0, fp
 800397c:	e9cd 9a0a 	strd	r9, sl, [sp, #40]	; 0x28
 8003980:	f002 fb3c 	bl	8005ffc <__d2b>
 8003984:	901c      	str	r0, [sp, #112]	; 0x70
 8003986:	2800      	cmp	r0, #0
 8003988:	f43f aed8 	beq.w	800373c <_strtod_l+0x444>
 800398c:	2101      	movs	r1, #1
 800398e:	4658      	mov	r0, fp
 8003990:	f002 f905 	bl	8005b9e <__i2b>
 8003994:	9004      	str	r0, [sp, #16]
 8003996:	4603      	mov	r3, r0
 8003998:	2800      	cmp	r0, #0
 800399a:	f43f aecf 	beq.w	800373c <_strtod_l+0x444>
 800399e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 80039a0:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 80039a2:	2d00      	cmp	r5, #0
 80039a4:	bfab      	itete	ge
 80039a6:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 80039a8:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 80039aa:	18ee      	addge	r6, r5, r3
 80039ac:	1b5c      	sublt	r4, r3, r5
 80039ae:	9b05      	ldr	r3, [sp, #20]
 80039b0:	bfa8      	it	ge
 80039b2:	9c16      	ldrge	r4, [sp, #88]	; 0x58
 80039b4:	eba5 0503 	sub.w	r5, r5, r3
 80039b8:	4415      	add	r5, r2
 80039ba:	4b64      	ldr	r3, [pc, #400]	; (8003b4c <_strtod_l+0x854>)
 80039bc:	f105 35ff 	add.w	r5, r5, #4294967295	; 0xffffffff
 80039c0:	bfb8      	it	lt
 80039c2:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 80039c4:	429d      	cmp	r5, r3
 80039c6:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80039ca:	f280 80af 	bge.w	8003b2c <_strtod_l+0x834>
 80039ce:	1b5b      	subs	r3, r3, r5
 80039d0:	2b1f      	cmp	r3, #31
 80039d2:	eba2 0203 	sub.w	r2, r2, r3
 80039d6:	f04f 0701 	mov.w	r7, #1
 80039da:	f300 809c 	bgt.w	8003b16 <_strtod_l+0x81e>
 80039de:	2500      	movs	r5, #0
 80039e0:	fa07 f303 	lsl.w	r3, r7, r3
 80039e4:	930f      	str	r3, [sp, #60]	; 0x3c
 80039e6:	18b7      	adds	r7, r6, r2
 80039e8:	9b05      	ldr	r3, [sp, #20]
 80039ea:	42be      	cmp	r6, r7
 80039ec:	4414      	add	r4, r2
 80039ee:	441c      	add	r4, r3
 80039f0:	4633      	mov	r3, r6
 80039f2:	bfa8      	it	ge
 80039f4:	463b      	movge	r3, r7
 80039f6:	42a3      	cmp	r3, r4
 80039f8:	bfa8      	it	ge
 80039fa:	4623      	movge	r3, r4
 80039fc:	2b00      	cmp	r3, #0
 80039fe:	bfc2      	ittt	gt
 8003a00:	1aff      	subgt	r7, r7, r3
 8003a02:	1ae4      	subgt	r4, r4, r3
 8003a04:	1af6      	subgt	r6, r6, r3
 8003a06:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003a08:	b1bb      	cbz	r3, 8003a3a <_strtod_l+0x742>
 8003a0a:	461a      	mov	r2, r3
 8003a0c:	9904      	ldr	r1, [sp, #16]
 8003a0e:	4658      	mov	r0, fp
 8003a10:	f002 f964 	bl	8005cdc <__pow5mult>
 8003a14:	9004      	str	r0, [sp, #16]
 8003a16:	2800      	cmp	r0, #0
 8003a18:	f43f ae90 	beq.w	800373c <_strtod_l+0x444>
 8003a1c:	4601      	mov	r1, r0
 8003a1e:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8003a20:	4658      	mov	r0, fp
 8003a22:	f002 f8c5 	bl	8005bb0 <__multiply>
 8003a26:	9009      	str	r0, [sp, #36]	; 0x24
 8003a28:	2800      	cmp	r0, #0
 8003a2a:	f43f ae87 	beq.w	800373c <_strtod_l+0x444>
 8003a2e:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003a30:	4658      	mov	r0, fp
 8003a32:	f001 ffd6 	bl	80059e2 <_Bfree>
 8003a36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003a38:	931c      	str	r3, [sp, #112]	; 0x70
 8003a3a:	2f00      	cmp	r7, #0
 8003a3c:	dc7a      	bgt.n	8003b34 <_strtod_l+0x83c>
 8003a3e:	9b07      	ldr	r3, [sp, #28]
 8003a40:	2b00      	cmp	r3, #0
 8003a42:	dd08      	ble.n	8003a56 <_strtod_l+0x75e>
 8003a44:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8003a46:	9906      	ldr	r1, [sp, #24]
 8003a48:	4658      	mov	r0, fp
 8003a4a:	f002 f947 	bl	8005cdc <__pow5mult>
 8003a4e:	9006      	str	r0, [sp, #24]
 8003a50:	2800      	cmp	r0, #0
 8003a52:	f43f ae73 	beq.w	800373c <_strtod_l+0x444>
 8003a56:	2c00      	cmp	r4, #0
 8003a58:	dd08      	ble.n	8003a6c <_strtod_l+0x774>
 8003a5a:	4622      	mov	r2, r4
 8003a5c:	9906      	ldr	r1, [sp, #24]
 8003a5e:	4658      	mov	r0, fp
 8003a60:	f002 f98a 	bl	8005d78 <__lshift>
 8003a64:	9006      	str	r0, [sp, #24]
 8003a66:	2800      	cmp	r0, #0
 8003a68:	f43f ae68 	beq.w	800373c <_strtod_l+0x444>
 8003a6c:	2e00      	cmp	r6, #0
 8003a6e:	dd08      	ble.n	8003a82 <_strtod_l+0x78a>
 8003a70:	4632      	mov	r2, r6
 8003a72:	9904      	ldr	r1, [sp, #16]
 8003a74:	4658      	mov	r0, fp
 8003a76:	f002 f97f 	bl	8005d78 <__lshift>
 8003a7a:	9004      	str	r0, [sp, #16]
 8003a7c:	2800      	cmp	r0, #0
 8003a7e:	f43f ae5d 	beq.w	800373c <_strtod_l+0x444>
 8003a82:	9a06      	ldr	r2, [sp, #24]
 8003a84:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003a86:	4658      	mov	r0, fp
 8003a88:	f002 f9e4 	bl	8005e54 <__mdiff>
 8003a8c:	4680      	mov	r8, r0
 8003a8e:	2800      	cmp	r0, #0
 8003a90:	f43f ae54 	beq.w	800373c <_strtod_l+0x444>
 8003a94:	2400      	movs	r4, #0
 8003a96:	68c3      	ldr	r3, [r0, #12]
 8003a98:	9904      	ldr	r1, [sp, #16]
 8003a9a:	60c4      	str	r4, [r0, #12]
 8003a9c:	930c      	str	r3, [sp, #48]	; 0x30
 8003a9e:	f002 f9bf 	bl	8005e20 <__mcmp>
 8003aa2:	42a0      	cmp	r0, r4
 8003aa4:	da54      	bge.n	8003b50 <_strtod_l+0x858>
 8003aa6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003aa8:	b9f3      	cbnz	r3, 8003ae8 <_strtod_l+0x7f0>
 8003aaa:	f1b9 0f00 	cmp.w	r9, #0
 8003aae:	d11b      	bne.n	8003ae8 <_strtod_l+0x7f0>
 8003ab0:	f3ca 0313 	ubfx	r3, sl, #0, #20
 8003ab4:	b9c3      	cbnz	r3, 8003ae8 <_strtod_l+0x7f0>
 8003ab6:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8003aba:	0d1b      	lsrs	r3, r3, #20
 8003abc:	051b      	lsls	r3, r3, #20
 8003abe:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8003ac2:	d911      	bls.n	8003ae8 <_strtod_l+0x7f0>
 8003ac4:	f8d8 3014 	ldr.w	r3, [r8, #20]
 8003ac8:	b91b      	cbnz	r3, 8003ad2 <_strtod_l+0x7da>
 8003aca:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8003ace:	2b01      	cmp	r3, #1
 8003ad0:	dd0a      	ble.n	8003ae8 <_strtod_l+0x7f0>
 8003ad2:	4641      	mov	r1, r8
 8003ad4:	2201      	movs	r2, #1
 8003ad6:	4658      	mov	r0, fp
 8003ad8:	f002 f94e 	bl	8005d78 <__lshift>
 8003adc:	9904      	ldr	r1, [sp, #16]
 8003ade:	4680      	mov	r8, r0
 8003ae0:	f002 f99e 	bl	8005e20 <__mcmp>
 8003ae4:	2800      	cmp	r0, #0
 8003ae6:	dc68      	bgt.n	8003bba <_strtod_l+0x8c2>
 8003ae8:	9b05      	ldr	r3, [sp, #20]
 8003aea:	2b00      	cmp	r3, #0
 8003aec:	d172      	bne.n	8003bd4 <_strtod_l+0x8dc>
 8003aee:	e630      	b.n	8003752 <_strtod_l+0x45a>
 8003af0:	f018 0f01 	tst.w	r8, #1
 8003af4:	d004      	beq.n	8003b00 <_strtod_l+0x808>
 8003af6:	e9d5 2300 	ldrd	r2, r3, [r5]
 8003afa:	f7fc fced 	bl	80004d8 <__aeabi_dmul>
 8003afe:	2301      	movs	r3, #1
 8003b00:	ea4f 0868 	mov.w	r8, r8, asr #1
 8003b04:	3508      	adds	r5, #8
 8003b06:	e6dc      	b.n	80038c2 <_strtod_l+0x5ca>
 8003b08:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8003b0c:	fa02 f303 	lsl.w	r3, r2, r3
 8003b10:	ea03 0909 	and.w	r9, r3, r9
 8003b14:	e6f6      	b.n	8003904 <_strtod_l+0x60c>
 8003b16:	f1c5 457f 	rsb	r5, r5, #4278190080	; 0xff000000
 8003b1a:	f505 057f 	add.w	r5, r5, #16711680	; 0xff0000
 8003b1e:	f505 457b 	add.w	r5, r5, #64256	; 0xfb00
 8003b22:	35e2      	adds	r5, #226	; 0xe2
 8003b24:	fa07 f505 	lsl.w	r5, r7, r5
 8003b28:	970f      	str	r7, [sp, #60]	; 0x3c
 8003b2a:	e75c      	b.n	80039e6 <_strtod_l+0x6ee>
 8003b2c:	2301      	movs	r3, #1
 8003b2e:	2500      	movs	r5, #0
 8003b30:	930f      	str	r3, [sp, #60]	; 0x3c
 8003b32:	e758      	b.n	80039e6 <_strtod_l+0x6ee>
 8003b34:	463a      	mov	r2, r7
 8003b36:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003b38:	4658      	mov	r0, fp
 8003b3a:	f002 f91d 	bl	8005d78 <__lshift>
 8003b3e:	901c      	str	r0, [sp, #112]	; 0x70
 8003b40:	2800      	cmp	r0, #0
 8003b42:	f47f af7c 	bne.w	8003a3e <_strtod_l+0x746>
 8003b46:	e5f9      	b.n	800373c <_strtod_l+0x444>
 8003b48:	08006f78 	.word	0x08006f78
 8003b4c:	fffffc02 	.word	0xfffffc02
 8003b50:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 8003b54:	f040 8089 	bne.w	8003c6a <_strtod_l+0x972>
 8003b58:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8003b5a:	f3ca 0313 	ubfx	r3, sl, #0, #20
 8003b5e:	b342      	cbz	r2, 8003bb2 <_strtod_l+0x8ba>
 8003b60:	4aaf      	ldr	r2, [pc, #700]	; (8003e20 <_strtod_l+0xb28>)
 8003b62:	4293      	cmp	r3, r2
 8003b64:	d156      	bne.n	8003c14 <_strtod_l+0x91c>
 8003b66:	9b05      	ldr	r3, [sp, #20]
 8003b68:	4648      	mov	r0, r9
 8003b6a:	b1eb      	cbz	r3, 8003ba8 <_strtod_l+0x8b0>
 8003b6c:	4653      	mov	r3, sl
 8003b6e:	4aad      	ldr	r2, [pc, #692]	; (8003e24 <_strtod_l+0xb2c>)
 8003b70:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
 8003b74:	401a      	ands	r2, r3
 8003b76:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8003b7a:	d818      	bhi.n	8003bae <_strtod_l+0x8b6>
 8003b7c:	0d12      	lsrs	r2, r2, #20
 8003b7e:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8003b82:	fa01 f303 	lsl.w	r3, r1, r3
 8003b86:	4298      	cmp	r0, r3
 8003b88:	d144      	bne.n	8003c14 <_strtod_l+0x91c>
 8003b8a:	4ba7      	ldr	r3, [pc, #668]	; (8003e28 <_strtod_l+0xb30>)
 8003b8c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003b8e:	429a      	cmp	r2, r3
 8003b90:	d102      	bne.n	8003b98 <_strtod_l+0x8a0>
 8003b92:	3001      	adds	r0, #1
 8003b94:	f43f add2 	beq.w	800373c <_strtod_l+0x444>
 8003b98:	4ba2      	ldr	r3, [pc, #648]	; (8003e24 <_strtod_l+0xb2c>)
 8003b9a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003b9c:	f04f 0900 	mov.w	r9, #0
 8003ba0:	401a      	ands	r2, r3
 8003ba2:	f502 1a80 	add.w	sl, r2, #1048576	; 0x100000
 8003ba6:	e79f      	b.n	8003ae8 <_strtod_l+0x7f0>
 8003ba8:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8003bac:	e7eb      	b.n	8003b86 <_strtod_l+0x88e>
 8003bae:	460b      	mov	r3, r1
 8003bb0:	e7e9      	b.n	8003b86 <_strtod_l+0x88e>
 8003bb2:	bb7b      	cbnz	r3, 8003c14 <_strtod_l+0x91c>
 8003bb4:	f1b9 0f00 	cmp.w	r9, #0
 8003bb8:	d12c      	bne.n	8003c14 <_strtod_l+0x91c>
 8003bba:	9905      	ldr	r1, [sp, #20]
 8003bbc:	4653      	mov	r3, sl
 8003bbe:	4a99      	ldr	r2, [pc, #612]	; (8003e24 <_strtod_l+0xb2c>)
 8003bc0:	b1f1      	cbz	r1, 8003c00 <_strtod_l+0x908>
 8003bc2:	ea02 010a 	and.w	r1, r2, sl
 8003bc6:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8003bca:	dc19      	bgt.n	8003c00 <_strtod_l+0x908>
 8003bcc:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8003bd0:	f77f ae51 	ble.w	8003876 <_strtod_l+0x57e>
 8003bd4:	2300      	movs	r3, #0
 8003bd6:	4a95      	ldr	r2, [pc, #596]	; (8003e2c <_strtod_l+0xb34>)
 8003bd8:	4648      	mov	r0, r9
 8003bda:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 8003bde:	4651      	mov	r1, sl
 8003be0:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8003be4:	f7fc fc78 	bl	80004d8 <__aeabi_dmul>
 8003be8:	4681      	mov	r9, r0
 8003bea:	468a      	mov	sl, r1
 8003bec:	2900      	cmp	r1, #0
 8003bee:	f47f adb0 	bne.w	8003752 <_strtod_l+0x45a>
 8003bf2:	2800      	cmp	r0, #0
 8003bf4:	f47f adad 	bne.w	8003752 <_strtod_l+0x45a>
 8003bf8:	2322      	movs	r3, #34	; 0x22
 8003bfa:	f8cb 3000 	str.w	r3, [fp]
 8003bfe:	e5a8      	b.n	8003752 <_strtod_l+0x45a>
 8003c00:	4013      	ands	r3, r2
 8003c02:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8003c06:	ea6f 5a13 	mvn.w	sl, r3, lsr #20
 8003c0a:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8003c0e:	ea6f 5a0a 	mvn.w	sl, sl, lsl #20
 8003c12:	e769      	b.n	8003ae8 <_strtod_l+0x7f0>
 8003c14:	b19d      	cbz	r5, 8003c3e <_strtod_l+0x946>
 8003c16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c18:	421d      	tst	r5, r3
 8003c1a:	f43f af65 	beq.w	8003ae8 <_strtod_l+0x7f0>
 8003c1e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003c20:	9a05      	ldr	r2, [sp, #20]
 8003c22:	4648      	mov	r0, r9
 8003c24:	4651      	mov	r1, sl
 8003c26:	b173      	cbz	r3, 8003c46 <_strtod_l+0x94e>
 8003c28:	f7ff fb42 	bl	80032b0 <sulp>
 8003c2c:	4602      	mov	r2, r0
 8003c2e:	460b      	mov	r3, r1
 8003c30:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003c34:	f7fc fa9a 	bl	800016c <__adddf3>
 8003c38:	4681      	mov	r9, r0
 8003c3a:	468a      	mov	sl, r1
 8003c3c:	e754      	b.n	8003ae8 <_strtod_l+0x7f0>
 8003c3e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003c40:	ea13 0f09 	tst.w	r3, r9
 8003c44:	e7e9      	b.n	8003c1a <_strtod_l+0x922>
 8003c46:	f7ff fb33 	bl	80032b0 <sulp>
 8003c4a:	4602      	mov	r2, r0
 8003c4c:	460b      	mov	r3, r1
 8003c4e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003c52:	f7fc fa89 	bl	8000168 <__aeabi_dsub>
 8003c56:	2200      	movs	r2, #0
 8003c58:	2300      	movs	r3, #0
 8003c5a:	4681      	mov	r9, r0
 8003c5c:	468a      	mov	sl, r1
 8003c5e:	f7fc fea3 	bl	80009a8 <__aeabi_dcmpeq>
 8003c62:	2800      	cmp	r0, #0
 8003c64:	f47f ae07 	bne.w	8003876 <_strtod_l+0x57e>
 8003c68:	e73e      	b.n	8003ae8 <_strtod_l+0x7f0>
 8003c6a:	9904      	ldr	r1, [sp, #16]
 8003c6c:	4640      	mov	r0, r8
 8003c6e:	f002 fa14 	bl	800609a <__ratio>
 8003c72:	2200      	movs	r2, #0
 8003c74:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003c78:	4606      	mov	r6, r0
 8003c7a:	460f      	mov	r7, r1
 8003c7c:	f7fc fea8 	bl	80009d0 <__aeabi_dcmple>
 8003c80:	2800      	cmp	r0, #0
 8003c82:	d075      	beq.n	8003d70 <_strtod_l+0xa78>
 8003c84:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003c86:	2b00      	cmp	r3, #0
 8003c88:	d047      	beq.n	8003d1a <_strtod_l+0xa22>
 8003c8a:	2600      	movs	r6, #0
 8003c8c:	4f68      	ldr	r7, [pc, #416]	; (8003e30 <_strtod_l+0xb38>)
 8003c8e:	4d68      	ldr	r5, [pc, #416]	; (8003e30 <_strtod_l+0xb38>)
 8003c90:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c92:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8003c96:	0d1b      	lsrs	r3, r3, #20
 8003c98:	051b      	lsls	r3, r3, #20
 8003c9a:	930f      	str	r3, [sp, #60]	; 0x3c
 8003c9c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003c9e:	4b65      	ldr	r3, [pc, #404]	; (8003e34 <_strtod_l+0xb3c>)
 8003ca0:	429a      	cmp	r2, r3
 8003ca2:	f040 80cf 	bne.w	8003e44 <_strtod_l+0xb4c>
 8003ca6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003caa:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 8003cae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003cb0:	4648      	mov	r0, r9
 8003cb2:	f1a3 7a54 	sub.w	sl, r3, #55574528	; 0x3500000
 8003cb6:	4651      	mov	r1, sl
 8003cb8:	f002 f92a 	bl	8005f10 <__ulp>
 8003cbc:	4602      	mov	r2, r0
 8003cbe:	460b      	mov	r3, r1
 8003cc0:	4630      	mov	r0, r6
 8003cc2:	4639      	mov	r1, r7
 8003cc4:	f7fc fc08 	bl	80004d8 <__aeabi_dmul>
 8003cc8:	464a      	mov	r2, r9
 8003cca:	4653      	mov	r3, sl
 8003ccc:	f7fc fa4e 	bl	800016c <__adddf3>
 8003cd0:	460b      	mov	r3, r1
 8003cd2:	4954      	ldr	r1, [pc, #336]	; (8003e24 <_strtod_l+0xb2c>)
 8003cd4:	4a58      	ldr	r2, [pc, #352]	; (8003e38 <_strtod_l+0xb40>)
 8003cd6:	4019      	ands	r1, r3
 8003cd8:	4291      	cmp	r1, r2
 8003cda:	4681      	mov	r9, r0
 8003cdc:	d95e      	bls.n	8003d9c <_strtod_l+0xaa4>
 8003cde:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003ce0:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8003ce4:	4293      	cmp	r3, r2
 8003ce6:	d103      	bne.n	8003cf0 <_strtod_l+0x9f8>
 8003ce8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8003cea:	3301      	adds	r3, #1
 8003cec:	f43f ad26 	beq.w	800373c <_strtod_l+0x444>
 8003cf0:	f04f 39ff 	mov.w	r9, #4294967295	; 0xffffffff
 8003cf4:	f8df a130 	ldr.w	sl, [pc, #304]	; 8003e28 <_strtod_l+0xb30>
 8003cf8:	991c      	ldr	r1, [sp, #112]	; 0x70
 8003cfa:	4658      	mov	r0, fp
 8003cfc:	f001 fe71 	bl	80059e2 <_Bfree>
 8003d00:	9906      	ldr	r1, [sp, #24]
 8003d02:	4658      	mov	r0, fp
 8003d04:	f001 fe6d 	bl	80059e2 <_Bfree>
 8003d08:	9904      	ldr	r1, [sp, #16]
 8003d0a:	4658      	mov	r0, fp
 8003d0c:	f001 fe69 	bl	80059e2 <_Bfree>
 8003d10:	4641      	mov	r1, r8
 8003d12:	4658      	mov	r0, fp
 8003d14:	f001 fe65 	bl	80059e2 <_Bfree>
 8003d18:	e617      	b.n	800394a <_strtod_l+0x652>
 8003d1a:	f1b9 0f00 	cmp.w	r9, #0
 8003d1e:	d119      	bne.n	8003d54 <_strtod_l+0xa5c>
 8003d20:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d22:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8003d26:	b9e3      	cbnz	r3, 8003d62 <_strtod_l+0xa6a>
 8003d28:	2200      	movs	r2, #0
 8003d2a:	4b41      	ldr	r3, [pc, #260]	; (8003e30 <_strtod_l+0xb38>)
 8003d2c:	4630      	mov	r0, r6
 8003d2e:	4639      	mov	r1, r7
 8003d30:	f7fc fe44 	bl	80009bc <__aeabi_dcmplt>
 8003d34:	b9c8      	cbnz	r0, 8003d6a <_strtod_l+0xa72>
 8003d36:	2200      	movs	r2, #0
 8003d38:	4b40      	ldr	r3, [pc, #256]	; (8003e3c <_strtod_l+0xb44>)
 8003d3a:	4630      	mov	r0, r6
 8003d3c:	4639      	mov	r1, r7
 8003d3e:	f7fc fbcb 	bl	80004d8 <__aeabi_dmul>
 8003d42:	4604      	mov	r4, r0
 8003d44:	460d      	mov	r5, r1
 8003d46:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 8003d4a:	9418      	str	r4, [sp, #96]	; 0x60
 8003d4c:	9319      	str	r3, [sp, #100]	; 0x64
 8003d4e:	e9dd 6718 	ldrd	r6, r7, [sp, #96]	; 0x60
 8003d52:	e79d      	b.n	8003c90 <_strtod_l+0x998>
 8003d54:	f1b9 0f01 	cmp.w	r9, #1
 8003d58:	d103      	bne.n	8003d62 <_strtod_l+0xa6a>
 8003d5a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d5c:	2b00      	cmp	r3, #0
 8003d5e:	f43f ad8a 	beq.w	8003876 <_strtod_l+0x57e>
 8003d62:	2600      	movs	r6, #0
 8003d64:	4f36      	ldr	r7, [pc, #216]	; (8003e40 <_strtod_l+0xb48>)
 8003d66:	2400      	movs	r4, #0
 8003d68:	e791      	b.n	8003c8e <_strtod_l+0x996>
 8003d6a:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8003d6c:	4d33      	ldr	r5, [pc, #204]	; (8003e3c <_strtod_l+0xb44>)
 8003d6e:	e7ea      	b.n	8003d46 <_strtod_l+0xa4e>
 8003d70:	4b32      	ldr	r3, [pc, #200]	; (8003e3c <_strtod_l+0xb44>)
 8003d72:	2200      	movs	r2, #0
 8003d74:	4630      	mov	r0, r6
 8003d76:	4639      	mov	r1, r7
 8003d78:	f7fc fbae 	bl	80004d8 <__aeabi_dmul>
 8003d7c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003d7e:	4604      	mov	r4, r0
 8003d80:	460d      	mov	r5, r1
 8003d82:	b933      	cbnz	r3, 8003d92 <_strtod_l+0xa9a>
 8003d84:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003d88:	9010      	str	r0, [sp, #64]	; 0x40
 8003d8a:	9311      	str	r3, [sp, #68]	; 0x44
 8003d8c:	e9dd 6710 	ldrd	r6, r7, [sp, #64]	; 0x40
 8003d90:	e77e      	b.n	8003c90 <_strtod_l+0x998>
 8003d92:	4602      	mov	r2, r0
 8003d94:	460b      	mov	r3, r1
 8003d96:	e9cd 2310 	strd	r2, r3, [sp, #64]	; 0x40
 8003d9a:	e7f7      	b.n	8003d8c <_strtod_l+0xa94>
 8003d9c:	f103 7a54 	add.w	sl, r3, #55574528	; 0x3500000
 8003da0:	9b05      	ldr	r3, [sp, #20]
 8003da2:	2b00      	cmp	r3, #0
 8003da4:	d1a8      	bne.n	8003cf8 <_strtod_l+0xa00>
 8003da6:	f02a 4300 	bic.w	r3, sl, #2147483648	; 0x80000000
 8003daa:	0d1b      	lsrs	r3, r3, #20
 8003dac:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003dae:	051b      	lsls	r3, r3, #20
 8003db0:	429a      	cmp	r2, r3
 8003db2:	4656      	mov	r6, sl
 8003db4:	d1a0      	bne.n	8003cf8 <_strtod_l+0xa00>
 8003db6:	4629      	mov	r1, r5
 8003db8:	4620      	mov	r0, r4
 8003dba:	f7fc fe3d 	bl	8000a38 <__aeabi_d2iz>
 8003dbe:	f7fc fb21 	bl	8000404 <__aeabi_i2d>
 8003dc2:	460b      	mov	r3, r1
 8003dc4:	4602      	mov	r2, r0
 8003dc6:	4629      	mov	r1, r5
 8003dc8:	4620      	mov	r0, r4
 8003dca:	f7fc f9cd 	bl	8000168 <__aeabi_dsub>
 8003dce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003dd0:	4604      	mov	r4, r0
 8003dd2:	460d      	mov	r5, r1
 8003dd4:	b933      	cbnz	r3, 8003de4 <_strtod_l+0xaec>
 8003dd6:	f1b9 0f00 	cmp.w	r9, #0
 8003dda:	d103      	bne.n	8003de4 <_strtod_l+0xaec>
 8003ddc:	f3ca 0613 	ubfx	r6, sl, #0, #20
 8003de0:	2e00      	cmp	r6, #0
 8003de2:	d06a      	beq.n	8003eba <_strtod_l+0xbc2>
 8003de4:	a30a      	add	r3, pc, #40	; (adr r3, 8003e10 <_strtod_l+0xb18>)
 8003de6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003dea:	4620      	mov	r0, r4
 8003dec:	4629      	mov	r1, r5
 8003dee:	f7fc fde5 	bl	80009bc <__aeabi_dcmplt>
 8003df2:	2800      	cmp	r0, #0
 8003df4:	f47f acad 	bne.w	8003752 <_strtod_l+0x45a>
 8003df8:	a307      	add	r3, pc, #28	; (adr r3, 8003e18 <_strtod_l+0xb20>)
 8003dfa:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003dfe:	4620      	mov	r0, r4
 8003e00:	4629      	mov	r1, r5
 8003e02:	f7fc fdf9 	bl	80009f8 <__aeabi_dcmpgt>
 8003e06:	2800      	cmp	r0, #0
 8003e08:	f43f af76 	beq.w	8003cf8 <_strtod_l+0xa00>
 8003e0c:	e4a1      	b.n	8003752 <_strtod_l+0x45a>
 8003e0e:	bf00      	nop
 8003e10:	94a03595 	.word	0x94a03595
 8003e14:	3fdfffff 	.word	0x3fdfffff
 8003e18:	35afe535 	.word	0x35afe535
 8003e1c:	3fe00000 	.word	0x3fe00000
 8003e20:	000fffff 	.word	0x000fffff
 8003e24:	7ff00000 	.word	0x7ff00000
 8003e28:	7fefffff 	.word	0x7fefffff
 8003e2c:	39500000 	.word	0x39500000
 8003e30:	3ff00000 	.word	0x3ff00000
 8003e34:	7fe00000 	.word	0x7fe00000
 8003e38:	7c9fffff 	.word	0x7c9fffff
 8003e3c:	3fe00000 	.word	0x3fe00000
 8003e40:	bff00000 	.word	0xbff00000
 8003e44:	9b05      	ldr	r3, [sp, #20]
 8003e46:	b313      	cbz	r3, 8003e8e <_strtod_l+0xb96>
 8003e48:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003e4a:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8003e4e:	d81e      	bhi.n	8003e8e <_strtod_l+0xb96>
 8003e50:	a325      	add	r3, pc, #148	; (adr r3, 8003ee8 <_strtod_l+0xbf0>)
 8003e52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e56:	4620      	mov	r0, r4
 8003e58:	4629      	mov	r1, r5
 8003e5a:	f7fc fdb9 	bl	80009d0 <__aeabi_dcmple>
 8003e5e:	b190      	cbz	r0, 8003e86 <_strtod_l+0xb8e>
 8003e60:	4629      	mov	r1, r5
 8003e62:	4620      	mov	r0, r4
 8003e64:	f7fc fe10 	bl	8000a88 <__aeabi_d2uiz>
 8003e68:	2800      	cmp	r0, #0
 8003e6a:	bf08      	it	eq
 8003e6c:	2001      	moveq	r0, #1
 8003e6e:	f7fc fab9 	bl	80003e4 <__aeabi_ui2d>
 8003e72:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003e74:	4604      	mov	r4, r0
 8003e76:	460d      	mov	r5, r1
 8003e78:	b9d3      	cbnz	r3, 8003eb0 <_strtod_l+0xbb8>
 8003e7a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8003e7e:	9012      	str	r0, [sp, #72]	; 0x48
 8003e80:	9313      	str	r3, [sp, #76]	; 0x4c
 8003e82:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 8003e86:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8003e88:	f107 63d6 	add.w	r3, r7, #112197632	; 0x6b00000
 8003e8c:	1a9f      	subs	r7, r3, r2
 8003e8e:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8003e92:	f002 f83d 	bl	8005f10 <__ulp>
 8003e96:	4602      	mov	r2, r0
 8003e98:	460b      	mov	r3, r1
 8003e9a:	4630      	mov	r0, r6
 8003e9c:	4639      	mov	r1, r7
 8003e9e:	f7fc fb1b 	bl	80004d8 <__aeabi_dmul>
 8003ea2:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8003ea6:	f7fc f961 	bl	800016c <__adddf3>
 8003eaa:	4681      	mov	r9, r0
 8003eac:	468a      	mov	sl, r1
 8003eae:	e777      	b.n	8003da0 <_strtod_l+0xaa8>
 8003eb0:	4602      	mov	r2, r0
 8003eb2:	460b      	mov	r3, r1
 8003eb4:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
 8003eb8:	e7e3      	b.n	8003e82 <_strtod_l+0xb8a>
 8003eba:	a30d      	add	r3, pc, #52	; (adr r3, 8003ef0 <_strtod_l+0xbf8>)
 8003ebc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003ec0:	f7fc fd7c 	bl	80009bc <__aeabi_dcmplt>
 8003ec4:	e79f      	b.n	8003e06 <_strtod_l+0xb0e>
 8003ec6:	2300      	movs	r3, #0
 8003ec8:	930d      	str	r3, [sp, #52]	; 0x34
 8003eca:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8003ecc:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8003ece:	6013      	str	r3, [r2, #0]
 8003ed0:	f7ff ba55 	b.w	800337e <_strtod_l+0x86>
 8003ed4:	2b65      	cmp	r3, #101	; 0x65
 8003ed6:	f04f 0200 	mov.w	r2, #0
 8003eda:	f43f ab42 	beq.w	8003562 <_strtod_l+0x26a>
 8003ede:	2101      	movs	r1, #1
 8003ee0:	4614      	mov	r4, r2
 8003ee2:	9105      	str	r1, [sp, #20]
 8003ee4:	f7ff babf 	b.w	8003466 <_strtod_l+0x16e>
 8003ee8:	ffc00000 	.word	0xffc00000
 8003eec:	41dfffff 	.word	0x41dfffff
 8003ef0:	94a03595 	.word	0x94a03595
 8003ef4:	3fcfffff 	.word	0x3fcfffff

08003ef8 <_strtod_r>:
 8003ef8:	4b05      	ldr	r3, [pc, #20]	; (8003f10 <_strtod_r+0x18>)
 8003efa:	b410      	push	{r4}
 8003efc:	681b      	ldr	r3, [r3, #0]
 8003efe:	4c05      	ldr	r4, [pc, #20]	; (8003f14 <_strtod_r+0x1c>)
 8003f00:	6a1b      	ldr	r3, [r3, #32]
 8003f02:	2b00      	cmp	r3, #0
 8003f04:	bf08      	it	eq
 8003f06:	4623      	moveq	r3, r4
 8003f08:	bc10      	pop	{r4}
 8003f0a:	f7ff b9f5 	b.w	80032f8 <_strtod_l>
 8003f0e:	bf00      	nop
 8003f10:	20000014 	.word	0x20000014
 8003f14:	20000078 	.word	0x20000078

08003f18 <strtok>:
 8003f18:	4b13      	ldr	r3, [pc, #76]	; (8003f68 <strtok+0x50>)
 8003f1a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003f1e:	681d      	ldr	r5, [r3, #0]
 8003f20:	4606      	mov	r6, r0
 8003f22:	6dac      	ldr	r4, [r5, #88]	; 0x58
 8003f24:	460f      	mov	r7, r1
 8003f26:	b9b4      	cbnz	r4, 8003f56 <strtok+0x3e>
 8003f28:	2050      	movs	r0, #80	; 0x50
 8003f2a:	f001 fcf3 	bl	8005914 <malloc>
 8003f2e:	65a8      	str	r0, [r5, #88]	; 0x58
 8003f30:	e9c0 4400 	strd	r4, r4, [r0]
 8003f34:	e9c0 4402 	strd	r4, r4, [r0, #8]
 8003f38:	e9c0 4404 	strd	r4, r4, [r0, #16]
 8003f3c:	e9c0 440a 	strd	r4, r4, [r0, #40]	; 0x28
 8003f40:	e9c0 440c 	strd	r4, r4, [r0, #48]	; 0x30
 8003f44:	e9c0 440e 	strd	r4, r4, [r0, #56]	; 0x38
 8003f48:	e9c0 4410 	strd	r4, r4, [r0, #64]	; 0x40
 8003f4c:	e9c0 4412 	strd	r4, r4, [r0, #72]	; 0x48
 8003f50:	6184      	str	r4, [r0, #24]
 8003f52:	7704      	strb	r4, [r0, #28]
 8003f54:	6244      	str	r4, [r0, #36]	; 0x24
 8003f56:	6daa      	ldr	r2, [r5, #88]	; 0x58
 8003f58:	4639      	mov	r1, r7
 8003f5a:	4630      	mov	r0, r6
 8003f5c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8003f60:	2301      	movs	r3, #1
 8003f62:	f000 b803 	b.w	8003f6c <__strtok_r>
 8003f66:	bf00      	nop
 8003f68:	20000014 	.word	0x20000014

08003f6c <__strtok_r>:
 8003f6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003f6e:	b918      	cbnz	r0, 8003f78 <__strtok_r+0xc>
 8003f70:	6810      	ldr	r0, [r2, #0]
 8003f72:	b908      	cbnz	r0, 8003f78 <__strtok_r+0xc>
 8003f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8003f76:	4620      	mov	r0, r4
 8003f78:	4604      	mov	r4, r0
 8003f7a:	460f      	mov	r7, r1
 8003f7c:	f814 5b01 	ldrb.w	r5, [r4], #1
 8003f80:	f817 6b01 	ldrb.w	r6, [r7], #1
 8003f84:	b91e      	cbnz	r6, 8003f8e <__strtok_r+0x22>
 8003f86:	b96d      	cbnz	r5, 8003fa4 <__strtok_r+0x38>
 8003f88:	6015      	str	r5, [r2, #0]
 8003f8a:	4628      	mov	r0, r5
 8003f8c:	e7f2      	b.n	8003f74 <__strtok_r+0x8>
 8003f8e:	42b5      	cmp	r5, r6
 8003f90:	d1f6      	bne.n	8003f80 <__strtok_r+0x14>
 8003f92:	2b00      	cmp	r3, #0
 8003f94:	d1ef      	bne.n	8003f76 <__strtok_r+0xa>
 8003f96:	6014      	str	r4, [r2, #0]
 8003f98:	7003      	strb	r3, [r0, #0]
 8003f9a:	e7eb      	b.n	8003f74 <__strtok_r+0x8>
 8003f9c:	462b      	mov	r3, r5
 8003f9e:	e00d      	b.n	8003fbc <__strtok_r+0x50>
 8003fa0:	b926      	cbnz	r6, 8003fac <__strtok_r+0x40>
 8003fa2:	461c      	mov	r4, r3
 8003fa4:	4623      	mov	r3, r4
 8003fa6:	460f      	mov	r7, r1
 8003fa8:	f813 5b01 	ldrb.w	r5, [r3], #1
 8003fac:	f817 6b01 	ldrb.w	r6, [r7], #1
 8003fb0:	42b5      	cmp	r5, r6
 8003fb2:	d1f5      	bne.n	8003fa0 <__strtok_r+0x34>
 8003fb4:	2d00      	cmp	r5, #0
 8003fb6:	d0f1      	beq.n	8003f9c <__strtok_r+0x30>
 8003fb8:	2100      	movs	r1, #0
 8003fba:	7021      	strb	r1, [r4, #0]
 8003fbc:	6013      	str	r3, [r2, #0]
 8003fbe:	e7d9      	b.n	8003f74 <__strtok_r+0x8>

08003fc0 <_strtol_l.isra.0>:
 8003fc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fc4:	4680      	mov	r8, r0
 8003fc6:	4689      	mov	r9, r1
 8003fc8:	4692      	mov	sl, r2
 8003fca:	461e      	mov	r6, r3
 8003fcc:	460f      	mov	r7, r1
 8003fce:	463d      	mov	r5, r7
 8003fd0:	9808      	ldr	r0, [sp, #32]
 8003fd2:	f815 4b01 	ldrb.w	r4, [r5], #1
 8003fd6:	f001 fc25 	bl	8005824 <__locale_ctype_ptr_l>
 8003fda:	4420      	add	r0, r4
 8003fdc:	7843      	ldrb	r3, [r0, #1]
 8003fde:	f013 0308 	ands.w	r3, r3, #8
 8003fe2:	d132      	bne.n	800404a <_strtol_l.isra.0+0x8a>
 8003fe4:	2c2d      	cmp	r4, #45	; 0x2d
 8003fe6:	d132      	bne.n	800404e <_strtol_l.isra.0+0x8e>
 8003fe8:	2201      	movs	r2, #1
 8003fea:	787c      	ldrb	r4, [r7, #1]
 8003fec:	1cbd      	adds	r5, r7, #2
 8003fee:	2e00      	cmp	r6, #0
 8003ff0:	d05d      	beq.n	80040ae <_strtol_l.isra.0+0xee>
 8003ff2:	2e10      	cmp	r6, #16
 8003ff4:	d109      	bne.n	800400a <_strtol_l.isra.0+0x4a>
 8003ff6:	2c30      	cmp	r4, #48	; 0x30
 8003ff8:	d107      	bne.n	800400a <_strtol_l.isra.0+0x4a>
 8003ffa:	782b      	ldrb	r3, [r5, #0]
 8003ffc:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8004000:	2b58      	cmp	r3, #88	; 0x58
 8004002:	d14f      	bne.n	80040a4 <_strtol_l.isra.0+0xe4>
 8004004:	2610      	movs	r6, #16
 8004006:	786c      	ldrb	r4, [r5, #1]
 8004008:	3502      	adds	r5, #2
 800400a:	2a00      	cmp	r2, #0
 800400c:	bf14      	ite	ne
 800400e:	f04f 4100 	movne.w	r1, #2147483648	; 0x80000000
 8004012:	f06f 4100 	mvneq.w	r1, #2147483648	; 0x80000000
 8004016:	2700      	movs	r7, #0
 8004018:	fbb1 fcf6 	udiv	ip, r1, r6
 800401c:	4638      	mov	r0, r7
 800401e:	fb06 1e1c 	mls	lr, r6, ip, r1
 8004022:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8004026:	2b09      	cmp	r3, #9
 8004028:	d817      	bhi.n	800405a <_strtol_l.isra.0+0x9a>
 800402a:	461c      	mov	r4, r3
 800402c:	42a6      	cmp	r6, r4
 800402e:	dd23      	ble.n	8004078 <_strtol_l.isra.0+0xb8>
 8004030:	1c7b      	adds	r3, r7, #1
 8004032:	d007      	beq.n	8004044 <_strtol_l.isra.0+0x84>
 8004034:	4584      	cmp	ip, r0
 8004036:	d31c      	bcc.n	8004072 <_strtol_l.isra.0+0xb2>
 8004038:	d101      	bne.n	800403e <_strtol_l.isra.0+0x7e>
 800403a:	45a6      	cmp	lr, r4
 800403c:	db19      	blt.n	8004072 <_strtol_l.isra.0+0xb2>
 800403e:	2701      	movs	r7, #1
 8004040:	fb00 4006 	mla	r0, r0, r6, r4
 8004044:	f815 4b01 	ldrb.w	r4, [r5], #1
 8004048:	e7eb      	b.n	8004022 <_strtol_l.isra.0+0x62>
 800404a:	462f      	mov	r7, r5
 800404c:	e7bf      	b.n	8003fce <_strtol_l.isra.0+0xe>
 800404e:	2c2b      	cmp	r4, #43	; 0x2b
 8004050:	bf04      	itt	eq
 8004052:	1cbd      	addeq	r5, r7, #2
 8004054:	787c      	ldrbeq	r4, [r7, #1]
 8004056:	461a      	mov	r2, r3
 8004058:	e7c9      	b.n	8003fee <_strtol_l.isra.0+0x2e>
 800405a:	f1a4 0341 	sub.w	r3, r4, #65	; 0x41
 800405e:	2b19      	cmp	r3, #25
 8004060:	d801      	bhi.n	8004066 <_strtol_l.isra.0+0xa6>
 8004062:	3c37      	subs	r4, #55	; 0x37
 8004064:	e7e2      	b.n	800402c <_strtol_l.isra.0+0x6c>
 8004066:	f1a4 0361 	sub.w	r3, r4, #97	; 0x61
 800406a:	2b19      	cmp	r3, #25
 800406c:	d804      	bhi.n	8004078 <_strtol_l.isra.0+0xb8>
 800406e:	3c57      	subs	r4, #87	; 0x57
 8004070:	e7dc      	b.n	800402c <_strtol_l.isra.0+0x6c>
 8004072:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 8004076:	e7e5      	b.n	8004044 <_strtol_l.isra.0+0x84>
 8004078:	1c7b      	adds	r3, r7, #1
 800407a:	d108      	bne.n	800408e <_strtol_l.isra.0+0xce>
 800407c:	2322      	movs	r3, #34	; 0x22
 800407e:	4608      	mov	r0, r1
 8004080:	f8c8 3000 	str.w	r3, [r8]
 8004084:	f1ba 0f00 	cmp.w	sl, #0
 8004088:	d107      	bne.n	800409a <_strtol_l.isra.0+0xda>
 800408a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800408e:	b102      	cbz	r2, 8004092 <_strtol_l.isra.0+0xd2>
 8004090:	4240      	negs	r0, r0
 8004092:	f1ba 0f00 	cmp.w	sl, #0
 8004096:	d0f8      	beq.n	800408a <_strtol_l.isra.0+0xca>
 8004098:	b10f      	cbz	r7, 800409e <_strtol_l.isra.0+0xde>
 800409a:	f105 39ff 	add.w	r9, r5, #4294967295	; 0xffffffff
 800409e:	f8ca 9000 	str.w	r9, [sl]
 80040a2:	e7f2      	b.n	800408a <_strtol_l.isra.0+0xca>
 80040a4:	2430      	movs	r4, #48	; 0x30
 80040a6:	2e00      	cmp	r6, #0
 80040a8:	d1af      	bne.n	800400a <_strtol_l.isra.0+0x4a>
 80040aa:	2608      	movs	r6, #8
 80040ac:	e7ad      	b.n	800400a <_strtol_l.isra.0+0x4a>
 80040ae:	2c30      	cmp	r4, #48	; 0x30
 80040b0:	d0a3      	beq.n	8003ffa <_strtol_l.isra.0+0x3a>
 80040b2:	260a      	movs	r6, #10
 80040b4:	e7a9      	b.n	800400a <_strtol_l.isra.0+0x4a>
	...

080040b8 <_strtol_r>:
 80040b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80040ba:	4c06      	ldr	r4, [pc, #24]	; (80040d4 <_strtol_r+0x1c>)
 80040bc:	4d06      	ldr	r5, [pc, #24]	; (80040d8 <_strtol_r+0x20>)
 80040be:	6824      	ldr	r4, [r4, #0]
 80040c0:	6a24      	ldr	r4, [r4, #32]
 80040c2:	2c00      	cmp	r4, #0
 80040c4:	bf08      	it	eq
 80040c6:	462c      	moveq	r4, r5
 80040c8:	9400      	str	r4, [sp, #0]
 80040ca:	f7ff ff79 	bl	8003fc0 <_strtol_l.isra.0>
 80040ce:	b003      	add	sp, #12
 80040d0:	bd30      	pop	{r4, r5, pc}
 80040d2:	bf00      	nop
 80040d4:	20000014 	.word	0x20000014
 80040d8:	20000078 	.word	0x20000078

080040dc <__swbuf_r>:
 80040dc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80040de:	460e      	mov	r6, r1
 80040e0:	4614      	mov	r4, r2
 80040e2:	4605      	mov	r5, r0
 80040e4:	b118      	cbz	r0, 80040ee <__swbuf_r+0x12>
 80040e6:	6983      	ldr	r3, [r0, #24]
 80040e8:	b90b      	cbnz	r3, 80040ee <__swbuf_r+0x12>
 80040ea:	f000 ffe9 	bl	80050c0 <__sinit>
 80040ee:	4b21      	ldr	r3, [pc, #132]	; (8004174 <__swbuf_r+0x98>)
 80040f0:	429c      	cmp	r4, r3
 80040f2:	d12a      	bne.n	800414a <__swbuf_r+0x6e>
 80040f4:	686c      	ldr	r4, [r5, #4]
 80040f6:	69a3      	ldr	r3, [r4, #24]
 80040f8:	60a3      	str	r3, [r4, #8]
 80040fa:	89a3      	ldrh	r3, [r4, #12]
 80040fc:	071a      	lsls	r2, r3, #28
 80040fe:	d52e      	bpl.n	800415e <__swbuf_r+0x82>
 8004100:	6923      	ldr	r3, [r4, #16]
 8004102:	b363      	cbz	r3, 800415e <__swbuf_r+0x82>
 8004104:	6923      	ldr	r3, [r4, #16]
 8004106:	6820      	ldr	r0, [r4, #0]
 8004108:	b2f6      	uxtb	r6, r6
 800410a:	1ac0      	subs	r0, r0, r3
 800410c:	6963      	ldr	r3, [r4, #20]
 800410e:	4637      	mov	r7, r6
 8004110:	4283      	cmp	r3, r0
 8004112:	dc04      	bgt.n	800411e <__swbuf_r+0x42>
 8004114:	4621      	mov	r1, r4
 8004116:	4628      	mov	r0, r5
 8004118:	f000 ff68 	bl	8004fec <_fflush_r>
 800411c:	bb28      	cbnz	r0, 800416a <__swbuf_r+0x8e>
 800411e:	68a3      	ldr	r3, [r4, #8]
 8004120:	3001      	adds	r0, #1
 8004122:	3b01      	subs	r3, #1
 8004124:	60a3      	str	r3, [r4, #8]
 8004126:	6823      	ldr	r3, [r4, #0]
 8004128:	1c5a      	adds	r2, r3, #1
 800412a:	6022      	str	r2, [r4, #0]
 800412c:	701e      	strb	r6, [r3, #0]
 800412e:	6963      	ldr	r3, [r4, #20]
 8004130:	4283      	cmp	r3, r0
 8004132:	d004      	beq.n	800413e <__swbuf_r+0x62>
 8004134:	89a3      	ldrh	r3, [r4, #12]
 8004136:	07db      	lsls	r3, r3, #31
 8004138:	d519      	bpl.n	800416e <__swbuf_r+0x92>
 800413a:	2e0a      	cmp	r6, #10
 800413c:	d117      	bne.n	800416e <__swbuf_r+0x92>
 800413e:	4621      	mov	r1, r4
 8004140:	4628      	mov	r0, r5
 8004142:	f000 ff53 	bl	8004fec <_fflush_r>
 8004146:	b190      	cbz	r0, 800416e <__swbuf_r+0x92>
 8004148:	e00f      	b.n	800416a <__swbuf_r+0x8e>
 800414a:	4b0b      	ldr	r3, [pc, #44]	; (8004178 <__swbuf_r+0x9c>)
 800414c:	429c      	cmp	r4, r3
 800414e:	d101      	bne.n	8004154 <__swbuf_r+0x78>
 8004150:	68ac      	ldr	r4, [r5, #8]
 8004152:	e7d0      	b.n	80040f6 <__swbuf_r+0x1a>
 8004154:	4b09      	ldr	r3, [pc, #36]	; (800417c <__swbuf_r+0xa0>)
 8004156:	429c      	cmp	r4, r3
 8004158:	bf08      	it	eq
 800415a:	68ec      	ldreq	r4, [r5, #12]
 800415c:	e7cb      	b.n	80040f6 <__swbuf_r+0x1a>
 800415e:	4621      	mov	r1, r4
 8004160:	4628      	mov	r0, r5
 8004162:	f000 f80d 	bl	8004180 <__swsetup_r>
 8004166:	2800      	cmp	r0, #0
 8004168:	d0cc      	beq.n	8004104 <__swbuf_r+0x28>
 800416a:	f04f 37ff 	mov.w	r7, #4294967295	; 0xffffffff
 800416e:	4638      	mov	r0, r7
 8004170:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8004172:	bf00      	nop
 8004174:	08006fd0 	.word	0x08006fd0
 8004178:	08006ff0 	.word	0x08006ff0
 800417c:	08006fb0 	.word	0x08006fb0

08004180 <__swsetup_r>:
 8004180:	4b32      	ldr	r3, [pc, #200]	; (800424c <__swsetup_r+0xcc>)
 8004182:	b570      	push	{r4, r5, r6, lr}
 8004184:	681d      	ldr	r5, [r3, #0]
 8004186:	4606      	mov	r6, r0
 8004188:	460c      	mov	r4, r1
 800418a:	b125      	cbz	r5, 8004196 <__swsetup_r+0x16>
 800418c:	69ab      	ldr	r3, [r5, #24]
 800418e:	b913      	cbnz	r3, 8004196 <__swsetup_r+0x16>
 8004190:	4628      	mov	r0, r5
 8004192:	f000 ff95 	bl	80050c0 <__sinit>
 8004196:	4b2e      	ldr	r3, [pc, #184]	; (8004250 <__swsetup_r+0xd0>)
 8004198:	429c      	cmp	r4, r3
 800419a:	d10f      	bne.n	80041bc <__swsetup_r+0x3c>
 800419c:	686c      	ldr	r4, [r5, #4]
 800419e:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80041a2:	b29a      	uxth	r2, r3
 80041a4:	0715      	lsls	r5, r2, #28
 80041a6:	d42c      	bmi.n	8004202 <__swsetup_r+0x82>
 80041a8:	06d0      	lsls	r0, r2, #27
 80041aa:	d411      	bmi.n	80041d0 <__swsetup_r+0x50>
 80041ac:	2209      	movs	r2, #9
 80041ae:	6032      	str	r2, [r6, #0]
 80041b0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80041b4:	81a3      	strh	r3, [r4, #12]
 80041b6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80041ba:	e03e      	b.n	800423a <__swsetup_r+0xba>
 80041bc:	4b25      	ldr	r3, [pc, #148]	; (8004254 <__swsetup_r+0xd4>)
 80041be:	429c      	cmp	r4, r3
 80041c0:	d101      	bne.n	80041c6 <__swsetup_r+0x46>
 80041c2:	68ac      	ldr	r4, [r5, #8]
 80041c4:	e7eb      	b.n	800419e <__swsetup_r+0x1e>
 80041c6:	4b24      	ldr	r3, [pc, #144]	; (8004258 <__swsetup_r+0xd8>)
 80041c8:	429c      	cmp	r4, r3
 80041ca:	bf08      	it	eq
 80041cc:	68ec      	ldreq	r4, [r5, #12]
 80041ce:	e7e6      	b.n	800419e <__swsetup_r+0x1e>
 80041d0:	0751      	lsls	r1, r2, #29
 80041d2:	d512      	bpl.n	80041fa <__swsetup_r+0x7a>
 80041d4:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80041d6:	b141      	cbz	r1, 80041ea <__swsetup_r+0x6a>
 80041d8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 80041dc:	4299      	cmp	r1, r3
 80041de:	d002      	beq.n	80041e6 <__swsetup_r+0x66>
 80041e0:	4630      	mov	r0, r6
 80041e2:	f001 ffd1 	bl	8006188 <_free_r>
 80041e6:	2300      	movs	r3, #0
 80041e8:	6363      	str	r3, [r4, #52]	; 0x34
 80041ea:	89a3      	ldrh	r3, [r4, #12]
 80041ec:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80041f0:	81a3      	strh	r3, [r4, #12]
 80041f2:	2300      	movs	r3, #0
 80041f4:	6063      	str	r3, [r4, #4]
 80041f6:	6923      	ldr	r3, [r4, #16]
 80041f8:	6023      	str	r3, [r4, #0]
 80041fa:	89a3      	ldrh	r3, [r4, #12]
 80041fc:	f043 0308 	orr.w	r3, r3, #8
 8004200:	81a3      	strh	r3, [r4, #12]
 8004202:	6923      	ldr	r3, [r4, #16]
 8004204:	b94b      	cbnz	r3, 800421a <__swsetup_r+0x9a>
 8004206:	89a3      	ldrh	r3, [r4, #12]
 8004208:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800420c:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8004210:	d003      	beq.n	800421a <__swsetup_r+0x9a>
 8004212:	4621      	mov	r1, r4
 8004214:	4630      	mov	r0, r6
 8004216:	f001 fb3d 	bl	8005894 <__smakebuf_r>
 800421a:	89a2      	ldrh	r2, [r4, #12]
 800421c:	f012 0301 	ands.w	r3, r2, #1
 8004220:	d00c      	beq.n	800423c <__swsetup_r+0xbc>
 8004222:	2300      	movs	r3, #0
 8004224:	60a3      	str	r3, [r4, #8]
 8004226:	6963      	ldr	r3, [r4, #20]
 8004228:	425b      	negs	r3, r3
 800422a:	61a3      	str	r3, [r4, #24]
 800422c:	6923      	ldr	r3, [r4, #16]
 800422e:	b953      	cbnz	r3, 8004246 <__swsetup_r+0xc6>
 8004230:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8004234:	f013 0080 	ands.w	r0, r3, #128	; 0x80
 8004238:	d1ba      	bne.n	80041b0 <__swsetup_r+0x30>
 800423a:	bd70      	pop	{r4, r5, r6, pc}
 800423c:	0792      	lsls	r2, r2, #30
 800423e:	bf58      	it	pl
 8004240:	6963      	ldrpl	r3, [r4, #20]
 8004242:	60a3      	str	r3, [r4, #8]
 8004244:	e7f2      	b.n	800422c <__swsetup_r+0xac>
 8004246:	2000      	movs	r0, #0
 8004248:	e7f7      	b.n	800423a <__swsetup_r+0xba>
 800424a:	bf00      	nop
 800424c:	20000014 	.word	0x20000014
 8004250:	08006fd0 	.word	0x08006fd0
 8004254:	08006ff0 	.word	0x08006ff0
 8004258:	08006fb0 	.word	0x08006fb0

0800425c <quorem>:
 800425c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004260:	6903      	ldr	r3, [r0, #16]
 8004262:	690c      	ldr	r4, [r1, #16]
 8004264:	4680      	mov	r8, r0
 8004266:	42a3      	cmp	r3, r4
 8004268:	f2c0 8084 	blt.w	8004374 <quorem+0x118>
 800426c:	3c01      	subs	r4, #1
 800426e:	f101 0714 	add.w	r7, r1, #20
 8004272:	f100 0614 	add.w	r6, r0, #20
 8004276:	f857 5024 	ldr.w	r5, [r7, r4, lsl #2]
 800427a:	f856 0024 	ldr.w	r0, [r6, r4, lsl #2]
 800427e:	3501      	adds	r5, #1
 8004280:	fbb0 f5f5 	udiv	r5, r0, r5
 8004284:	ea4f 0c84 	mov.w	ip, r4, lsl #2
 8004288:	eb06 030c 	add.w	r3, r6, ip
 800428c:	eb07 090c 	add.w	r9, r7, ip
 8004290:	9301      	str	r3, [sp, #4]
 8004292:	b39d      	cbz	r5, 80042fc <quorem+0xa0>
 8004294:	f04f 0a00 	mov.w	sl, #0
 8004298:	4638      	mov	r0, r7
 800429a:	46b6      	mov	lr, r6
 800429c:	46d3      	mov	fp, sl
 800429e:	f850 2b04 	ldr.w	r2, [r0], #4
 80042a2:	b293      	uxth	r3, r2
 80042a4:	fb05 a303 	mla	r3, r5, r3, sl
 80042a8:	0c12      	lsrs	r2, r2, #16
 80042aa:	ea4f 4a13 	mov.w	sl, r3, lsr #16
 80042ae:	fb05 a202 	mla	r2, r5, r2, sl
 80042b2:	b29b      	uxth	r3, r3
 80042b4:	ebab 0303 	sub.w	r3, fp, r3
 80042b8:	f8de b000 	ldr.w	fp, [lr]
 80042bc:	ea4f 4a12 	mov.w	sl, r2, lsr #16
 80042c0:	fa1f fb8b 	uxth.w	fp, fp
 80042c4:	445b      	add	r3, fp
 80042c6:	fa1f fb82 	uxth.w	fp, r2
 80042ca:	f8de 2000 	ldr.w	r2, [lr]
 80042ce:	4581      	cmp	r9, r0
 80042d0:	ebcb 4212 	rsb	r2, fp, r2, lsr #16
 80042d4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80042d8:	b29b      	uxth	r3, r3
 80042da:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80042de:	ea4f 4b22 	mov.w	fp, r2, asr #16
 80042e2:	f84e 3b04 	str.w	r3, [lr], #4
 80042e6:	d2da      	bcs.n	800429e <quorem+0x42>
 80042e8:	f856 300c 	ldr.w	r3, [r6, ip]
 80042ec:	b933      	cbnz	r3, 80042fc <quorem+0xa0>
 80042ee:	9b01      	ldr	r3, [sp, #4]
 80042f0:	3b04      	subs	r3, #4
 80042f2:	429e      	cmp	r6, r3
 80042f4:	461a      	mov	r2, r3
 80042f6:	d331      	bcc.n	800435c <quorem+0x100>
 80042f8:	f8c8 4010 	str.w	r4, [r8, #16]
 80042fc:	4640      	mov	r0, r8
 80042fe:	f001 fd8f 	bl	8005e20 <__mcmp>
 8004302:	2800      	cmp	r0, #0
 8004304:	db26      	blt.n	8004354 <quorem+0xf8>
 8004306:	4630      	mov	r0, r6
 8004308:	f04f 0c00 	mov.w	ip, #0
 800430c:	3501      	adds	r5, #1
 800430e:	f857 1b04 	ldr.w	r1, [r7], #4
 8004312:	f8d0 e000 	ldr.w	lr, [r0]
 8004316:	b28b      	uxth	r3, r1
 8004318:	ebac 0303 	sub.w	r3, ip, r3
 800431c:	fa1f f28e 	uxth.w	r2, lr
 8004320:	4413      	add	r3, r2
 8004322:	0c0a      	lsrs	r2, r1, #16
 8004324:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 8004328:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800432c:	b29b      	uxth	r3, r3
 800432e:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8004332:	45b9      	cmp	r9, r7
 8004334:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8004338:	f840 3b04 	str.w	r3, [r0], #4
 800433c:	d2e7      	bcs.n	800430e <quorem+0xb2>
 800433e:	f856 2024 	ldr.w	r2, [r6, r4, lsl #2]
 8004342:	eb06 0384 	add.w	r3, r6, r4, lsl #2
 8004346:	b92a      	cbnz	r2, 8004354 <quorem+0xf8>
 8004348:	3b04      	subs	r3, #4
 800434a:	429e      	cmp	r6, r3
 800434c:	461a      	mov	r2, r3
 800434e:	d30b      	bcc.n	8004368 <quorem+0x10c>
 8004350:	f8c8 4010 	str.w	r4, [r8, #16]
 8004354:	4628      	mov	r0, r5
 8004356:	b003      	add	sp, #12
 8004358:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800435c:	6812      	ldr	r2, [r2, #0]
 800435e:	3b04      	subs	r3, #4
 8004360:	2a00      	cmp	r2, #0
 8004362:	d1c9      	bne.n	80042f8 <quorem+0x9c>
 8004364:	3c01      	subs	r4, #1
 8004366:	e7c4      	b.n	80042f2 <quorem+0x96>
 8004368:	6812      	ldr	r2, [r2, #0]
 800436a:	3b04      	subs	r3, #4
 800436c:	2a00      	cmp	r2, #0
 800436e:	d1ef      	bne.n	8004350 <quorem+0xf4>
 8004370:	3c01      	subs	r4, #1
 8004372:	e7ea      	b.n	800434a <quorem+0xee>
 8004374:	2000      	movs	r0, #0
 8004376:	e7ee      	b.n	8004356 <quorem+0xfa>

08004378 <_dtoa_r>:
 8004378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800437c:	4616      	mov	r6, r2
 800437e:	461f      	mov	r7, r3
 8004380:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8004382:	b095      	sub	sp, #84	; 0x54
 8004384:	4604      	mov	r4, r0
 8004386:	f8dd 8084 	ldr.w	r8, [sp, #132]	; 0x84
 800438a:	e9cd 6702 	strd	r6, r7, [sp, #8]
 800438e:	b93d      	cbnz	r5, 80043a0 <_dtoa_r+0x28>
 8004390:	2010      	movs	r0, #16
 8004392:	f001 fabf 	bl	8005914 <malloc>
 8004396:	6260      	str	r0, [r4, #36]	; 0x24
 8004398:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800439c:	6005      	str	r5, [r0, #0]
 800439e:	60c5      	str	r5, [r0, #12]
 80043a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80043a2:	6819      	ldr	r1, [r3, #0]
 80043a4:	b151      	cbz	r1, 80043bc <_dtoa_r+0x44>
 80043a6:	685a      	ldr	r2, [r3, #4]
 80043a8:	2301      	movs	r3, #1
 80043aa:	4093      	lsls	r3, r2
 80043ac:	604a      	str	r2, [r1, #4]
 80043ae:	608b      	str	r3, [r1, #8]
 80043b0:	4620      	mov	r0, r4
 80043b2:	f001 fb16 	bl	80059e2 <_Bfree>
 80043b6:	2200      	movs	r2, #0
 80043b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80043ba:	601a      	str	r2, [r3, #0]
 80043bc:	1e3b      	subs	r3, r7, #0
 80043be:	bfaf      	iteee	ge
 80043c0:	2300      	movge	r3, #0
 80043c2:	2201      	movlt	r2, #1
 80043c4:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 80043c8:	9303      	strlt	r3, [sp, #12]
 80043ca:	bfac      	ite	ge
 80043cc:	f8c8 3000 	strge.w	r3, [r8]
 80043d0:	f8c8 2000 	strlt.w	r2, [r8]
 80043d4:	4bae      	ldr	r3, [pc, #696]	; (8004690 <_dtoa_r+0x318>)
 80043d6:	f8dd 800c 	ldr.w	r8, [sp, #12]
 80043da:	ea33 0308 	bics.w	r3, r3, r8
 80043de:	d11b      	bne.n	8004418 <_dtoa_r+0xa0>
 80043e0:	f242 730f 	movw	r3, #9999	; 0x270f
 80043e4:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80043e6:	6013      	str	r3, [r2, #0]
 80043e8:	9b02      	ldr	r3, [sp, #8]
 80043ea:	b923      	cbnz	r3, 80043f6 <_dtoa_r+0x7e>
 80043ec:	f3c8 0013 	ubfx	r0, r8, #0, #20
 80043f0:	2800      	cmp	r0, #0
 80043f2:	f000 8545 	beq.w	8004e80 <_dtoa_r+0xb08>
 80043f6:	9b22      	ldr	r3, [sp, #136]	; 0x88
 80043f8:	b953      	cbnz	r3, 8004410 <_dtoa_r+0x98>
 80043fa:	4ba6      	ldr	r3, [pc, #664]	; (8004694 <_dtoa_r+0x31c>)
 80043fc:	e021      	b.n	8004442 <_dtoa_r+0xca>
 80043fe:	4ba6      	ldr	r3, [pc, #664]	; (8004698 <_dtoa_r+0x320>)
 8004400:	9306      	str	r3, [sp, #24]
 8004402:	3308      	adds	r3, #8
 8004404:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8004406:	6013      	str	r3, [r2, #0]
 8004408:	9806      	ldr	r0, [sp, #24]
 800440a:	b015      	add	sp, #84	; 0x54
 800440c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004410:	4ba0      	ldr	r3, [pc, #640]	; (8004694 <_dtoa_r+0x31c>)
 8004412:	9306      	str	r3, [sp, #24]
 8004414:	3303      	adds	r3, #3
 8004416:	e7f5      	b.n	8004404 <_dtoa_r+0x8c>
 8004418:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800441c:	2200      	movs	r2, #0
 800441e:	2300      	movs	r3, #0
 8004420:	4630      	mov	r0, r6
 8004422:	4639      	mov	r1, r7
 8004424:	f7fc fac0 	bl	80009a8 <__aeabi_dcmpeq>
 8004428:	4682      	mov	sl, r0
 800442a:	b160      	cbz	r0, 8004446 <_dtoa_r+0xce>
 800442c:	2301      	movs	r3, #1
 800442e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004430:	6013      	str	r3, [r2, #0]
 8004432:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004434:	2b00      	cmp	r3, #0
 8004436:	f000 8520 	beq.w	8004e7a <_dtoa_r+0xb02>
 800443a:	4b98      	ldr	r3, [pc, #608]	; (800469c <_dtoa_r+0x324>)
 800443c:	9a22      	ldr	r2, [sp, #136]	; 0x88
 800443e:	6013      	str	r3, [r2, #0]
 8004440:	3b01      	subs	r3, #1
 8004442:	9306      	str	r3, [sp, #24]
 8004444:	e7e0      	b.n	8004408 <_dtoa_r+0x90>
 8004446:	ab12      	add	r3, sp, #72	; 0x48
 8004448:	9301      	str	r3, [sp, #4]
 800444a:	ab13      	add	r3, sp, #76	; 0x4c
 800444c:	9300      	str	r3, [sp, #0]
 800444e:	4632      	mov	r2, r6
 8004450:	463b      	mov	r3, r7
 8004452:	4620      	mov	r0, r4
 8004454:	f001 fdd2 	bl	8005ffc <__d2b>
 8004458:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800445c:	4683      	mov	fp, r0
 800445e:	2d00      	cmp	r5, #0
 8004460:	d07d      	beq.n	800455e <_dtoa_r+0x1e6>
 8004462:	46b0      	mov	r8, r6
 8004464:	f3c7 0313 	ubfx	r3, r7, #0, #20
 8004468:	f043 597f 	orr.w	r9, r3, #1069547520	; 0x3fc00000
 800446c:	f449 1940 	orr.w	r9, r9, #3145728	; 0x300000
 8004470:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8004474:	f8cd a040 	str.w	sl, [sp, #64]	; 0x40
 8004478:	2200      	movs	r2, #0
 800447a:	4b89      	ldr	r3, [pc, #548]	; (80046a0 <_dtoa_r+0x328>)
 800447c:	4640      	mov	r0, r8
 800447e:	4649      	mov	r1, r9
 8004480:	f7fb fe72 	bl	8000168 <__aeabi_dsub>
 8004484:	a37c      	add	r3, pc, #496	; (adr r3, 8004678 <_dtoa_r+0x300>)
 8004486:	e9d3 2300 	ldrd	r2, r3, [r3]
 800448a:	f7fc f825 	bl	80004d8 <__aeabi_dmul>
 800448e:	a37c      	add	r3, pc, #496	; (adr r3, 8004680 <_dtoa_r+0x308>)
 8004490:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004494:	f7fb fe6a 	bl	800016c <__adddf3>
 8004498:	4606      	mov	r6, r0
 800449a:	4628      	mov	r0, r5
 800449c:	460f      	mov	r7, r1
 800449e:	f7fb ffb1 	bl	8000404 <__aeabi_i2d>
 80044a2:	a379      	add	r3, pc, #484	; (adr r3, 8004688 <_dtoa_r+0x310>)
 80044a4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80044a8:	f7fc f816 	bl	80004d8 <__aeabi_dmul>
 80044ac:	4602      	mov	r2, r0
 80044ae:	460b      	mov	r3, r1
 80044b0:	4630      	mov	r0, r6
 80044b2:	4639      	mov	r1, r7
 80044b4:	f7fb fe5a 	bl	800016c <__adddf3>
 80044b8:	4606      	mov	r6, r0
 80044ba:	460f      	mov	r7, r1
 80044bc:	f7fc fabc 	bl	8000a38 <__aeabi_d2iz>
 80044c0:	2200      	movs	r2, #0
 80044c2:	4682      	mov	sl, r0
 80044c4:	2300      	movs	r3, #0
 80044c6:	4630      	mov	r0, r6
 80044c8:	4639      	mov	r1, r7
 80044ca:	f7fc fa77 	bl	80009bc <__aeabi_dcmplt>
 80044ce:	b148      	cbz	r0, 80044e4 <_dtoa_r+0x16c>
 80044d0:	4650      	mov	r0, sl
 80044d2:	f7fb ff97 	bl	8000404 <__aeabi_i2d>
 80044d6:	4632      	mov	r2, r6
 80044d8:	463b      	mov	r3, r7
 80044da:	f7fc fa65 	bl	80009a8 <__aeabi_dcmpeq>
 80044de:	b908      	cbnz	r0, 80044e4 <_dtoa_r+0x16c>
 80044e0:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 80044e4:	f1ba 0f16 	cmp.w	sl, #22
 80044e8:	d85a      	bhi.n	80045a0 <_dtoa_r+0x228>
 80044ea:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80044ee:	496d      	ldr	r1, [pc, #436]	; (80046a4 <_dtoa_r+0x32c>)
 80044f0:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 80044f4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80044f8:	f7fc fa7e 	bl	80009f8 <__aeabi_dcmpgt>
 80044fc:	2800      	cmp	r0, #0
 80044fe:	d051      	beq.n	80045a4 <_dtoa_r+0x22c>
 8004500:	2300      	movs	r3, #0
 8004502:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8004506:	930d      	str	r3, [sp, #52]	; 0x34
 8004508:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800450a:	1b5d      	subs	r5, r3, r5
 800450c:	1e6b      	subs	r3, r5, #1
 800450e:	9307      	str	r3, [sp, #28]
 8004510:	bf43      	ittte	mi
 8004512:	2300      	movmi	r3, #0
 8004514:	f1c5 0901 	rsbmi	r9, r5, #1
 8004518:	9307      	strmi	r3, [sp, #28]
 800451a:	f04f 0900 	movpl.w	r9, #0
 800451e:	f1ba 0f00 	cmp.w	sl, #0
 8004522:	db41      	blt.n	80045a8 <_dtoa_r+0x230>
 8004524:	9b07      	ldr	r3, [sp, #28]
 8004526:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 800452a:	4453      	add	r3, sl
 800452c:	9307      	str	r3, [sp, #28]
 800452e:	2300      	movs	r3, #0
 8004530:	9308      	str	r3, [sp, #32]
 8004532:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004534:	2b09      	cmp	r3, #9
 8004536:	f200 808f 	bhi.w	8004658 <_dtoa_r+0x2e0>
 800453a:	2b05      	cmp	r3, #5
 800453c:	bfc4      	itt	gt
 800453e:	3b04      	subgt	r3, #4
 8004540:	931e      	strgt	r3, [sp, #120]	; 0x78
 8004542:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004544:	bfc8      	it	gt
 8004546:	2500      	movgt	r5, #0
 8004548:	f1a3 0302 	sub.w	r3, r3, #2
 800454c:	bfd8      	it	le
 800454e:	2501      	movle	r5, #1
 8004550:	2b03      	cmp	r3, #3
 8004552:	f200 808d 	bhi.w	8004670 <_dtoa_r+0x2f8>
 8004556:	e8df f003 	tbb	[pc, r3]
 800455a:	7d7b      	.short	0x7d7b
 800455c:	6f2f      	.short	0x6f2f
 800455e:	e9dd 5312 	ldrd	r5, r3, [sp, #72]	; 0x48
 8004562:	441d      	add	r5, r3
 8004564:	f205 4032 	addw	r0, r5, #1074	; 0x432
 8004568:	2820      	cmp	r0, #32
 800456a:	dd13      	ble.n	8004594 <_dtoa_r+0x21c>
 800456c:	f1c0 0040 	rsb	r0, r0, #64	; 0x40
 8004570:	9b02      	ldr	r3, [sp, #8]
 8004572:	fa08 f800 	lsl.w	r8, r8, r0
 8004576:	f205 4012 	addw	r0, r5, #1042	; 0x412
 800457a:	fa23 f000 	lsr.w	r0, r3, r0
 800457e:	ea48 0000 	orr.w	r0, r8, r0
 8004582:	f7fb ff2f 	bl	80003e4 <__aeabi_ui2d>
 8004586:	2301      	movs	r3, #1
 8004588:	4680      	mov	r8, r0
 800458a:	f1a1 79f8 	sub.w	r9, r1, #32505856	; 0x1f00000
 800458e:	3d01      	subs	r5, #1
 8004590:	9310      	str	r3, [sp, #64]	; 0x40
 8004592:	e771      	b.n	8004478 <_dtoa_r+0x100>
 8004594:	9b02      	ldr	r3, [sp, #8]
 8004596:	f1c0 0020 	rsb	r0, r0, #32
 800459a:	fa03 f000 	lsl.w	r0, r3, r0
 800459e:	e7f0      	b.n	8004582 <_dtoa_r+0x20a>
 80045a0:	2301      	movs	r3, #1
 80045a2:	e7b0      	b.n	8004506 <_dtoa_r+0x18e>
 80045a4:	900d      	str	r0, [sp, #52]	; 0x34
 80045a6:	e7af      	b.n	8004508 <_dtoa_r+0x190>
 80045a8:	f1ca 0300 	rsb	r3, sl, #0
 80045ac:	9308      	str	r3, [sp, #32]
 80045ae:	2300      	movs	r3, #0
 80045b0:	eba9 090a 	sub.w	r9, r9, sl
 80045b4:	930c      	str	r3, [sp, #48]	; 0x30
 80045b6:	e7bc      	b.n	8004532 <_dtoa_r+0x1ba>
 80045b8:	2301      	movs	r3, #1
 80045ba:	9309      	str	r3, [sp, #36]	; 0x24
 80045bc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80045be:	2b00      	cmp	r3, #0
 80045c0:	dd74      	ble.n	80046ac <_dtoa_r+0x334>
 80045c2:	4698      	mov	r8, r3
 80045c4:	9304      	str	r3, [sp, #16]
 80045c6:	2200      	movs	r2, #0
 80045c8:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80045ca:	6072      	str	r2, [r6, #4]
 80045cc:	2204      	movs	r2, #4
 80045ce:	f102 0014 	add.w	r0, r2, #20
 80045d2:	4298      	cmp	r0, r3
 80045d4:	6871      	ldr	r1, [r6, #4]
 80045d6:	d96e      	bls.n	80046b6 <_dtoa_r+0x33e>
 80045d8:	4620      	mov	r0, r4
 80045da:	f001 f9ce 	bl	800597a <_Balloc>
 80045de:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80045e0:	6030      	str	r0, [r6, #0]
 80045e2:	681b      	ldr	r3, [r3, #0]
 80045e4:	f1b8 0f0e 	cmp.w	r8, #14
 80045e8:	9306      	str	r3, [sp, #24]
 80045ea:	f200 80ed 	bhi.w	80047c8 <_dtoa_r+0x450>
 80045ee:	2d00      	cmp	r5, #0
 80045f0:	f000 80ea 	beq.w	80047c8 <_dtoa_r+0x450>
 80045f4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80045f8:	f1ba 0f00 	cmp.w	sl, #0
 80045fc:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8004600:	dd77      	ble.n	80046f2 <_dtoa_r+0x37a>
 8004602:	4a28      	ldr	r2, [pc, #160]	; (80046a4 <_dtoa_r+0x32c>)
 8004604:	f00a 030f 	and.w	r3, sl, #15
 8004608:	ea4f 162a 	mov.w	r6, sl, asr #4
 800460c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8004610:	06f0      	lsls	r0, r6, #27
 8004612:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004616:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 800461a:	d568      	bpl.n	80046ee <_dtoa_r+0x376>
 800461c:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8004620:	4b21      	ldr	r3, [pc, #132]	; (80046a8 <_dtoa_r+0x330>)
 8004622:	2503      	movs	r5, #3
 8004624:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8004628:	f7fc f880 	bl	800072c <__aeabi_ddiv>
 800462c:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004630:	f006 060f 	and.w	r6, r6, #15
 8004634:	4f1c      	ldr	r7, [pc, #112]	; (80046a8 <_dtoa_r+0x330>)
 8004636:	e04f      	b.n	80046d8 <_dtoa_r+0x360>
 8004638:	2301      	movs	r3, #1
 800463a:	9309      	str	r3, [sp, #36]	; 0x24
 800463c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 800463e:	4453      	add	r3, sl
 8004640:	f103 0801 	add.w	r8, r3, #1
 8004644:	9304      	str	r3, [sp, #16]
 8004646:	4643      	mov	r3, r8
 8004648:	2b01      	cmp	r3, #1
 800464a:	bfb8      	it	lt
 800464c:	2301      	movlt	r3, #1
 800464e:	e7ba      	b.n	80045c6 <_dtoa_r+0x24e>
 8004650:	2300      	movs	r3, #0
 8004652:	e7b2      	b.n	80045ba <_dtoa_r+0x242>
 8004654:	2300      	movs	r3, #0
 8004656:	e7f0      	b.n	800463a <_dtoa_r+0x2c2>
 8004658:	2501      	movs	r5, #1
 800465a:	2300      	movs	r3, #0
 800465c:	9509      	str	r5, [sp, #36]	; 0x24
 800465e:	931e      	str	r3, [sp, #120]	; 0x78
 8004660:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8004664:	2200      	movs	r2, #0
 8004666:	9304      	str	r3, [sp, #16]
 8004668:	4698      	mov	r8, r3
 800466a:	2312      	movs	r3, #18
 800466c:	921f      	str	r2, [sp, #124]	; 0x7c
 800466e:	e7aa      	b.n	80045c6 <_dtoa_r+0x24e>
 8004670:	2301      	movs	r3, #1
 8004672:	9309      	str	r3, [sp, #36]	; 0x24
 8004674:	e7f4      	b.n	8004660 <_dtoa_r+0x2e8>
 8004676:	bf00      	nop
 8004678:	636f4361 	.word	0x636f4361
 800467c:	3fd287a7 	.word	0x3fd287a7
 8004680:	8b60c8b3 	.word	0x8b60c8b3
 8004684:	3fc68a28 	.word	0x3fc68a28
 8004688:	509f79fb 	.word	0x509f79fb
 800468c:	3fd34413 	.word	0x3fd34413
 8004690:	7ff00000 	.word	0x7ff00000
 8004694:	08006fa9 	.word	0x08006fa9
 8004698:	08006fa0 	.word	0x08006fa0
 800469c:	08006f25 	.word	0x08006f25
 80046a0:	3ff80000 	.word	0x3ff80000
 80046a4:	08007048 	.word	0x08007048
 80046a8:	08007020 	.word	0x08007020
 80046ac:	2301      	movs	r3, #1
 80046ae:	9304      	str	r3, [sp, #16]
 80046b0:	4698      	mov	r8, r3
 80046b2:	461a      	mov	r2, r3
 80046b4:	e7da      	b.n	800466c <_dtoa_r+0x2f4>
 80046b6:	3101      	adds	r1, #1
 80046b8:	6071      	str	r1, [r6, #4]
 80046ba:	0052      	lsls	r2, r2, #1
 80046bc:	e787      	b.n	80045ce <_dtoa_r+0x256>
 80046be:	07f1      	lsls	r1, r6, #31
 80046c0:	d508      	bpl.n	80046d4 <_dtoa_r+0x35c>
 80046c2:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80046c6:	e9d7 2300 	ldrd	r2, r3, [r7]
 80046ca:	f7fb ff05 	bl	80004d8 <__aeabi_dmul>
 80046ce:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80046d2:	3501      	adds	r5, #1
 80046d4:	1076      	asrs	r6, r6, #1
 80046d6:	3708      	adds	r7, #8
 80046d8:	2e00      	cmp	r6, #0
 80046da:	d1f0      	bne.n	80046be <_dtoa_r+0x346>
 80046dc:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80046e0:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80046e4:	f7fc f822 	bl	800072c <__aeabi_ddiv>
 80046e8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80046ec:	e01b      	b.n	8004726 <_dtoa_r+0x3ae>
 80046ee:	2502      	movs	r5, #2
 80046f0:	e7a0      	b.n	8004634 <_dtoa_r+0x2bc>
 80046f2:	f000 80a4 	beq.w	800483e <_dtoa_r+0x4c6>
 80046f6:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 80046fa:	f1ca 0600 	rsb	r6, sl, #0
 80046fe:	4ba0      	ldr	r3, [pc, #640]	; (8004980 <_dtoa_r+0x608>)
 8004700:	f006 020f 	and.w	r2, r6, #15
 8004704:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8004708:	e9d3 2300 	ldrd	r2, r3, [r3]
 800470c:	f7fb fee4 	bl	80004d8 <__aeabi_dmul>
 8004710:	2502      	movs	r5, #2
 8004712:	2300      	movs	r3, #0
 8004714:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004718:	4f9a      	ldr	r7, [pc, #616]	; (8004984 <_dtoa_r+0x60c>)
 800471a:	1136      	asrs	r6, r6, #4
 800471c:	2e00      	cmp	r6, #0
 800471e:	f040 8083 	bne.w	8004828 <_dtoa_r+0x4b0>
 8004722:	2b00      	cmp	r3, #0
 8004724:	d1e0      	bne.n	80046e8 <_dtoa_r+0x370>
 8004726:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004728:	2b00      	cmp	r3, #0
 800472a:	f000 808a 	beq.w	8004842 <_dtoa_r+0x4ca>
 800472e:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004732:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8004736:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800473a:	2200      	movs	r2, #0
 800473c:	4b92      	ldr	r3, [pc, #584]	; (8004988 <_dtoa_r+0x610>)
 800473e:	f7fc f93d 	bl	80009bc <__aeabi_dcmplt>
 8004742:	2800      	cmp	r0, #0
 8004744:	d07d      	beq.n	8004842 <_dtoa_r+0x4ca>
 8004746:	f1b8 0f00 	cmp.w	r8, #0
 800474a:	d07a      	beq.n	8004842 <_dtoa_r+0x4ca>
 800474c:	9b04      	ldr	r3, [sp, #16]
 800474e:	2b00      	cmp	r3, #0
 8004750:	dd36      	ble.n	80047c0 <_dtoa_r+0x448>
 8004752:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8004756:	2200      	movs	r2, #0
 8004758:	4b8c      	ldr	r3, [pc, #560]	; (800498c <_dtoa_r+0x614>)
 800475a:	f7fb febd 	bl	80004d8 <__aeabi_dmul>
 800475e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004762:	9e04      	ldr	r6, [sp, #16]
 8004764:	f10a 37ff 	add.w	r7, sl, #4294967295	; 0xffffffff
 8004768:	3501      	adds	r5, #1
 800476a:	4628      	mov	r0, r5
 800476c:	f7fb fe4a 	bl	8000404 <__aeabi_i2d>
 8004770:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8004774:	f7fb feb0 	bl	80004d8 <__aeabi_dmul>
 8004778:	2200      	movs	r2, #0
 800477a:	4b85      	ldr	r3, [pc, #532]	; (8004990 <_dtoa_r+0x618>)
 800477c:	f7fb fcf6 	bl	800016c <__adddf3>
 8004780:	f1a1 7550 	sub.w	r5, r1, #54525952	; 0x3400000
 8004784:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8004788:	950b      	str	r5, [sp, #44]	; 0x2c
 800478a:	2e00      	cmp	r6, #0
 800478c:	d15c      	bne.n	8004848 <_dtoa_r+0x4d0>
 800478e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004792:	2200      	movs	r2, #0
 8004794:	4b7f      	ldr	r3, [pc, #508]	; (8004994 <_dtoa_r+0x61c>)
 8004796:	f7fb fce7 	bl	8000168 <__aeabi_dsub>
 800479a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800479c:	462b      	mov	r3, r5
 800479e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80047a2:	f7fc f929 	bl	80009f8 <__aeabi_dcmpgt>
 80047a6:	2800      	cmp	r0, #0
 80047a8:	f040 8281 	bne.w	8004cae <_dtoa_r+0x936>
 80047ac:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80047b0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80047b2:	f105 4300 	add.w	r3, r5, #2147483648	; 0x80000000
 80047b6:	f7fc f901 	bl	80009bc <__aeabi_dcmplt>
 80047ba:	2800      	cmp	r0, #0
 80047bc:	f040 8275 	bne.w	8004caa <_dtoa_r+0x932>
 80047c0:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 80047c4:	e9cd 2302 	strd	r2, r3, [sp, #8]
 80047c8:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80047ca:	2b00      	cmp	r3, #0
 80047cc:	f2c0 814b 	blt.w	8004a66 <_dtoa_r+0x6ee>
 80047d0:	f1ba 0f0e 	cmp.w	sl, #14
 80047d4:	f300 8147 	bgt.w	8004a66 <_dtoa_r+0x6ee>
 80047d8:	4b69      	ldr	r3, [pc, #420]	; (8004980 <_dtoa_r+0x608>)
 80047da:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 80047de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80047e2:	e9cd 2304 	strd	r2, r3, [sp, #16]
 80047e6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80047e8:	2b00      	cmp	r3, #0
 80047ea:	f280 80d7 	bge.w	800499c <_dtoa_r+0x624>
 80047ee:	f1b8 0f00 	cmp.w	r8, #0
 80047f2:	f300 80d3 	bgt.w	800499c <_dtoa_r+0x624>
 80047f6:	f040 8257 	bne.w	8004ca8 <_dtoa_r+0x930>
 80047fa:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 80047fe:	2200      	movs	r2, #0
 8004800:	4b64      	ldr	r3, [pc, #400]	; (8004994 <_dtoa_r+0x61c>)
 8004802:	f7fb fe69 	bl	80004d8 <__aeabi_dmul>
 8004806:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800480a:	f7fc f8eb 	bl	80009e4 <__aeabi_dcmpge>
 800480e:	4646      	mov	r6, r8
 8004810:	4647      	mov	r7, r8
 8004812:	2800      	cmp	r0, #0
 8004814:	f040 822d 	bne.w	8004c72 <_dtoa_r+0x8fa>
 8004818:	9b06      	ldr	r3, [sp, #24]
 800481a:	9a06      	ldr	r2, [sp, #24]
 800481c:	1c5d      	adds	r5, r3, #1
 800481e:	2331      	movs	r3, #49	; 0x31
 8004820:	f10a 0a01 	add.w	sl, sl, #1
 8004824:	7013      	strb	r3, [r2, #0]
 8004826:	e228      	b.n	8004c7a <_dtoa_r+0x902>
 8004828:	07f2      	lsls	r2, r6, #31
 800482a:	d505      	bpl.n	8004838 <_dtoa_r+0x4c0>
 800482c:	e9d7 2300 	ldrd	r2, r3, [r7]
 8004830:	f7fb fe52 	bl	80004d8 <__aeabi_dmul>
 8004834:	2301      	movs	r3, #1
 8004836:	3501      	adds	r5, #1
 8004838:	1076      	asrs	r6, r6, #1
 800483a:	3708      	adds	r7, #8
 800483c:	e76e      	b.n	800471c <_dtoa_r+0x3a4>
 800483e:	2502      	movs	r5, #2
 8004840:	e771      	b.n	8004726 <_dtoa_r+0x3ae>
 8004842:	4657      	mov	r7, sl
 8004844:	4646      	mov	r6, r8
 8004846:	e790      	b.n	800476a <_dtoa_r+0x3f2>
 8004848:	4b4d      	ldr	r3, [pc, #308]	; (8004980 <_dtoa_r+0x608>)
 800484a:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800484e:	e953 0102 	ldrd	r0, r1, [r3, #-8]
 8004852:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004854:	2b00      	cmp	r3, #0
 8004856:	d048      	beq.n	80048ea <_dtoa_r+0x572>
 8004858:	4602      	mov	r2, r0
 800485a:	460b      	mov	r3, r1
 800485c:	2000      	movs	r0, #0
 800485e:	494e      	ldr	r1, [pc, #312]	; (8004998 <_dtoa_r+0x620>)
 8004860:	f7fb ff64 	bl	800072c <__aeabi_ddiv>
 8004864:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004868:	f7fb fc7e 	bl	8000168 <__aeabi_dsub>
 800486c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8004870:	9d06      	ldr	r5, [sp, #24]
 8004872:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004876:	f7fc f8df 	bl	8000a38 <__aeabi_d2iz>
 800487a:	9011      	str	r0, [sp, #68]	; 0x44
 800487c:	f7fb fdc2 	bl	8000404 <__aeabi_i2d>
 8004880:	4602      	mov	r2, r0
 8004882:	460b      	mov	r3, r1
 8004884:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004888:	f7fb fc6e 	bl	8000168 <__aeabi_dsub>
 800488c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800488e:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8004892:	3330      	adds	r3, #48	; 0x30
 8004894:	f805 3b01 	strb.w	r3, [r5], #1
 8004898:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800489c:	f7fc f88e 	bl	80009bc <__aeabi_dcmplt>
 80048a0:	2800      	cmp	r0, #0
 80048a2:	d163      	bne.n	800496c <_dtoa_r+0x5f4>
 80048a4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80048a8:	2000      	movs	r0, #0
 80048aa:	4937      	ldr	r1, [pc, #220]	; (8004988 <_dtoa_r+0x610>)
 80048ac:	f7fb fc5c 	bl	8000168 <__aeabi_dsub>
 80048b0:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80048b4:	f7fc f882 	bl	80009bc <__aeabi_dcmplt>
 80048b8:	2800      	cmp	r0, #0
 80048ba:	f040 80b5 	bne.w	8004a28 <_dtoa_r+0x6b0>
 80048be:	9b06      	ldr	r3, [sp, #24]
 80048c0:	1aeb      	subs	r3, r5, r3
 80048c2:	429e      	cmp	r6, r3
 80048c4:	f77f af7c 	ble.w	80047c0 <_dtoa_r+0x448>
 80048c8:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 80048cc:	2200      	movs	r2, #0
 80048ce:	4b2f      	ldr	r3, [pc, #188]	; (800498c <_dtoa_r+0x614>)
 80048d0:	f7fb fe02 	bl	80004d8 <__aeabi_dmul>
 80048d4:	2200      	movs	r2, #0
 80048d6:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80048da:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 80048de:	4b2b      	ldr	r3, [pc, #172]	; (800498c <_dtoa_r+0x614>)
 80048e0:	f7fb fdfa 	bl	80004d8 <__aeabi_dmul>
 80048e4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80048e8:	e7c3      	b.n	8004872 <_dtoa_r+0x4fa>
 80048ea:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80048ee:	f7fb fdf3 	bl	80004d8 <__aeabi_dmul>
 80048f2:	9b06      	ldr	r3, [sp, #24]
 80048f4:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80048f8:	199d      	adds	r5, r3, r6
 80048fa:	461e      	mov	r6, r3
 80048fc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004900:	f7fc f89a 	bl	8000a38 <__aeabi_d2iz>
 8004904:	9011      	str	r0, [sp, #68]	; 0x44
 8004906:	f7fb fd7d 	bl	8000404 <__aeabi_i2d>
 800490a:	4602      	mov	r2, r0
 800490c:	460b      	mov	r3, r1
 800490e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004912:	f7fb fc29 	bl	8000168 <__aeabi_dsub>
 8004916:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8004918:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800491c:	3330      	adds	r3, #48	; 0x30
 800491e:	f806 3b01 	strb.w	r3, [r6], #1
 8004922:	42ae      	cmp	r6, r5
 8004924:	f04f 0200 	mov.w	r2, #0
 8004928:	d124      	bne.n	8004974 <_dtoa_r+0x5fc>
 800492a:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 800492e:	4b1a      	ldr	r3, [pc, #104]	; (8004998 <_dtoa_r+0x620>)
 8004930:	f7fb fc1c 	bl	800016c <__adddf3>
 8004934:	4602      	mov	r2, r0
 8004936:	460b      	mov	r3, r1
 8004938:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800493c:	f7fc f85c 	bl	80009f8 <__aeabi_dcmpgt>
 8004940:	2800      	cmp	r0, #0
 8004942:	d171      	bne.n	8004a28 <_dtoa_r+0x6b0>
 8004944:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8004948:	2000      	movs	r0, #0
 800494a:	4913      	ldr	r1, [pc, #76]	; (8004998 <_dtoa_r+0x620>)
 800494c:	f7fb fc0c 	bl	8000168 <__aeabi_dsub>
 8004950:	4602      	mov	r2, r0
 8004952:	460b      	mov	r3, r1
 8004954:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8004958:	f7fc f830 	bl	80009bc <__aeabi_dcmplt>
 800495c:	2800      	cmp	r0, #0
 800495e:	f43f af2f 	beq.w	80047c0 <_dtoa_r+0x448>
 8004962:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004966:	1e6a      	subs	r2, r5, #1
 8004968:	2b30      	cmp	r3, #48	; 0x30
 800496a:	d001      	beq.n	8004970 <_dtoa_r+0x5f8>
 800496c:	46ba      	mov	sl, r7
 800496e:	e04a      	b.n	8004a06 <_dtoa_r+0x68e>
 8004970:	4615      	mov	r5, r2
 8004972:	e7f6      	b.n	8004962 <_dtoa_r+0x5ea>
 8004974:	4b05      	ldr	r3, [pc, #20]	; (800498c <_dtoa_r+0x614>)
 8004976:	f7fb fdaf 	bl	80004d8 <__aeabi_dmul>
 800497a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800497e:	e7bd      	b.n	80048fc <_dtoa_r+0x584>
 8004980:	08007048 	.word	0x08007048
 8004984:	08007020 	.word	0x08007020
 8004988:	3ff00000 	.word	0x3ff00000
 800498c:	40240000 	.word	0x40240000
 8004990:	401c0000 	.word	0x401c0000
 8004994:	40140000 	.word	0x40140000
 8004998:	3fe00000 	.word	0x3fe00000
 800499c:	9d06      	ldr	r5, [sp, #24]
 800499e:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80049a2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80049a6:	4630      	mov	r0, r6
 80049a8:	4639      	mov	r1, r7
 80049aa:	f7fb febf 	bl	800072c <__aeabi_ddiv>
 80049ae:	f7fc f843 	bl	8000a38 <__aeabi_d2iz>
 80049b2:	4681      	mov	r9, r0
 80049b4:	f7fb fd26 	bl	8000404 <__aeabi_i2d>
 80049b8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80049bc:	f7fb fd8c 	bl	80004d8 <__aeabi_dmul>
 80049c0:	4602      	mov	r2, r0
 80049c2:	460b      	mov	r3, r1
 80049c4:	4630      	mov	r0, r6
 80049c6:	4639      	mov	r1, r7
 80049c8:	f7fb fbce 	bl	8000168 <__aeabi_dsub>
 80049cc:	f109 0630 	add.w	r6, r9, #48	; 0x30
 80049d0:	f805 6b01 	strb.w	r6, [r5], #1
 80049d4:	9e06      	ldr	r6, [sp, #24]
 80049d6:	4602      	mov	r2, r0
 80049d8:	1bae      	subs	r6, r5, r6
 80049da:	45b0      	cmp	r8, r6
 80049dc:	460b      	mov	r3, r1
 80049de:	d135      	bne.n	8004a4c <_dtoa_r+0x6d4>
 80049e0:	f7fb fbc4 	bl	800016c <__adddf3>
 80049e4:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80049e8:	4606      	mov	r6, r0
 80049ea:	460f      	mov	r7, r1
 80049ec:	f7fc f804 	bl	80009f8 <__aeabi_dcmpgt>
 80049f0:	b9c8      	cbnz	r0, 8004a26 <_dtoa_r+0x6ae>
 80049f2:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80049f6:	4630      	mov	r0, r6
 80049f8:	4639      	mov	r1, r7
 80049fa:	f7fb ffd5 	bl	80009a8 <__aeabi_dcmpeq>
 80049fe:	b110      	cbz	r0, 8004a06 <_dtoa_r+0x68e>
 8004a00:	f019 0f01 	tst.w	r9, #1
 8004a04:	d10f      	bne.n	8004a26 <_dtoa_r+0x6ae>
 8004a06:	4659      	mov	r1, fp
 8004a08:	4620      	mov	r0, r4
 8004a0a:	f000 ffea 	bl	80059e2 <_Bfree>
 8004a0e:	2300      	movs	r3, #0
 8004a10:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8004a12:	702b      	strb	r3, [r5, #0]
 8004a14:	f10a 0301 	add.w	r3, sl, #1
 8004a18:	6013      	str	r3, [r2, #0]
 8004a1a:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004a1c:	2b00      	cmp	r3, #0
 8004a1e:	f43f acf3 	beq.w	8004408 <_dtoa_r+0x90>
 8004a22:	601d      	str	r5, [r3, #0]
 8004a24:	e4f0      	b.n	8004408 <_dtoa_r+0x90>
 8004a26:	4657      	mov	r7, sl
 8004a28:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8004a2c:	1e6b      	subs	r3, r5, #1
 8004a2e:	2a39      	cmp	r2, #57	; 0x39
 8004a30:	d106      	bne.n	8004a40 <_dtoa_r+0x6c8>
 8004a32:	9a06      	ldr	r2, [sp, #24]
 8004a34:	429a      	cmp	r2, r3
 8004a36:	d107      	bne.n	8004a48 <_dtoa_r+0x6d0>
 8004a38:	2330      	movs	r3, #48	; 0x30
 8004a3a:	7013      	strb	r3, [r2, #0]
 8004a3c:	4613      	mov	r3, r2
 8004a3e:	3701      	adds	r7, #1
 8004a40:	781a      	ldrb	r2, [r3, #0]
 8004a42:	3201      	adds	r2, #1
 8004a44:	701a      	strb	r2, [r3, #0]
 8004a46:	e791      	b.n	800496c <_dtoa_r+0x5f4>
 8004a48:	461d      	mov	r5, r3
 8004a4a:	e7ed      	b.n	8004a28 <_dtoa_r+0x6b0>
 8004a4c:	2200      	movs	r2, #0
 8004a4e:	4b99      	ldr	r3, [pc, #612]	; (8004cb4 <_dtoa_r+0x93c>)
 8004a50:	f7fb fd42 	bl	80004d8 <__aeabi_dmul>
 8004a54:	2200      	movs	r2, #0
 8004a56:	2300      	movs	r3, #0
 8004a58:	4606      	mov	r6, r0
 8004a5a:	460f      	mov	r7, r1
 8004a5c:	f7fb ffa4 	bl	80009a8 <__aeabi_dcmpeq>
 8004a60:	2800      	cmp	r0, #0
 8004a62:	d09e      	beq.n	80049a2 <_dtoa_r+0x62a>
 8004a64:	e7cf      	b.n	8004a06 <_dtoa_r+0x68e>
 8004a66:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004a68:	2a00      	cmp	r2, #0
 8004a6a:	f000 8088 	beq.w	8004b7e <_dtoa_r+0x806>
 8004a6e:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8004a70:	2a01      	cmp	r2, #1
 8004a72:	dc6d      	bgt.n	8004b50 <_dtoa_r+0x7d8>
 8004a74:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8004a76:	2a00      	cmp	r2, #0
 8004a78:	d066      	beq.n	8004b48 <_dtoa_r+0x7d0>
 8004a7a:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8004a7e:	464d      	mov	r5, r9
 8004a80:	9e08      	ldr	r6, [sp, #32]
 8004a82:	9a07      	ldr	r2, [sp, #28]
 8004a84:	2101      	movs	r1, #1
 8004a86:	441a      	add	r2, r3
 8004a88:	4620      	mov	r0, r4
 8004a8a:	4499      	add	r9, r3
 8004a8c:	9207      	str	r2, [sp, #28]
 8004a8e:	f001 f886 	bl	8005b9e <__i2b>
 8004a92:	4607      	mov	r7, r0
 8004a94:	2d00      	cmp	r5, #0
 8004a96:	dd0b      	ble.n	8004ab0 <_dtoa_r+0x738>
 8004a98:	9b07      	ldr	r3, [sp, #28]
 8004a9a:	2b00      	cmp	r3, #0
 8004a9c:	dd08      	ble.n	8004ab0 <_dtoa_r+0x738>
 8004a9e:	42ab      	cmp	r3, r5
 8004aa0:	bfa8      	it	ge
 8004aa2:	462b      	movge	r3, r5
 8004aa4:	9a07      	ldr	r2, [sp, #28]
 8004aa6:	eba9 0903 	sub.w	r9, r9, r3
 8004aaa:	1aed      	subs	r5, r5, r3
 8004aac:	1ad3      	subs	r3, r2, r3
 8004aae:	9307      	str	r3, [sp, #28]
 8004ab0:	9b08      	ldr	r3, [sp, #32]
 8004ab2:	b1eb      	cbz	r3, 8004af0 <_dtoa_r+0x778>
 8004ab4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d065      	beq.n	8004b86 <_dtoa_r+0x80e>
 8004aba:	b18e      	cbz	r6, 8004ae0 <_dtoa_r+0x768>
 8004abc:	4639      	mov	r1, r7
 8004abe:	4632      	mov	r2, r6
 8004ac0:	4620      	mov	r0, r4
 8004ac2:	f001 f90b 	bl	8005cdc <__pow5mult>
 8004ac6:	465a      	mov	r2, fp
 8004ac8:	4601      	mov	r1, r0
 8004aca:	4607      	mov	r7, r0
 8004acc:	4620      	mov	r0, r4
 8004ace:	f001 f86f 	bl	8005bb0 <__multiply>
 8004ad2:	4659      	mov	r1, fp
 8004ad4:	900a      	str	r0, [sp, #40]	; 0x28
 8004ad6:	4620      	mov	r0, r4
 8004ad8:	f000 ff83 	bl	80059e2 <_Bfree>
 8004adc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004ade:	469b      	mov	fp, r3
 8004ae0:	9b08      	ldr	r3, [sp, #32]
 8004ae2:	1b9a      	subs	r2, r3, r6
 8004ae4:	d004      	beq.n	8004af0 <_dtoa_r+0x778>
 8004ae6:	4659      	mov	r1, fp
 8004ae8:	4620      	mov	r0, r4
 8004aea:	f001 f8f7 	bl	8005cdc <__pow5mult>
 8004aee:	4683      	mov	fp, r0
 8004af0:	2101      	movs	r1, #1
 8004af2:	4620      	mov	r0, r4
 8004af4:	f001 f853 	bl	8005b9e <__i2b>
 8004af8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004afa:	4606      	mov	r6, r0
 8004afc:	2b00      	cmp	r3, #0
 8004afe:	f000 81c6 	beq.w	8004e8e <_dtoa_r+0xb16>
 8004b02:	461a      	mov	r2, r3
 8004b04:	4601      	mov	r1, r0
 8004b06:	4620      	mov	r0, r4
 8004b08:	f001 f8e8 	bl	8005cdc <__pow5mult>
 8004b0c:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004b0e:	4606      	mov	r6, r0
 8004b10:	2b01      	cmp	r3, #1
 8004b12:	dc3e      	bgt.n	8004b92 <_dtoa_r+0x81a>
 8004b14:	9b02      	ldr	r3, [sp, #8]
 8004b16:	2b00      	cmp	r3, #0
 8004b18:	d137      	bne.n	8004b8a <_dtoa_r+0x812>
 8004b1a:	9b03      	ldr	r3, [sp, #12]
 8004b1c:	f3c3 0313 	ubfx	r3, r3, #0, #20
 8004b20:	2b00      	cmp	r3, #0
 8004b22:	d134      	bne.n	8004b8e <_dtoa_r+0x816>
 8004b24:	9b03      	ldr	r3, [sp, #12]
 8004b26:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8004b2a:	0d1b      	lsrs	r3, r3, #20
 8004b2c:	051b      	lsls	r3, r3, #20
 8004b2e:	b12b      	cbz	r3, 8004b3c <_dtoa_r+0x7c4>
 8004b30:	9b07      	ldr	r3, [sp, #28]
 8004b32:	f109 0901 	add.w	r9, r9, #1
 8004b36:	3301      	adds	r3, #1
 8004b38:	9307      	str	r3, [sp, #28]
 8004b3a:	2301      	movs	r3, #1
 8004b3c:	9308      	str	r3, [sp, #32]
 8004b3e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004b40:	2b00      	cmp	r3, #0
 8004b42:	d128      	bne.n	8004b96 <_dtoa_r+0x81e>
 8004b44:	2001      	movs	r0, #1
 8004b46:	e02e      	b.n	8004ba6 <_dtoa_r+0x82e>
 8004b48:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8004b4a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8004b4e:	e796      	b.n	8004a7e <_dtoa_r+0x706>
 8004b50:	9b08      	ldr	r3, [sp, #32]
 8004b52:	f108 36ff 	add.w	r6, r8, #4294967295	; 0xffffffff
 8004b56:	42b3      	cmp	r3, r6
 8004b58:	bfb7      	itett	lt
 8004b5a:	9b08      	ldrlt	r3, [sp, #32]
 8004b5c:	1b9e      	subge	r6, r3, r6
 8004b5e:	1af2      	sublt	r2, r6, r3
 8004b60:	9b0c      	ldrlt	r3, [sp, #48]	; 0x30
 8004b62:	bfbf      	itttt	lt
 8004b64:	9608      	strlt	r6, [sp, #32]
 8004b66:	189b      	addlt	r3, r3, r2
 8004b68:	930c      	strlt	r3, [sp, #48]	; 0x30
 8004b6a:	2600      	movlt	r6, #0
 8004b6c:	f1b8 0f00 	cmp.w	r8, #0
 8004b70:	bfb9      	ittee	lt
 8004b72:	eba9 0508 	sublt.w	r5, r9, r8
 8004b76:	2300      	movlt	r3, #0
 8004b78:	464d      	movge	r5, r9
 8004b7a:	4643      	movge	r3, r8
 8004b7c:	e781      	b.n	8004a82 <_dtoa_r+0x70a>
 8004b7e:	9e08      	ldr	r6, [sp, #32]
 8004b80:	464d      	mov	r5, r9
 8004b82:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8004b84:	e786      	b.n	8004a94 <_dtoa_r+0x71c>
 8004b86:	9a08      	ldr	r2, [sp, #32]
 8004b88:	e7ad      	b.n	8004ae6 <_dtoa_r+0x76e>
 8004b8a:	2300      	movs	r3, #0
 8004b8c:	e7d6      	b.n	8004b3c <_dtoa_r+0x7c4>
 8004b8e:	9b02      	ldr	r3, [sp, #8]
 8004b90:	e7d4      	b.n	8004b3c <_dtoa_r+0x7c4>
 8004b92:	2300      	movs	r3, #0
 8004b94:	9308      	str	r3, [sp, #32]
 8004b96:	6933      	ldr	r3, [r6, #16]
 8004b98:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8004b9c:	6918      	ldr	r0, [r3, #16]
 8004b9e:	f000 ffb0 	bl	8005b02 <__hi0bits>
 8004ba2:	f1c0 0020 	rsb	r0, r0, #32
 8004ba6:	9b07      	ldr	r3, [sp, #28]
 8004ba8:	4418      	add	r0, r3
 8004baa:	f010 001f 	ands.w	r0, r0, #31
 8004bae:	d047      	beq.n	8004c40 <_dtoa_r+0x8c8>
 8004bb0:	f1c0 0320 	rsb	r3, r0, #32
 8004bb4:	2b04      	cmp	r3, #4
 8004bb6:	dd3b      	ble.n	8004c30 <_dtoa_r+0x8b8>
 8004bb8:	9b07      	ldr	r3, [sp, #28]
 8004bba:	f1c0 001c 	rsb	r0, r0, #28
 8004bbe:	4481      	add	r9, r0
 8004bc0:	4405      	add	r5, r0
 8004bc2:	4403      	add	r3, r0
 8004bc4:	9307      	str	r3, [sp, #28]
 8004bc6:	f1b9 0f00 	cmp.w	r9, #0
 8004bca:	dd05      	ble.n	8004bd8 <_dtoa_r+0x860>
 8004bcc:	4659      	mov	r1, fp
 8004bce:	464a      	mov	r2, r9
 8004bd0:	4620      	mov	r0, r4
 8004bd2:	f001 f8d1 	bl	8005d78 <__lshift>
 8004bd6:	4683      	mov	fp, r0
 8004bd8:	9b07      	ldr	r3, [sp, #28]
 8004bda:	2b00      	cmp	r3, #0
 8004bdc:	dd05      	ble.n	8004bea <_dtoa_r+0x872>
 8004bde:	4631      	mov	r1, r6
 8004be0:	461a      	mov	r2, r3
 8004be2:	4620      	mov	r0, r4
 8004be4:	f001 f8c8 	bl	8005d78 <__lshift>
 8004be8:	4606      	mov	r6, r0
 8004bea:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8004bec:	b353      	cbz	r3, 8004c44 <_dtoa_r+0x8cc>
 8004bee:	4631      	mov	r1, r6
 8004bf0:	4658      	mov	r0, fp
 8004bf2:	f001 f915 	bl	8005e20 <__mcmp>
 8004bf6:	2800      	cmp	r0, #0
 8004bf8:	da24      	bge.n	8004c44 <_dtoa_r+0x8cc>
 8004bfa:	2300      	movs	r3, #0
 8004bfc:	4659      	mov	r1, fp
 8004bfe:	220a      	movs	r2, #10
 8004c00:	4620      	mov	r0, r4
 8004c02:	f000 ff05 	bl	8005a10 <__multadd>
 8004c06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004c08:	f10a 3aff 	add.w	sl, sl, #4294967295	; 0xffffffff
 8004c0c:	4683      	mov	fp, r0
 8004c0e:	2b00      	cmp	r3, #0
 8004c10:	f000 8144 	beq.w	8004e9c <_dtoa_r+0xb24>
 8004c14:	2300      	movs	r3, #0
 8004c16:	4639      	mov	r1, r7
 8004c18:	220a      	movs	r2, #10
 8004c1a:	4620      	mov	r0, r4
 8004c1c:	f000 fef8 	bl	8005a10 <__multadd>
 8004c20:	9b04      	ldr	r3, [sp, #16]
 8004c22:	4607      	mov	r7, r0
 8004c24:	2b00      	cmp	r3, #0
 8004c26:	dc4d      	bgt.n	8004cc4 <_dtoa_r+0x94c>
 8004c28:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004c2a:	2b02      	cmp	r3, #2
 8004c2c:	dd4a      	ble.n	8004cc4 <_dtoa_r+0x94c>
 8004c2e:	e011      	b.n	8004c54 <_dtoa_r+0x8dc>
 8004c30:	d0c9      	beq.n	8004bc6 <_dtoa_r+0x84e>
 8004c32:	9a07      	ldr	r2, [sp, #28]
 8004c34:	331c      	adds	r3, #28
 8004c36:	441a      	add	r2, r3
 8004c38:	4499      	add	r9, r3
 8004c3a:	441d      	add	r5, r3
 8004c3c:	4613      	mov	r3, r2
 8004c3e:	e7c1      	b.n	8004bc4 <_dtoa_r+0x84c>
 8004c40:	4603      	mov	r3, r0
 8004c42:	e7f6      	b.n	8004c32 <_dtoa_r+0x8ba>
 8004c44:	f1b8 0f00 	cmp.w	r8, #0
 8004c48:	dc36      	bgt.n	8004cb8 <_dtoa_r+0x940>
 8004c4a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004c4c:	2b02      	cmp	r3, #2
 8004c4e:	dd33      	ble.n	8004cb8 <_dtoa_r+0x940>
 8004c50:	f8cd 8010 	str.w	r8, [sp, #16]
 8004c54:	9b04      	ldr	r3, [sp, #16]
 8004c56:	b963      	cbnz	r3, 8004c72 <_dtoa_r+0x8fa>
 8004c58:	4631      	mov	r1, r6
 8004c5a:	2205      	movs	r2, #5
 8004c5c:	4620      	mov	r0, r4
 8004c5e:	f000 fed7 	bl	8005a10 <__multadd>
 8004c62:	4601      	mov	r1, r0
 8004c64:	4606      	mov	r6, r0
 8004c66:	4658      	mov	r0, fp
 8004c68:	f001 f8da 	bl	8005e20 <__mcmp>
 8004c6c:	2800      	cmp	r0, #0
 8004c6e:	f73f add3 	bgt.w	8004818 <_dtoa_r+0x4a0>
 8004c72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8004c74:	9d06      	ldr	r5, [sp, #24]
 8004c76:	ea6f 0a03 	mvn.w	sl, r3
 8004c7a:	f04f 0900 	mov.w	r9, #0
 8004c7e:	4631      	mov	r1, r6
 8004c80:	4620      	mov	r0, r4
 8004c82:	f000 feae 	bl	80059e2 <_Bfree>
 8004c86:	2f00      	cmp	r7, #0
 8004c88:	f43f aebd 	beq.w	8004a06 <_dtoa_r+0x68e>
 8004c8c:	f1b9 0f00 	cmp.w	r9, #0
 8004c90:	d005      	beq.n	8004c9e <_dtoa_r+0x926>
 8004c92:	45b9      	cmp	r9, r7
 8004c94:	d003      	beq.n	8004c9e <_dtoa_r+0x926>
 8004c96:	4649      	mov	r1, r9
 8004c98:	4620      	mov	r0, r4
 8004c9a:	f000 fea2 	bl	80059e2 <_Bfree>
 8004c9e:	4639      	mov	r1, r7
 8004ca0:	4620      	mov	r0, r4
 8004ca2:	f000 fe9e 	bl	80059e2 <_Bfree>
 8004ca6:	e6ae      	b.n	8004a06 <_dtoa_r+0x68e>
 8004ca8:	2600      	movs	r6, #0
 8004caa:	4637      	mov	r7, r6
 8004cac:	e7e1      	b.n	8004c72 <_dtoa_r+0x8fa>
 8004cae:	46ba      	mov	sl, r7
 8004cb0:	4637      	mov	r7, r6
 8004cb2:	e5b1      	b.n	8004818 <_dtoa_r+0x4a0>
 8004cb4:	40240000 	.word	0x40240000
 8004cb8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004cba:	f8cd 8010 	str.w	r8, [sp, #16]
 8004cbe:	2b00      	cmp	r3, #0
 8004cc0:	f000 80f3 	beq.w	8004eaa <_dtoa_r+0xb32>
 8004cc4:	2d00      	cmp	r5, #0
 8004cc6:	dd05      	ble.n	8004cd4 <_dtoa_r+0x95c>
 8004cc8:	4639      	mov	r1, r7
 8004cca:	462a      	mov	r2, r5
 8004ccc:	4620      	mov	r0, r4
 8004cce:	f001 f853 	bl	8005d78 <__lshift>
 8004cd2:	4607      	mov	r7, r0
 8004cd4:	9b08      	ldr	r3, [sp, #32]
 8004cd6:	2b00      	cmp	r3, #0
 8004cd8:	d04c      	beq.n	8004d74 <_dtoa_r+0x9fc>
 8004cda:	6879      	ldr	r1, [r7, #4]
 8004cdc:	4620      	mov	r0, r4
 8004cde:	f000 fe4c 	bl	800597a <_Balloc>
 8004ce2:	4605      	mov	r5, r0
 8004ce4:	693a      	ldr	r2, [r7, #16]
 8004ce6:	f107 010c 	add.w	r1, r7, #12
 8004cea:	3202      	adds	r2, #2
 8004cec:	0092      	lsls	r2, r2, #2
 8004cee:	300c      	adds	r0, #12
 8004cf0:	f000 fe38 	bl	8005964 <memcpy>
 8004cf4:	2201      	movs	r2, #1
 8004cf6:	4629      	mov	r1, r5
 8004cf8:	4620      	mov	r0, r4
 8004cfa:	f001 f83d 	bl	8005d78 <__lshift>
 8004cfe:	46b9      	mov	r9, r7
 8004d00:	4607      	mov	r7, r0
 8004d02:	9b06      	ldr	r3, [sp, #24]
 8004d04:	9307      	str	r3, [sp, #28]
 8004d06:	9b02      	ldr	r3, [sp, #8]
 8004d08:	f003 0301 	and.w	r3, r3, #1
 8004d0c:	9308      	str	r3, [sp, #32]
 8004d0e:	4631      	mov	r1, r6
 8004d10:	4658      	mov	r0, fp
 8004d12:	f7ff faa3 	bl	800425c <quorem>
 8004d16:	4649      	mov	r1, r9
 8004d18:	4605      	mov	r5, r0
 8004d1a:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8004d1e:	4658      	mov	r0, fp
 8004d20:	f001 f87e 	bl	8005e20 <__mcmp>
 8004d24:	463a      	mov	r2, r7
 8004d26:	9002      	str	r0, [sp, #8]
 8004d28:	4631      	mov	r1, r6
 8004d2a:	4620      	mov	r0, r4
 8004d2c:	f001 f892 	bl	8005e54 <__mdiff>
 8004d30:	68c3      	ldr	r3, [r0, #12]
 8004d32:	4602      	mov	r2, r0
 8004d34:	bb03      	cbnz	r3, 8004d78 <_dtoa_r+0xa00>
 8004d36:	4601      	mov	r1, r0
 8004d38:	9009      	str	r0, [sp, #36]	; 0x24
 8004d3a:	4658      	mov	r0, fp
 8004d3c:	f001 f870 	bl	8005e20 <__mcmp>
 8004d40:	4603      	mov	r3, r0
 8004d42:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8004d44:	4611      	mov	r1, r2
 8004d46:	4620      	mov	r0, r4
 8004d48:	9309      	str	r3, [sp, #36]	; 0x24
 8004d4a:	f000 fe4a 	bl	80059e2 <_Bfree>
 8004d4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d50:	b9a3      	cbnz	r3, 8004d7c <_dtoa_r+0xa04>
 8004d52:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8004d54:	b992      	cbnz	r2, 8004d7c <_dtoa_r+0xa04>
 8004d56:	9a08      	ldr	r2, [sp, #32]
 8004d58:	b982      	cbnz	r2, 8004d7c <_dtoa_r+0xa04>
 8004d5a:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004d5e:	d029      	beq.n	8004db4 <_dtoa_r+0xa3c>
 8004d60:	9b02      	ldr	r3, [sp, #8]
 8004d62:	2b00      	cmp	r3, #0
 8004d64:	dd01      	ble.n	8004d6a <_dtoa_r+0x9f2>
 8004d66:	f105 0831 	add.w	r8, r5, #49	; 0x31
 8004d6a:	9b07      	ldr	r3, [sp, #28]
 8004d6c:	1c5d      	adds	r5, r3, #1
 8004d6e:	f883 8000 	strb.w	r8, [r3]
 8004d72:	e784      	b.n	8004c7e <_dtoa_r+0x906>
 8004d74:	4638      	mov	r0, r7
 8004d76:	e7c2      	b.n	8004cfe <_dtoa_r+0x986>
 8004d78:	2301      	movs	r3, #1
 8004d7a:	e7e3      	b.n	8004d44 <_dtoa_r+0x9cc>
 8004d7c:	9a02      	ldr	r2, [sp, #8]
 8004d7e:	2a00      	cmp	r2, #0
 8004d80:	db04      	blt.n	8004d8c <_dtoa_r+0xa14>
 8004d82:	d123      	bne.n	8004dcc <_dtoa_r+0xa54>
 8004d84:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8004d86:	bb0a      	cbnz	r2, 8004dcc <_dtoa_r+0xa54>
 8004d88:	9a08      	ldr	r2, [sp, #32]
 8004d8a:	b9fa      	cbnz	r2, 8004dcc <_dtoa_r+0xa54>
 8004d8c:	2b00      	cmp	r3, #0
 8004d8e:	ddec      	ble.n	8004d6a <_dtoa_r+0x9f2>
 8004d90:	4659      	mov	r1, fp
 8004d92:	2201      	movs	r2, #1
 8004d94:	4620      	mov	r0, r4
 8004d96:	f000 ffef 	bl	8005d78 <__lshift>
 8004d9a:	4631      	mov	r1, r6
 8004d9c:	4683      	mov	fp, r0
 8004d9e:	f001 f83f 	bl	8005e20 <__mcmp>
 8004da2:	2800      	cmp	r0, #0
 8004da4:	dc03      	bgt.n	8004dae <_dtoa_r+0xa36>
 8004da6:	d1e0      	bne.n	8004d6a <_dtoa_r+0x9f2>
 8004da8:	f018 0f01 	tst.w	r8, #1
 8004dac:	d0dd      	beq.n	8004d6a <_dtoa_r+0x9f2>
 8004dae:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004db2:	d1d8      	bne.n	8004d66 <_dtoa_r+0x9ee>
 8004db4:	9b07      	ldr	r3, [sp, #28]
 8004db6:	9a07      	ldr	r2, [sp, #28]
 8004db8:	1c5d      	adds	r5, r3, #1
 8004dba:	2339      	movs	r3, #57	; 0x39
 8004dbc:	7013      	strb	r3, [r2, #0]
 8004dbe:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004dc2:	1e6a      	subs	r2, r5, #1
 8004dc4:	2b39      	cmp	r3, #57	; 0x39
 8004dc6:	d04d      	beq.n	8004e64 <_dtoa_r+0xaec>
 8004dc8:	3301      	adds	r3, #1
 8004dca:	e052      	b.n	8004e72 <_dtoa_r+0xafa>
 8004dcc:	9a07      	ldr	r2, [sp, #28]
 8004dce:	2b00      	cmp	r3, #0
 8004dd0:	f102 0501 	add.w	r5, r2, #1
 8004dd4:	dd06      	ble.n	8004de4 <_dtoa_r+0xa6c>
 8004dd6:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 8004dda:	d0eb      	beq.n	8004db4 <_dtoa_r+0xa3c>
 8004ddc:	f108 0801 	add.w	r8, r8, #1
 8004de0:	9b07      	ldr	r3, [sp, #28]
 8004de2:	e7c4      	b.n	8004d6e <_dtoa_r+0x9f6>
 8004de4:	9b06      	ldr	r3, [sp, #24]
 8004de6:	9a04      	ldr	r2, [sp, #16]
 8004de8:	1aeb      	subs	r3, r5, r3
 8004dea:	4293      	cmp	r3, r2
 8004dec:	f805 8c01 	strb.w	r8, [r5, #-1]
 8004df0:	d021      	beq.n	8004e36 <_dtoa_r+0xabe>
 8004df2:	4659      	mov	r1, fp
 8004df4:	2300      	movs	r3, #0
 8004df6:	220a      	movs	r2, #10
 8004df8:	4620      	mov	r0, r4
 8004dfa:	f000 fe09 	bl	8005a10 <__multadd>
 8004dfe:	45b9      	cmp	r9, r7
 8004e00:	4683      	mov	fp, r0
 8004e02:	f04f 0300 	mov.w	r3, #0
 8004e06:	f04f 020a 	mov.w	r2, #10
 8004e0a:	4649      	mov	r1, r9
 8004e0c:	4620      	mov	r0, r4
 8004e0e:	d105      	bne.n	8004e1c <_dtoa_r+0xaa4>
 8004e10:	f000 fdfe 	bl	8005a10 <__multadd>
 8004e14:	4681      	mov	r9, r0
 8004e16:	4607      	mov	r7, r0
 8004e18:	9507      	str	r5, [sp, #28]
 8004e1a:	e778      	b.n	8004d0e <_dtoa_r+0x996>
 8004e1c:	f000 fdf8 	bl	8005a10 <__multadd>
 8004e20:	4639      	mov	r1, r7
 8004e22:	4681      	mov	r9, r0
 8004e24:	2300      	movs	r3, #0
 8004e26:	220a      	movs	r2, #10
 8004e28:	4620      	mov	r0, r4
 8004e2a:	f000 fdf1 	bl	8005a10 <__multadd>
 8004e2e:	4607      	mov	r7, r0
 8004e30:	e7f2      	b.n	8004e18 <_dtoa_r+0xaa0>
 8004e32:	f04f 0900 	mov.w	r9, #0
 8004e36:	4659      	mov	r1, fp
 8004e38:	2201      	movs	r2, #1
 8004e3a:	4620      	mov	r0, r4
 8004e3c:	f000 ff9c 	bl	8005d78 <__lshift>
 8004e40:	4631      	mov	r1, r6
 8004e42:	4683      	mov	fp, r0
 8004e44:	f000 ffec 	bl	8005e20 <__mcmp>
 8004e48:	2800      	cmp	r0, #0
 8004e4a:	dcb8      	bgt.n	8004dbe <_dtoa_r+0xa46>
 8004e4c:	d102      	bne.n	8004e54 <_dtoa_r+0xadc>
 8004e4e:	f018 0f01 	tst.w	r8, #1
 8004e52:	d1b4      	bne.n	8004dbe <_dtoa_r+0xa46>
 8004e54:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 8004e58:	1e6a      	subs	r2, r5, #1
 8004e5a:	2b30      	cmp	r3, #48	; 0x30
 8004e5c:	f47f af0f 	bne.w	8004c7e <_dtoa_r+0x906>
 8004e60:	4615      	mov	r5, r2
 8004e62:	e7f7      	b.n	8004e54 <_dtoa_r+0xadc>
 8004e64:	9b06      	ldr	r3, [sp, #24]
 8004e66:	4293      	cmp	r3, r2
 8004e68:	d105      	bne.n	8004e76 <_dtoa_r+0xafe>
 8004e6a:	2331      	movs	r3, #49	; 0x31
 8004e6c:	9a06      	ldr	r2, [sp, #24]
 8004e6e:	f10a 0a01 	add.w	sl, sl, #1
 8004e72:	7013      	strb	r3, [r2, #0]
 8004e74:	e703      	b.n	8004c7e <_dtoa_r+0x906>
 8004e76:	4615      	mov	r5, r2
 8004e78:	e7a1      	b.n	8004dbe <_dtoa_r+0xa46>
 8004e7a:	4b17      	ldr	r3, [pc, #92]	; (8004ed8 <_dtoa_r+0xb60>)
 8004e7c:	f7ff bae1 	b.w	8004442 <_dtoa_r+0xca>
 8004e80:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8004e82:	2b00      	cmp	r3, #0
 8004e84:	f47f aabb 	bne.w	80043fe <_dtoa_r+0x86>
 8004e88:	4b14      	ldr	r3, [pc, #80]	; (8004edc <_dtoa_r+0xb64>)
 8004e8a:	f7ff bada 	b.w	8004442 <_dtoa_r+0xca>
 8004e8e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004e90:	2b01      	cmp	r3, #1
 8004e92:	f77f ae3f 	ble.w	8004b14 <_dtoa_r+0x79c>
 8004e96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8004e98:	9308      	str	r3, [sp, #32]
 8004e9a:	e653      	b.n	8004b44 <_dtoa_r+0x7cc>
 8004e9c:	9b04      	ldr	r3, [sp, #16]
 8004e9e:	2b00      	cmp	r3, #0
 8004ea0:	dc03      	bgt.n	8004eaa <_dtoa_r+0xb32>
 8004ea2:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 8004ea4:	2b02      	cmp	r3, #2
 8004ea6:	f73f aed5 	bgt.w	8004c54 <_dtoa_r+0x8dc>
 8004eaa:	9d06      	ldr	r5, [sp, #24]
 8004eac:	4631      	mov	r1, r6
 8004eae:	4658      	mov	r0, fp
 8004eb0:	f7ff f9d4 	bl	800425c <quorem>
 8004eb4:	9b06      	ldr	r3, [sp, #24]
 8004eb6:	f100 0830 	add.w	r8, r0, #48	; 0x30
 8004eba:	f805 8b01 	strb.w	r8, [r5], #1
 8004ebe:	9a04      	ldr	r2, [sp, #16]
 8004ec0:	1aeb      	subs	r3, r5, r3
 8004ec2:	429a      	cmp	r2, r3
 8004ec4:	ddb5      	ble.n	8004e32 <_dtoa_r+0xaba>
 8004ec6:	4659      	mov	r1, fp
 8004ec8:	2300      	movs	r3, #0
 8004eca:	220a      	movs	r2, #10
 8004ecc:	4620      	mov	r0, r4
 8004ece:	f000 fd9f 	bl	8005a10 <__multadd>
 8004ed2:	4683      	mov	fp, r0
 8004ed4:	e7ea      	b.n	8004eac <_dtoa_r+0xb34>
 8004ed6:	bf00      	nop
 8004ed8:	08006f24 	.word	0x08006f24
 8004edc:	08006fa0 	.word	0x08006fa0

08004ee0 <__sflush_r>:
 8004ee0:	898a      	ldrh	r2, [r1, #12]
 8004ee2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004ee6:	4605      	mov	r5, r0
 8004ee8:	0710      	lsls	r0, r2, #28
 8004eea:	460c      	mov	r4, r1
 8004eec:	d458      	bmi.n	8004fa0 <__sflush_r+0xc0>
 8004eee:	684b      	ldr	r3, [r1, #4]
 8004ef0:	2b00      	cmp	r3, #0
 8004ef2:	dc05      	bgt.n	8004f00 <__sflush_r+0x20>
 8004ef4:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8004ef6:	2b00      	cmp	r3, #0
 8004ef8:	dc02      	bgt.n	8004f00 <__sflush_r+0x20>
 8004efa:	2000      	movs	r0, #0
 8004efc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004f00:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004f02:	2e00      	cmp	r6, #0
 8004f04:	d0f9      	beq.n	8004efa <__sflush_r+0x1a>
 8004f06:	2300      	movs	r3, #0
 8004f08:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8004f0c:	682f      	ldr	r7, [r5, #0]
 8004f0e:	6a21      	ldr	r1, [r4, #32]
 8004f10:	602b      	str	r3, [r5, #0]
 8004f12:	d032      	beq.n	8004f7a <__sflush_r+0x9a>
 8004f14:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8004f16:	89a3      	ldrh	r3, [r4, #12]
 8004f18:	075a      	lsls	r2, r3, #29
 8004f1a:	d505      	bpl.n	8004f28 <__sflush_r+0x48>
 8004f1c:	6863      	ldr	r3, [r4, #4]
 8004f1e:	1ac0      	subs	r0, r0, r3
 8004f20:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8004f22:	b10b      	cbz	r3, 8004f28 <__sflush_r+0x48>
 8004f24:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004f26:	1ac0      	subs	r0, r0, r3
 8004f28:	2300      	movs	r3, #0
 8004f2a:	4602      	mov	r2, r0
 8004f2c:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8004f2e:	6a21      	ldr	r1, [r4, #32]
 8004f30:	4628      	mov	r0, r5
 8004f32:	47b0      	blx	r6
 8004f34:	1c43      	adds	r3, r0, #1
 8004f36:	89a3      	ldrh	r3, [r4, #12]
 8004f38:	d106      	bne.n	8004f48 <__sflush_r+0x68>
 8004f3a:	6829      	ldr	r1, [r5, #0]
 8004f3c:	291d      	cmp	r1, #29
 8004f3e:	d848      	bhi.n	8004fd2 <__sflush_r+0xf2>
 8004f40:	4a29      	ldr	r2, [pc, #164]	; (8004fe8 <__sflush_r+0x108>)
 8004f42:	40ca      	lsrs	r2, r1
 8004f44:	07d6      	lsls	r6, r2, #31
 8004f46:	d544      	bpl.n	8004fd2 <__sflush_r+0xf2>
 8004f48:	2200      	movs	r2, #0
 8004f4a:	6062      	str	r2, [r4, #4]
 8004f4c:	6922      	ldr	r2, [r4, #16]
 8004f4e:	04d9      	lsls	r1, r3, #19
 8004f50:	6022      	str	r2, [r4, #0]
 8004f52:	d504      	bpl.n	8004f5e <__sflush_r+0x7e>
 8004f54:	1c42      	adds	r2, r0, #1
 8004f56:	d101      	bne.n	8004f5c <__sflush_r+0x7c>
 8004f58:	682b      	ldr	r3, [r5, #0]
 8004f5a:	b903      	cbnz	r3, 8004f5e <__sflush_r+0x7e>
 8004f5c:	6560      	str	r0, [r4, #84]	; 0x54
 8004f5e:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8004f60:	602f      	str	r7, [r5, #0]
 8004f62:	2900      	cmp	r1, #0
 8004f64:	d0c9      	beq.n	8004efa <__sflush_r+0x1a>
 8004f66:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8004f6a:	4299      	cmp	r1, r3
 8004f6c:	d002      	beq.n	8004f74 <__sflush_r+0x94>
 8004f6e:	4628      	mov	r0, r5
 8004f70:	f001 f90a 	bl	8006188 <_free_r>
 8004f74:	2000      	movs	r0, #0
 8004f76:	6360      	str	r0, [r4, #52]	; 0x34
 8004f78:	e7c0      	b.n	8004efc <__sflush_r+0x1c>
 8004f7a:	2301      	movs	r3, #1
 8004f7c:	4628      	mov	r0, r5
 8004f7e:	47b0      	blx	r6
 8004f80:	1c41      	adds	r1, r0, #1
 8004f82:	d1c8      	bne.n	8004f16 <__sflush_r+0x36>
 8004f84:	682b      	ldr	r3, [r5, #0]
 8004f86:	2b00      	cmp	r3, #0
 8004f88:	d0c5      	beq.n	8004f16 <__sflush_r+0x36>
 8004f8a:	2b1d      	cmp	r3, #29
 8004f8c:	d001      	beq.n	8004f92 <__sflush_r+0xb2>
 8004f8e:	2b16      	cmp	r3, #22
 8004f90:	d101      	bne.n	8004f96 <__sflush_r+0xb6>
 8004f92:	602f      	str	r7, [r5, #0]
 8004f94:	e7b1      	b.n	8004efa <__sflush_r+0x1a>
 8004f96:	89a3      	ldrh	r3, [r4, #12]
 8004f98:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004f9c:	81a3      	strh	r3, [r4, #12]
 8004f9e:	e7ad      	b.n	8004efc <__sflush_r+0x1c>
 8004fa0:	690f      	ldr	r7, [r1, #16]
 8004fa2:	2f00      	cmp	r7, #0
 8004fa4:	d0a9      	beq.n	8004efa <__sflush_r+0x1a>
 8004fa6:	0793      	lsls	r3, r2, #30
 8004fa8:	bf18      	it	ne
 8004faa:	2300      	movne	r3, #0
 8004fac:	680e      	ldr	r6, [r1, #0]
 8004fae:	bf08      	it	eq
 8004fb0:	694b      	ldreq	r3, [r1, #20]
 8004fb2:	eba6 0807 	sub.w	r8, r6, r7
 8004fb6:	600f      	str	r7, [r1, #0]
 8004fb8:	608b      	str	r3, [r1, #8]
 8004fba:	f1b8 0f00 	cmp.w	r8, #0
 8004fbe:	dd9c      	ble.n	8004efa <__sflush_r+0x1a>
 8004fc0:	4643      	mov	r3, r8
 8004fc2:	463a      	mov	r2, r7
 8004fc4:	6a21      	ldr	r1, [r4, #32]
 8004fc6:	4628      	mov	r0, r5
 8004fc8:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8004fca:	47b0      	blx	r6
 8004fcc:	2800      	cmp	r0, #0
 8004fce:	dc06      	bgt.n	8004fde <__sflush_r+0xfe>
 8004fd0:	89a3      	ldrh	r3, [r4, #12]
 8004fd2:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8004fd6:	81a3      	strh	r3, [r4, #12]
 8004fd8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8004fdc:	e78e      	b.n	8004efc <__sflush_r+0x1c>
 8004fde:	4407      	add	r7, r0
 8004fe0:	eba8 0800 	sub.w	r8, r8, r0
 8004fe4:	e7e9      	b.n	8004fba <__sflush_r+0xda>
 8004fe6:	bf00      	nop
 8004fe8:	20400001 	.word	0x20400001

08004fec <_fflush_r>:
 8004fec:	b538      	push	{r3, r4, r5, lr}
 8004fee:	690b      	ldr	r3, [r1, #16]
 8004ff0:	4605      	mov	r5, r0
 8004ff2:	460c      	mov	r4, r1
 8004ff4:	b1db      	cbz	r3, 800502e <_fflush_r+0x42>
 8004ff6:	b118      	cbz	r0, 8005000 <_fflush_r+0x14>
 8004ff8:	6983      	ldr	r3, [r0, #24]
 8004ffa:	b90b      	cbnz	r3, 8005000 <_fflush_r+0x14>
 8004ffc:	f000 f860 	bl	80050c0 <__sinit>
 8005000:	4b0c      	ldr	r3, [pc, #48]	; (8005034 <_fflush_r+0x48>)
 8005002:	429c      	cmp	r4, r3
 8005004:	d109      	bne.n	800501a <_fflush_r+0x2e>
 8005006:	686c      	ldr	r4, [r5, #4]
 8005008:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800500c:	b17b      	cbz	r3, 800502e <_fflush_r+0x42>
 800500e:	4621      	mov	r1, r4
 8005010:	4628      	mov	r0, r5
 8005012:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005016:	f7ff bf63 	b.w	8004ee0 <__sflush_r>
 800501a:	4b07      	ldr	r3, [pc, #28]	; (8005038 <_fflush_r+0x4c>)
 800501c:	429c      	cmp	r4, r3
 800501e:	d101      	bne.n	8005024 <_fflush_r+0x38>
 8005020:	68ac      	ldr	r4, [r5, #8]
 8005022:	e7f1      	b.n	8005008 <_fflush_r+0x1c>
 8005024:	4b05      	ldr	r3, [pc, #20]	; (800503c <_fflush_r+0x50>)
 8005026:	429c      	cmp	r4, r3
 8005028:	bf08      	it	eq
 800502a:	68ec      	ldreq	r4, [r5, #12]
 800502c:	e7ec      	b.n	8005008 <_fflush_r+0x1c>
 800502e:	2000      	movs	r0, #0
 8005030:	bd38      	pop	{r3, r4, r5, pc}
 8005032:	bf00      	nop
 8005034:	08006fd0 	.word	0x08006fd0
 8005038:	08006ff0 	.word	0x08006ff0
 800503c:	08006fb0 	.word	0x08006fb0

08005040 <std>:
 8005040:	2300      	movs	r3, #0
 8005042:	b510      	push	{r4, lr}
 8005044:	4604      	mov	r4, r0
 8005046:	e9c0 3300 	strd	r3, r3, [r0]
 800504a:	6083      	str	r3, [r0, #8]
 800504c:	8181      	strh	r1, [r0, #12]
 800504e:	6643      	str	r3, [r0, #100]	; 0x64
 8005050:	81c2      	strh	r2, [r0, #14]
 8005052:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005056:	6183      	str	r3, [r0, #24]
 8005058:	4619      	mov	r1, r3
 800505a:	2208      	movs	r2, #8
 800505c:	305c      	adds	r0, #92	; 0x5c
 800505e:	f7fd fa2d 	bl	80024bc <memset>
 8005062:	4b05      	ldr	r3, [pc, #20]	; (8005078 <std+0x38>)
 8005064:	6224      	str	r4, [r4, #32]
 8005066:	6263      	str	r3, [r4, #36]	; 0x24
 8005068:	4b04      	ldr	r3, [pc, #16]	; (800507c <std+0x3c>)
 800506a:	62a3      	str	r3, [r4, #40]	; 0x28
 800506c:	4b04      	ldr	r3, [pc, #16]	; (8005080 <std+0x40>)
 800506e:	62e3      	str	r3, [r4, #44]	; 0x2c
 8005070:	4b04      	ldr	r3, [pc, #16]	; (8005084 <std+0x44>)
 8005072:	6323      	str	r3, [r4, #48]	; 0x30
 8005074:	bd10      	pop	{r4, pc}
 8005076:	bf00      	nop
 8005078:	08006815 	.word	0x08006815
 800507c:	08006837 	.word	0x08006837
 8005080:	0800686f 	.word	0x0800686f
 8005084:	08006893 	.word	0x08006893

08005088 <_cleanup_r>:
 8005088:	4901      	ldr	r1, [pc, #4]	; (8005090 <_cleanup_r+0x8>)
 800508a:	f000 b885 	b.w	8005198 <_fwalk_reent>
 800508e:	bf00      	nop
 8005090:	08004fed 	.word	0x08004fed

08005094 <__sfmoreglue>:
 8005094:	b570      	push	{r4, r5, r6, lr}
 8005096:	2568      	movs	r5, #104	; 0x68
 8005098:	1e4a      	subs	r2, r1, #1
 800509a:	4355      	muls	r5, r2
 800509c:	460e      	mov	r6, r1
 800509e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80050a2:	f001 f8bd 	bl	8006220 <_malloc_r>
 80050a6:	4604      	mov	r4, r0
 80050a8:	b140      	cbz	r0, 80050bc <__sfmoreglue+0x28>
 80050aa:	2100      	movs	r1, #0
 80050ac:	e9c0 1600 	strd	r1, r6, [r0]
 80050b0:	300c      	adds	r0, #12
 80050b2:	60a0      	str	r0, [r4, #8]
 80050b4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80050b8:	f7fd fa00 	bl	80024bc <memset>
 80050bc:	4620      	mov	r0, r4
 80050be:	bd70      	pop	{r4, r5, r6, pc}

080050c0 <__sinit>:
 80050c0:	6983      	ldr	r3, [r0, #24]
 80050c2:	b510      	push	{r4, lr}
 80050c4:	4604      	mov	r4, r0
 80050c6:	bb33      	cbnz	r3, 8005116 <__sinit+0x56>
 80050c8:	e9c0 3312 	strd	r3, r3, [r0, #72]	; 0x48
 80050cc:	6503      	str	r3, [r0, #80]	; 0x50
 80050ce:	4b12      	ldr	r3, [pc, #72]	; (8005118 <__sinit+0x58>)
 80050d0:	4a12      	ldr	r2, [pc, #72]	; (800511c <__sinit+0x5c>)
 80050d2:	681b      	ldr	r3, [r3, #0]
 80050d4:	6282      	str	r2, [r0, #40]	; 0x28
 80050d6:	4298      	cmp	r0, r3
 80050d8:	bf04      	itt	eq
 80050da:	2301      	moveq	r3, #1
 80050dc:	6183      	streq	r3, [r0, #24]
 80050de:	f000 f81f 	bl	8005120 <__sfp>
 80050e2:	6060      	str	r0, [r4, #4]
 80050e4:	4620      	mov	r0, r4
 80050e6:	f000 f81b 	bl	8005120 <__sfp>
 80050ea:	60a0      	str	r0, [r4, #8]
 80050ec:	4620      	mov	r0, r4
 80050ee:	f000 f817 	bl	8005120 <__sfp>
 80050f2:	2200      	movs	r2, #0
 80050f4:	60e0      	str	r0, [r4, #12]
 80050f6:	2104      	movs	r1, #4
 80050f8:	6860      	ldr	r0, [r4, #4]
 80050fa:	f7ff ffa1 	bl	8005040 <std>
 80050fe:	2201      	movs	r2, #1
 8005100:	2109      	movs	r1, #9
 8005102:	68a0      	ldr	r0, [r4, #8]
 8005104:	f7ff ff9c 	bl	8005040 <std>
 8005108:	2202      	movs	r2, #2
 800510a:	2112      	movs	r1, #18
 800510c:	68e0      	ldr	r0, [r4, #12]
 800510e:	f7ff ff97 	bl	8005040 <std>
 8005112:	2301      	movs	r3, #1
 8005114:	61a3      	str	r3, [r4, #24]
 8005116:	bd10      	pop	{r4, pc}
 8005118:	08006f10 	.word	0x08006f10
 800511c:	08005089 	.word	0x08005089

08005120 <__sfp>:
 8005120:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8005122:	4b1b      	ldr	r3, [pc, #108]	; (8005190 <__sfp+0x70>)
 8005124:	4607      	mov	r7, r0
 8005126:	681e      	ldr	r6, [r3, #0]
 8005128:	69b3      	ldr	r3, [r6, #24]
 800512a:	b913      	cbnz	r3, 8005132 <__sfp+0x12>
 800512c:	4630      	mov	r0, r6
 800512e:	f7ff ffc7 	bl	80050c0 <__sinit>
 8005132:	3648      	adds	r6, #72	; 0x48
 8005134:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8005138:	3b01      	subs	r3, #1
 800513a:	d503      	bpl.n	8005144 <__sfp+0x24>
 800513c:	6833      	ldr	r3, [r6, #0]
 800513e:	b133      	cbz	r3, 800514e <__sfp+0x2e>
 8005140:	6836      	ldr	r6, [r6, #0]
 8005142:	e7f7      	b.n	8005134 <__sfp+0x14>
 8005144:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8005148:	b16d      	cbz	r5, 8005166 <__sfp+0x46>
 800514a:	3468      	adds	r4, #104	; 0x68
 800514c:	e7f4      	b.n	8005138 <__sfp+0x18>
 800514e:	2104      	movs	r1, #4
 8005150:	4638      	mov	r0, r7
 8005152:	f7ff ff9f 	bl	8005094 <__sfmoreglue>
 8005156:	6030      	str	r0, [r6, #0]
 8005158:	2800      	cmp	r0, #0
 800515a:	d1f1      	bne.n	8005140 <__sfp+0x20>
 800515c:	230c      	movs	r3, #12
 800515e:	4604      	mov	r4, r0
 8005160:	603b      	str	r3, [r7, #0]
 8005162:	4620      	mov	r0, r4
 8005164:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8005166:	4b0b      	ldr	r3, [pc, #44]	; (8005194 <__sfp+0x74>)
 8005168:	6665      	str	r5, [r4, #100]	; 0x64
 800516a:	e9c4 5500 	strd	r5, r5, [r4]
 800516e:	60a5      	str	r5, [r4, #8]
 8005170:	e9c4 3503 	strd	r3, r5, [r4, #12]
 8005174:	e9c4 5505 	strd	r5, r5, [r4, #20]
 8005178:	2208      	movs	r2, #8
 800517a:	4629      	mov	r1, r5
 800517c:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8005180:	f7fd f99c 	bl	80024bc <memset>
 8005184:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8005188:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800518c:	e7e9      	b.n	8005162 <__sfp+0x42>
 800518e:	bf00      	nop
 8005190:	08006f10 	.word	0x08006f10
 8005194:	ffff0001 	.word	0xffff0001

08005198 <_fwalk_reent>:
 8005198:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800519c:	4680      	mov	r8, r0
 800519e:	4689      	mov	r9, r1
 80051a0:	2600      	movs	r6, #0
 80051a2:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80051a6:	b914      	cbnz	r4, 80051ae <_fwalk_reent+0x16>
 80051a8:	4630      	mov	r0, r6
 80051aa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80051ae:	e9d4 7501 	ldrd	r7, r5, [r4, #4]
 80051b2:	3f01      	subs	r7, #1
 80051b4:	d501      	bpl.n	80051ba <_fwalk_reent+0x22>
 80051b6:	6824      	ldr	r4, [r4, #0]
 80051b8:	e7f5      	b.n	80051a6 <_fwalk_reent+0xe>
 80051ba:	89ab      	ldrh	r3, [r5, #12]
 80051bc:	2b01      	cmp	r3, #1
 80051be:	d907      	bls.n	80051d0 <_fwalk_reent+0x38>
 80051c0:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80051c4:	3301      	adds	r3, #1
 80051c6:	d003      	beq.n	80051d0 <_fwalk_reent+0x38>
 80051c8:	4629      	mov	r1, r5
 80051ca:	4640      	mov	r0, r8
 80051cc:	47c8      	blx	r9
 80051ce:	4306      	orrs	r6, r0
 80051d0:	3568      	adds	r5, #104	; 0x68
 80051d2:	e7ee      	b.n	80051b2 <_fwalk_reent+0x1a>

080051d4 <rshift>:
 80051d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80051d6:	6906      	ldr	r6, [r0, #16]
 80051d8:	114b      	asrs	r3, r1, #5
 80051da:	429e      	cmp	r6, r3
 80051dc:	f100 0414 	add.w	r4, r0, #20
 80051e0:	dd31      	ble.n	8005246 <rshift+0x72>
 80051e2:	f011 011f 	ands.w	r1, r1, #31
 80051e6:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 80051ea:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 80051ee:	d108      	bne.n	8005202 <rshift+0x2e>
 80051f0:	4621      	mov	r1, r4
 80051f2:	42b2      	cmp	r2, r6
 80051f4:	460b      	mov	r3, r1
 80051f6:	d211      	bcs.n	800521c <rshift+0x48>
 80051f8:	f852 3b04 	ldr.w	r3, [r2], #4
 80051fc:	f841 3b04 	str.w	r3, [r1], #4
 8005200:	e7f7      	b.n	80051f2 <rshift+0x1e>
 8005202:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 8005206:	4623      	mov	r3, r4
 8005208:	f1c1 0c20 	rsb	ip, r1, #32
 800520c:	40cd      	lsrs	r5, r1
 800520e:	3204      	adds	r2, #4
 8005210:	42b2      	cmp	r2, r6
 8005212:	4617      	mov	r7, r2
 8005214:	d30d      	bcc.n	8005232 <rshift+0x5e>
 8005216:	601d      	str	r5, [r3, #0]
 8005218:	b105      	cbz	r5, 800521c <rshift+0x48>
 800521a:	3304      	adds	r3, #4
 800521c:	42a3      	cmp	r3, r4
 800521e:	eba3 0204 	sub.w	r2, r3, r4
 8005222:	bf08      	it	eq
 8005224:	2300      	moveq	r3, #0
 8005226:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800522a:	6102      	str	r2, [r0, #16]
 800522c:	bf08      	it	eq
 800522e:	6143      	streq	r3, [r0, #20]
 8005230:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005232:	683f      	ldr	r7, [r7, #0]
 8005234:	fa07 f70c 	lsl.w	r7, r7, ip
 8005238:	433d      	orrs	r5, r7
 800523a:	f843 5b04 	str.w	r5, [r3], #4
 800523e:	f852 5b04 	ldr.w	r5, [r2], #4
 8005242:	40cd      	lsrs	r5, r1
 8005244:	e7e4      	b.n	8005210 <rshift+0x3c>
 8005246:	4623      	mov	r3, r4
 8005248:	e7e8      	b.n	800521c <rshift+0x48>

0800524a <__hexdig_fun>:
 800524a:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800524e:	2b09      	cmp	r3, #9
 8005250:	d802      	bhi.n	8005258 <__hexdig_fun+0xe>
 8005252:	3820      	subs	r0, #32
 8005254:	b2c0      	uxtb	r0, r0
 8005256:	4770      	bx	lr
 8005258:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800525c:	2b05      	cmp	r3, #5
 800525e:	d801      	bhi.n	8005264 <__hexdig_fun+0x1a>
 8005260:	3847      	subs	r0, #71	; 0x47
 8005262:	e7f7      	b.n	8005254 <__hexdig_fun+0xa>
 8005264:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8005268:	2b05      	cmp	r3, #5
 800526a:	d801      	bhi.n	8005270 <__hexdig_fun+0x26>
 800526c:	3827      	subs	r0, #39	; 0x27
 800526e:	e7f1      	b.n	8005254 <__hexdig_fun+0xa>
 8005270:	2000      	movs	r0, #0
 8005272:	4770      	bx	lr

08005274 <__gethex>:
 8005274:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005278:	b08b      	sub	sp, #44	; 0x2c
 800527a:	9002      	str	r0, [sp, #8]
 800527c:	9816      	ldr	r0, [sp, #88]	; 0x58
 800527e:	468a      	mov	sl, r1
 8005280:	4690      	mov	r8, r2
 8005282:	9306      	str	r3, [sp, #24]
 8005284:	f000 fad1 	bl	800582a <__localeconv_l>
 8005288:	6803      	ldr	r3, [r0, #0]
 800528a:	f04f 0b00 	mov.w	fp, #0
 800528e:	4618      	mov	r0, r3
 8005290:	9303      	str	r3, [sp, #12]
 8005292:	f7fa ff5d 	bl	8000150 <strlen>
 8005296:	9b03      	ldr	r3, [sp, #12]
 8005298:	9001      	str	r0, [sp, #4]
 800529a:	4403      	add	r3, r0
 800529c:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80052a0:	9307      	str	r3, [sp, #28]
 80052a2:	f8da 3000 	ldr.w	r3, [sl]
 80052a6:	3302      	adds	r3, #2
 80052a8:	461f      	mov	r7, r3
 80052aa:	f813 0b01 	ldrb.w	r0, [r3], #1
 80052ae:	2830      	cmp	r0, #48	; 0x30
 80052b0:	d06c      	beq.n	800538c <__gethex+0x118>
 80052b2:	f7ff ffca 	bl	800524a <__hexdig_fun>
 80052b6:	4604      	mov	r4, r0
 80052b8:	2800      	cmp	r0, #0
 80052ba:	d16a      	bne.n	8005392 <__gethex+0x11e>
 80052bc:	9a01      	ldr	r2, [sp, #4]
 80052be:	9903      	ldr	r1, [sp, #12]
 80052c0:	4638      	mov	r0, r7
 80052c2:	f001 faea 	bl	800689a <strncmp>
 80052c6:	2800      	cmp	r0, #0
 80052c8:	d166      	bne.n	8005398 <__gethex+0x124>
 80052ca:	9b01      	ldr	r3, [sp, #4]
 80052cc:	5cf8      	ldrb	r0, [r7, r3]
 80052ce:	18fe      	adds	r6, r7, r3
 80052d0:	f7ff ffbb 	bl	800524a <__hexdig_fun>
 80052d4:	2800      	cmp	r0, #0
 80052d6:	d062      	beq.n	800539e <__gethex+0x12a>
 80052d8:	4633      	mov	r3, r6
 80052da:	7818      	ldrb	r0, [r3, #0]
 80052dc:	461f      	mov	r7, r3
 80052de:	2830      	cmp	r0, #48	; 0x30
 80052e0:	f103 0301 	add.w	r3, r3, #1
 80052e4:	d0f9      	beq.n	80052da <__gethex+0x66>
 80052e6:	f7ff ffb0 	bl	800524a <__hexdig_fun>
 80052ea:	fab0 f580 	clz	r5, r0
 80052ee:	4634      	mov	r4, r6
 80052f0:	f04f 0b01 	mov.w	fp, #1
 80052f4:	096d      	lsrs	r5, r5, #5
 80052f6:	463a      	mov	r2, r7
 80052f8:	4616      	mov	r6, r2
 80052fa:	7830      	ldrb	r0, [r6, #0]
 80052fc:	3201      	adds	r2, #1
 80052fe:	f7ff ffa4 	bl	800524a <__hexdig_fun>
 8005302:	2800      	cmp	r0, #0
 8005304:	d1f8      	bne.n	80052f8 <__gethex+0x84>
 8005306:	9a01      	ldr	r2, [sp, #4]
 8005308:	9903      	ldr	r1, [sp, #12]
 800530a:	4630      	mov	r0, r6
 800530c:	f001 fac5 	bl	800689a <strncmp>
 8005310:	b950      	cbnz	r0, 8005328 <__gethex+0xb4>
 8005312:	b954      	cbnz	r4, 800532a <__gethex+0xb6>
 8005314:	9b01      	ldr	r3, [sp, #4]
 8005316:	18f4      	adds	r4, r6, r3
 8005318:	4622      	mov	r2, r4
 800531a:	4616      	mov	r6, r2
 800531c:	7830      	ldrb	r0, [r6, #0]
 800531e:	3201      	adds	r2, #1
 8005320:	f7ff ff93 	bl	800524a <__hexdig_fun>
 8005324:	2800      	cmp	r0, #0
 8005326:	d1f8      	bne.n	800531a <__gethex+0xa6>
 8005328:	b10c      	cbz	r4, 800532e <__gethex+0xba>
 800532a:	1ba4      	subs	r4, r4, r6
 800532c:	00a4      	lsls	r4, r4, #2
 800532e:	7833      	ldrb	r3, [r6, #0]
 8005330:	2b50      	cmp	r3, #80	; 0x50
 8005332:	d001      	beq.n	8005338 <__gethex+0xc4>
 8005334:	2b70      	cmp	r3, #112	; 0x70
 8005336:	d140      	bne.n	80053ba <__gethex+0x146>
 8005338:	7873      	ldrb	r3, [r6, #1]
 800533a:	2b2b      	cmp	r3, #43	; 0x2b
 800533c:	d031      	beq.n	80053a2 <__gethex+0x12e>
 800533e:	2b2d      	cmp	r3, #45	; 0x2d
 8005340:	d033      	beq.n	80053aa <__gethex+0x136>
 8005342:	f04f 0900 	mov.w	r9, #0
 8005346:	1c71      	adds	r1, r6, #1
 8005348:	7808      	ldrb	r0, [r1, #0]
 800534a:	f7ff ff7e 	bl	800524a <__hexdig_fun>
 800534e:	1e43      	subs	r3, r0, #1
 8005350:	b2db      	uxtb	r3, r3
 8005352:	2b18      	cmp	r3, #24
 8005354:	d831      	bhi.n	80053ba <__gethex+0x146>
 8005356:	f1a0 0210 	sub.w	r2, r0, #16
 800535a:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800535e:	f7ff ff74 	bl	800524a <__hexdig_fun>
 8005362:	1e43      	subs	r3, r0, #1
 8005364:	b2db      	uxtb	r3, r3
 8005366:	2b18      	cmp	r3, #24
 8005368:	d922      	bls.n	80053b0 <__gethex+0x13c>
 800536a:	f1b9 0f00 	cmp.w	r9, #0
 800536e:	d000      	beq.n	8005372 <__gethex+0xfe>
 8005370:	4252      	negs	r2, r2
 8005372:	4414      	add	r4, r2
 8005374:	f8ca 1000 	str.w	r1, [sl]
 8005378:	b30d      	cbz	r5, 80053be <__gethex+0x14a>
 800537a:	f1bb 0f00 	cmp.w	fp, #0
 800537e:	bf0c      	ite	eq
 8005380:	2706      	moveq	r7, #6
 8005382:	2700      	movne	r7, #0
 8005384:	4638      	mov	r0, r7
 8005386:	b00b      	add	sp, #44	; 0x2c
 8005388:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800538c:	f10b 0b01 	add.w	fp, fp, #1
 8005390:	e78a      	b.n	80052a8 <__gethex+0x34>
 8005392:	2500      	movs	r5, #0
 8005394:	462c      	mov	r4, r5
 8005396:	e7ae      	b.n	80052f6 <__gethex+0x82>
 8005398:	463e      	mov	r6, r7
 800539a:	2501      	movs	r5, #1
 800539c:	e7c7      	b.n	800532e <__gethex+0xba>
 800539e:	4604      	mov	r4, r0
 80053a0:	e7fb      	b.n	800539a <__gethex+0x126>
 80053a2:	f04f 0900 	mov.w	r9, #0
 80053a6:	1cb1      	adds	r1, r6, #2
 80053a8:	e7ce      	b.n	8005348 <__gethex+0xd4>
 80053aa:	f04f 0901 	mov.w	r9, #1
 80053ae:	e7fa      	b.n	80053a6 <__gethex+0x132>
 80053b0:	230a      	movs	r3, #10
 80053b2:	fb03 0202 	mla	r2, r3, r2, r0
 80053b6:	3a10      	subs	r2, #16
 80053b8:	e7cf      	b.n	800535a <__gethex+0xe6>
 80053ba:	4631      	mov	r1, r6
 80053bc:	e7da      	b.n	8005374 <__gethex+0x100>
 80053be:	4629      	mov	r1, r5
 80053c0:	1bf3      	subs	r3, r6, r7
 80053c2:	3b01      	subs	r3, #1
 80053c4:	2b07      	cmp	r3, #7
 80053c6:	dc49      	bgt.n	800545c <__gethex+0x1e8>
 80053c8:	9802      	ldr	r0, [sp, #8]
 80053ca:	f000 fad6 	bl	800597a <_Balloc>
 80053ce:	f04f 0b00 	mov.w	fp, #0
 80053d2:	4605      	mov	r5, r0
 80053d4:	46da      	mov	sl, fp
 80053d6:	9b01      	ldr	r3, [sp, #4]
 80053d8:	f100 0914 	add.w	r9, r0, #20
 80053dc:	f1c3 0301 	rsb	r3, r3, #1
 80053e0:	f8cd 9010 	str.w	r9, [sp, #16]
 80053e4:	9308      	str	r3, [sp, #32]
 80053e6:	42b7      	cmp	r7, r6
 80053e8:	d33b      	bcc.n	8005462 <__gethex+0x1ee>
 80053ea:	9804      	ldr	r0, [sp, #16]
 80053ec:	f840 ab04 	str.w	sl, [r0], #4
 80053f0:	eba0 0009 	sub.w	r0, r0, r9
 80053f4:	1080      	asrs	r0, r0, #2
 80053f6:	6128      	str	r0, [r5, #16]
 80053f8:	0147      	lsls	r7, r0, #5
 80053fa:	4650      	mov	r0, sl
 80053fc:	f000 fb81 	bl	8005b02 <__hi0bits>
 8005400:	f8d8 6000 	ldr.w	r6, [r8]
 8005404:	1a3f      	subs	r7, r7, r0
 8005406:	42b7      	cmp	r7, r6
 8005408:	dd64      	ble.n	80054d4 <__gethex+0x260>
 800540a:	1bbf      	subs	r7, r7, r6
 800540c:	4639      	mov	r1, r7
 800540e:	4628      	mov	r0, r5
 8005410:	f000 fe8b 	bl	800612a <__any_on>
 8005414:	4682      	mov	sl, r0
 8005416:	b178      	cbz	r0, 8005438 <__gethex+0x1c4>
 8005418:	f04f 0a01 	mov.w	sl, #1
 800541c:	1e7b      	subs	r3, r7, #1
 800541e:	1159      	asrs	r1, r3, #5
 8005420:	f003 021f 	and.w	r2, r3, #31
 8005424:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8005428:	fa0a f202 	lsl.w	r2, sl, r2
 800542c:	420a      	tst	r2, r1
 800542e:	d003      	beq.n	8005438 <__gethex+0x1c4>
 8005430:	4553      	cmp	r3, sl
 8005432:	dc46      	bgt.n	80054c2 <__gethex+0x24e>
 8005434:	f04f 0a02 	mov.w	sl, #2
 8005438:	4639      	mov	r1, r7
 800543a:	4628      	mov	r0, r5
 800543c:	f7ff feca 	bl	80051d4 <rshift>
 8005440:	443c      	add	r4, r7
 8005442:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005446:	42a3      	cmp	r3, r4
 8005448:	da52      	bge.n	80054f0 <__gethex+0x27c>
 800544a:	4629      	mov	r1, r5
 800544c:	9802      	ldr	r0, [sp, #8]
 800544e:	f000 fac8 	bl	80059e2 <_Bfree>
 8005452:	2300      	movs	r3, #0
 8005454:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005456:	27a3      	movs	r7, #163	; 0xa3
 8005458:	6013      	str	r3, [r2, #0]
 800545a:	e793      	b.n	8005384 <__gethex+0x110>
 800545c:	3101      	adds	r1, #1
 800545e:	105b      	asrs	r3, r3, #1
 8005460:	e7b0      	b.n	80053c4 <__gethex+0x150>
 8005462:	1e73      	subs	r3, r6, #1
 8005464:	9305      	str	r3, [sp, #20]
 8005466:	9a07      	ldr	r2, [sp, #28]
 8005468:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 800546c:	4293      	cmp	r3, r2
 800546e:	d018      	beq.n	80054a2 <__gethex+0x22e>
 8005470:	f1bb 0f20 	cmp.w	fp, #32
 8005474:	d107      	bne.n	8005486 <__gethex+0x212>
 8005476:	9b04      	ldr	r3, [sp, #16]
 8005478:	f8c3 a000 	str.w	sl, [r3]
 800547c:	f04f 0a00 	mov.w	sl, #0
 8005480:	46d3      	mov	fp, sl
 8005482:	3304      	adds	r3, #4
 8005484:	9304      	str	r3, [sp, #16]
 8005486:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 800548a:	f7ff fede 	bl	800524a <__hexdig_fun>
 800548e:	f000 000f 	and.w	r0, r0, #15
 8005492:	fa00 f00b 	lsl.w	r0, r0, fp
 8005496:	ea4a 0a00 	orr.w	sl, sl, r0
 800549a:	f10b 0b04 	add.w	fp, fp, #4
 800549e:	9b05      	ldr	r3, [sp, #20]
 80054a0:	e00d      	b.n	80054be <__gethex+0x24a>
 80054a2:	9b05      	ldr	r3, [sp, #20]
 80054a4:	9a08      	ldr	r2, [sp, #32]
 80054a6:	4413      	add	r3, r2
 80054a8:	42bb      	cmp	r3, r7
 80054aa:	d3e1      	bcc.n	8005470 <__gethex+0x1fc>
 80054ac:	4618      	mov	r0, r3
 80054ae:	9a01      	ldr	r2, [sp, #4]
 80054b0:	9903      	ldr	r1, [sp, #12]
 80054b2:	9309      	str	r3, [sp, #36]	; 0x24
 80054b4:	f001 f9f1 	bl	800689a <strncmp>
 80054b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80054ba:	2800      	cmp	r0, #0
 80054bc:	d1d8      	bne.n	8005470 <__gethex+0x1fc>
 80054be:	461e      	mov	r6, r3
 80054c0:	e791      	b.n	80053e6 <__gethex+0x172>
 80054c2:	1eb9      	subs	r1, r7, #2
 80054c4:	4628      	mov	r0, r5
 80054c6:	f000 fe30 	bl	800612a <__any_on>
 80054ca:	2800      	cmp	r0, #0
 80054cc:	d0b2      	beq.n	8005434 <__gethex+0x1c0>
 80054ce:	f04f 0a03 	mov.w	sl, #3
 80054d2:	e7b1      	b.n	8005438 <__gethex+0x1c4>
 80054d4:	da09      	bge.n	80054ea <__gethex+0x276>
 80054d6:	1bf7      	subs	r7, r6, r7
 80054d8:	4629      	mov	r1, r5
 80054da:	463a      	mov	r2, r7
 80054dc:	9802      	ldr	r0, [sp, #8]
 80054de:	f000 fc4b 	bl	8005d78 <__lshift>
 80054e2:	4605      	mov	r5, r0
 80054e4:	1be4      	subs	r4, r4, r7
 80054e6:	f100 0914 	add.w	r9, r0, #20
 80054ea:	f04f 0a00 	mov.w	sl, #0
 80054ee:	e7a8      	b.n	8005442 <__gethex+0x1ce>
 80054f0:	f8d8 0004 	ldr.w	r0, [r8, #4]
 80054f4:	42a0      	cmp	r0, r4
 80054f6:	dd6b      	ble.n	80055d0 <__gethex+0x35c>
 80054f8:	1b04      	subs	r4, r0, r4
 80054fa:	42a6      	cmp	r6, r4
 80054fc:	dc2e      	bgt.n	800555c <__gethex+0x2e8>
 80054fe:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8005502:	2b02      	cmp	r3, #2
 8005504:	d022      	beq.n	800554c <__gethex+0x2d8>
 8005506:	2b03      	cmp	r3, #3
 8005508:	d024      	beq.n	8005554 <__gethex+0x2e0>
 800550a:	2b01      	cmp	r3, #1
 800550c:	d115      	bne.n	800553a <__gethex+0x2c6>
 800550e:	42a6      	cmp	r6, r4
 8005510:	d113      	bne.n	800553a <__gethex+0x2c6>
 8005512:	2e01      	cmp	r6, #1
 8005514:	dc0b      	bgt.n	800552e <__gethex+0x2ba>
 8005516:	f8d8 3004 	ldr.w	r3, [r8, #4]
 800551a:	9a06      	ldr	r2, [sp, #24]
 800551c:	2762      	movs	r7, #98	; 0x62
 800551e:	6013      	str	r3, [r2, #0]
 8005520:	2301      	movs	r3, #1
 8005522:	612b      	str	r3, [r5, #16]
 8005524:	f8c9 3000 	str.w	r3, [r9]
 8005528:	9b14      	ldr	r3, [sp, #80]	; 0x50
 800552a:	601d      	str	r5, [r3, #0]
 800552c:	e72a      	b.n	8005384 <__gethex+0x110>
 800552e:	1e71      	subs	r1, r6, #1
 8005530:	4628      	mov	r0, r5
 8005532:	f000 fdfa 	bl	800612a <__any_on>
 8005536:	2800      	cmp	r0, #0
 8005538:	d1ed      	bne.n	8005516 <__gethex+0x2a2>
 800553a:	4629      	mov	r1, r5
 800553c:	9802      	ldr	r0, [sp, #8]
 800553e:	f000 fa50 	bl	80059e2 <_Bfree>
 8005542:	2300      	movs	r3, #0
 8005544:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8005546:	2750      	movs	r7, #80	; 0x50
 8005548:	6013      	str	r3, [r2, #0]
 800554a:	e71b      	b.n	8005384 <__gethex+0x110>
 800554c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800554e:	2b00      	cmp	r3, #0
 8005550:	d0e1      	beq.n	8005516 <__gethex+0x2a2>
 8005552:	e7f2      	b.n	800553a <__gethex+0x2c6>
 8005554:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8005556:	2b00      	cmp	r3, #0
 8005558:	d1dd      	bne.n	8005516 <__gethex+0x2a2>
 800555a:	e7ee      	b.n	800553a <__gethex+0x2c6>
 800555c:	1e67      	subs	r7, r4, #1
 800555e:	f1ba 0f00 	cmp.w	sl, #0
 8005562:	d132      	bne.n	80055ca <__gethex+0x356>
 8005564:	b127      	cbz	r7, 8005570 <__gethex+0x2fc>
 8005566:	4639      	mov	r1, r7
 8005568:	4628      	mov	r0, r5
 800556a:	f000 fdde 	bl	800612a <__any_on>
 800556e:	4682      	mov	sl, r0
 8005570:	2301      	movs	r3, #1
 8005572:	117a      	asrs	r2, r7, #5
 8005574:	f007 071f 	and.w	r7, r7, #31
 8005578:	fa03 f707 	lsl.w	r7, r3, r7
 800557c:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
 8005580:	4621      	mov	r1, r4
 8005582:	421f      	tst	r7, r3
 8005584:	f04f 0702 	mov.w	r7, #2
 8005588:	4628      	mov	r0, r5
 800558a:	bf18      	it	ne
 800558c:	f04a 0a02 	orrne.w	sl, sl, #2
 8005590:	1b36      	subs	r6, r6, r4
 8005592:	f7ff fe1f 	bl	80051d4 <rshift>
 8005596:	f8d8 4004 	ldr.w	r4, [r8, #4]
 800559a:	f1ba 0f00 	cmp.w	sl, #0
 800559e:	d048      	beq.n	8005632 <__gethex+0x3be>
 80055a0:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80055a4:	2b02      	cmp	r3, #2
 80055a6:	d015      	beq.n	80055d4 <__gethex+0x360>
 80055a8:	2b03      	cmp	r3, #3
 80055aa:	d017      	beq.n	80055dc <__gethex+0x368>
 80055ac:	2b01      	cmp	r3, #1
 80055ae:	d109      	bne.n	80055c4 <__gethex+0x350>
 80055b0:	f01a 0f02 	tst.w	sl, #2
 80055b4:	d006      	beq.n	80055c4 <__gethex+0x350>
 80055b6:	f8d9 3000 	ldr.w	r3, [r9]
 80055ba:	ea4a 0a03 	orr.w	sl, sl, r3
 80055be:	f01a 0f01 	tst.w	sl, #1
 80055c2:	d10e      	bne.n	80055e2 <__gethex+0x36e>
 80055c4:	f047 0710 	orr.w	r7, r7, #16
 80055c8:	e033      	b.n	8005632 <__gethex+0x3be>
 80055ca:	f04f 0a01 	mov.w	sl, #1
 80055ce:	e7cf      	b.n	8005570 <__gethex+0x2fc>
 80055d0:	2701      	movs	r7, #1
 80055d2:	e7e2      	b.n	800559a <__gethex+0x326>
 80055d4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80055d6:	f1c3 0301 	rsb	r3, r3, #1
 80055da:	9315      	str	r3, [sp, #84]	; 0x54
 80055dc:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80055de:	2b00      	cmp	r3, #0
 80055e0:	d0f0      	beq.n	80055c4 <__gethex+0x350>
 80055e2:	f04f 0c00 	mov.w	ip, #0
 80055e6:	f8d5 9010 	ldr.w	r9, [r5, #16]
 80055ea:	f105 0314 	add.w	r3, r5, #20
 80055ee:	ea4f 0a89 	mov.w	sl, r9, lsl #2
 80055f2:	eb03 010a 	add.w	r1, r3, sl
 80055f6:	4618      	mov	r0, r3
 80055f8:	f853 2b04 	ldr.w	r2, [r3], #4
 80055fc:	f1b2 3fff 	cmp.w	r2, #4294967295	; 0xffffffff
 8005600:	d01c      	beq.n	800563c <__gethex+0x3c8>
 8005602:	3201      	adds	r2, #1
 8005604:	6002      	str	r2, [r0, #0]
 8005606:	2f02      	cmp	r7, #2
 8005608:	f105 0314 	add.w	r3, r5, #20
 800560c:	d138      	bne.n	8005680 <__gethex+0x40c>
 800560e:	f8d8 2000 	ldr.w	r2, [r8]
 8005612:	3a01      	subs	r2, #1
 8005614:	42b2      	cmp	r2, r6
 8005616:	d10a      	bne.n	800562e <__gethex+0x3ba>
 8005618:	2201      	movs	r2, #1
 800561a:	1171      	asrs	r1, r6, #5
 800561c:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8005620:	f006 061f 	and.w	r6, r6, #31
 8005624:	fa02 f606 	lsl.w	r6, r2, r6
 8005628:	421e      	tst	r6, r3
 800562a:	bf18      	it	ne
 800562c:	4617      	movne	r7, r2
 800562e:	f047 0720 	orr.w	r7, r7, #32
 8005632:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8005634:	601d      	str	r5, [r3, #0]
 8005636:	9b06      	ldr	r3, [sp, #24]
 8005638:	601c      	str	r4, [r3, #0]
 800563a:	e6a3      	b.n	8005384 <__gethex+0x110>
 800563c:	4299      	cmp	r1, r3
 800563e:	f843 cc04 	str.w	ip, [r3, #-4]
 8005642:	d8d8      	bhi.n	80055f6 <__gethex+0x382>
 8005644:	68ab      	ldr	r3, [r5, #8]
 8005646:	4599      	cmp	r9, r3
 8005648:	db12      	blt.n	8005670 <__gethex+0x3fc>
 800564a:	6869      	ldr	r1, [r5, #4]
 800564c:	9802      	ldr	r0, [sp, #8]
 800564e:	3101      	adds	r1, #1
 8005650:	f000 f993 	bl	800597a <_Balloc>
 8005654:	4683      	mov	fp, r0
 8005656:	692a      	ldr	r2, [r5, #16]
 8005658:	f105 010c 	add.w	r1, r5, #12
 800565c:	3202      	adds	r2, #2
 800565e:	0092      	lsls	r2, r2, #2
 8005660:	300c      	adds	r0, #12
 8005662:	f000 f97f 	bl	8005964 <memcpy>
 8005666:	4629      	mov	r1, r5
 8005668:	9802      	ldr	r0, [sp, #8]
 800566a:	f000 f9ba 	bl	80059e2 <_Bfree>
 800566e:	465d      	mov	r5, fp
 8005670:	692b      	ldr	r3, [r5, #16]
 8005672:	1c5a      	adds	r2, r3, #1
 8005674:	612a      	str	r2, [r5, #16]
 8005676:	2201      	movs	r2, #1
 8005678:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 800567c:	615a      	str	r2, [r3, #20]
 800567e:	e7c2      	b.n	8005606 <__gethex+0x392>
 8005680:	692a      	ldr	r2, [r5, #16]
 8005682:	454a      	cmp	r2, r9
 8005684:	dd0b      	ble.n	800569e <__gethex+0x42a>
 8005686:	2101      	movs	r1, #1
 8005688:	4628      	mov	r0, r5
 800568a:	f7ff fda3 	bl	80051d4 <rshift>
 800568e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005692:	3401      	adds	r4, #1
 8005694:	42a3      	cmp	r3, r4
 8005696:	f6ff aed8 	blt.w	800544a <__gethex+0x1d6>
 800569a:	2701      	movs	r7, #1
 800569c:	e7c7      	b.n	800562e <__gethex+0x3ba>
 800569e:	f016 061f 	ands.w	r6, r6, #31
 80056a2:	d0fa      	beq.n	800569a <__gethex+0x426>
 80056a4:	449a      	add	sl, r3
 80056a6:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 80056aa:	f000 fa2a 	bl	8005b02 <__hi0bits>
 80056ae:	f1c6 0620 	rsb	r6, r6, #32
 80056b2:	42b0      	cmp	r0, r6
 80056b4:	dbe7      	blt.n	8005686 <__gethex+0x412>
 80056b6:	e7f0      	b.n	800569a <__gethex+0x426>

080056b8 <L_shift>:
 80056b8:	f1c2 0208 	rsb	r2, r2, #8
 80056bc:	0092      	lsls	r2, r2, #2
 80056be:	b570      	push	{r4, r5, r6, lr}
 80056c0:	f1c2 0620 	rsb	r6, r2, #32
 80056c4:	6843      	ldr	r3, [r0, #4]
 80056c6:	6804      	ldr	r4, [r0, #0]
 80056c8:	fa03 f506 	lsl.w	r5, r3, r6
 80056cc:	432c      	orrs	r4, r5
 80056ce:	40d3      	lsrs	r3, r2
 80056d0:	6004      	str	r4, [r0, #0]
 80056d2:	f840 3f04 	str.w	r3, [r0, #4]!
 80056d6:	4288      	cmp	r0, r1
 80056d8:	d3f4      	bcc.n	80056c4 <L_shift+0xc>
 80056da:	bd70      	pop	{r4, r5, r6, pc}

080056dc <__match>:
 80056dc:	b530      	push	{r4, r5, lr}
 80056de:	6803      	ldr	r3, [r0, #0]
 80056e0:	3301      	adds	r3, #1
 80056e2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80056e6:	b914      	cbnz	r4, 80056ee <__match+0x12>
 80056e8:	6003      	str	r3, [r0, #0]
 80056ea:	2001      	movs	r0, #1
 80056ec:	bd30      	pop	{r4, r5, pc}
 80056ee:	f813 2b01 	ldrb.w	r2, [r3], #1
 80056f2:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 80056f6:	2d19      	cmp	r5, #25
 80056f8:	bf98      	it	ls
 80056fa:	3220      	addls	r2, #32
 80056fc:	42a2      	cmp	r2, r4
 80056fe:	d0f0      	beq.n	80056e2 <__match+0x6>
 8005700:	2000      	movs	r0, #0
 8005702:	e7f3      	b.n	80056ec <__match+0x10>

08005704 <__hexnan>:
 8005704:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005708:	2500      	movs	r5, #0
 800570a:	680b      	ldr	r3, [r1, #0]
 800570c:	4682      	mov	sl, r0
 800570e:	115f      	asrs	r7, r3, #5
 8005710:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 8005714:	f013 031f 	ands.w	r3, r3, #31
 8005718:	bf18      	it	ne
 800571a:	3704      	addne	r7, #4
 800571c:	1f3e      	subs	r6, r7, #4
 800571e:	4690      	mov	r8, r2
 8005720:	46b1      	mov	r9, r6
 8005722:	4634      	mov	r4, r6
 8005724:	46ab      	mov	fp, r5
 8005726:	b087      	sub	sp, #28
 8005728:	6801      	ldr	r1, [r0, #0]
 800572a:	9301      	str	r3, [sp, #4]
 800572c:	f847 5c04 	str.w	r5, [r7, #-4]
 8005730:	9502      	str	r5, [sp, #8]
 8005732:	784a      	ldrb	r2, [r1, #1]
 8005734:	1c4b      	adds	r3, r1, #1
 8005736:	9303      	str	r3, [sp, #12]
 8005738:	b342      	cbz	r2, 800578c <__hexnan+0x88>
 800573a:	4610      	mov	r0, r2
 800573c:	9105      	str	r1, [sp, #20]
 800573e:	9204      	str	r2, [sp, #16]
 8005740:	f7ff fd83 	bl	800524a <__hexdig_fun>
 8005744:	2800      	cmp	r0, #0
 8005746:	d143      	bne.n	80057d0 <__hexnan+0xcc>
 8005748:	9a04      	ldr	r2, [sp, #16]
 800574a:	9905      	ldr	r1, [sp, #20]
 800574c:	2a20      	cmp	r2, #32
 800574e:	d818      	bhi.n	8005782 <__hexnan+0x7e>
 8005750:	9b02      	ldr	r3, [sp, #8]
 8005752:	459b      	cmp	fp, r3
 8005754:	dd13      	ble.n	800577e <__hexnan+0x7a>
 8005756:	454c      	cmp	r4, r9
 8005758:	d206      	bcs.n	8005768 <__hexnan+0x64>
 800575a:	2d07      	cmp	r5, #7
 800575c:	dc04      	bgt.n	8005768 <__hexnan+0x64>
 800575e:	462a      	mov	r2, r5
 8005760:	4649      	mov	r1, r9
 8005762:	4620      	mov	r0, r4
 8005764:	f7ff ffa8 	bl	80056b8 <L_shift>
 8005768:	4544      	cmp	r4, r8
 800576a:	d944      	bls.n	80057f6 <__hexnan+0xf2>
 800576c:	2300      	movs	r3, #0
 800576e:	f1a4 0904 	sub.w	r9, r4, #4
 8005772:	f844 3c04 	str.w	r3, [r4, #-4]
 8005776:	461d      	mov	r5, r3
 8005778:	464c      	mov	r4, r9
 800577a:	f8cd b008 	str.w	fp, [sp, #8]
 800577e:	9903      	ldr	r1, [sp, #12]
 8005780:	e7d7      	b.n	8005732 <__hexnan+0x2e>
 8005782:	2a29      	cmp	r2, #41	; 0x29
 8005784:	d14a      	bne.n	800581c <__hexnan+0x118>
 8005786:	3102      	adds	r1, #2
 8005788:	f8ca 1000 	str.w	r1, [sl]
 800578c:	f1bb 0f00 	cmp.w	fp, #0
 8005790:	d044      	beq.n	800581c <__hexnan+0x118>
 8005792:	454c      	cmp	r4, r9
 8005794:	d206      	bcs.n	80057a4 <__hexnan+0xa0>
 8005796:	2d07      	cmp	r5, #7
 8005798:	dc04      	bgt.n	80057a4 <__hexnan+0xa0>
 800579a:	462a      	mov	r2, r5
 800579c:	4649      	mov	r1, r9
 800579e:	4620      	mov	r0, r4
 80057a0:	f7ff ff8a 	bl	80056b8 <L_shift>
 80057a4:	4544      	cmp	r4, r8
 80057a6:	d928      	bls.n	80057fa <__hexnan+0xf6>
 80057a8:	4643      	mov	r3, r8
 80057aa:	f854 2b04 	ldr.w	r2, [r4], #4
 80057ae:	42a6      	cmp	r6, r4
 80057b0:	f843 2b04 	str.w	r2, [r3], #4
 80057b4:	d2f9      	bcs.n	80057aa <__hexnan+0xa6>
 80057b6:	2200      	movs	r2, #0
 80057b8:	f843 2b04 	str.w	r2, [r3], #4
 80057bc:	429e      	cmp	r6, r3
 80057be:	d2fb      	bcs.n	80057b8 <__hexnan+0xb4>
 80057c0:	6833      	ldr	r3, [r6, #0]
 80057c2:	b91b      	cbnz	r3, 80057cc <__hexnan+0xc8>
 80057c4:	4546      	cmp	r6, r8
 80057c6:	d127      	bne.n	8005818 <__hexnan+0x114>
 80057c8:	2301      	movs	r3, #1
 80057ca:	6033      	str	r3, [r6, #0]
 80057cc:	2005      	movs	r0, #5
 80057ce:	e026      	b.n	800581e <__hexnan+0x11a>
 80057d0:	3501      	adds	r5, #1
 80057d2:	2d08      	cmp	r5, #8
 80057d4:	f10b 0b01 	add.w	fp, fp, #1
 80057d8:	dd06      	ble.n	80057e8 <__hexnan+0xe4>
 80057da:	4544      	cmp	r4, r8
 80057dc:	d9cf      	bls.n	800577e <__hexnan+0x7a>
 80057de:	2300      	movs	r3, #0
 80057e0:	2501      	movs	r5, #1
 80057e2:	f844 3c04 	str.w	r3, [r4, #-4]
 80057e6:	3c04      	subs	r4, #4
 80057e8:	6822      	ldr	r2, [r4, #0]
 80057ea:	f000 000f 	and.w	r0, r0, #15
 80057ee:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 80057f2:	6020      	str	r0, [r4, #0]
 80057f4:	e7c3      	b.n	800577e <__hexnan+0x7a>
 80057f6:	2508      	movs	r5, #8
 80057f8:	e7c1      	b.n	800577e <__hexnan+0x7a>
 80057fa:	9b01      	ldr	r3, [sp, #4]
 80057fc:	2b00      	cmp	r3, #0
 80057fe:	d0df      	beq.n	80057c0 <__hexnan+0xbc>
 8005800:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8005804:	f1c3 0320 	rsb	r3, r3, #32
 8005808:	fa22 f303 	lsr.w	r3, r2, r3
 800580c:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8005810:	401a      	ands	r2, r3
 8005812:	f847 2c04 	str.w	r2, [r7, #-4]
 8005816:	e7d3      	b.n	80057c0 <__hexnan+0xbc>
 8005818:	3e04      	subs	r6, #4
 800581a:	e7d1      	b.n	80057c0 <__hexnan+0xbc>
 800581c:	2004      	movs	r0, #4
 800581e:	b007      	add	sp, #28
 8005820:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08005824 <__locale_ctype_ptr_l>:
 8005824:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 8005828:	4770      	bx	lr

0800582a <__localeconv_l>:
 800582a:	30f0      	adds	r0, #240	; 0xf0
 800582c:	4770      	bx	lr
	...

08005830 <_localeconv_r>:
 8005830:	4b04      	ldr	r3, [pc, #16]	; (8005844 <_localeconv_r+0x14>)
 8005832:	681b      	ldr	r3, [r3, #0]
 8005834:	6a18      	ldr	r0, [r3, #32]
 8005836:	4b04      	ldr	r3, [pc, #16]	; (8005848 <_localeconv_r+0x18>)
 8005838:	2800      	cmp	r0, #0
 800583a:	bf08      	it	eq
 800583c:	4618      	moveq	r0, r3
 800583e:	30f0      	adds	r0, #240	; 0xf0
 8005840:	4770      	bx	lr
 8005842:	bf00      	nop
 8005844:	20000014 	.word	0x20000014
 8005848:	20000078 	.word	0x20000078

0800584c <__swhatbuf_r>:
 800584c:	b570      	push	{r4, r5, r6, lr}
 800584e:	460e      	mov	r6, r1
 8005850:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005854:	b096      	sub	sp, #88	; 0x58
 8005856:	2900      	cmp	r1, #0
 8005858:	4614      	mov	r4, r2
 800585a:	461d      	mov	r5, r3
 800585c:	da07      	bge.n	800586e <__swhatbuf_r+0x22>
 800585e:	2300      	movs	r3, #0
 8005860:	602b      	str	r3, [r5, #0]
 8005862:	89b3      	ldrh	r3, [r6, #12]
 8005864:	061a      	lsls	r2, r3, #24
 8005866:	d410      	bmi.n	800588a <__swhatbuf_r+0x3e>
 8005868:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800586c:	e00e      	b.n	800588c <__swhatbuf_r+0x40>
 800586e:	466a      	mov	r2, sp
 8005870:	f001 f854 	bl	800691c <_fstat_r>
 8005874:	2800      	cmp	r0, #0
 8005876:	dbf2      	blt.n	800585e <__swhatbuf_r+0x12>
 8005878:	9a01      	ldr	r2, [sp, #4]
 800587a:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 800587e:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8005882:	425a      	negs	r2, r3
 8005884:	415a      	adcs	r2, r3
 8005886:	602a      	str	r2, [r5, #0]
 8005888:	e7ee      	b.n	8005868 <__swhatbuf_r+0x1c>
 800588a:	2340      	movs	r3, #64	; 0x40
 800588c:	2000      	movs	r0, #0
 800588e:	6023      	str	r3, [r4, #0]
 8005890:	b016      	add	sp, #88	; 0x58
 8005892:	bd70      	pop	{r4, r5, r6, pc}

08005894 <__smakebuf_r>:
 8005894:	898b      	ldrh	r3, [r1, #12]
 8005896:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8005898:	079d      	lsls	r5, r3, #30
 800589a:	4606      	mov	r6, r0
 800589c:	460c      	mov	r4, r1
 800589e:	d507      	bpl.n	80058b0 <__smakebuf_r+0x1c>
 80058a0:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80058a4:	6023      	str	r3, [r4, #0]
 80058a6:	6123      	str	r3, [r4, #16]
 80058a8:	2301      	movs	r3, #1
 80058aa:	6163      	str	r3, [r4, #20]
 80058ac:	b002      	add	sp, #8
 80058ae:	bd70      	pop	{r4, r5, r6, pc}
 80058b0:	ab01      	add	r3, sp, #4
 80058b2:	466a      	mov	r2, sp
 80058b4:	f7ff ffca 	bl	800584c <__swhatbuf_r>
 80058b8:	9900      	ldr	r1, [sp, #0]
 80058ba:	4605      	mov	r5, r0
 80058bc:	4630      	mov	r0, r6
 80058be:	f000 fcaf 	bl	8006220 <_malloc_r>
 80058c2:	b948      	cbnz	r0, 80058d8 <__smakebuf_r+0x44>
 80058c4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80058c8:	059a      	lsls	r2, r3, #22
 80058ca:	d4ef      	bmi.n	80058ac <__smakebuf_r+0x18>
 80058cc:	f023 0303 	bic.w	r3, r3, #3
 80058d0:	f043 0302 	orr.w	r3, r3, #2
 80058d4:	81a3      	strh	r3, [r4, #12]
 80058d6:	e7e3      	b.n	80058a0 <__smakebuf_r+0xc>
 80058d8:	4b0d      	ldr	r3, [pc, #52]	; (8005910 <__smakebuf_r+0x7c>)
 80058da:	62b3      	str	r3, [r6, #40]	; 0x28
 80058dc:	89a3      	ldrh	r3, [r4, #12]
 80058de:	6020      	str	r0, [r4, #0]
 80058e0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80058e4:	81a3      	strh	r3, [r4, #12]
 80058e6:	9b00      	ldr	r3, [sp, #0]
 80058e8:	6120      	str	r0, [r4, #16]
 80058ea:	6163      	str	r3, [r4, #20]
 80058ec:	9b01      	ldr	r3, [sp, #4]
 80058ee:	b15b      	cbz	r3, 8005908 <__smakebuf_r+0x74>
 80058f0:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80058f4:	4630      	mov	r0, r6
 80058f6:	f001 f823 	bl	8006940 <_isatty_r>
 80058fa:	b128      	cbz	r0, 8005908 <__smakebuf_r+0x74>
 80058fc:	89a3      	ldrh	r3, [r4, #12]
 80058fe:	f023 0303 	bic.w	r3, r3, #3
 8005902:	f043 0301 	orr.w	r3, r3, #1
 8005906:	81a3      	strh	r3, [r4, #12]
 8005908:	89a3      	ldrh	r3, [r4, #12]
 800590a:	431d      	orrs	r5, r3
 800590c:	81a5      	strh	r5, [r4, #12]
 800590e:	e7cd      	b.n	80058ac <__smakebuf_r+0x18>
 8005910:	08005089 	.word	0x08005089

08005914 <malloc>:
 8005914:	4b02      	ldr	r3, [pc, #8]	; (8005920 <malloc+0xc>)
 8005916:	4601      	mov	r1, r0
 8005918:	6818      	ldr	r0, [r3, #0]
 800591a:	f000 bc81 	b.w	8006220 <_malloc_r>
 800591e:	bf00      	nop
 8005920:	20000014 	.word	0x20000014

08005924 <__ascii_mbtowc>:
 8005924:	b082      	sub	sp, #8
 8005926:	b901      	cbnz	r1, 800592a <__ascii_mbtowc+0x6>
 8005928:	a901      	add	r1, sp, #4
 800592a:	b142      	cbz	r2, 800593e <__ascii_mbtowc+0x1a>
 800592c:	b14b      	cbz	r3, 8005942 <__ascii_mbtowc+0x1e>
 800592e:	7813      	ldrb	r3, [r2, #0]
 8005930:	600b      	str	r3, [r1, #0]
 8005932:	7812      	ldrb	r2, [r2, #0]
 8005934:	1c10      	adds	r0, r2, #0
 8005936:	bf18      	it	ne
 8005938:	2001      	movne	r0, #1
 800593a:	b002      	add	sp, #8
 800593c:	4770      	bx	lr
 800593e:	4610      	mov	r0, r2
 8005940:	e7fb      	b.n	800593a <__ascii_mbtowc+0x16>
 8005942:	f06f 0001 	mvn.w	r0, #1
 8005946:	e7f8      	b.n	800593a <__ascii_mbtowc+0x16>

08005948 <memchr>:
 8005948:	b510      	push	{r4, lr}
 800594a:	b2c9      	uxtb	r1, r1
 800594c:	4402      	add	r2, r0
 800594e:	4290      	cmp	r0, r2
 8005950:	4603      	mov	r3, r0
 8005952:	d101      	bne.n	8005958 <memchr+0x10>
 8005954:	2300      	movs	r3, #0
 8005956:	e003      	b.n	8005960 <memchr+0x18>
 8005958:	781c      	ldrb	r4, [r3, #0]
 800595a:	3001      	adds	r0, #1
 800595c:	428c      	cmp	r4, r1
 800595e:	d1f6      	bne.n	800594e <memchr+0x6>
 8005960:	4618      	mov	r0, r3
 8005962:	bd10      	pop	{r4, pc}

08005964 <memcpy>:
 8005964:	b510      	push	{r4, lr}
 8005966:	1e43      	subs	r3, r0, #1
 8005968:	440a      	add	r2, r1
 800596a:	4291      	cmp	r1, r2
 800596c:	d100      	bne.n	8005970 <memcpy+0xc>
 800596e:	bd10      	pop	{r4, pc}
 8005970:	f811 4b01 	ldrb.w	r4, [r1], #1
 8005974:	f803 4f01 	strb.w	r4, [r3, #1]!
 8005978:	e7f7      	b.n	800596a <memcpy+0x6>

0800597a <_Balloc>:
 800597a:	b570      	push	{r4, r5, r6, lr}
 800597c:	6a45      	ldr	r5, [r0, #36]	; 0x24
 800597e:	4604      	mov	r4, r0
 8005980:	460e      	mov	r6, r1
 8005982:	b93d      	cbnz	r5, 8005994 <_Balloc+0x1a>
 8005984:	2010      	movs	r0, #16
 8005986:	f7ff ffc5 	bl	8005914 <malloc>
 800598a:	6260      	str	r0, [r4, #36]	; 0x24
 800598c:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8005990:	6005      	str	r5, [r0, #0]
 8005992:	60c5      	str	r5, [r0, #12]
 8005994:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005996:	68eb      	ldr	r3, [r5, #12]
 8005998:	b183      	cbz	r3, 80059bc <_Balloc+0x42>
 800599a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800599c:	68db      	ldr	r3, [r3, #12]
 800599e:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 80059a2:	b9b8      	cbnz	r0, 80059d4 <_Balloc+0x5a>
 80059a4:	2101      	movs	r1, #1
 80059a6:	fa01 f506 	lsl.w	r5, r1, r6
 80059aa:	1d6a      	adds	r2, r5, #5
 80059ac:	0092      	lsls	r2, r2, #2
 80059ae:	4620      	mov	r0, r4
 80059b0:	f000 fbdc 	bl	800616c <_calloc_r>
 80059b4:	b160      	cbz	r0, 80059d0 <_Balloc+0x56>
 80059b6:	e9c0 6501 	strd	r6, r5, [r0, #4]
 80059ba:	e00e      	b.n	80059da <_Balloc+0x60>
 80059bc:	2221      	movs	r2, #33	; 0x21
 80059be:	2104      	movs	r1, #4
 80059c0:	4620      	mov	r0, r4
 80059c2:	f000 fbd3 	bl	800616c <_calloc_r>
 80059c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80059c8:	60e8      	str	r0, [r5, #12]
 80059ca:	68db      	ldr	r3, [r3, #12]
 80059cc:	2b00      	cmp	r3, #0
 80059ce:	d1e4      	bne.n	800599a <_Balloc+0x20>
 80059d0:	2000      	movs	r0, #0
 80059d2:	bd70      	pop	{r4, r5, r6, pc}
 80059d4:	6802      	ldr	r2, [r0, #0]
 80059d6:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 80059da:	2300      	movs	r3, #0
 80059dc:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80059e0:	e7f7      	b.n	80059d2 <_Balloc+0x58>

080059e2 <_Bfree>:
 80059e2:	b570      	push	{r4, r5, r6, lr}
 80059e4:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80059e6:	4606      	mov	r6, r0
 80059e8:	460d      	mov	r5, r1
 80059ea:	b93c      	cbnz	r4, 80059fc <_Bfree+0x1a>
 80059ec:	2010      	movs	r0, #16
 80059ee:	f7ff ff91 	bl	8005914 <malloc>
 80059f2:	6270      	str	r0, [r6, #36]	; 0x24
 80059f4:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80059f8:	6004      	str	r4, [r0, #0]
 80059fa:	60c4      	str	r4, [r0, #12]
 80059fc:	b13d      	cbz	r5, 8005a0e <_Bfree+0x2c>
 80059fe:	6a73      	ldr	r3, [r6, #36]	; 0x24
 8005a00:	686a      	ldr	r2, [r5, #4]
 8005a02:	68db      	ldr	r3, [r3, #12]
 8005a04:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8005a08:	6029      	str	r1, [r5, #0]
 8005a0a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 8005a0e:	bd70      	pop	{r4, r5, r6, pc}

08005a10 <__multadd>:
 8005a10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a14:	461f      	mov	r7, r3
 8005a16:	4606      	mov	r6, r0
 8005a18:	460c      	mov	r4, r1
 8005a1a:	2300      	movs	r3, #0
 8005a1c:	690d      	ldr	r5, [r1, #16]
 8005a1e:	f101 0c14 	add.w	ip, r1, #20
 8005a22:	f8dc 0000 	ldr.w	r0, [ip]
 8005a26:	3301      	adds	r3, #1
 8005a28:	b281      	uxth	r1, r0
 8005a2a:	fb02 7101 	mla	r1, r2, r1, r7
 8005a2e:	0c00      	lsrs	r0, r0, #16
 8005a30:	0c0f      	lsrs	r7, r1, #16
 8005a32:	fb02 7000 	mla	r0, r2, r0, r7
 8005a36:	b289      	uxth	r1, r1
 8005a38:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8005a3c:	429d      	cmp	r5, r3
 8005a3e:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8005a42:	f84c 1b04 	str.w	r1, [ip], #4
 8005a46:	dcec      	bgt.n	8005a22 <__multadd+0x12>
 8005a48:	b1d7      	cbz	r7, 8005a80 <__multadd+0x70>
 8005a4a:	68a3      	ldr	r3, [r4, #8]
 8005a4c:	42ab      	cmp	r3, r5
 8005a4e:	dc12      	bgt.n	8005a76 <__multadd+0x66>
 8005a50:	6861      	ldr	r1, [r4, #4]
 8005a52:	4630      	mov	r0, r6
 8005a54:	3101      	adds	r1, #1
 8005a56:	f7ff ff90 	bl	800597a <_Balloc>
 8005a5a:	4680      	mov	r8, r0
 8005a5c:	6922      	ldr	r2, [r4, #16]
 8005a5e:	f104 010c 	add.w	r1, r4, #12
 8005a62:	3202      	adds	r2, #2
 8005a64:	0092      	lsls	r2, r2, #2
 8005a66:	300c      	adds	r0, #12
 8005a68:	f7ff ff7c 	bl	8005964 <memcpy>
 8005a6c:	4621      	mov	r1, r4
 8005a6e:	4630      	mov	r0, r6
 8005a70:	f7ff ffb7 	bl	80059e2 <_Bfree>
 8005a74:	4644      	mov	r4, r8
 8005a76:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8005a7a:	3501      	adds	r5, #1
 8005a7c:	615f      	str	r7, [r3, #20]
 8005a7e:	6125      	str	r5, [r4, #16]
 8005a80:	4620      	mov	r0, r4
 8005a82:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08005a86 <__s2b>:
 8005a86:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005a8a:	4615      	mov	r5, r2
 8005a8c:	2209      	movs	r2, #9
 8005a8e:	461f      	mov	r7, r3
 8005a90:	3308      	adds	r3, #8
 8005a92:	460c      	mov	r4, r1
 8005a94:	fb93 f3f2 	sdiv	r3, r3, r2
 8005a98:	4606      	mov	r6, r0
 8005a9a:	2201      	movs	r2, #1
 8005a9c:	2100      	movs	r1, #0
 8005a9e:	429a      	cmp	r2, r3
 8005aa0:	db20      	blt.n	8005ae4 <__s2b+0x5e>
 8005aa2:	4630      	mov	r0, r6
 8005aa4:	f7ff ff69 	bl	800597a <_Balloc>
 8005aa8:	9b08      	ldr	r3, [sp, #32]
 8005aaa:	2d09      	cmp	r5, #9
 8005aac:	6143      	str	r3, [r0, #20]
 8005aae:	f04f 0301 	mov.w	r3, #1
 8005ab2:	6103      	str	r3, [r0, #16]
 8005ab4:	dd19      	ble.n	8005aea <__s2b+0x64>
 8005ab6:	f104 0809 	add.w	r8, r4, #9
 8005aba:	46c1      	mov	r9, r8
 8005abc:	442c      	add	r4, r5
 8005abe:	f819 3b01 	ldrb.w	r3, [r9], #1
 8005ac2:	4601      	mov	r1, r0
 8005ac4:	3b30      	subs	r3, #48	; 0x30
 8005ac6:	220a      	movs	r2, #10
 8005ac8:	4630      	mov	r0, r6
 8005aca:	f7ff ffa1 	bl	8005a10 <__multadd>
 8005ace:	45a1      	cmp	r9, r4
 8005ad0:	d1f5      	bne.n	8005abe <__s2b+0x38>
 8005ad2:	eb08 0405 	add.w	r4, r8, r5
 8005ad6:	3c08      	subs	r4, #8
 8005ad8:	1b2d      	subs	r5, r5, r4
 8005ada:	1963      	adds	r3, r4, r5
 8005adc:	42bb      	cmp	r3, r7
 8005ade:	db07      	blt.n	8005af0 <__s2b+0x6a>
 8005ae0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005ae4:	0052      	lsls	r2, r2, #1
 8005ae6:	3101      	adds	r1, #1
 8005ae8:	e7d9      	b.n	8005a9e <__s2b+0x18>
 8005aea:	340a      	adds	r4, #10
 8005aec:	2509      	movs	r5, #9
 8005aee:	e7f3      	b.n	8005ad8 <__s2b+0x52>
 8005af0:	f814 3b01 	ldrb.w	r3, [r4], #1
 8005af4:	4601      	mov	r1, r0
 8005af6:	3b30      	subs	r3, #48	; 0x30
 8005af8:	220a      	movs	r2, #10
 8005afa:	4630      	mov	r0, r6
 8005afc:	f7ff ff88 	bl	8005a10 <__multadd>
 8005b00:	e7eb      	b.n	8005ada <__s2b+0x54>

08005b02 <__hi0bits>:
 8005b02:	0c02      	lsrs	r2, r0, #16
 8005b04:	0412      	lsls	r2, r2, #16
 8005b06:	4603      	mov	r3, r0
 8005b08:	b9b2      	cbnz	r2, 8005b38 <__hi0bits+0x36>
 8005b0a:	0403      	lsls	r3, r0, #16
 8005b0c:	2010      	movs	r0, #16
 8005b0e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8005b12:	bf04      	itt	eq
 8005b14:	021b      	lsleq	r3, r3, #8
 8005b16:	3008      	addeq	r0, #8
 8005b18:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8005b1c:	bf04      	itt	eq
 8005b1e:	011b      	lsleq	r3, r3, #4
 8005b20:	3004      	addeq	r0, #4
 8005b22:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8005b26:	bf04      	itt	eq
 8005b28:	009b      	lsleq	r3, r3, #2
 8005b2a:	3002      	addeq	r0, #2
 8005b2c:	2b00      	cmp	r3, #0
 8005b2e:	db06      	blt.n	8005b3e <__hi0bits+0x3c>
 8005b30:	005b      	lsls	r3, r3, #1
 8005b32:	d503      	bpl.n	8005b3c <__hi0bits+0x3a>
 8005b34:	3001      	adds	r0, #1
 8005b36:	4770      	bx	lr
 8005b38:	2000      	movs	r0, #0
 8005b3a:	e7e8      	b.n	8005b0e <__hi0bits+0xc>
 8005b3c:	2020      	movs	r0, #32
 8005b3e:	4770      	bx	lr

08005b40 <__lo0bits>:
 8005b40:	6803      	ldr	r3, [r0, #0]
 8005b42:	4601      	mov	r1, r0
 8005b44:	f013 0207 	ands.w	r2, r3, #7
 8005b48:	d00b      	beq.n	8005b62 <__lo0bits+0x22>
 8005b4a:	07da      	lsls	r2, r3, #31
 8005b4c:	d423      	bmi.n	8005b96 <__lo0bits+0x56>
 8005b4e:	0798      	lsls	r0, r3, #30
 8005b50:	bf49      	itett	mi
 8005b52:	085b      	lsrmi	r3, r3, #1
 8005b54:	089b      	lsrpl	r3, r3, #2
 8005b56:	2001      	movmi	r0, #1
 8005b58:	600b      	strmi	r3, [r1, #0]
 8005b5a:	bf5c      	itt	pl
 8005b5c:	600b      	strpl	r3, [r1, #0]
 8005b5e:	2002      	movpl	r0, #2
 8005b60:	4770      	bx	lr
 8005b62:	b298      	uxth	r0, r3
 8005b64:	b9a8      	cbnz	r0, 8005b92 <__lo0bits+0x52>
 8005b66:	2010      	movs	r0, #16
 8005b68:	0c1b      	lsrs	r3, r3, #16
 8005b6a:	f013 0fff 	tst.w	r3, #255	; 0xff
 8005b6e:	bf04      	itt	eq
 8005b70:	0a1b      	lsreq	r3, r3, #8
 8005b72:	3008      	addeq	r0, #8
 8005b74:	071a      	lsls	r2, r3, #28
 8005b76:	bf04      	itt	eq
 8005b78:	091b      	lsreq	r3, r3, #4
 8005b7a:	3004      	addeq	r0, #4
 8005b7c:	079a      	lsls	r2, r3, #30
 8005b7e:	bf04      	itt	eq
 8005b80:	089b      	lsreq	r3, r3, #2
 8005b82:	3002      	addeq	r0, #2
 8005b84:	07da      	lsls	r2, r3, #31
 8005b86:	d402      	bmi.n	8005b8e <__lo0bits+0x4e>
 8005b88:	085b      	lsrs	r3, r3, #1
 8005b8a:	d006      	beq.n	8005b9a <__lo0bits+0x5a>
 8005b8c:	3001      	adds	r0, #1
 8005b8e:	600b      	str	r3, [r1, #0]
 8005b90:	4770      	bx	lr
 8005b92:	4610      	mov	r0, r2
 8005b94:	e7e9      	b.n	8005b6a <__lo0bits+0x2a>
 8005b96:	2000      	movs	r0, #0
 8005b98:	4770      	bx	lr
 8005b9a:	2020      	movs	r0, #32
 8005b9c:	4770      	bx	lr

08005b9e <__i2b>:
 8005b9e:	b510      	push	{r4, lr}
 8005ba0:	460c      	mov	r4, r1
 8005ba2:	2101      	movs	r1, #1
 8005ba4:	f7ff fee9 	bl	800597a <_Balloc>
 8005ba8:	2201      	movs	r2, #1
 8005baa:	6144      	str	r4, [r0, #20]
 8005bac:	6102      	str	r2, [r0, #16]
 8005bae:	bd10      	pop	{r4, pc}

08005bb0 <__multiply>:
 8005bb0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005bb4:	4614      	mov	r4, r2
 8005bb6:	690a      	ldr	r2, [r1, #16]
 8005bb8:	6923      	ldr	r3, [r4, #16]
 8005bba:	4688      	mov	r8, r1
 8005bbc:	429a      	cmp	r2, r3
 8005bbe:	bfbe      	ittt	lt
 8005bc0:	460b      	movlt	r3, r1
 8005bc2:	46a0      	movlt	r8, r4
 8005bc4:	461c      	movlt	r4, r3
 8005bc6:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8005bca:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8005bce:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8005bd2:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8005bd6:	eb07 0609 	add.w	r6, r7, r9
 8005bda:	42b3      	cmp	r3, r6
 8005bdc:	bfb8      	it	lt
 8005bde:	3101      	addlt	r1, #1
 8005be0:	f7ff fecb 	bl	800597a <_Balloc>
 8005be4:	f100 0514 	add.w	r5, r0, #20
 8005be8:	462b      	mov	r3, r5
 8005bea:	2200      	movs	r2, #0
 8005bec:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8005bf0:	4573      	cmp	r3, lr
 8005bf2:	d316      	bcc.n	8005c22 <__multiply+0x72>
 8005bf4:	f104 0214 	add.w	r2, r4, #20
 8005bf8:	f108 0114 	add.w	r1, r8, #20
 8005bfc:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8005c00:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8005c04:	9300      	str	r3, [sp, #0]
 8005c06:	9b00      	ldr	r3, [sp, #0]
 8005c08:	9201      	str	r2, [sp, #4]
 8005c0a:	4293      	cmp	r3, r2
 8005c0c:	d80c      	bhi.n	8005c28 <__multiply+0x78>
 8005c0e:	2e00      	cmp	r6, #0
 8005c10:	dd03      	ble.n	8005c1a <__multiply+0x6a>
 8005c12:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8005c16:	2b00      	cmp	r3, #0
 8005c18:	d05d      	beq.n	8005cd6 <__multiply+0x126>
 8005c1a:	6106      	str	r6, [r0, #16]
 8005c1c:	b003      	add	sp, #12
 8005c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c22:	f843 2b04 	str.w	r2, [r3], #4
 8005c26:	e7e3      	b.n	8005bf0 <__multiply+0x40>
 8005c28:	f8b2 b000 	ldrh.w	fp, [r2]
 8005c2c:	f1bb 0f00 	cmp.w	fp, #0
 8005c30:	d023      	beq.n	8005c7a <__multiply+0xca>
 8005c32:	4689      	mov	r9, r1
 8005c34:	46ac      	mov	ip, r5
 8005c36:	f04f 0800 	mov.w	r8, #0
 8005c3a:	f859 4b04 	ldr.w	r4, [r9], #4
 8005c3e:	f8dc a000 	ldr.w	sl, [ip]
 8005c42:	b2a3      	uxth	r3, r4
 8005c44:	fa1f fa8a 	uxth.w	sl, sl
 8005c48:	fb0b a303 	mla	r3, fp, r3, sl
 8005c4c:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8005c50:	f8dc 4000 	ldr.w	r4, [ip]
 8005c54:	4443      	add	r3, r8
 8005c56:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8005c5a:	fb0b 840a 	mla	r4, fp, sl, r8
 8005c5e:	46e2      	mov	sl, ip
 8005c60:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8005c64:	b29b      	uxth	r3, r3
 8005c66:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8005c6a:	454f      	cmp	r7, r9
 8005c6c:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8005c70:	f84a 3b04 	str.w	r3, [sl], #4
 8005c74:	d82b      	bhi.n	8005cce <__multiply+0x11e>
 8005c76:	f8cc 8004 	str.w	r8, [ip, #4]
 8005c7a:	9b01      	ldr	r3, [sp, #4]
 8005c7c:	3204      	adds	r2, #4
 8005c7e:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8005c82:	f1ba 0f00 	cmp.w	sl, #0
 8005c86:	d020      	beq.n	8005cca <__multiply+0x11a>
 8005c88:	4689      	mov	r9, r1
 8005c8a:	46a8      	mov	r8, r5
 8005c8c:	f04f 0b00 	mov.w	fp, #0
 8005c90:	682b      	ldr	r3, [r5, #0]
 8005c92:	f8b9 c000 	ldrh.w	ip, [r9]
 8005c96:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8005c9a:	b29b      	uxth	r3, r3
 8005c9c:	fb0a 440c 	mla	r4, sl, ip, r4
 8005ca0:	46c4      	mov	ip, r8
 8005ca2:	445c      	add	r4, fp
 8005ca4:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8005ca8:	f84c 3b04 	str.w	r3, [ip], #4
 8005cac:	f859 3b04 	ldr.w	r3, [r9], #4
 8005cb0:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8005cb4:	0c1b      	lsrs	r3, r3, #16
 8005cb6:	fb0a b303 	mla	r3, sl, r3, fp
 8005cba:	454f      	cmp	r7, r9
 8005cbc:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8005cc0:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8005cc4:	d805      	bhi.n	8005cd2 <__multiply+0x122>
 8005cc6:	f8c8 3004 	str.w	r3, [r8, #4]
 8005cca:	3504      	adds	r5, #4
 8005ccc:	e79b      	b.n	8005c06 <__multiply+0x56>
 8005cce:	46d4      	mov	ip, sl
 8005cd0:	e7b3      	b.n	8005c3a <__multiply+0x8a>
 8005cd2:	46e0      	mov	r8, ip
 8005cd4:	e7dd      	b.n	8005c92 <__multiply+0xe2>
 8005cd6:	3e01      	subs	r6, #1
 8005cd8:	e799      	b.n	8005c0e <__multiply+0x5e>
	...

08005cdc <__pow5mult>:
 8005cdc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005ce0:	4615      	mov	r5, r2
 8005ce2:	f012 0203 	ands.w	r2, r2, #3
 8005ce6:	4606      	mov	r6, r0
 8005ce8:	460f      	mov	r7, r1
 8005cea:	d007      	beq.n	8005cfc <__pow5mult+0x20>
 8005cec:	4c21      	ldr	r4, [pc, #132]	; (8005d74 <__pow5mult+0x98>)
 8005cee:	3a01      	subs	r2, #1
 8005cf0:	2300      	movs	r3, #0
 8005cf2:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8005cf6:	f7ff fe8b 	bl	8005a10 <__multadd>
 8005cfa:	4607      	mov	r7, r0
 8005cfc:	10ad      	asrs	r5, r5, #2
 8005cfe:	d035      	beq.n	8005d6c <__pow5mult+0x90>
 8005d00:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8005d02:	b93c      	cbnz	r4, 8005d14 <__pow5mult+0x38>
 8005d04:	2010      	movs	r0, #16
 8005d06:	f7ff fe05 	bl	8005914 <malloc>
 8005d0a:	6270      	str	r0, [r6, #36]	; 0x24
 8005d0c:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8005d10:	6004      	str	r4, [r0, #0]
 8005d12:	60c4      	str	r4, [r0, #12]
 8005d14:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8005d18:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8005d1c:	b94c      	cbnz	r4, 8005d32 <__pow5mult+0x56>
 8005d1e:	f240 2171 	movw	r1, #625	; 0x271
 8005d22:	4630      	mov	r0, r6
 8005d24:	f7ff ff3b 	bl	8005b9e <__i2b>
 8005d28:	2300      	movs	r3, #0
 8005d2a:	4604      	mov	r4, r0
 8005d2c:	f8c8 0008 	str.w	r0, [r8, #8]
 8005d30:	6003      	str	r3, [r0, #0]
 8005d32:	f04f 0800 	mov.w	r8, #0
 8005d36:	07eb      	lsls	r3, r5, #31
 8005d38:	d50a      	bpl.n	8005d50 <__pow5mult+0x74>
 8005d3a:	4639      	mov	r1, r7
 8005d3c:	4622      	mov	r2, r4
 8005d3e:	4630      	mov	r0, r6
 8005d40:	f7ff ff36 	bl	8005bb0 <__multiply>
 8005d44:	4681      	mov	r9, r0
 8005d46:	4639      	mov	r1, r7
 8005d48:	4630      	mov	r0, r6
 8005d4a:	f7ff fe4a 	bl	80059e2 <_Bfree>
 8005d4e:	464f      	mov	r7, r9
 8005d50:	106d      	asrs	r5, r5, #1
 8005d52:	d00b      	beq.n	8005d6c <__pow5mult+0x90>
 8005d54:	6820      	ldr	r0, [r4, #0]
 8005d56:	b938      	cbnz	r0, 8005d68 <__pow5mult+0x8c>
 8005d58:	4622      	mov	r2, r4
 8005d5a:	4621      	mov	r1, r4
 8005d5c:	4630      	mov	r0, r6
 8005d5e:	f7ff ff27 	bl	8005bb0 <__multiply>
 8005d62:	6020      	str	r0, [r4, #0]
 8005d64:	f8c0 8000 	str.w	r8, [r0]
 8005d68:	4604      	mov	r4, r0
 8005d6a:	e7e4      	b.n	8005d36 <__pow5mult+0x5a>
 8005d6c:	4638      	mov	r0, r7
 8005d6e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005d72:	bf00      	nop
 8005d74:	08007110 	.word	0x08007110

08005d78 <__lshift>:
 8005d78:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005d7c:	460c      	mov	r4, r1
 8005d7e:	4607      	mov	r7, r0
 8005d80:	4616      	mov	r6, r2
 8005d82:	6923      	ldr	r3, [r4, #16]
 8005d84:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8005d88:	eb0a 0903 	add.w	r9, sl, r3
 8005d8c:	6849      	ldr	r1, [r1, #4]
 8005d8e:	68a3      	ldr	r3, [r4, #8]
 8005d90:	f109 0501 	add.w	r5, r9, #1
 8005d94:	42ab      	cmp	r3, r5
 8005d96:	db32      	blt.n	8005dfe <__lshift+0x86>
 8005d98:	4638      	mov	r0, r7
 8005d9a:	f7ff fdee 	bl	800597a <_Balloc>
 8005d9e:	2300      	movs	r3, #0
 8005da0:	4680      	mov	r8, r0
 8005da2:	461a      	mov	r2, r3
 8005da4:	f100 0114 	add.w	r1, r0, #20
 8005da8:	4553      	cmp	r3, sl
 8005daa:	db2b      	blt.n	8005e04 <__lshift+0x8c>
 8005dac:	6920      	ldr	r0, [r4, #16]
 8005dae:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8005db2:	f104 0314 	add.w	r3, r4, #20
 8005db6:	f016 021f 	ands.w	r2, r6, #31
 8005dba:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8005dbe:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8005dc2:	d025      	beq.n	8005e10 <__lshift+0x98>
 8005dc4:	2000      	movs	r0, #0
 8005dc6:	f1c2 0e20 	rsb	lr, r2, #32
 8005dca:	468a      	mov	sl, r1
 8005dcc:	681e      	ldr	r6, [r3, #0]
 8005dce:	4096      	lsls	r6, r2
 8005dd0:	4330      	orrs	r0, r6
 8005dd2:	f84a 0b04 	str.w	r0, [sl], #4
 8005dd6:	f853 0b04 	ldr.w	r0, [r3], #4
 8005dda:	459c      	cmp	ip, r3
 8005ddc:	fa20 f00e 	lsr.w	r0, r0, lr
 8005de0:	d814      	bhi.n	8005e0c <__lshift+0x94>
 8005de2:	6048      	str	r0, [r1, #4]
 8005de4:	b108      	cbz	r0, 8005dea <__lshift+0x72>
 8005de6:	f109 0502 	add.w	r5, r9, #2
 8005dea:	3d01      	subs	r5, #1
 8005dec:	4638      	mov	r0, r7
 8005dee:	f8c8 5010 	str.w	r5, [r8, #16]
 8005df2:	4621      	mov	r1, r4
 8005df4:	f7ff fdf5 	bl	80059e2 <_Bfree>
 8005df8:	4640      	mov	r0, r8
 8005dfa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005dfe:	3101      	adds	r1, #1
 8005e00:	005b      	lsls	r3, r3, #1
 8005e02:	e7c7      	b.n	8005d94 <__lshift+0x1c>
 8005e04:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005e08:	3301      	adds	r3, #1
 8005e0a:	e7cd      	b.n	8005da8 <__lshift+0x30>
 8005e0c:	4651      	mov	r1, sl
 8005e0e:	e7dc      	b.n	8005dca <__lshift+0x52>
 8005e10:	3904      	subs	r1, #4
 8005e12:	f853 2b04 	ldr.w	r2, [r3], #4
 8005e16:	459c      	cmp	ip, r3
 8005e18:	f841 2f04 	str.w	r2, [r1, #4]!
 8005e1c:	d8f9      	bhi.n	8005e12 <__lshift+0x9a>
 8005e1e:	e7e4      	b.n	8005dea <__lshift+0x72>

08005e20 <__mcmp>:
 8005e20:	6903      	ldr	r3, [r0, #16]
 8005e22:	690a      	ldr	r2, [r1, #16]
 8005e24:	b530      	push	{r4, r5, lr}
 8005e26:	1a9b      	subs	r3, r3, r2
 8005e28:	d10c      	bne.n	8005e44 <__mcmp+0x24>
 8005e2a:	0092      	lsls	r2, r2, #2
 8005e2c:	3014      	adds	r0, #20
 8005e2e:	3114      	adds	r1, #20
 8005e30:	1884      	adds	r4, r0, r2
 8005e32:	4411      	add	r1, r2
 8005e34:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8005e38:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8005e3c:	4295      	cmp	r5, r2
 8005e3e:	d003      	beq.n	8005e48 <__mcmp+0x28>
 8005e40:	d305      	bcc.n	8005e4e <__mcmp+0x2e>
 8005e42:	2301      	movs	r3, #1
 8005e44:	4618      	mov	r0, r3
 8005e46:	bd30      	pop	{r4, r5, pc}
 8005e48:	42a0      	cmp	r0, r4
 8005e4a:	d3f3      	bcc.n	8005e34 <__mcmp+0x14>
 8005e4c:	e7fa      	b.n	8005e44 <__mcmp+0x24>
 8005e4e:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
 8005e52:	e7f7      	b.n	8005e44 <__mcmp+0x24>

08005e54 <__mdiff>:
 8005e54:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005e58:	460d      	mov	r5, r1
 8005e5a:	4607      	mov	r7, r0
 8005e5c:	4611      	mov	r1, r2
 8005e5e:	4628      	mov	r0, r5
 8005e60:	4614      	mov	r4, r2
 8005e62:	f7ff ffdd 	bl	8005e20 <__mcmp>
 8005e66:	1e06      	subs	r6, r0, #0
 8005e68:	d108      	bne.n	8005e7c <__mdiff+0x28>
 8005e6a:	4631      	mov	r1, r6
 8005e6c:	4638      	mov	r0, r7
 8005e6e:	f7ff fd84 	bl	800597a <_Balloc>
 8005e72:	2301      	movs	r3, #1
 8005e74:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8005e78:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005e7c:	bfa4      	itt	ge
 8005e7e:	4623      	movge	r3, r4
 8005e80:	462c      	movge	r4, r5
 8005e82:	4638      	mov	r0, r7
 8005e84:	6861      	ldr	r1, [r4, #4]
 8005e86:	bfa6      	itte	ge
 8005e88:	461d      	movge	r5, r3
 8005e8a:	2600      	movge	r6, #0
 8005e8c:	2601      	movlt	r6, #1
 8005e8e:	f7ff fd74 	bl	800597a <_Balloc>
 8005e92:	f04f 0e00 	mov.w	lr, #0
 8005e96:	60c6      	str	r6, [r0, #12]
 8005e98:	692b      	ldr	r3, [r5, #16]
 8005e9a:	6926      	ldr	r6, [r4, #16]
 8005e9c:	f104 0214 	add.w	r2, r4, #20
 8005ea0:	f105 0914 	add.w	r9, r5, #20
 8005ea4:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8005ea8:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8005eac:	f100 0114 	add.w	r1, r0, #20
 8005eb0:	f852 ab04 	ldr.w	sl, [r2], #4
 8005eb4:	f859 5b04 	ldr.w	r5, [r9], #4
 8005eb8:	fa1f f38a 	uxth.w	r3, sl
 8005ebc:	4473      	add	r3, lr
 8005ebe:	b2ac      	uxth	r4, r5
 8005ec0:	1b1b      	subs	r3, r3, r4
 8005ec2:	0c2c      	lsrs	r4, r5, #16
 8005ec4:	ebc4 441a 	rsb	r4, r4, sl, lsr #16
 8005ec8:	eb04 4423 	add.w	r4, r4, r3, asr #16
 8005ecc:	b29b      	uxth	r3, r3
 8005ece:	ea4f 4e24 	mov.w	lr, r4, asr #16
 8005ed2:	45c8      	cmp	r8, r9
 8005ed4:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8005ed8:	4694      	mov	ip, r2
 8005eda:	f841 4b04 	str.w	r4, [r1], #4
 8005ede:	d8e7      	bhi.n	8005eb0 <__mdiff+0x5c>
 8005ee0:	45bc      	cmp	ip, r7
 8005ee2:	d304      	bcc.n	8005eee <__mdiff+0x9a>
 8005ee4:	f851 3d04 	ldr.w	r3, [r1, #-4]!
 8005ee8:	b183      	cbz	r3, 8005f0c <__mdiff+0xb8>
 8005eea:	6106      	str	r6, [r0, #16]
 8005eec:	e7c4      	b.n	8005e78 <__mdiff+0x24>
 8005eee:	f85c 4b04 	ldr.w	r4, [ip], #4
 8005ef2:	b2a2      	uxth	r2, r4
 8005ef4:	4472      	add	r2, lr
 8005ef6:	1413      	asrs	r3, r2, #16
 8005ef8:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8005efc:	b292      	uxth	r2, r2
 8005efe:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
 8005f02:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8005f06:	f841 2b04 	str.w	r2, [r1], #4
 8005f0a:	e7e9      	b.n	8005ee0 <__mdiff+0x8c>
 8005f0c:	3e01      	subs	r6, #1
 8005f0e:	e7e9      	b.n	8005ee4 <__mdiff+0x90>

08005f10 <__ulp>:
 8005f10:	4b10      	ldr	r3, [pc, #64]	; (8005f54 <__ulp+0x44>)
 8005f12:	400b      	ands	r3, r1
 8005f14:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 8005f18:	2b00      	cmp	r3, #0
 8005f1a:	dd02      	ble.n	8005f22 <__ulp+0x12>
 8005f1c:	2000      	movs	r0, #0
 8005f1e:	4619      	mov	r1, r3
 8005f20:	4770      	bx	lr
 8005f22:	425b      	negs	r3, r3
 8005f24:	151b      	asrs	r3, r3, #20
 8005f26:	2b13      	cmp	r3, #19
 8005f28:	f04f 0000 	mov.w	r0, #0
 8005f2c:	f04f 0100 	mov.w	r1, #0
 8005f30:	dc04      	bgt.n	8005f3c <__ulp+0x2c>
 8005f32:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8005f36:	fa42 f103 	asr.w	r1, r2, r3
 8005f3a:	4770      	bx	lr
 8005f3c:	2201      	movs	r2, #1
 8005f3e:	3b14      	subs	r3, #20
 8005f40:	2b1e      	cmp	r3, #30
 8005f42:	bfce      	itee	gt
 8005f44:	4613      	movgt	r3, r2
 8005f46:	f1c3 031f 	rsble	r3, r3, #31
 8005f4a:	fa02 f303 	lslle.w	r3, r2, r3
 8005f4e:	4618      	mov	r0, r3
 8005f50:	4770      	bx	lr
 8005f52:	bf00      	nop
 8005f54:	7ff00000 	.word	0x7ff00000

08005f58 <__b2d>:
 8005f58:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005f5c:	6907      	ldr	r7, [r0, #16]
 8005f5e:	f100 0914 	add.w	r9, r0, #20
 8005f62:	eb09 0787 	add.w	r7, r9, r7, lsl #2
 8005f66:	f857 6c04 	ldr.w	r6, [r7, #-4]
 8005f6a:	f1a7 0804 	sub.w	r8, r7, #4
 8005f6e:	4630      	mov	r0, r6
 8005f70:	f7ff fdc7 	bl	8005b02 <__hi0bits>
 8005f74:	f1c0 0320 	rsb	r3, r0, #32
 8005f78:	280a      	cmp	r0, #10
 8005f7a:	600b      	str	r3, [r1, #0]
 8005f7c:	491e      	ldr	r1, [pc, #120]	; (8005ff8 <__b2d+0xa0>)
 8005f7e:	dc17      	bgt.n	8005fb0 <__b2d+0x58>
 8005f80:	45c1      	cmp	r9, r8
 8005f82:	bf28      	it	cs
 8005f84:	2200      	movcs	r2, #0
 8005f86:	f1c0 0c0b 	rsb	ip, r0, #11
 8005f8a:	fa26 f30c 	lsr.w	r3, r6, ip
 8005f8e:	bf38      	it	cc
 8005f90:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005f94:	ea43 0501 	orr.w	r5, r3, r1
 8005f98:	f100 0315 	add.w	r3, r0, #21
 8005f9c:	fa06 f303 	lsl.w	r3, r6, r3
 8005fa0:	fa22 f20c 	lsr.w	r2, r2, ip
 8005fa4:	ea43 0402 	orr.w	r4, r3, r2
 8005fa8:	4620      	mov	r0, r4
 8005faa:	4629      	mov	r1, r5
 8005fac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8005fb0:	45c1      	cmp	r9, r8
 8005fb2:	bf3a      	itte	cc
 8005fb4:	f1a7 0808 	subcc.w	r8, r7, #8
 8005fb8:	f857 2c08 	ldrcc.w	r2, [r7, #-8]
 8005fbc:	2200      	movcs	r2, #0
 8005fbe:	f1b0 030b 	subs.w	r3, r0, #11
 8005fc2:	d015      	beq.n	8005ff0 <__b2d+0x98>
 8005fc4:	409e      	lsls	r6, r3
 8005fc6:	f1c3 0720 	rsb	r7, r3, #32
 8005fca:	f046 567f 	orr.w	r6, r6, #1069547520	; 0x3fc00000
 8005fce:	fa22 f107 	lsr.w	r1, r2, r7
 8005fd2:	45c8      	cmp	r8, r9
 8005fd4:	f446 1640 	orr.w	r6, r6, #3145728	; 0x300000
 8005fd8:	ea46 0501 	orr.w	r5, r6, r1
 8005fdc:	bf94      	ite	ls
 8005fde:	2100      	movls	r1, #0
 8005fe0:	f858 1c04 	ldrhi.w	r1, [r8, #-4]
 8005fe4:	fa02 f003 	lsl.w	r0, r2, r3
 8005fe8:	40f9      	lsrs	r1, r7
 8005fea:	ea40 0401 	orr.w	r4, r0, r1
 8005fee:	e7db      	b.n	8005fa8 <__b2d+0x50>
 8005ff0:	ea46 0501 	orr.w	r5, r6, r1
 8005ff4:	4614      	mov	r4, r2
 8005ff6:	e7d7      	b.n	8005fa8 <__b2d+0x50>
 8005ff8:	3ff00000 	.word	0x3ff00000

08005ffc <__d2b>:
 8005ffc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8006000:	461c      	mov	r4, r3
 8006002:	e9dd 6508 	ldrd	r6, r5, [sp, #32]
 8006006:	2101      	movs	r1, #1
 8006008:	4690      	mov	r8, r2
 800600a:	f7ff fcb6 	bl	800597a <_Balloc>
 800600e:	f3c4 0213 	ubfx	r2, r4, #0, #20
 8006012:	f3c4 540a 	ubfx	r4, r4, #20, #11
 8006016:	4607      	mov	r7, r0
 8006018:	bb34      	cbnz	r4, 8006068 <__d2b+0x6c>
 800601a:	9201      	str	r2, [sp, #4]
 800601c:	f1b8 0200 	subs.w	r2, r8, #0
 8006020:	d027      	beq.n	8006072 <__d2b+0x76>
 8006022:	a802      	add	r0, sp, #8
 8006024:	f840 2d08 	str.w	r2, [r0, #-8]!
 8006028:	f7ff fd8a 	bl	8005b40 <__lo0bits>
 800602c:	9900      	ldr	r1, [sp, #0]
 800602e:	b1f0      	cbz	r0, 800606e <__d2b+0x72>
 8006030:	9a01      	ldr	r2, [sp, #4]
 8006032:	f1c0 0320 	rsb	r3, r0, #32
 8006036:	fa02 f303 	lsl.w	r3, r2, r3
 800603a:	430b      	orrs	r3, r1
 800603c:	40c2      	lsrs	r2, r0
 800603e:	617b      	str	r3, [r7, #20]
 8006040:	9201      	str	r2, [sp, #4]
 8006042:	9b01      	ldr	r3, [sp, #4]
 8006044:	2b00      	cmp	r3, #0
 8006046:	bf14      	ite	ne
 8006048:	2102      	movne	r1, #2
 800604a:	2101      	moveq	r1, #1
 800604c:	61bb      	str	r3, [r7, #24]
 800604e:	6139      	str	r1, [r7, #16]
 8006050:	b1c4      	cbz	r4, 8006084 <__d2b+0x88>
 8006052:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 8006056:	4404      	add	r4, r0
 8006058:	6034      	str	r4, [r6, #0]
 800605a:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800605e:	6028      	str	r0, [r5, #0]
 8006060:	4638      	mov	r0, r7
 8006062:	b002      	add	sp, #8
 8006064:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006068:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 800606c:	e7d5      	b.n	800601a <__d2b+0x1e>
 800606e:	6179      	str	r1, [r7, #20]
 8006070:	e7e7      	b.n	8006042 <__d2b+0x46>
 8006072:	a801      	add	r0, sp, #4
 8006074:	f7ff fd64 	bl	8005b40 <__lo0bits>
 8006078:	2101      	movs	r1, #1
 800607a:	9b01      	ldr	r3, [sp, #4]
 800607c:	6139      	str	r1, [r7, #16]
 800607e:	617b      	str	r3, [r7, #20]
 8006080:	3020      	adds	r0, #32
 8006082:	e7e5      	b.n	8006050 <__d2b+0x54>
 8006084:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8006088:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 800608c:	6030      	str	r0, [r6, #0]
 800608e:	6918      	ldr	r0, [r3, #16]
 8006090:	f7ff fd37 	bl	8005b02 <__hi0bits>
 8006094:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8006098:	e7e1      	b.n	800605e <__d2b+0x62>

0800609a <__ratio>:
 800609a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800609e:	4688      	mov	r8, r1
 80060a0:	4669      	mov	r1, sp
 80060a2:	4681      	mov	r9, r0
 80060a4:	f7ff ff58 	bl	8005f58 <__b2d>
 80060a8:	468b      	mov	fp, r1
 80060aa:	4606      	mov	r6, r0
 80060ac:	460f      	mov	r7, r1
 80060ae:	4640      	mov	r0, r8
 80060b0:	a901      	add	r1, sp, #4
 80060b2:	f7ff ff51 	bl	8005f58 <__b2d>
 80060b6:	f8d9 3010 	ldr.w	r3, [r9, #16]
 80060ba:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80060be:	460d      	mov	r5, r1
 80060c0:	eba3 0c02 	sub.w	ip, r3, r2
 80060c4:	e9dd 3200 	ldrd	r3, r2, [sp]
 80060c8:	1a9b      	subs	r3, r3, r2
 80060ca:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80060ce:	2b00      	cmp	r3, #0
 80060d0:	bfd5      	itete	le
 80060d2:	460a      	movle	r2, r1
 80060d4:	463a      	movgt	r2, r7
 80060d6:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80060da:	eb02 5b03 	addgt.w	fp, r2, r3, lsl #20
 80060de:	bfd8      	it	le
 80060e0:	eb02 5503 	addle.w	r5, r2, r3, lsl #20
 80060e4:	462b      	mov	r3, r5
 80060e6:	4602      	mov	r2, r0
 80060e8:	4659      	mov	r1, fp
 80060ea:	4630      	mov	r0, r6
 80060ec:	f7fa fb1e 	bl	800072c <__aeabi_ddiv>
 80060f0:	b003      	add	sp, #12
 80060f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080060f6 <__copybits>:
 80060f6:	3901      	subs	r1, #1
 80060f8:	b510      	push	{r4, lr}
 80060fa:	1149      	asrs	r1, r1, #5
 80060fc:	6914      	ldr	r4, [r2, #16]
 80060fe:	3101      	adds	r1, #1
 8006100:	f102 0314 	add.w	r3, r2, #20
 8006104:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 8006108:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800610c:	42a3      	cmp	r3, r4
 800610e:	4602      	mov	r2, r0
 8006110:	d303      	bcc.n	800611a <__copybits+0x24>
 8006112:	2300      	movs	r3, #0
 8006114:	428a      	cmp	r2, r1
 8006116:	d305      	bcc.n	8006124 <__copybits+0x2e>
 8006118:	bd10      	pop	{r4, pc}
 800611a:	f853 2b04 	ldr.w	r2, [r3], #4
 800611e:	f840 2b04 	str.w	r2, [r0], #4
 8006122:	e7f3      	b.n	800610c <__copybits+0x16>
 8006124:	f842 3b04 	str.w	r3, [r2], #4
 8006128:	e7f4      	b.n	8006114 <__copybits+0x1e>

0800612a <__any_on>:
 800612a:	f100 0214 	add.w	r2, r0, #20
 800612e:	6900      	ldr	r0, [r0, #16]
 8006130:	114b      	asrs	r3, r1, #5
 8006132:	4298      	cmp	r0, r3
 8006134:	b510      	push	{r4, lr}
 8006136:	db11      	blt.n	800615c <__any_on+0x32>
 8006138:	dd0a      	ble.n	8006150 <__any_on+0x26>
 800613a:	f011 011f 	ands.w	r1, r1, #31
 800613e:	d007      	beq.n	8006150 <__any_on+0x26>
 8006140:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8006144:	fa24 f001 	lsr.w	r0, r4, r1
 8006148:	fa00 f101 	lsl.w	r1, r0, r1
 800614c:	428c      	cmp	r4, r1
 800614e:	d10b      	bne.n	8006168 <__any_on+0x3e>
 8006150:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8006154:	4293      	cmp	r3, r2
 8006156:	d803      	bhi.n	8006160 <__any_on+0x36>
 8006158:	2000      	movs	r0, #0
 800615a:	bd10      	pop	{r4, pc}
 800615c:	4603      	mov	r3, r0
 800615e:	e7f7      	b.n	8006150 <__any_on+0x26>
 8006160:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8006164:	2900      	cmp	r1, #0
 8006166:	d0f5      	beq.n	8006154 <__any_on+0x2a>
 8006168:	2001      	movs	r0, #1
 800616a:	e7f6      	b.n	800615a <__any_on+0x30>

0800616c <_calloc_r>:
 800616c:	b538      	push	{r3, r4, r5, lr}
 800616e:	fb02 f401 	mul.w	r4, r2, r1
 8006172:	4621      	mov	r1, r4
 8006174:	f000 f854 	bl	8006220 <_malloc_r>
 8006178:	4605      	mov	r5, r0
 800617a:	b118      	cbz	r0, 8006184 <_calloc_r+0x18>
 800617c:	4622      	mov	r2, r4
 800617e:	2100      	movs	r1, #0
 8006180:	f7fc f99c 	bl	80024bc <memset>
 8006184:	4628      	mov	r0, r5
 8006186:	bd38      	pop	{r3, r4, r5, pc}

08006188 <_free_r>:
 8006188:	b538      	push	{r3, r4, r5, lr}
 800618a:	4605      	mov	r5, r0
 800618c:	2900      	cmp	r1, #0
 800618e:	d043      	beq.n	8006218 <_free_r+0x90>
 8006190:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006194:	1f0c      	subs	r4, r1, #4
 8006196:	2b00      	cmp	r3, #0
 8006198:	bfb8      	it	lt
 800619a:	18e4      	addlt	r4, r4, r3
 800619c:	f000 fc0b 	bl	80069b6 <__malloc_lock>
 80061a0:	4a1e      	ldr	r2, [pc, #120]	; (800621c <_free_r+0x94>)
 80061a2:	6813      	ldr	r3, [r2, #0]
 80061a4:	4610      	mov	r0, r2
 80061a6:	b933      	cbnz	r3, 80061b6 <_free_r+0x2e>
 80061a8:	6063      	str	r3, [r4, #4]
 80061aa:	6014      	str	r4, [r2, #0]
 80061ac:	4628      	mov	r0, r5
 80061ae:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80061b2:	f000 bc01 	b.w	80069b8 <__malloc_unlock>
 80061b6:	42a3      	cmp	r3, r4
 80061b8:	d90b      	bls.n	80061d2 <_free_r+0x4a>
 80061ba:	6821      	ldr	r1, [r4, #0]
 80061bc:	1862      	adds	r2, r4, r1
 80061be:	4293      	cmp	r3, r2
 80061c0:	bf01      	itttt	eq
 80061c2:	681a      	ldreq	r2, [r3, #0]
 80061c4:	685b      	ldreq	r3, [r3, #4]
 80061c6:	1852      	addeq	r2, r2, r1
 80061c8:	6022      	streq	r2, [r4, #0]
 80061ca:	6063      	str	r3, [r4, #4]
 80061cc:	6004      	str	r4, [r0, #0]
 80061ce:	e7ed      	b.n	80061ac <_free_r+0x24>
 80061d0:	4613      	mov	r3, r2
 80061d2:	685a      	ldr	r2, [r3, #4]
 80061d4:	b10a      	cbz	r2, 80061da <_free_r+0x52>
 80061d6:	42a2      	cmp	r2, r4
 80061d8:	d9fa      	bls.n	80061d0 <_free_r+0x48>
 80061da:	6819      	ldr	r1, [r3, #0]
 80061dc:	1858      	adds	r0, r3, r1
 80061de:	42a0      	cmp	r0, r4
 80061e0:	d10b      	bne.n	80061fa <_free_r+0x72>
 80061e2:	6820      	ldr	r0, [r4, #0]
 80061e4:	4401      	add	r1, r0
 80061e6:	1858      	adds	r0, r3, r1
 80061e8:	4282      	cmp	r2, r0
 80061ea:	6019      	str	r1, [r3, #0]
 80061ec:	d1de      	bne.n	80061ac <_free_r+0x24>
 80061ee:	6810      	ldr	r0, [r2, #0]
 80061f0:	6852      	ldr	r2, [r2, #4]
 80061f2:	4401      	add	r1, r0
 80061f4:	6019      	str	r1, [r3, #0]
 80061f6:	605a      	str	r2, [r3, #4]
 80061f8:	e7d8      	b.n	80061ac <_free_r+0x24>
 80061fa:	d902      	bls.n	8006202 <_free_r+0x7a>
 80061fc:	230c      	movs	r3, #12
 80061fe:	602b      	str	r3, [r5, #0]
 8006200:	e7d4      	b.n	80061ac <_free_r+0x24>
 8006202:	6820      	ldr	r0, [r4, #0]
 8006204:	1821      	adds	r1, r4, r0
 8006206:	428a      	cmp	r2, r1
 8006208:	bf01      	itttt	eq
 800620a:	6811      	ldreq	r1, [r2, #0]
 800620c:	6852      	ldreq	r2, [r2, #4]
 800620e:	1809      	addeq	r1, r1, r0
 8006210:	6021      	streq	r1, [r4, #0]
 8006212:	6062      	str	r2, [r4, #4]
 8006214:	605c      	str	r4, [r3, #4]
 8006216:	e7c9      	b.n	80061ac <_free_r+0x24>
 8006218:	bd38      	pop	{r3, r4, r5, pc}
 800621a:	bf00      	nop
 800621c:	2000020c 	.word	0x2000020c

08006220 <_malloc_r>:
 8006220:	b570      	push	{r4, r5, r6, lr}
 8006222:	1ccd      	adds	r5, r1, #3
 8006224:	f025 0503 	bic.w	r5, r5, #3
 8006228:	3508      	adds	r5, #8
 800622a:	2d0c      	cmp	r5, #12
 800622c:	bf38      	it	cc
 800622e:	250c      	movcc	r5, #12
 8006230:	2d00      	cmp	r5, #0
 8006232:	4606      	mov	r6, r0
 8006234:	db01      	blt.n	800623a <_malloc_r+0x1a>
 8006236:	42a9      	cmp	r1, r5
 8006238:	d903      	bls.n	8006242 <_malloc_r+0x22>
 800623a:	230c      	movs	r3, #12
 800623c:	6033      	str	r3, [r6, #0]
 800623e:	2000      	movs	r0, #0
 8006240:	bd70      	pop	{r4, r5, r6, pc}
 8006242:	f000 fbb8 	bl	80069b6 <__malloc_lock>
 8006246:	4a21      	ldr	r2, [pc, #132]	; (80062cc <_malloc_r+0xac>)
 8006248:	6814      	ldr	r4, [r2, #0]
 800624a:	4621      	mov	r1, r4
 800624c:	b991      	cbnz	r1, 8006274 <_malloc_r+0x54>
 800624e:	4c20      	ldr	r4, [pc, #128]	; (80062d0 <_malloc_r+0xb0>)
 8006250:	6823      	ldr	r3, [r4, #0]
 8006252:	b91b      	cbnz	r3, 800625c <_malloc_r+0x3c>
 8006254:	4630      	mov	r0, r6
 8006256:	f000 facd 	bl	80067f4 <_sbrk_r>
 800625a:	6020      	str	r0, [r4, #0]
 800625c:	4629      	mov	r1, r5
 800625e:	4630      	mov	r0, r6
 8006260:	f000 fac8 	bl	80067f4 <_sbrk_r>
 8006264:	1c43      	adds	r3, r0, #1
 8006266:	d124      	bne.n	80062b2 <_malloc_r+0x92>
 8006268:	230c      	movs	r3, #12
 800626a:	4630      	mov	r0, r6
 800626c:	6033      	str	r3, [r6, #0]
 800626e:	f000 fba3 	bl	80069b8 <__malloc_unlock>
 8006272:	e7e4      	b.n	800623e <_malloc_r+0x1e>
 8006274:	680b      	ldr	r3, [r1, #0]
 8006276:	1b5b      	subs	r3, r3, r5
 8006278:	d418      	bmi.n	80062ac <_malloc_r+0x8c>
 800627a:	2b0b      	cmp	r3, #11
 800627c:	d90f      	bls.n	800629e <_malloc_r+0x7e>
 800627e:	600b      	str	r3, [r1, #0]
 8006280:	18cc      	adds	r4, r1, r3
 8006282:	50cd      	str	r5, [r1, r3]
 8006284:	4630      	mov	r0, r6
 8006286:	f000 fb97 	bl	80069b8 <__malloc_unlock>
 800628a:	f104 000b 	add.w	r0, r4, #11
 800628e:	1d23      	adds	r3, r4, #4
 8006290:	f020 0007 	bic.w	r0, r0, #7
 8006294:	1ac3      	subs	r3, r0, r3
 8006296:	d0d3      	beq.n	8006240 <_malloc_r+0x20>
 8006298:	425a      	negs	r2, r3
 800629a:	50e2      	str	r2, [r4, r3]
 800629c:	e7d0      	b.n	8006240 <_malloc_r+0x20>
 800629e:	684b      	ldr	r3, [r1, #4]
 80062a0:	428c      	cmp	r4, r1
 80062a2:	bf16      	itet	ne
 80062a4:	6063      	strne	r3, [r4, #4]
 80062a6:	6013      	streq	r3, [r2, #0]
 80062a8:	460c      	movne	r4, r1
 80062aa:	e7eb      	b.n	8006284 <_malloc_r+0x64>
 80062ac:	460c      	mov	r4, r1
 80062ae:	6849      	ldr	r1, [r1, #4]
 80062b0:	e7cc      	b.n	800624c <_malloc_r+0x2c>
 80062b2:	1cc4      	adds	r4, r0, #3
 80062b4:	f024 0403 	bic.w	r4, r4, #3
 80062b8:	42a0      	cmp	r0, r4
 80062ba:	d005      	beq.n	80062c8 <_malloc_r+0xa8>
 80062bc:	1a21      	subs	r1, r4, r0
 80062be:	4630      	mov	r0, r6
 80062c0:	f000 fa98 	bl	80067f4 <_sbrk_r>
 80062c4:	3001      	adds	r0, #1
 80062c6:	d0cf      	beq.n	8006268 <_malloc_r+0x48>
 80062c8:	6025      	str	r5, [r4, #0]
 80062ca:	e7db      	b.n	8006284 <_malloc_r+0x64>
 80062cc:	2000020c 	.word	0x2000020c
 80062d0:	20000210 	.word	0x20000210

080062d4 <__ssputs_r>:
 80062d4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80062d8:	688e      	ldr	r6, [r1, #8]
 80062da:	4682      	mov	sl, r0
 80062dc:	429e      	cmp	r6, r3
 80062de:	460c      	mov	r4, r1
 80062e0:	4690      	mov	r8, r2
 80062e2:	4699      	mov	r9, r3
 80062e4:	d837      	bhi.n	8006356 <__ssputs_r+0x82>
 80062e6:	898a      	ldrh	r2, [r1, #12]
 80062e8:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80062ec:	d031      	beq.n	8006352 <__ssputs_r+0x7e>
 80062ee:	2302      	movs	r3, #2
 80062f0:	6825      	ldr	r5, [r4, #0]
 80062f2:	6909      	ldr	r1, [r1, #16]
 80062f4:	1a6f      	subs	r7, r5, r1
 80062f6:	6965      	ldr	r5, [r4, #20]
 80062f8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80062fc:	fb95 f5f3 	sdiv	r5, r5, r3
 8006300:	f109 0301 	add.w	r3, r9, #1
 8006304:	443b      	add	r3, r7
 8006306:	429d      	cmp	r5, r3
 8006308:	bf38      	it	cc
 800630a:	461d      	movcc	r5, r3
 800630c:	0553      	lsls	r3, r2, #21
 800630e:	d530      	bpl.n	8006372 <__ssputs_r+0x9e>
 8006310:	4629      	mov	r1, r5
 8006312:	f7ff ff85 	bl	8006220 <_malloc_r>
 8006316:	4606      	mov	r6, r0
 8006318:	b950      	cbnz	r0, 8006330 <__ssputs_r+0x5c>
 800631a:	230c      	movs	r3, #12
 800631c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006320:	f8ca 3000 	str.w	r3, [sl]
 8006324:	89a3      	ldrh	r3, [r4, #12]
 8006326:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800632a:	81a3      	strh	r3, [r4, #12]
 800632c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8006330:	463a      	mov	r2, r7
 8006332:	6921      	ldr	r1, [r4, #16]
 8006334:	f7ff fb16 	bl	8005964 <memcpy>
 8006338:	89a3      	ldrh	r3, [r4, #12]
 800633a:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800633e:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8006342:	81a3      	strh	r3, [r4, #12]
 8006344:	6126      	str	r6, [r4, #16]
 8006346:	443e      	add	r6, r7
 8006348:	6026      	str	r6, [r4, #0]
 800634a:	464e      	mov	r6, r9
 800634c:	6165      	str	r5, [r4, #20]
 800634e:	1bed      	subs	r5, r5, r7
 8006350:	60a5      	str	r5, [r4, #8]
 8006352:	454e      	cmp	r6, r9
 8006354:	d900      	bls.n	8006358 <__ssputs_r+0x84>
 8006356:	464e      	mov	r6, r9
 8006358:	4632      	mov	r2, r6
 800635a:	4641      	mov	r1, r8
 800635c:	6820      	ldr	r0, [r4, #0]
 800635e:	f000 fb11 	bl	8006984 <memmove>
 8006362:	68a3      	ldr	r3, [r4, #8]
 8006364:	2000      	movs	r0, #0
 8006366:	1b9b      	subs	r3, r3, r6
 8006368:	60a3      	str	r3, [r4, #8]
 800636a:	6823      	ldr	r3, [r4, #0]
 800636c:	441e      	add	r6, r3
 800636e:	6026      	str	r6, [r4, #0]
 8006370:	e7dc      	b.n	800632c <__ssputs_r+0x58>
 8006372:	462a      	mov	r2, r5
 8006374:	f000 fb21 	bl	80069ba <_realloc_r>
 8006378:	4606      	mov	r6, r0
 800637a:	2800      	cmp	r0, #0
 800637c:	d1e2      	bne.n	8006344 <__ssputs_r+0x70>
 800637e:	6921      	ldr	r1, [r4, #16]
 8006380:	4650      	mov	r0, sl
 8006382:	f7ff ff01 	bl	8006188 <_free_r>
 8006386:	e7c8      	b.n	800631a <__ssputs_r+0x46>

08006388 <_svfiprintf_r>:
 8006388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800638c:	461d      	mov	r5, r3
 800638e:	898b      	ldrh	r3, [r1, #12]
 8006390:	b09d      	sub	sp, #116	; 0x74
 8006392:	061f      	lsls	r7, r3, #24
 8006394:	4680      	mov	r8, r0
 8006396:	460c      	mov	r4, r1
 8006398:	4616      	mov	r6, r2
 800639a:	d50f      	bpl.n	80063bc <_svfiprintf_r+0x34>
 800639c:	690b      	ldr	r3, [r1, #16]
 800639e:	b96b      	cbnz	r3, 80063bc <_svfiprintf_r+0x34>
 80063a0:	2140      	movs	r1, #64	; 0x40
 80063a2:	f7ff ff3d 	bl	8006220 <_malloc_r>
 80063a6:	6020      	str	r0, [r4, #0]
 80063a8:	6120      	str	r0, [r4, #16]
 80063aa:	b928      	cbnz	r0, 80063b8 <_svfiprintf_r+0x30>
 80063ac:	230c      	movs	r3, #12
 80063ae:	f8c8 3000 	str.w	r3, [r8]
 80063b2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80063b6:	e0c8      	b.n	800654a <_svfiprintf_r+0x1c2>
 80063b8:	2340      	movs	r3, #64	; 0x40
 80063ba:	6163      	str	r3, [r4, #20]
 80063bc:	2300      	movs	r3, #0
 80063be:	9309      	str	r3, [sp, #36]	; 0x24
 80063c0:	2320      	movs	r3, #32
 80063c2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80063c6:	2330      	movs	r3, #48	; 0x30
 80063c8:	f04f 0b01 	mov.w	fp, #1
 80063cc:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80063d0:	9503      	str	r5, [sp, #12]
 80063d2:	4637      	mov	r7, r6
 80063d4:	463d      	mov	r5, r7
 80063d6:	f815 3b01 	ldrb.w	r3, [r5], #1
 80063da:	b10b      	cbz	r3, 80063e0 <_svfiprintf_r+0x58>
 80063dc:	2b25      	cmp	r3, #37	; 0x25
 80063de:	d13e      	bne.n	800645e <_svfiprintf_r+0xd6>
 80063e0:	ebb7 0a06 	subs.w	sl, r7, r6
 80063e4:	d00b      	beq.n	80063fe <_svfiprintf_r+0x76>
 80063e6:	4653      	mov	r3, sl
 80063e8:	4632      	mov	r2, r6
 80063ea:	4621      	mov	r1, r4
 80063ec:	4640      	mov	r0, r8
 80063ee:	f7ff ff71 	bl	80062d4 <__ssputs_r>
 80063f2:	3001      	adds	r0, #1
 80063f4:	f000 80a4 	beq.w	8006540 <_svfiprintf_r+0x1b8>
 80063f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80063fa:	4453      	add	r3, sl
 80063fc:	9309      	str	r3, [sp, #36]	; 0x24
 80063fe:	783b      	ldrb	r3, [r7, #0]
 8006400:	2b00      	cmp	r3, #0
 8006402:	f000 809d 	beq.w	8006540 <_svfiprintf_r+0x1b8>
 8006406:	2300      	movs	r3, #0
 8006408:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 800640c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8006410:	9304      	str	r3, [sp, #16]
 8006412:	9307      	str	r3, [sp, #28]
 8006414:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006418:	931a      	str	r3, [sp, #104]	; 0x68
 800641a:	462f      	mov	r7, r5
 800641c:	2205      	movs	r2, #5
 800641e:	f817 1b01 	ldrb.w	r1, [r7], #1
 8006422:	4850      	ldr	r0, [pc, #320]	; (8006564 <_svfiprintf_r+0x1dc>)
 8006424:	f7ff fa90 	bl	8005948 <memchr>
 8006428:	9b04      	ldr	r3, [sp, #16]
 800642a:	b9d0      	cbnz	r0, 8006462 <_svfiprintf_r+0xda>
 800642c:	06d9      	lsls	r1, r3, #27
 800642e:	bf44      	itt	mi
 8006430:	2220      	movmi	r2, #32
 8006432:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006436:	071a      	lsls	r2, r3, #28
 8006438:	bf44      	itt	mi
 800643a:	222b      	movmi	r2, #43	; 0x2b
 800643c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006440:	782a      	ldrb	r2, [r5, #0]
 8006442:	2a2a      	cmp	r2, #42	; 0x2a
 8006444:	d015      	beq.n	8006472 <_svfiprintf_r+0xea>
 8006446:	462f      	mov	r7, r5
 8006448:	2000      	movs	r0, #0
 800644a:	250a      	movs	r5, #10
 800644c:	9a07      	ldr	r2, [sp, #28]
 800644e:	4639      	mov	r1, r7
 8006450:	f811 3b01 	ldrb.w	r3, [r1], #1
 8006454:	3b30      	subs	r3, #48	; 0x30
 8006456:	2b09      	cmp	r3, #9
 8006458:	d94d      	bls.n	80064f6 <_svfiprintf_r+0x16e>
 800645a:	b1b8      	cbz	r0, 800648c <_svfiprintf_r+0x104>
 800645c:	e00f      	b.n	800647e <_svfiprintf_r+0xf6>
 800645e:	462f      	mov	r7, r5
 8006460:	e7b8      	b.n	80063d4 <_svfiprintf_r+0x4c>
 8006462:	4a40      	ldr	r2, [pc, #256]	; (8006564 <_svfiprintf_r+0x1dc>)
 8006464:	463d      	mov	r5, r7
 8006466:	1a80      	subs	r0, r0, r2
 8006468:	fa0b f000 	lsl.w	r0, fp, r0
 800646c:	4318      	orrs	r0, r3
 800646e:	9004      	str	r0, [sp, #16]
 8006470:	e7d3      	b.n	800641a <_svfiprintf_r+0x92>
 8006472:	9a03      	ldr	r2, [sp, #12]
 8006474:	1d11      	adds	r1, r2, #4
 8006476:	6812      	ldr	r2, [r2, #0]
 8006478:	9103      	str	r1, [sp, #12]
 800647a:	2a00      	cmp	r2, #0
 800647c:	db01      	blt.n	8006482 <_svfiprintf_r+0xfa>
 800647e:	9207      	str	r2, [sp, #28]
 8006480:	e004      	b.n	800648c <_svfiprintf_r+0x104>
 8006482:	4252      	negs	r2, r2
 8006484:	f043 0302 	orr.w	r3, r3, #2
 8006488:	9207      	str	r2, [sp, #28]
 800648a:	9304      	str	r3, [sp, #16]
 800648c:	783b      	ldrb	r3, [r7, #0]
 800648e:	2b2e      	cmp	r3, #46	; 0x2e
 8006490:	d10c      	bne.n	80064ac <_svfiprintf_r+0x124>
 8006492:	787b      	ldrb	r3, [r7, #1]
 8006494:	2b2a      	cmp	r3, #42	; 0x2a
 8006496:	d133      	bne.n	8006500 <_svfiprintf_r+0x178>
 8006498:	9b03      	ldr	r3, [sp, #12]
 800649a:	3702      	adds	r7, #2
 800649c:	1d1a      	adds	r2, r3, #4
 800649e:	681b      	ldr	r3, [r3, #0]
 80064a0:	9203      	str	r2, [sp, #12]
 80064a2:	2b00      	cmp	r3, #0
 80064a4:	bfb8      	it	lt
 80064a6:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 80064aa:	9305      	str	r3, [sp, #20]
 80064ac:	4d2e      	ldr	r5, [pc, #184]	; (8006568 <_svfiprintf_r+0x1e0>)
 80064ae:	2203      	movs	r2, #3
 80064b0:	7839      	ldrb	r1, [r7, #0]
 80064b2:	4628      	mov	r0, r5
 80064b4:	f7ff fa48 	bl	8005948 <memchr>
 80064b8:	b138      	cbz	r0, 80064ca <_svfiprintf_r+0x142>
 80064ba:	2340      	movs	r3, #64	; 0x40
 80064bc:	1b40      	subs	r0, r0, r5
 80064be:	fa03 f000 	lsl.w	r0, r3, r0
 80064c2:	9b04      	ldr	r3, [sp, #16]
 80064c4:	3701      	adds	r7, #1
 80064c6:	4303      	orrs	r3, r0
 80064c8:	9304      	str	r3, [sp, #16]
 80064ca:	7839      	ldrb	r1, [r7, #0]
 80064cc:	2206      	movs	r2, #6
 80064ce:	4827      	ldr	r0, [pc, #156]	; (800656c <_svfiprintf_r+0x1e4>)
 80064d0:	1c7e      	adds	r6, r7, #1
 80064d2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80064d6:	f7ff fa37 	bl	8005948 <memchr>
 80064da:	2800      	cmp	r0, #0
 80064dc:	d038      	beq.n	8006550 <_svfiprintf_r+0x1c8>
 80064de:	4b24      	ldr	r3, [pc, #144]	; (8006570 <_svfiprintf_r+0x1e8>)
 80064e0:	bb13      	cbnz	r3, 8006528 <_svfiprintf_r+0x1a0>
 80064e2:	9b03      	ldr	r3, [sp, #12]
 80064e4:	3307      	adds	r3, #7
 80064e6:	f023 0307 	bic.w	r3, r3, #7
 80064ea:	3308      	adds	r3, #8
 80064ec:	9303      	str	r3, [sp, #12]
 80064ee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80064f0:	444b      	add	r3, r9
 80064f2:	9309      	str	r3, [sp, #36]	; 0x24
 80064f4:	e76d      	b.n	80063d2 <_svfiprintf_r+0x4a>
 80064f6:	fb05 3202 	mla	r2, r5, r2, r3
 80064fa:	2001      	movs	r0, #1
 80064fc:	460f      	mov	r7, r1
 80064fe:	e7a6      	b.n	800644e <_svfiprintf_r+0xc6>
 8006500:	2300      	movs	r3, #0
 8006502:	250a      	movs	r5, #10
 8006504:	4619      	mov	r1, r3
 8006506:	3701      	adds	r7, #1
 8006508:	9305      	str	r3, [sp, #20]
 800650a:	4638      	mov	r0, r7
 800650c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006510:	3a30      	subs	r2, #48	; 0x30
 8006512:	2a09      	cmp	r2, #9
 8006514:	d903      	bls.n	800651e <_svfiprintf_r+0x196>
 8006516:	2b00      	cmp	r3, #0
 8006518:	d0c8      	beq.n	80064ac <_svfiprintf_r+0x124>
 800651a:	9105      	str	r1, [sp, #20]
 800651c:	e7c6      	b.n	80064ac <_svfiprintf_r+0x124>
 800651e:	fb05 2101 	mla	r1, r5, r1, r2
 8006522:	2301      	movs	r3, #1
 8006524:	4607      	mov	r7, r0
 8006526:	e7f0      	b.n	800650a <_svfiprintf_r+0x182>
 8006528:	ab03      	add	r3, sp, #12
 800652a:	9300      	str	r3, [sp, #0]
 800652c:	4622      	mov	r2, r4
 800652e:	4b11      	ldr	r3, [pc, #68]	; (8006574 <_svfiprintf_r+0x1ec>)
 8006530:	a904      	add	r1, sp, #16
 8006532:	4640      	mov	r0, r8
 8006534:	f7fc f85c 	bl	80025f0 <_printf_float>
 8006538:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 800653c:	4681      	mov	r9, r0
 800653e:	d1d6      	bne.n	80064ee <_svfiprintf_r+0x166>
 8006540:	89a3      	ldrh	r3, [r4, #12]
 8006542:	065b      	lsls	r3, r3, #25
 8006544:	f53f af35 	bmi.w	80063b2 <_svfiprintf_r+0x2a>
 8006548:	9809      	ldr	r0, [sp, #36]	; 0x24
 800654a:	b01d      	add	sp, #116	; 0x74
 800654c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006550:	ab03      	add	r3, sp, #12
 8006552:	9300      	str	r3, [sp, #0]
 8006554:	4622      	mov	r2, r4
 8006556:	4b07      	ldr	r3, [pc, #28]	; (8006574 <_svfiprintf_r+0x1ec>)
 8006558:	a904      	add	r1, sp, #16
 800655a:	4640      	mov	r0, r8
 800655c:	f7fc faf4 	bl	8002b48 <_printf_i>
 8006560:	e7ea      	b.n	8006538 <_svfiprintf_r+0x1b0>
 8006562:	bf00      	nop
 8006564:	0800711c 	.word	0x0800711c
 8006568:	08007122 	.word	0x08007122
 800656c:	08007126 	.word	0x08007126
 8006570:	080025f1 	.word	0x080025f1
 8006574:	080062d5 	.word	0x080062d5

08006578 <__sfputc_r>:
 8006578:	6893      	ldr	r3, [r2, #8]
 800657a:	b410      	push	{r4}
 800657c:	3b01      	subs	r3, #1
 800657e:	2b00      	cmp	r3, #0
 8006580:	6093      	str	r3, [r2, #8]
 8006582:	da07      	bge.n	8006594 <__sfputc_r+0x1c>
 8006584:	6994      	ldr	r4, [r2, #24]
 8006586:	42a3      	cmp	r3, r4
 8006588:	db01      	blt.n	800658e <__sfputc_r+0x16>
 800658a:	290a      	cmp	r1, #10
 800658c:	d102      	bne.n	8006594 <__sfputc_r+0x1c>
 800658e:	bc10      	pop	{r4}
 8006590:	f7fd bda4 	b.w	80040dc <__swbuf_r>
 8006594:	6813      	ldr	r3, [r2, #0]
 8006596:	1c58      	adds	r0, r3, #1
 8006598:	6010      	str	r0, [r2, #0]
 800659a:	7019      	strb	r1, [r3, #0]
 800659c:	4608      	mov	r0, r1
 800659e:	bc10      	pop	{r4}
 80065a0:	4770      	bx	lr

080065a2 <__sfputs_r>:
 80065a2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80065a4:	4606      	mov	r6, r0
 80065a6:	460f      	mov	r7, r1
 80065a8:	4614      	mov	r4, r2
 80065aa:	18d5      	adds	r5, r2, r3
 80065ac:	42ac      	cmp	r4, r5
 80065ae:	d101      	bne.n	80065b4 <__sfputs_r+0x12>
 80065b0:	2000      	movs	r0, #0
 80065b2:	e007      	b.n	80065c4 <__sfputs_r+0x22>
 80065b4:	463a      	mov	r2, r7
 80065b6:	f814 1b01 	ldrb.w	r1, [r4], #1
 80065ba:	4630      	mov	r0, r6
 80065bc:	f7ff ffdc 	bl	8006578 <__sfputc_r>
 80065c0:	1c43      	adds	r3, r0, #1
 80065c2:	d1f3      	bne.n	80065ac <__sfputs_r+0xa>
 80065c4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080065c8 <_vfiprintf_r>:
 80065c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80065cc:	460c      	mov	r4, r1
 80065ce:	b09d      	sub	sp, #116	; 0x74
 80065d0:	4617      	mov	r7, r2
 80065d2:	461d      	mov	r5, r3
 80065d4:	4606      	mov	r6, r0
 80065d6:	b118      	cbz	r0, 80065e0 <_vfiprintf_r+0x18>
 80065d8:	6983      	ldr	r3, [r0, #24]
 80065da:	b90b      	cbnz	r3, 80065e0 <_vfiprintf_r+0x18>
 80065dc:	f7fe fd70 	bl	80050c0 <__sinit>
 80065e0:	4b7c      	ldr	r3, [pc, #496]	; (80067d4 <_vfiprintf_r+0x20c>)
 80065e2:	429c      	cmp	r4, r3
 80065e4:	d158      	bne.n	8006698 <_vfiprintf_r+0xd0>
 80065e6:	6874      	ldr	r4, [r6, #4]
 80065e8:	89a3      	ldrh	r3, [r4, #12]
 80065ea:	0718      	lsls	r0, r3, #28
 80065ec:	d55e      	bpl.n	80066ac <_vfiprintf_r+0xe4>
 80065ee:	6923      	ldr	r3, [r4, #16]
 80065f0:	2b00      	cmp	r3, #0
 80065f2:	d05b      	beq.n	80066ac <_vfiprintf_r+0xe4>
 80065f4:	2300      	movs	r3, #0
 80065f6:	9309      	str	r3, [sp, #36]	; 0x24
 80065f8:	2320      	movs	r3, #32
 80065fa:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80065fe:	2330      	movs	r3, #48	; 0x30
 8006600:	f04f 0b01 	mov.w	fp, #1
 8006604:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8006608:	9503      	str	r5, [sp, #12]
 800660a:	46b8      	mov	r8, r7
 800660c:	4645      	mov	r5, r8
 800660e:	f815 3b01 	ldrb.w	r3, [r5], #1
 8006612:	b10b      	cbz	r3, 8006618 <_vfiprintf_r+0x50>
 8006614:	2b25      	cmp	r3, #37	; 0x25
 8006616:	d154      	bne.n	80066c2 <_vfiprintf_r+0xfa>
 8006618:	ebb8 0a07 	subs.w	sl, r8, r7
 800661c:	d00b      	beq.n	8006636 <_vfiprintf_r+0x6e>
 800661e:	4653      	mov	r3, sl
 8006620:	463a      	mov	r2, r7
 8006622:	4621      	mov	r1, r4
 8006624:	4630      	mov	r0, r6
 8006626:	f7ff ffbc 	bl	80065a2 <__sfputs_r>
 800662a:	3001      	adds	r0, #1
 800662c:	f000 80c2 	beq.w	80067b4 <_vfiprintf_r+0x1ec>
 8006630:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006632:	4453      	add	r3, sl
 8006634:	9309      	str	r3, [sp, #36]	; 0x24
 8006636:	f898 3000 	ldrb.w	r3, [r8]
 800663a:	2b00      	cmp	r3, #0
 800663c:	f000 80ba 	beq.w	80067b4 <_vfiprintf_r+0x1ec>
 8006640:	2300      	movs	r3, #0
 8006642:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
 8006646:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800664a:	9304      	str	r3, [sp, #16]
 800664c:	9307      	str	r3, [sp, #28]
 800664e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8006652:	931a      	str	r3, [sp, #104]	; 0x68
 8006654:	46a8      	mov	r8, r5
 8006656:	2205      	movs	r2, #5
 8006658:	f818 1b01 	ldrb.w	r1, [r8], #1
 800665c:	485e      	ldr	r0, [pc, #376]	; (80067d8 <_vfiprintf_r+0x210>)
 800665e:	f7ff f973 	bl	8005948 <memchr>
 8006662:	9b04      	ldr	r3, [sp, #16]
 8006664:	bb78      	cbnz	r0, 80066c6 <_vfiprintf_r+0xfe>
 8006666:	06d9      	lsls	r1, r3, #27
 8006668:	bf44      	itt	mi
 800666a:	2220      	movmi	r2, #32
 800666c:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 8006670:	071a      	lsls	r2, r3, #28
 8006672:	bf44      	itt	mi
 8006674:	222b      	movmi	r2, #43	; 0x2b
 8006676:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 800667a:	782a      	ldrb	r2, [r5, #0]
 800667c:	2a2a      	cmp	r2, #42	; 0x2a
 800667e:	d02a      	beq.n	80066d6 <_vfiprintf_r+0x10e>
 8006680:	46a8      	mov	r8, r5
 8006682:	2000      	movs	r0, #0
 8006684:	250a      	movs	r5, #10
 8006686:	9a07      	ldr	r2, [sp, #28]
 8006688:	4641      	mov	r1, r8
 800668a:	f811 3b01 	ldrb.w	r3, [r1], #1
 800668e:	3b30      	subs	r3, #48	; 0x30
 8006690:	2b09      	cmp	r3, #9
 8006692:	d969      	bls.n	8006768 <_vfiprintf_r+0x1a0>
 8006694:	b360      	cbz	r0, 80066f0 <_vfiprintf_r+0x128>
 8006696:	e024      	b.n	80066e2 <_vfiprintf_r+0x11a>
 8006698:	4b50      	ldr	r3, [pc, #320]	; (80067dc <_vfiprintf_r+0x214>)
 800669a:	429c      	cmp	r4, r3
 800669c:	d101      	bne.n	80066a2 <_vfiprintf_r+0xda>
 800669e:	68b4      	ldr	r4, [r6, #8]
 80066a0:	e7a2      	b.n	80065e8 <_vfiprintf_r+0x20>
 80066a2:	4b4f      	ldr	r3, [pc, #316]	; (80067e0 <_vfiprintf_r+0x218>)
 80066a4:	429c      	cmp	r4, r3
 80066a6:	bf08      	it	eq
 80066a8:	68f4      	ldreq	r4, [r6, #12]
 80066aa:	e79d      	b.n	80065e8 <_vfiprintf_r+0x20>
 80066ac:	4621      	mov	r1, r4
 80066ae:	4630      	mov	r0, r6
 80066b0:	f7fd fd66 	bl	8004180 <__swsetup_r>
 80066b4:	2800      	cmp	r0, #0
 80066b6:	d09d      	beq.n	80065f4 <_vfiprintf_r+0x2c>
 80066b8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 80066bc:	b01d      	add	sp, #116	; 0x74
 80066be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80066c2:	46a8      	mov	r8, r5
 80066c4:	e7a2      	b.n	800660c <_vfiprintf_r+0x44>
 80066c6:	4a44      	ldr	r2, [pc, #272]	; (80067d8 <_vfiprintf_r+0x210>)
 80066c8:	4645      	mov	r5, r8
 80066ca:	1a80      	subs	r0, r0, r2
 80066cc:	fa0b f000 	lsl.w	r0, fp, r0
 80066d0:	4318      	orrs	r0, r3
 80066d2:	9004      	str	r0, [sp, #16]
 80066d4:	e7be      	b.n	8006654 <_vfiprintf_r+0x8c>
 80066d6:	9a03      	ldr	r2, [sp, #12]
 80066d8:	1d11      	adds	r1, r2, #4
 80066da:	6812      	ldr	r2, [r2, #0]
 80066dc:	9103      	str	r1, [sp, #12]
 80066de:	2a00      	cmp	r2, #0
 80066e0:	db01      	blt.n	80066e6 <_vfiprintf_r+0x11e>
 80066e2:	9207      	str	r2, [sp, #28]
 80066e4:	e004      	b.n	80066f0 <_vfiprintf_r+0x128>
 80066e6:	4252      	negs	r2, r2
 80066e8:	f043 0302 	orr.w	r3, r3, #2
 80066ec:	9207      	str	r2, [sp, #28]
 80066ee:	9304      	str	r3, [sp, #16]
 80066f0:	f898 3000 	ldrb.w	r3, [r8]
 80066f4:	2b2e      	cmp	r3, #46	; 0x2e
 80066f6:	d10e      	bne.n	8006716 <_vfiprintf_r+0x14e>
 80066f8:	f898 3001 	ldrb.w	r3, [r8, #1]
 80066fc:	2b2a      	cmp	r3, #42	; 0x2a
 80066fe:	d138      	bne.n	8006772 <_vfiprintf_r+0x1aa>
 8006700:	9b03      	ldr	r3, [sp, #12]
 8006702:	f108 0802 	add.w	r8, r8, #2
 8006706:	1d1a      	adds	r2, r3, #4
 8006708:	681b      	ldr	r3, [r3, #0]
 800670a:	9203      	str	r2, [sp, #12]
 800670c:	2b00      	cmp	r3, #0
 800670e:	bfb8      	it	lt
 8006710:	f04f 33ff 	movlt.w	r3, #4294967295	; 0xffffffff
 8006714:	9305      	str	r3, [sp, #20]
 8006716:	4d33      	ldr	r5, [pc, #204]	; (80067e4 <_vfiprintf_r+0x21c>)
 8006718:	2203      	movs	r2, #3
 800671a:	f898 1000 	ldrb.w	r1, [r8]
 800671e:	4628      	mov	r0, r5
 8006720:	f7ff f912 	bl	8005948 <memchr>
 8006724:	b140      	cbz	r0, 8006738 <_vfiprintf_r+0x170>
 8006726:	2340      	movs	r3, #64	; 0x40
 8006728:	1b40      	subs	r0, r0, r5
 800672a:	fa03 f000 	lsl.w	r0, r3, r0
 800672e:	9b04      	ldr	r3, [sp, #16]
 8006730:	f108 0801 	add.w	r8, r8, #1
 8006734:	4303      	orrs	r3, r0
 8006736:	9304      	str	r3, [sp, #16]
 8006738:	f898 1000 	ldrb.w	r1, [r8]
 800673c:	2206      	movs	r2, #6
 800673e:	482a      	ldr	r0, [pc, #168]	; (80067e8 <_vfiprintf_r+0x220>)
 8006740:	f108 0701 	add.w	r7, r8, #1
 8006744:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8006748:	f7ff f8fe 	bl	8005948 <memchr>
 800674c:	2800      	cmp	r0, #0
 800674e:	d037      	beq.n	80067c0 <_vfiprintf_r+0x1f8>
 8006750:	4b26      	ldr	r3, [pc, #152]	; (80067ec <_vfiprintf_r+0x224>)
 8006752:	bb1b      	cbnz	r3, 800679c <_vfiprintf_r+0x1d4>
 8006754:	9b03      	ldr	r3, [sp, #12]
 8006756:	3307      	adds	r3, #7
 8006758:	f023 0307 	bic.w	r3, r3, #7
 800675c:	3308      	adds	r3, #8
 800675e:	9303      	str	r3, [sp, #12]
 8006760:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006762:	444b      	add	r3, r9
 8006764:	9309      	str	r3, [sp, #36]	; 0x24
 8006766:	e750      	b.n	800660a <_vfiprintf_r+0x42>
 8006768:	fb05 3202 	mla	r2, r5, r2, r3
 800676c:	2001      	movs	r0, #1
 800676e:	4688      	mov	r8, r1
 8006770:	e78a      	b.n	8006688 <_vfiprintf_r+0xc0>
 8006772:	2300      	movs	r3, #0
 8006774:	250a      	movs	r5, #10
 8006776:	4619      	mov	r1, r3
 8006778:	f108 0801 	add.w	r8, r8, #1
 800677c:	9305      	str	r3, [sp, #20]
 800677e:	4640      	mov	r0, r8
 8006780:	f810 2b01 	ldrb.w	r2, [r0], #1
 8006784:	3a30      	subs	r2, #48	; 0x30
 8006786:	2a09      	cmp	r2, #9
 8006788:	d903      	bls.n	8006792 <_vfiprintf_r+0x1ca>
 800678a:	2b00      	cmp	r3, #0
 800678c:	d0c3      	beq.n	8006716 <_vfiprintf_r+0x14e>
 800678e:	9105      	str	r1, [sp, #20]
 8006790:	e7c1      	b.n	8006716 <_vfiprintf_r+0x14e>
 8006792:	fb05 2101 	mla	r1, r5, r1, r2
 8006796:	2301      	movs	r3, #1
 8006798:	4680      	mov	r8, r0
 800679a:	e7f0      	b.n	800677e <_vfiprintf_r+0x1b6>
 800679c:	ab03      	add	r3, sp, #12
 800679e:	9300      	str	r3, [sp, #0]
 80067a0:	4622      	mov	r2, r4
 80067a2:	4b13      	ldr	r3, [pc, #76]	; (80067f0 <_vfiprintf_r+0x228>)
 80067a4:	a904      	add	r1, sp, #16
 80067a6:	4630      	mov	r0, r6
 80067a8:	f7fb ff22 	bl	80025f0 <_printf_float>
 80067ac:	f1b0 3fff 	cmp.w	r0, #4294967295	; 0xffffffff
 80067b0:	4681      	mov	r9, r0
 80067b2:	d1d5      	bne.n	8006760 <_vfiprintf_r+0x198>
 80067b4:	89a3      	ldrh	r3, [r4, #12]
 80067b6:	065b      	lsls	r3, r3, #25
 80067b8:	f53f af7e 	bmi.w	80066b8 <_vfiprintf_r+0xf0>
 80067bc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80067be:	e77d      	b.n	80066bc <_vfiprintf_r+0xf4>
 80067c0:	ab03      	add	r3, sp, #12
 80067c2:	9300      	str	r3, [sp, #0]
 80067c4:	4622      	mov	r2, r4
 80067c6:	4b0a      	ldr	r3, [pc, #40]	; (80067f0 <_vfiprintf_r+0x228>)
 80067c8:	a904      	add	r1, sp, #16
 80067ca:	4630      	mov	r0, r6
 80067cc:	f7fc f9bc 	bl	8002b48 <_printf_i>
 80067d0:	e7ec      	b.n	80067ac <_vfiprintf_r+0x1e4>
 80067d2:	bf00      	nop
 80067d4:	08006fd0 	.word	0x08006fd0
 80067d8:	0800711c 	.word	0x0800711c
 80067dc:	08006ff0 	.word	0x08006ff0
 80067e0:	08006fb0 	.word	0x08006fb0
 80067e4:	08007122 	.word	0x08007122
 80067e8:	08007126 	.word	0x08007126
 80067ec:	080025f1 	.word	0x080025f1
 80067f0:	080065a3 	.word	0x080065a3

080067f4 <_sbrk_r>:
 80067f4:	b538      	push	{r3, r4, r5, lr}
 80067f6:	2300      	movs	r3, #0
 80067f8:	4c05      	ldr	r4, [pc, #20]	; (8006810 <_sbrk_r+0x1c>)
 80067fa:	4605      	mov	r5, r0
 80067fc:	4608      	mov	r0, r1
 80067fe:	6023      	str	r3, [r4, #0]
 8006800:	f000 f93c 	bl	8006a7c <_sbrk>
 8006804:	1c43      	adds	r3, r0, #1
 8006806:	d102      	bne.n	800680e <_sbrk_r+0x1a>
 8006808:	6823      	ldr	r3, [r4, #0]
 800680a:	b103      	cbz	r3, 800680e <_sbrk_r+0x1a>
 800680c:	602b      	str	r3, [r5, #0]
 800680e:	bd38      	pop	{r3, r4, r5, pc}
 8006810:	20000b00 	.word	0x20000b00

08006814 <__sread>:
 8006814:	b510      	push	{r4, lr}
 8006816:	460c      	mov	r4, r1
 8006818:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800681c:	f000 f8f4 	bl	8006a08 <_read_r>
 8006820:	2800      	cmp	r0, #0
 8006822:	bfab      	itete	ge
 8006824:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8006826:	89a3      	ldrhlt	r3, [r4, #12]
 8006828:	181b      	addge	r3, r3, r0
 800682a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800682e:	bfac      	ite	ge
 8006830:	6563      	strge	r3, [r4, #84]	; 0x54
 8006832:	81a3      	strhlt	r3, [r4, #12]
 8006834:	bd10      	pop	{r4, pc}

08006836 <__swrite>:
 8006836:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800683a:	461f      	mov	r7, r3
 800683c:	898b      	ldrh	r3, [r1, #12]
 800683e:	4605      	mov	r5, r0
 8006840:	05db      	lsls	r3, r3, #23
 8006842:	460c      	mov	r4, r1
 8006844:	4616      	mov	r6, r2
 8006846:	d505      	bpl.n	8006854 <__swrite+0x1e>
 8006848:	2302      	movs	r3, #2
 800684a:	2200      	movs	r2, #0
 800684c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006850:	f000 f886 	bl	8006960 <_lseek_r>
 8006854:	89a3      	ldrh	r3, [r4, #12]
 8006856:	4632      	mov	r2, r6
 8006858:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800685c:	81a3      	strh	r3, [r4, #12]
 800685e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8006862:	463b      	mov	r3, r7
 8006864:	4628      	mov	r0, r5
 8006866:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800686a:	f000 b835 	b.w	80068d8 <_write_r>

0800686e <__sseek>:
 800686e:	b510      	push	{r4, lr}
 8006870:	460c      	mov	r4, r1
 8006872:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006876:	f000 f873 	bl	8006960 <_lseek_r>
 800687a:	1c43      	adds	r3, r0, #1
 800687c:	89a3      	ldrh	r3, [r4, #12]
 800687e:	bf15      	itete	ne
 8006880:	6560      	strne	r0, [r4, #84]	; 0x54
 8006882:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8006886:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800688a:	81a3      	strheq	r3, [r4, #12]
 800688c:	bf18      	it	ne
 800688e:	81a3      	strhne	r3, [r4, #12]
 8006890:	bd10      	pop	{r4, pc}

08006892 <__sclose>:
 8006892:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006896:	f000 b831 	b.w	80068fc <_close_r>

0800689a <strncmp>:
 800689a:	b510      	push	{r4, lr}
 800689c:	b16a      	cbz	r2, 80068ba <strncmp+0x20>
 800689e:	3901      	subs	r1, #1
 80068a0:	1884      	adds	r4, r0, r2
 80068a2:	f810 3b01 	ldrb.w	r3, [r0], #1
 80068a6:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80068aa:	4293      	cmp	r3, r2
 80068ac:	d103      	bne.n	80068b6 <strncmp+0x1c>
 80068ae:	42a0      	cmp	r0, r4
 80068b0:	d001      	beq.n	80068b6 <strncmp+0x1c>
 80068b2:	2b00      	cmp	r3, #0
 80068b4:	d1f5      	bne.n	80068a2 <strncmp+0x8>
 80068b6:	1a98      	subs	r0, r3, r2
 80068b8:	bd10      	pop	{r4, pc}
 80068ba:	4610      	mov	r0, r2
 80068bc:	e7fc      	b.n	80068b8 <strncmp+0x1e>

080068be <__ascii_wctomb>:
 80068be:	b149      	cbz	r1, 80068d4 <__ascii_wctomb+0x16>
 80068c0:	2aff      	cmp	r2, #255	; 0xff
 80068c2:	bf8b      	itete	hi
 80068c4:	238a      	movhi	r3, #138	; 0x8a
 80068c6:	700a      	strbls	r2, [r1, #0]
 80068c8:	6003      	strhi	r3, [r0, #0]
 80068ca:	2001      	movls	r0, #1
 80068cc:	bf88      	it	hi
 80068ce:	f04f 30ff 	movhi.w	r0, #4294967295	; 0xffffffff
 80068d2:	4770      	bx	lr
 80068d4:	4608      	mov	r0, r1
 80068d6:	4770      	bx	lr

080068d8 <_write_r>:
 80068d8:	b538      	push	{r3, r4, r5, lr}
 80068da:	4605      	mov	r5, r0
 80068dc:	4608      	mov	r0, r1
 80068de:	4611      	mov	r1, r2
 80068e0:	2200      	movs	r2, #0
 80068e2:	4c05      	ldr	r4, [pc, #20]	; (80068f8 <_write_r+0x20>)
 80068e4:	6022      	str	r2, [r4, #0]
 80068e6:	461a      	mov	r2, r3
 80068e8:	f7fb f950 	bl	8001b8c <_write>
 80068ec:	1c43      	adds	r3, r0, #1
 80068ee:	d102      	bne.n	80068f6 <_write_r+0x1e>
 80068f0:	6823      	ldr	r3, [r4, #0]
 80068f2:	b103      	cbz	r3, 80068f6 <_write_r+0x1e>
 80068f4:	602b      	str	r3, [r5, #0]
 80068f6:	bd38      	pop	{r3, r4, r5, pc}
 80068f8:	20000b00 	.word	0x20000b00

080068fc <_close_r>:
 80068fc:	b538      	push	{r3, r4, r5, lr}
 80068fe:	2300      	movs	r3, #0
 8006900:	4c05      	ldr	r4, [pc, #20]	; (8006918 <_close_r+0x1c>)
 8006902:	4605      	mov	r5, r0
 8006904:	4608      	mov	r0, r1
 8006906:	6023      	str	r3, [r4, #0]
 8006908:	f7fb f956 	bl	8001bb8 <_close>
 800690c:	1c43      	adds	r3, r0, #1
 800690e:	d102      	bne.n	8006916 <_close_r+0x1a>
 8006910:	6823      	ldr	r3, [r4, #0]
 8006912:	b103      	cbz	r3, 8006916 <_close_r+0x1a>
 8006914:	602b      	str	r3, [r5, #0]
 8006916:	bd38      	pop	{r3, r4, r5, pc}
 8006918:	20000b00 	.word	0x20000b00

0800691c <_fstat_r>:
 800691c:	b538      	push	{r3, r4, r5, lr}
 800691e:	2300      	movs	r3, #0
 8006920:	4c06      	ldr	r4, [pc, #24]	; (800693c <_fstat_r+0x20>)
 8006922:	4605      	mov	r5, r0
 8006924:	4608      	mov	r0, r1
 8006926:	4611      	mov	r1, r2
 8006928:	6023      	str	r3, [r4, #0]
 800692a:	f000 f887 	bl	8006a3c <_fstat>
 800692e:	1c43      	adds	r3, r0, #1
 8006930:	d102      	bne.n	8006938 <_fstat_r+0x1c>
 8006932:	6823      	ldr	r3, [r4, #0]
 8006934:	b103      	cbz	r3, 8006938 <_fstat_r+0x1c>
 8006936:	602b      	str	r3, [r5, #0]
 8006938:	bd38      	pop	{r3, r4, r5, pc}
 800693a:	bf00      	nop
 800693c:	20000b00 	.word	0x20000b00

08006940 <_isatty_r>:
 8006940:	b538      	push	{r3, r4, r5, lr}
 8006942:	2300      	movs	r3, #0
 8006944:	4c05      	ldr	r4, [pc, #20]	; (800695c <_isatty_r+0x1c>)
 8006946:	4605      	mov	r5, r0
 8006948:	4608      	mov	r0, r1
 800694a:	6023      	str	r3, [r4, #0]
 800694c:	f000 f87e 	bl	8006a4c <_isatty>
 8006950:	1c43      	adds	r3, r0, #1
 8006952:	d102      	bne.n	800695a <_isatty_r+0x1a>
 8006954:	6823      	ldr	r3, [r4, #0]
 8006956:	b103      	cbz	r3, 800695a <_isatty_r+0x1a>
 8006958:	602b      	str	r3, [r5, #0]
 800695a:	bd38      	pop	{r3, r4, r5, pc}
 800695c:	20000b00 	.word	0x20000b00

08006960 <_lseek_r>:
 8006960:	b538      	push	{r3, r4, r5, lr}
 8006962:	4605      	mov	r5, r0
 8006964:	4608      	mov	r0, r1
 8006966:	4611      	mov	r1, r2
 8006968:	2200      	movs	r2, #0
 800696a:	4c05      	ldr	r4, [pc, #20]	; (8006980 <_lseek_r+0x20>)
 800696c:	6022      	str	r2, [r4, #0]
 800696e:	461a      	mov	r2, r3
 8006970:	f000 f874 	bl	8006a5c <_lseek>
 8006974:	1c43      	adds	r3, r0, #1
 8006976:	d102      	bne.n	800697e <_lseek_r+0x1e>
 8006978:	6823      	ldr	r3, [r4, #0]
 800697a:	b103      	cbz	r3, 800697e <_lseek_r+0x1e>
 800697c:	602b      	str	r3, [r5, #0]
 800697e:	bd38      	pop	{r3, r4, r5, pc}
 8006980:	20000b00 	.word	0x20000b00

08006984 <memmove>:
 8006984:	4288      	cmp	r0, r1
 8006986:	b510      	push	{r4, lr}
 8006988:	eb01 0302 	add.w	r3, r1, r2
 800698c:	d807      	bhi.n	800699e <memmove+0x1a>
 800698e:	1e42      	subs	r2, r0, #1
 8006990:	4299      	cmp	r1, r3
 8006992:	d00a      	beq.n	80069aa <memmove+0x26>
 8006994:	f811 4b01 	ldrb.w	r4, [r1], #1
 8006998:	f802 4f01 	strb.w	r4, [r2, #1]!
 800699c:	e7f8      	b.n	8006990 <memmove+0xc>
 800699e:	4283      	cmp	r3, r0
 80069a0:	d9f5      	bls.n	800698e <memmove+0xa>
 80069a2:	1881      	adds	r1, r0, r2
 80069a4:	1ad2      	subs	r2, r2, r3
 80069a6:	42d3      	cmn	r3, r2
 80069a8:	d100      	bne.n	80069ac <memmove+0x28>
 80069aa:	bd10      	pop	{r4, pc}
 80069ac:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 80069b0:	f801 4d01 	strb.w	r4, [r1, #-1]!
 80069b4:	e7f7      	b.n	80069a6 <memmove+0x22>

080069b6 <__malloc_lock>:
 80069b6:	4770      	bx	lr

080069b8 <__malloc_unlock>:
 80069b8:	4770      	bx	lr

080069ba <_realloc_r>:
 80069ba:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80069bc:	4607      	mov	r7, r0
 80069be:	4614      	mov	r4, r2
 80069c0:	460e      	mov	r6, r1
 80069c2:	b921      	cbnz	r1, 80069ce <_realloc_r+0x14>
 80069c4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 80069c8:	4611      	mov	r1, r2
 80069ca:	f7ff bc29 	b.w	8006220 <_malloc_r>
 80069ce:	b922      	cbnz	r2, 80069da <_realloc_r+0x20>
 80069d0:	f7ff fbda 	bl	8006188 <_free_r>
 80069d4:	4625      	mov	r5, r4
 80069d6:	4628      	mov	r0, r5
 80069d8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80069da:	f000 f827 	bl	8006a2c <_malloc_usable_size_r>
 80069de:	42a0      	cmp	r0, r4
 80069e0:	d20f      	bcs.n	8006a02 <_realloc_r+0x48>
 80069e2:	4621      	mov	r1, r4
 80069e4:	4638      	mov	r0, r7
 80069e6:	f7ff fc1b 	bl	8006220 <_malloc_r>
 80069ea:	4605      	mov	r5, r0
 80069ec:	2800      	cmp	r0, #0
 80069ee:	d0f2      	beq.n	80069d6 <_realloc_r+0x1c>
 80069f0:	4631      	mov	r1, r6
 80069f2:	4622      	mov	r2, r4
 80069f4:	f7fe ffb6 	bl	8005964 <memcpy>
 80069f8:	4631      	mov	r1, r6
 80069fa:	4638      	mov	r0, r7
 80069fc:	f7ff fbc4 	bl	8006188 <_free_r>
 8006a00:	e7e9      	b.n	80069d6 <_realloc_r+0x1c>
 8006a02:	4635      	mov	r5, r6
 8006a04:	e7e7      	b.n	80069d6 <_realloc_r+0x1c>
	...

08006a08 <_read_r>:
 8006a08:	b538      	push	{r3, r4, r5, lr}
 8006a0a:	4605      	mov	r5, r0
 8006a0c:	4608      	mov	r0, r1
 8006a0e:	4611      	mov	r1, r2
 8006a10:	2200      	movs	r2, #0
 8006a12:	4c05      	ldr	r4, [pc, #20]	; (8006a28 <_read_r+0x20>)
 8006a14:	6022      	str	r2, [r4, #0]
 8006a16:	461a      	mov	r2, r3
 8006a18:	f000 f828 	bl	8006a6c <_read>
 8006a1c:	1c43      	adds	r3, r0, #1
 8006a1e:	d102      	bne.n	8006a26 <_read_r+0x1e>
 8006a20:	6823      	ldr	r3, [r4, #0]
 8006a22:	b103      	cbz	r3, 8006a26 <_read_r+0x1e>
 8006a24:	602b      	str	r3, [r5, #0]
 8006a26:	bd38      	pop	{r3, r4, r5, pc}
 8006a28:	20000b00 	.word	0x20000b00

08006a2c <_malloc_usable_size_r>:
 8006a2c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006a30:	1f18      	subs	r0, r3, #4
 8006a32:	2b00      	cmp	r3, #0
 8006a34:	bfbc      	itt	lt
 8006a36:	580b      	ldrlt	r3, [r1, r0]
 8006a38:	18c0      	addlt	r0, r0, r3
 8006a3a:	4770      	bx	lr

08006a3c <_fstat>:
 8006a3c:	2258      	movs	r2, #88	; 0x58
 8006a3e:	4b02      	ldr	r3, [pc, #8]	; (8006a48 <_fstat+0xc>)
 8006a40:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006a44:	601a      	str	r2, [r3, #0]
 8006a46:	4770      	bx	lr
 8006a48:	20000b00 	.word	0x20000b00

08006a4c <_isatty>:
 8006a4c:	2258      	movs	r2, #88	; 0x58
 8006a4e:	4b02      	ldr	r3, [pc, #8]	; (8006a58 <_isatty+0xc>)
 8006a50:	2000      	movs	r0, #0
 8006a52:	601a      	str	r2, [r3, #0]
 8006a54:	4770      	bx	lr
 8006a56:	bf00      	nop
 8006a58:	20000b00 	.word	0x20000b00

08006a5c <_lseek>:
 8006a5c:	2258      	movs	r2, #88	; 0x58
 8006a5e:	4b02      	ldr	r3, [pc, #8]	; (8006a68 <_lseek+0xc>)
 8006a60:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006a64:	601a      	str	r2, [r3, #0]
 8006a66:	4770      	bx	lr
 8006a68:	20000b00 	.word	0x20000b00

08006a6c <_read>:
 8006a6c:	2258      	movs	r2, #88	; 0x58
 8006a6e:	4b02      	ldr	r3, [pc, #8]	; (8006a78 <_read+0xc>)
 8006a70:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8006a74:	601a      	str	r2, [r3, #0]
 8006a76:	4770      	bx	lr
 8006a78:	20000b00 	.word	0x20000b00

08006a7c <_sbrk>:
 8006a7c:	4a04      	ldr	r2, [pc, #16]	; (8006a90 <_sbrk+0x14>)
 8006a7e:	4905      	ldr	r1, [pc, #20]	; (8006a94 <_sbrk+0x18>)
 8006a80:	6813      	ldr	r3, [r2, #0]
 8006a82:	2b00      	cmp	r3, #0
 8006a84:	bf08      	it	eq
 8006a86:	460b      	moveq	r3, r1
 8006a88:	4418      	add	r0, r3
 8006a8a:	6010      	str	r0, [r2, #0]
 8006a8c:	4618      	mov	r0, r3
 8006a8e:	4770      	bx	lr
 8006a90:	20000214 	.word	0x20000214
 8006a94:	20000b08 	.word	0x20000b08

08006a98 <_init>:
 8006a98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006a9a:	bf00      	nop
 8006a9c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006a9e:	bc08      	pop	{r3}
 8006aa0:	469e      	mov	lr, r3
 8006aa2:	4770      	bx	lr

08006aa4 <_fini>:
 8006aa4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006aa6:	bf00      	nop
 8006aa8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006aaa:	bc08      	pop	{r3}
 8006aac:	469e      	mov	lr, r3
 8006aae:	4770      	bx	lr
